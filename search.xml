<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>20250914 - The Original Piece is Always Right</title>
      <link href="2025/09/14/20250914-i08/"/>
      <url>2025/09/14/20250914-i08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何在改编游戏音乐时保持其“原来的感觉”！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>I08 - The Original Piece is Always Right</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509141129648.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/2iWqCSO98jU?si=L8YhF7BXG76y2zK6" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>##### 《原曲永远是对的》<ul><li>主题：以《任天堂明星大乱斗》音乐监修为切入，讨论<strong>改编时应尊重玩家记忆中的“原曲感”</strong>。</li><li>案例 1：街机《雅典娜（Athena）》<ul><li>曲子里有两条旋律线（文中称 A、B）。</li><li>玩到游戏或听红白机版时，人会把 <strong>A 线</strong>当“主旋律”；但从纯音乐分析，<strong>B 线</strong>才像主旋律。</li><li>结论：<strong>无论乐理如何，玩家在原作中听到并形成记忆的那版，就是“正确”的版本</strong>。改编要顺着这种体感。</li><li>这曲还有节拍从<strong>正拍</strong>转为<strong>反拍</strong>的奇特段落，《大乱斗》也原样再现。</li></ul></li><li>案例 2：《Psycho Soldier》（据称 1987 年首个<strong>完整人声主唱 BGM</strong>的游戏）<ul><li>《大乱斗 特别版》的改编由<strong>古代祐三</strong>制作，<strong>加奈子</strong>演唱；做出<strong>日文版与英文版</strong>。</li><li>原作：日文到<strong>第 3 段</strong>都有主唱；英文<strong>只有第 1 段</strong>，之后切回机内音源。</li><li>改编策略：<ul><li><strong>日文版</strong>保留到第 3 段；</li><li><strong>英文版</strong>第 1 段有人声，<strong>第 2 段做间奏</strong>，第 3 段<strong>人声回归</strong>——呼应原作“唱完就转机内音源”的流程。</li></ul></li><li>还讲到<strong>英日两版的语调/重音</strong>刻意处理：外国人听来也许怪，但这是对原作发音/当时歌谣曲风格的再现。</li><li>管乐（次中音萨克斯）等编配让情绪更到位，但<strong>核心仍是服务原曲印象</strong>。</li></ul></li><li>总结理念：<ul><li><strong>被玩家所爱、在原作里被记住的版本就是“标准答案”</strong>。</li><li>做编曲/重录时，要在提升质感与扩展编配的同时，<strong>绝不损伤玩家的体感与记忆框架</strong>。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250907 - K06 - Knockback in Super Smash Bros.</title>
      <link href="2025/09/07/20250907-k06/"/>
      <url>2025/09/07/20250907-k06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Super Smash Bros 中的击飞参数！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>K06 - Knockback in Super Smash Bros.</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071105329.png" alt="|718x404"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/HVktK4a9Yfo?si=dNzHGChavs4a40S2" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h5 id="《任天堂明星大乱斗》中的击飞（Knockback）参数要点"><a href="#《任天堂明星大乱斗》中的击飞（Knockback）参数要点" class="headerlink" title="《任天堂明星大乱斗》中的击飞（Knockback）参数要点"></a>《任天堂明星大乱斗》中的击飞（Knockback）参数要点</h5><ul><li><strong>基本机制</strong>：本作并非“扣血”型格斗。击飞大小同时受两端影响——<strong>出招方攻击力越高</strong>、<strong>被击方累积伤害越高</strong>，飞得越远。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071157742.gif"></li></ul><ul><li><strong>击飞方向（Vector）</strong>：每个招式可设定任意角度（360°细分）。还可对角度做<strong>随攻击者移动方向的微偏置</strong>，提升空中连段稳定性、减少“脱手/穿出”。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071158479.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071158057.png"><ul><li><strong>角色属性影响轨迹</strong>：相同击飞条件下，不同角色因<strong>落下加速度</strong>、<strong>体重</strong>等不同，实际飞行轨迹会变。<pre><code>![|407x229](https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071159116.png)</code></pre></li></ul></li><li><strong>反应影响值（倍率，Multiplier）</strong>：在击飞计算中乘以一系数，可做出“<strong>伤害高但不太飞</strong>”或“<strong>伤害低但很会飞</strong>”等手感差异，更精细地控制吹飞量。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071159095.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071200872.png"></li><li><strong>反应加算值（固定加成，Additive/Base Knockback）</strong>：无条件加上一定击飞量，确保<strong>低伤时也能有足够反应</strong>（例如能被可靠打浮）。通常与<strong>倍率</strong>一起使用，避免总击飞过强。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071200416.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071200912.png"></li><li><strong>反应固定值（Set Knockback）</strong>：<strong>完全固定击飞</strong>，无视对手当前伤害积累。常用于<strong>多段技的前段</strong>（如马力欧上 B 连续命中时），最后一下再用正常击飞，以免对手在低/高伤时“接不住”。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071201930.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071201111.png" alt="|407x229"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509071201959.png"></li><li><strong>设计沿革</strong>：上述参数自 <strong>初代《大乱斗》</strong> 便存在，用于把“击飞制”这种与传统格斗不同的规则，打磨成稳定且有趣的游戏体验。此次仅介绍与击飞相关的核心项，攻击参数还有更多细节未展开。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025-0907 - After Playing The Beginner&#39;s Guide</title>
      <link href="2025/09/07/2025-0907-after-playing-the-beginner-guide/"/>
      <url>2025/09/07/2025-0907-after-playing-the-beginner-guide/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202509062144613.jpg" alt="|998x561"></p><h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>[[game - 2015 - the beginner’s guide]] 这个游戏是 [[@shadowdiesmilliontimes]] 给我推的，说是他玩完后有一些触动，推荐我玩一下。我玩了确实也有一些触动，遂有此文。</p><p><strong>请注意，正文中含有部分剧透!!!</strong></p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="心路历程"><a href="#心路历程" class="headerlink" title="心路历程"></a>心路历程</h3><blockquote><p>好的，这是一个人 D 来展示他的朋友 C 所做的游戏的游戏。<br>竟然是 DUST2，好怀念<br>没被抹平的地形畸变哈哈，太真实了</p></blockquote><hr><blockquote><p>是一个半成品射击解密游戏？<br>What they are &gt; what they are not 是吗，确实如此<br>宇宙天空盒的底部是白板儿哈哈<br>好嘞，牺牲自己拯救大家是吧，好，我来<br>飞起来咯</p></blockquote><hr><blockquote><p>只能向后走的游戏<br>挺有意思的嘿，很好地利用了视错觉</p></blockquote><p>最近想做的东西太大，我也想做这样的，围绕一个核心的点子的，不大的游戏</p><hr><blockquote><p>黑暗，前进，没了？</p></blockquote><hr><blockquote><p>总是忍不住想探边，被发现了哈哈<br>永远到达不了的梯子？<br>温暖房间充满了温暖的点子，这是个温暖却不为所知的人</p></blockquote><p>藏一些基本不可能有人能发现的“彩蛋”有什么不好的呢<br>因为真的发现的人应该会感到开心吧</p><hr><blockquote><p>开门谜题是吧哈哈，难不倒我<br>啊，这外面，这么多“废案”？这也，太多了…</p></blockquote><p>游戏开发真是选择的艺术呀</p><hr><blockquote><p>唯一的酒馆，反正也没别的地方可去<br>异空间，有点意思<br>无尽监狱望不到头（这个 FOV 确实很有意思，想要看清楚一定要转到对应的一边才行，这就给了背面很大的操作空间）<br>什么，竟然要被关一个小时才会开？谢谢你帮我开门<br>几百个”Plaable Games”，都是可步行空间，你竟然还都玩完了？</p></blockquote><p>我开始觉得我想做的其实和 C 想做的游戏并不相同</p><blockquote><p>哦？可以选择对话了，我说最开始设置三个对话选项有什么用，原来是这样<br>灯！D 的解释是目的地</p></blockquote><p>我也喜欢灯这个意向，虽然对我而言，它并不是目的地，而是方向的指引</p><hr><blockquote><p>这是相遇的故事，D 在一次 game jam 上发现了 C 所做的游戏和别人完全不同，由此产生了强烈的想要交朋友的想法<br>巨大空间中有着成百上千句台词，模拟了你与其他玩家共处的空间<br>都以不同的视角写就，C 到底在与谁对话<br>D 觉得门的意向于 C 而言是每个阶段的结束的象征</p></blockquote><hr><blockquote><p>走进了最开始看到的监狱远方，哈哈有点意思</p></blockquote><hr><blockquote><p>无意义的选择是吧<br>不断展开的空间还蛮帅的</p></blockquote><hr><blockquote><p>教我解谜？打工感有点重…<br>好，所以其实学了也没用是吧</p></blockquote><hr><blockquote><p>一个又一个监狱，围绕同一个概念打转，有意思</p></blockquote><hr><blockquote><p>路灯下的电话亭<br>可以和自己对话啦<br>这是在，帮助自己脱困吗<br>自己的感受是真切的，这就是 the key</p></blockquote><p>让我想起了前段时间做的 <a href="https://medill-east.github.io/2025/08/09/2025-0809-after-finishing-gmtk-game-jam-2025/">Slices of Shadows</a></p><hr><blockquote><p>风雪小屋打扫家务<br>行吧，打工是吧<br>虽然房间很温暖，一切乱得很像刚刚有人来过，但其实，谁也进不来吧<br>对话不太符合想法，将就选吧<br>房间有点小，3C 让我感觉有点晕了<br>竟然还得再做一次吗<br>哦？循环结束了<br>再次看到了灯</p></blockquote><hr><blockquote><p>诡异的讲堂和不知所谓的老师<br>所以老师只是在假装镇定？因为背后是魔眼？<br>不知道为什么有的选项是黄的有的是灰色<br>黄色好像是诱导选项，但我要选灰色</p></blockquote><hr><blockquote><p>好大的舞台<br>这灯亮得吓了我一跳<br>和想象中仰慕的人对话？<br>反弹 props 不知道有什么用<br>往后退就会离想象中的舞台和灯越来越远还会被困住是吧，可以</p></blockquote><hr><blockquote><p>我压根没闭眼哈哈…<br>被困在飞船里了！<br>对话根本没用嘛<br>灵感枯竭了？<br>很孤独？<br>是在借助游戏和自己对话？</p></blockquote><hr><blockquote><p>对话之后就会看到新的路出现，感觉不错<br>继续解构自己的灵感枯竭？<br>D 觉得自己有责任帮助朋友 C 走出困境，他觉得 C 困在自己的泡泡中，需要有人帮助他<br>D 觉得 C 既是出题者，又是回答者，他看不到这样做的意义，他觉得 C 需要的是戳破泡泡，这里确实能感到 D 的担心，或者说，“想象中的担心”</p></blockquote><p>但其实小孩子也是这样的，小孩子并不在乎谁是谁，谁出题，谁回答，在他们的视角里，这并不重要，重要的是所构建的世界让自己感到开心</p><blockquote><p>墙上都是原来选过的选项？<br>每次说出“漂亮话”的时候，有些东西就变得更坏了</p></blockquote><p>说实话让我想到了两个在丹麦认识的朋友哈哈</p><blockquote><p>D 觉得不该如此，如果做游戏如此痛苦，那又何必，他为此感到痛心<br>这里的选项其实都不合心意，但没办法，只得选择<br>哦？东西都破开了，灯，监狱，和哭泣的女人</p></blockquote><hr><blockquote><p>D 觉得 C 创作的时间越来越长，这次花了 7 个月<br>这次是灵感机器的解构，说要对其进行审判<br>但其实它又做错了什么？<br>选项都是责怪的话，我并不想选，但反正选了<br>PRESS 是什么的象征呢，渴望被解构的阴影吗<br>再次回到了剧场，开枪后可以把东西破坏，这个还挺新鲜的<br>但其实我并不想破坏东西，虽说破而后立，但那些是来时路，放着就好了，何必都毁掉呢<br>有几个场景没有破坏也通过了，我想这个会不会也能这样，其实不破坏也可以，但卡住了，所以开始克制地破坏，但到了最后还是开始大肆破坏了<br>哦，其实只需要破坏脚下就能掉落？好吧</p></blockquote><blockquote><p>D 说他把 C 的游戏带给了很多不同的人玩，大家都反馈说很有意思，他觉得这就是 C 所需要的</p></blockquote><p>我甚至有点觉得 C 难道会选择离开这个世界？<br>我开始等待 BUT 的出现</p><hr><blockquote><p>再次来到灵感机器面前<br>写着 pull down your weapon 但是却抬起了枪？<br>什么按键都没用，除了开枪<br>D 开始进行一些自我解构，说他需要认同，并且认为 C 也需要这个，觉得自己可以帮忙“修复”</p></blockquote><p>再次想到我的两位朋友哈哈哈</p><blockquote><p>D 说当自己得到认同时是如此开心</p></blockquote><p>他可能不太能理解有些东西并不需要认同</p><hr><blockquote><p>The Tower<br>是 D 所知的 C 所做的最后一个游戏<br>里面有难到根本没可能被通过的机关 - 秒杀你的隐形墙，没有任何提示的六位随机密码，根本不能被打开的房间门<br>但 D 可能通过解包吧，他反正通过了，并且让我们也能一睹后面的事情<br>D 开始觉得 C 并不是自己认识的人，他开始觉得自己并不了解他，他想在 C 身上看到自己，但他没能得偿所愿，没能“帮到” C，让 D 觉得自己很失败，不知道自己在哪一步做错了什么</p></blockquote><p>可能做就是一种错，无论做什么</p><blockquote><p>突然看到了 C 直接对 D 的留言<br>或者说，控诉<br>C 感谢 D 的关心，但只想 D 离开，并不想自己的“作品”被肆意解读，甚至修改<br>C 感到自己受到了 D 的负面影响，甚至开始不自主地在游戏中加入了某种“解决方案”——那些本可能没有答案的谜题有了答案，他不知道是不是 D 听到可能有答案的存在会不会让他感到高兴<br>D 有些“自以为是”地认为 C 有一些难以解决的问题，走入了人生低谷，抑郁，无法离开，不得志，不被理解，需要认同，自我封闭，并且好心地传播，甚至更改 C 的游戏，让其被评价——这并非 C 所愿，并让 C 感到安全的边界被打破<br>C 觉得待在 D 身边就有生理不适，D 在 C 上寻求他无法给予的东西<br>C 并不觉得创意的低谷期有任何问题，这不过是创作的常态</p></blockquote><p>我在看到这句话之前还在想难道是因为“因为多了需要被呈现的需要，所以不在真切，让创作本身变质了”</p><blockquote><p>D 擅自认为 C “坏掉了”，其实 D 看到的是自己</p></blockquote><p>以为在帮助别人，其实只是在尝试帮助投射的想象中的自己</p><blockquote><p>C 知道 D 可能尚不能理解这些话，这并不是问题，反正 D 的问题也不是 C 需要解决的问题</p></blockquote><p>C 所缺少的就是这一认知</p><blockquote><p>但 C 还是留下了一丝期冀，当有一天 D 理解之后，与自己和解之后，don’t say anything<br>所以这就是我们看到这个游戏的原因<br>C 的游戏合集<br>D “想要道歉”，但却正好做了相反的事<br>随着两边的墙越靠越近，屏幕一黑</p></blockquote><hr><blockquote><p>结语<br>所以这个可能是 D 自己做的？因为前一个就是 D 所知的 C 所做的最后一个游戏<br>列车旁，灯盏盏<br>D 开始自我解构，分析自己的人生依托于认可之上，并且无法想象没有认可，不能得到认可的生活，认为这是一种病<br>他离开了，违背了要和我们一起通关的承诺，去做“a lot that I need to make up for”</p></blockquote><p>其实你并不需要补偿任何东西</p><blockquote><p>长长的走廊<br>尽头是自我牺牲的电流<br>上升之后发现脚下是无尽的迷宫<br>远处是美丽的星河</p></blockquote><hr><h3 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h3><p>人们总是在尝试寻找某种确定性的答案，至少是想象中的确定性的答案。</p><p>最近还真的想到很多次关于“确定性”这个说法。<br>最开始好像是有一期罗辑思维上讲了一位美国社会学家提出了“社会麦当劳化”理论，用于解释为什么现在的人们好像戾气很重——是因为工业社会的发展使得确定性变得更加可控，人们对此产生依赖之后开始对不确定的东西感到不安，在日常生活中这种不安还可能被压抑，但一旦面对陌生人或是网友，这种被压抑的不安就会喷薄而出，呈现一种带刺的攻击形态。<br>异化——让你之所以不为你的过程，同时也是让你不能忍受不确定性的诱因。人生本就没有答案，如我最近在看的 [[荣格心理学七讲]] 中所提的，人本就不该把追求完满作为目标，但却应该努力尝试认识自己——这也是我借助游戏这一媒介所想实现的目标，帮助人们更好地认识自己。</p><p>这是一个关于解构的游戏，D 将自己与 C 相识的经历娓娓道来，并将自己所知的所有 C 的游戏一一呈现。但到了最后，我们发现其实这并非 C 所愿。<br>玩的过程中我甚至有一段时间怀疑 C 是不是离开了这个世界，但我也在期待 BUT 的出现。最后确实出现了——以 D 的“好人”身份被反转的方式。<br>D 以他自己的视角来看待 C 的行为，这其实无可厚非，但他更进一步，想要以他的方式来帮助 C，“己所欲，施于人”，这其实就已经有些偏离了。</p><p>我在前面屡屡提到了我的两位朋友，按照 TA 们自己的话讲，TA 们身上有某些部分“坏掉了”。我们最开始玩在一起也是因为“不知怎么，你的身上有某种东西产生了吸引，就是能玩在一起”。TA 们因为各自不同的天赋或者经历，很擅长“识人”——知道别人心中所想。曾经有一段时间，我感到有一些不适，因为感觉自己好像有一种“被看透”的感觉，虽然我不擅长隐藏，也并没有在刻意隐藏什么，但这种感觉或多或少让我有些难受。<br>但过了一段时间之后，我感觉我也能感受 TA 们了，我能够感受到 TA 们的欲求，TA 们相似，但并不相同。一个渴望的是某种人性的活力，另一个谈不上渴望，只是希望如其所是而已。<br>如果借用我自己之前所想明白的一个水杯理论——每个人的需求就好像一个杯子，每个人需要往里填不同的东西。如果杯子里的东西溢出来了，那你甚至可以分一些给别人；如果杯子里的东西不够，你就会有一些想要的东西，想要别人往杯子里填东西；也有人的杯子正好是满的，那可能就什么也不需要。每个人的杯子大小不一样，想要填进去的东西也不一样，由此构成了各不相同的 individual。<br>我的两位朋友，一位杯中未满，需要向其中填充某种名为生命力的东西；另一位杯中看似是满的，但杯子其实是可伸缩的，若是展开后不能让杯中的水自己涨上来，那杯子便不再“满”。<br>我的杯子并不满，但我也并不渴望满的状态，并且在特定条件达成后，杯中的东西也能自己往上补一补，所以于我而言，未满可能已经是一种最好的状态。<br>我在当时的状态很稳定，是某种生命力的象征，并且认可如其所是的状态，可能这就是我们为何能玩在一起的原因。</p><p>D 尝试在 C 中寻找自己的投射，并且认为 C 需要某种帮助，并不是不能理解，但确实有些妄为。<br>不是每一个问题，都有答案。<br>不是每一个问题，都需要答案。<br>那甚至不一定是一个问题。<br>让我想起了当时的青城山之问，为什么，想而已。这还不够吗，这就够了，没有为什么，不需要原因。</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250831 - A14 - Keep Your Internal Pressure High</title>
      <link href="2025/08/31/20250831-a14/"/>
      <url>2025/08/31/20250831-a14/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解在提案成型前守口如瓶保持压力的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508312213838.png"></p><h5 id="一句话总结"><a href="#一句话总结" class="headerlink" title="一句话总结"></a>一句话总结</h5><p><strong>在创意与企划成型前，少说多做、刻意“憋住”，用不外泄的兴奋与焦虑当燃料，把“内压”转化为更浓、更有力的成品。</strong></p><h5 id="核心观点"><a href="#核心观点" class="headerlink" title="核心观点"></a>核心观点</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508312227995.png"></p><ul><li><strong>内压（Internal Pressure）</strong>：像压力锅/气球一样，把点子在心里持续“加压”，让内容变得更紧致、更有冲击力。</li><li><strong>早说=早泄压</strong>：把点子告诉别人（或发 SNS 进度）会获得“提前满足”，动机与张力随之下降，导致半途而废或平庸化。</li><li><strong>先做再说</strong>：头脑风暴与征求意见有价值，但<strong>写企划/规格</strong>时更需要个人的热量与意志力；<strong>先独立写出初稿</strong>，再拿去讨论修补弱点。</li><li><strong>想象受众反应</strong>：在闭门创作期，主动模拟玩家/读者的情绪与“爽点”，会让你更有动力把东西打磨到能打动人。</li><li><strong>社媒慎用</strong>：别把“梗”和进度当作泄压阀；把分享的冲动，倒回到稿子与原型上。</li></ul><h6 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h6><ul><li><strong>设“封闭期”</strong>：给创意设定 7–14 天的“无分享窗口”（同事/朋友/SNS 全禁），只允许记录与产出。</li><li><strong>写出来，而不是聊出来</strong>：把想法直接落成<strong>一版企划/原型/demo</strong>，而非会议纪要或口头汇报。</li><li><strong>内压账本</strong>：想分享时，把要说的话写进私有文档（动机、亮点、疑问），转头立刻完成一个可见的小里程碑。</li><li><strong>想象观众剧场</strong>：写作或搭建时，用“读者视角检查表”（惊喜点、理解门槛、情绪起伏）逐条对照。</li><li><strong>分享阀门</strong>：只在达到这些门槛再对外：<ul><li>v1 完整度 ≥ 60%（结构全、可跑/可读）</li><li>关键风险点已有备选方案</li><li>明确需要的三条具体反馈</li></ul></li></ul><h6 id="何时例外"><a href="#何时例外" class="headerlink" title="何时例外"></a>何时例外</h6><ul><li><strong>需要资源/排期</strong>：为拿资源、卡位、避撞期，可做<strong>最小告知</strong>（目标、时间、依赖），但<strong>不泄细节与卖点</strong>。</li><li><strong>高不确定探索</strong>：若方向模糊到难以下手，用<strong>聚焦型对谈</strong>（限定 1–2 个问题）快速校准，再回封闭期。</li><li><strong>团队透明要求</strong>：在“内压”与同步之间取平衡——<strong>先产出可评估的文档/原型，再同步</strong>，而非空谈。</li></ul><h6 id="自检清单"><a href="#自检清单" class="headerlink" title="自检清单"></a>自检清单</h6><ul><li>最近一周，我把点子<strong>说</strong>的时间 &gt; <strong>写/做</strong>的时间吗？</li><li>我是否因为“被点赞/被肯定”而降低继续打磨的动力？</li><li>是否已经设定<strong>无分享封闭期</strong>与<strong>对外阀门标准</strong>？</li><li>现在这份企划，若明天给人看，我<strong>清楚要收集哪三条反馈</strong>吗？</li></ul><h5 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL; DR"></a>TL; DR</h5><p><strong>把分享冲动留到“有货可评”的那一刻；在此之前，用“内压”催熟作品——它会让你的企划更饱满、更有力。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025-0824 - 如何进行好的 Playtest</title>
      <link href="2025/08/24/20250824-how-to-run-a-good-playtest/"/>
      <url>2025/08/24/20250824-how-to-run-a-good-playtest/</url>
      
        <content type="html"><![CDATA[<h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241558524.png" alt="|723x408"></p><p>最近以“如何进行好的 Playtest”为主题进行了一次 [[design discussion]]，这里将内容进行一下汇总。</p><h2 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h2><p>这次的的内容是从不同地方学习到的，在最后一页中也标注了 References：</p><ul><li>Valve’s “Secret Weapon“<ul><li><a href="https://www.youtube.com/watch?v=9Yomqk0C6kE">https://www.youtube.com/watch?v=9Yomqk0C6kE</a></li></ul></li><li>Don’t make this assumption about your players<ul><li><a href="https://www.youtube.com/watch?v=2G84mU3WPaE">https://www.youtube.com/watch?v=2G84mU3WPaE</a></li></ul></li><li>Valve’s Design Process for Creating Half-Life 2<ul><li><a href="https://cdn.akamai.steamstatic.com/apps/valve/2006/GDC2006_HL2DesignProcess.pdf">https://cdn.akamai.steamstatic.com/apps/valve/2006/GDC2006_HL2DesignProcess.pdf</a></li><li><a href="https://gdcvault.com/browse?keyword=Valve%27s+Design+Process+for+Creating+Half-Life+2">https://gdcvault.com/browse?keyword=Valve%27s+Design+Process+for+Creating+Half-Life+2</a></li></ul></li><li>MasterClass - Will Wright - Game Design and Theory<ul><li>#13 - Playtesting</li></ul></li></ul><h2 id="CONTENT"><a href="#CONTENT" class="headerlink" title="CONTENT"></a>CONTENT</h2><h3 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h3><ul><li><a href="https://file.notion.so/f/f/c045fdd5-cc47-4878-9196-f2bc8751b672/cef52104-93b5-42ae-829a-a42fa0ce40eb/2025-0824_How_to_run_a_good_playtest-PWE.pdf?table=block&id=2598aa84-c609-8001-92cf-d4eccb20517e&spaceId=c045fdd5-cc47-4878-9196-f2bc8751b672&expirationTimestamp=1756051200000&signature=HICYfqtG16WCR-o7qF8W6u8NxM5ANFuDa6pAtI5hZFc&downloadName=2025-0824+How+to+run+a+good+playtest-PWE.pdf">Check PDF</a></li></ul><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241618625.png"></p><p>会涵盖以下方面：</p><ul><li>[[Playtest]] 的过程</li><li>[[Playtest]] 的原则</li><li>一些过往总结的经验</li><li>以及总结</li></ul><h3 id="PLAYTEST-的过程"><a href="#PLAYTEST-的过程" class="headerlink" title="PLAYTEST 的过程"></a>PLAYTEST 的过程</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241619712.png"></p><p>如 [[Valve]] 所提的，PLAYTEST 可以作为一种工程学方法来对游戏进行不断迭代优化，所以过程就和做实验一样：</p><ul><li>发现问题（Goal） </li><li>提出假设（Design） </li><li>进行实验（Playtest） </li><li>根据结果进行迭代（Iterate）</li></ul><h3 id="PLAYTEST-的一些原则"><a href="#PLAYTEST-的一些原则" class="headerlink" title="PLAYTEST 的一些原则"></a>PLAYTEST 的一些原则</h3><h4 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241621152.png"></p><ul><li>应该设立明确且可量化的目标<ul><li>在早期的 PLAYTEST 中应该关注的是 understanding - 即玩家是否理解设计者的意图</li><li>而在后期的 PLAYTEST 中应该关注的是 engaging - 玩家是否玩的开心；以及 Debug - 即找到可能存在的漏洞</li></ul></li></ul><h4 id="Design"><a href="#Design" class="headerlink" title="Design"></a>Design</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241623595.png"></p><p>需要根据设计的目标来创建合适的测试环境，避免无关因素的干扰</p><h4 id="Playtest"><a href="#Playtest" class="headerlink" title="Playtest"></a>Playtest</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241624553.png"></p><ul><li>需要找到合适的测试玩家<ul><li>最好能找到目标受众<ul><li>即那些本可能在发售后进行购买游玩的玩家，他们最能反映“玩家之声”</li><li>比如 [[Valve]] 觉得网吧中那些在玩射击游戏的玩家就是潜在的目标玩家</li></ul></li><li>需要不同水平的玩家<ul><li>需要明确你的游戏到底为谁而做，难度的平衡是一个难题，所以最好能让不同水平的玩家都进行测试，确保难度的合理性</li></ul></li><li>一次性测试<ul><li>除非一些特殊的需要长线进行的测试，应该尽可能只让测试者参与一次测试</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241628645.png"></p><ul><li>尽早测试<ul><li>valve 在游戏达到可玩状态后就会开始测试，即使当时还都是白盒</li><li>这当然和游戏类型有关，如此早期开始测试也有很高的成本，但依然可供参考</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241634846.png"></p><ul><li>频繁测试<ul><li>Vavle 基本会每一到两周进行测试——可以说他们的开发也是一种基于测试反馈而进行的迭代开发</li><li>排除异常值<ul><li>只有达到的一定的样本量之后，才能真实反映最终的数据情况</li><li>没有记错的话，他们每次测试的人数大概也会在 5 人左右</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241636661.png"></p><ul><li>非偏测试<ul><li>尽可能接近真实的游玩环境<ul><li>如果能尽量模拟玩家最终游玩的条件是最好不过了，但这很难实现，所以就是作为某种参考</li></ul></li><li>让玩家有机会练习<ul><li>特别是如果测试内容是偏游戏中后期的内容，那么就一定需要给玩家一些时间提前对 3C 以及可能用上的 ingredients 进行试玩和熟悉，否则玩家很可能因为不熟悉而导致没能发挥真实水平，导致结果失真</li></ul></li><li>闭嘴观看<ul><li>在玩家测试过程中，开发者们除了进行必要的帮助（比如提前告知一些已知的严重 BUG，以及当玩家完全卡住寻求帮助）之外，应该尽可能地只进行观看而不发表任何观点<ul><li>这样才能够反映最真实的游玩情况</li><li>而且如果在此期间你看得越难受，说明此次测试确实有一些独到的价值（既帮助你发现了一些问题，又刺激了你努力进行迭代修改）</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241642130.png"></p><ul><li>让负责人们一起来实施 PLAYTEST<ul><li>大家可以一起进行观看</li><li>并且分头得出自己的结论</li><li>最终可以讨论来得出最终的迭代方案</li><li>好处多多<ul><li>既可以简化评估流程</li><li>帮助确定优先级</li><li>也能够激励大家继续迭代修改</li></ul></li></ul></li></ul><h4 id="Iterate"><a href="#Iterate" class="headerlink" title="Iterate"></a>Iterate</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241644143.png" alt="|723x407"></p><ul><li>质疑你的预期<ul><li>要确保玩家是真的理解而不是“撞大运”</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241645971.png"></p><ul><li>相信趋势而不是极端情况<ul><li>迭代的目标应该是玩家们共有的困惑</li><li>或者是开发者们达成的共识</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241646037.png"></p><ul><li>迭代时的一些要点<ul><li>根据优先级来进行迭代<ul><li>这样能最快解决最棘手的痛点</li><li>有一些优先级较低的部分很可能在前面的问题修好之后也不再需要关注了</li></ul></li><li>尝试便宜而快速的捷径（30 分花费 60 分效果）而不是贵但完善（80 分花费 90 分效果）的方法<ul><li>这一点在早期尤为重要，因为在这时很多东西还未定型，所以如果存在便宜且快速的“补丁”，那么就应该优先这么做，避免大量投入之后最后被验证出这部分内容有可能是不需要的，导致资源的浪费</li><li>但这一点也要辩证的看待，如果已经是比较成型的阶段，便宜且快速的方案已经不足以满足要求，那也需要考虑是否需要考虑更好的方案进行迭代</li></ul></li><li>大刀阔斧的修改<ul><li>这一点针对的是某些参数的修改，当趋势表明有一些参数需要修改时，那么尽可能以“加倍”的方式来对数值进行修改，这样能够确保改动是可被感知的，否则很有可能“改了和没改一样”，浪费下一次测试的结果</li></ul></li><li>验收标准 - 直到不再痛苦<ul><li>当开发者们能够在观看玩家测试时不再感到痛苦，那么可能就达到了验收标准，可以推进到下一模块的迭代</li></ul></li><li>如有必要，短痛重开<ul><li>很多时候如果方向错误了，再迭代可能也是无用的，那么长痛不如短痛，fail fast, learn fast</li></ul></li></ul></li></ul><h3 id="一些过往经验"><a href="#一些过往经验" class="headerlink" title="一些过往经验"></a>一些过往经验</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241654067.png"></p><ul><li>玩家们在危急关头很难学会东西<ul><li>这一点好像是在看命运的某期 GDC 看到的哈哈…</li></ul></li><li>玩家们从不抬头看<ul><li>这一看起来是笑话的点其实对于很多玩家来说都适用，玩家们更多只会关注水平范围的内容，而不会抬头查看</li><li>这一点当然也可以被反过来利用，比如把需要藏起来的东西或是 jump scare 放在上方</li><li>对于不同游戏类型的玩家当然有不一样的玩家行为模式，比如熟悉魂类游戏的玩家总是习惯查看门的背后和上方，以及会去路径的边缘部分向下看，这些都是玩家们在不同游戏中练就的行为模式，需要有针对性地应对</li></ul></li><li>感受都是真的，但是反馈未必是真的<ul><li>这一点其实在很多不同的场景被很多不同领域的大师们反复提及</li><li>[[Neil Gaiman]] 也曾分享过类似的观点“当人们说哪里感觉不对时，他们通常是对的；但当他们告诉你怎么更改时，他们通常是错的”</li><li>亨利福特名言“用户只知道他们想要更快的马，但他们不知道他们想要的其实是汽车”也是一个道理</li><li>这里我们当时也进行了一些延伸讨论<ul><li>expertise as playtester<ul><li>他们对其中可能潜藏的问题更加敏锐，并且有机会更准确地指出问题的核心</li><li>但他们很有可能不能代表广泛的玩家群体的意见</li></ul></li><li>customer as playtester<ul><li>玩家作为测试者很有可能由于种种原因（对开发者的尊敬、不能准确表述感受等）无法真实反映内心感受</li><li>所以很重要的一点就是仔细观看他们游玩时的反应，并以此作为最重要的依据</li></ul></li></ul></li></ul></li></ul><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241704669.png"></p><p>这是一份总结的思维导图，涵盖了前面所提到的所有内容</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>总结不同的开发者们的共同经验总是有益处的，但最终如何落地，还是要结合具体情况具体分析。</p><p>持续学习，继续前进！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Reading </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250824-L04-Official Websites</title>
      <link href="2025/08/24/20250824-l04/"/>
      <url>2025/08/24/20250824-l04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如今的官方网站和社交媒体的配合关系！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241112913.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ABow3YMNg1Q?si=qAnN81nNmBe8T1FN" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h5 id="一句话总结"><a href="#一句话总结" class="headerlink" title="一句话总结"></a>一句话总结</h5><p>尽管社媒成为主渠道，<strong>官方网站仍是信息的权威“总枢纽”</strong>：承载体系化、可检索、可长期保存的深度内容，并与 SNS 分工协作。</p><h5 id="这集都说了什么"><a href="#这集都说了什么" class="headerlink" title="这集都说了什么"></a>这集都说了什么</h5><ul><li><strong>官网地位</strong>：浏览官网的时间比过去少了，但<strong>大作几乎不会放弃官网</strong>；集中、准确、结构化的信息发布依然关键。</li><li><strong>《任天堂明星大乱斗 特别版》官网结构</strong>（樱井参与策划与每次更新的检查）：<ul><li><strong>Fighters</strong> 角色总览与详情</li><li><strong>How to Play</strong> 模式与技巧</li><li><strong>Online / amiibo</strong> 联网与周边</li><li><strong>Stages</strong> 上百张关卡（含 DLC）</li><li><strong>Items / Pokémon / Assist</strong> 道具与召唤</li><li><strong>Sound</strong> 可试听</li><li><strong>Movies</strong> 参战影片、教程</li><li><strong>赛事/活动/道场</strong> 与 <strong>Twitter 联动</strong><br>  → 内容层级很深，覆盖面远超一般游戏官网。</li></ul></li><li><strong>历史经验</strong>：初代《大乱斗》发布前外界有偏见（“任天堂角色互殴”“不如传统格斗深”）。樱井<strong>自写 HTML</strong>，把“玩法与技法”做成<strong>《スマブラ拳!!》</strong>官网，作为舆论与玩家教育的突破口。</li><li><strong>今天的挑战</strong>：社媒兴盛，官网的角色应<strong>随时代调整</strong>；思考未来如何更有效传达。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508241118946.png"></li></ul><h5 id="给营销-官网团队的启发"><a href="#给营销-官网团队的启发" class="headerlink" title="给营销/官网团队的启发"></a>给营销/官网团队的启发</h5><ul><li><strong>分工协作</strong>：<ul><li><strong>官网</strong>＝权威档案库（规则、系统、表格化与可检索内容、可长期沉淀的 FAQ/知识库/音视频库）。</li><li><strong>SNS</strong>＝节奏与扩散（短内容、预告、更新播报、引流回官网）。</li></ul></li><li><strong>信息架构</strong>：为“大体量内容”设计<strong>多层级导航 + 交叉入口</strong>（角色→技能→演示→相关道具/舞台）。</li><li><strong>可消费的深度</strong>：给每个大类配置<strong>可预览/可试听/短视频</strong>，降低理解成本。</li><li><strong>版本与时效</strong>：建立<strong>更新节奏与责任人</strong>（本片中樱井亲审），确保“改一处、联动多处”的一致性。</li><li><strong>历史沉淀即资产</strong>：把早期“破除误解”的资料体系化沉淀，持续作为新玩家的<strong>上手与进阶</strong>入口。</li></ul><h5 id="速用清单"><a href="#速用清单" class="headerlink" title="速用清单"></a>速用清单</h5><ol><li>画一张<strong>内容矩阵</strong>：{受众层级 × 内容类型}（入门/进阶/硬核 × 文图/音频/短视频/可下载）。</li><li>首页只做三件事：<strong>新内容入口、核心导航、社媒/活动动态</strong>。</li><li>为每个大类加入 <strong>“学习路径”</strong>（3 步：概念→演示→实战案例）。</li><li>建<strong>更新台账</strong>（版本号/日期/责任人/影响页面），同步 SNS 推送“变更摘要”。</li><li>设<strong>搜索与筛选</strong>（角色、招式、道具、舞台、DLC 标签化）。</li><li>赛事/活动页与<strong>Twitter/X</strong>双向联动：卡片化日程、结果归档、回看链接。</li></ol><p>核心思想：<strong>让社媒制造“现在”，让官网保存“一切”。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250817 - G10 - Damage Animations</title>
      <link href="2025/08/17/20250817-g10/"/>
      <url>2025/08/17/20250817-g10/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解受击动画！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171022658.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/0xHE3ypX96U?si=DHV9BKtb4i52Radr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li><p>想谈谈<strong>受伤（受击）动作</strong>。在《任天堂明星大乱斗》中，角色在<strong>挨打的瞬间</strong>会立刻切换到“看起来很疼”的姿势。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171027034.png" alt="|474x267"><br>  因为 <strong>受击的第 1 帧正处在 Hit-stop（硬直/暂停）</strong> 里，会被玩家看得很清楚，所以把这帧做得“很疼”非常重要。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171028034.png"></p></li><li><p>有的游戏把<strong>待机</strong>和<strong>受伤</strong>做得很接近；我们则让受伤姿势与待机<strong>截然不同、夸张极端</strong>，这样<strong>远景</strong>也能一眼看出挨打了。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171028572.png" alt="|474x267"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171028932.png" alt="|474x267"></p></li><li><p>不过并不是<strong>瞬移</strong>到受伤姿势，而是通过<strong>补间</strong>从“被打中的姿势”过渡到“受伤动作的第 1 帧”。（在“Hit-stop”一回也提过。）<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171029329.png" alt="|474x267"></p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171034878.gif"></li></ul></li><li><p>无论在什么情况下命中，都会进入受伤姿势；所以如果对手的<strong>受击判定（Hurt）持续很长</strong>，角色会在<strong>相当远</strong>的距离也摆出受伤动作。延长 Hurt 并在 Hit-stop 中冻结是有好处的，但我们这边更<strong>优先“被打感”</strong>。</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171035378.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171036408.png"></li><li>我们遇到过这样的问题：用<strong>弱攻击</strong>时，对手的姿势/站位会导致<strong>被击退开</strong>，后续连段就打不中。原因在于<strong>受击方的 Top Node（骨架根/定位点）</strong>，只要改变姿势，这类问题就会尾随出现。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171037371.png"></li></ul></li></ul></li><li><p>大乱斗的受伤反应分为<strong>上/中/下</strong>命中三个方向；地面上又有<strong>小/中/大</strong>三档强度。<strong>3×3 共 9 种</strong>基本反应。被<strong>击飞</strong>时又是另一套各种变化。</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171037249.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171038142.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171038787.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171038769.png"></li></ul></li><li><p>和几乎全是人形的其他格斗不同，大乱斗的<strong>体型太多样</strong>；就算是人形，也有<strong>持剑/持盾/持其他武器</strong>等差异。如果大家都标准人形还能<strong>复用</strong>动作，但事实并非如此，所以很辛苦——<strong>每增加一个斗士都是大工程</strong>。</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171038304.png"></li></ul></li><li><p>所有受伤动作都会<strong>避免完全对称</strong>，强调<strong>清晰的轮廓（Silhouette）</strong>。<br>  例如“被击飞”时会<strong>扭转躯干、打开四肢</strong>，让轮廓清楚；如果只是<strong>横向平躺</strong>飞出，轮廓就不好看。为了表现“打到了/被打了”，受伤动作也要<strong>精心雕琢</strong>。</p><pre><code>  ![](https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171039615.png)  ![](https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171040320.png)</code></pre></li><li><p>题外话：我在《星之卡比 超豪华》企划书里，给卡比的受伤模式写过类似的图示。<strong>在一瞬间，做到这种程度的极端夸张也没问题</strong>。越激烈、越有力，演出越好。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508171040116.png"></p></li></ul><hr><h5 id="实操方法论"><a href="#实操方法论" class="headerlink" title="实操方法论"></a>实操方法论</h5><ol><li><strong>锁定“第 1 帧痛感”</strong><ul><li>受击的首帧一定要<strong>大幅夸张</strong>（与待机差异极大），因为会被 Hit-stop 放大。</li><li>建一个 <strong>“首帧 Pose 库”</strong> ，美术/动画先做极端版，再按角色体型微调。</li></ul></li><li><strong>先补间，再冻结</strong><ul><li>受击从“被打姿势”<strong>过渡</strong>到“受伤首帧”，再进入 Hit-stop。</li><li>这样既保持<strong>连贯性</strong>，又确保首帧<strong>读得清</strong>。</li></ul></li><li><strong>受伤反应表格化（3×3）</strong><ul><li>命中部位：上 / 中 / 下；强度：小 / 中 / 大 → <strong>9 种地面受伤</strong>。</li><li>另建<strong>空中/击飞</strong>专用反应组，确保镜头与轮廓可读。</li></ul></li><li><strong>轮廓优先、避免对称</strong><ul><li>规定“受伤必须<strong>扭转躯干、外展四肢</strong>”，避免“侧卧/平直”导致轮廓糊。</li><li>远景检查：<strong>缩放到实机 1080p 的 15–20%</strong> 大小仍要一眼看懂。</li></ul></li><li><strong>根节点/定位点规范（防“打退脱连”）</strong><ul><li>明确<strong>Top Node</strong>在受伤切换时的<strong>位移规则</strong>（锁脚/锁髋/锁质心）。</li><li>对<strong>弱攻击→连段</strong>做回归：换姿势后若间距变大，<strong>用根位补偿/受击位移修正</strong>。</li></ul></li><li><strong>受击判定与 Hit-stop 的取舍</strong><ul><li>延长受击判定+Hit-stop 有助读感，但会导致<strong>远距离也摆受伤</strong>。</li><li>以“<strong>被打感优先</strong>”为准绳，按角色与武器<strong>分层配置</strong>停顿时长与受击时间。</li></ul></li><li><strong>体型/武器差异的制作策略</strong><ul><li>建<strong>共用曲线</strong>（时间轴、强度曲线、骨骼驱动）＋<strong>每角色修正表</strong>（骨长、武器占位）。</li><li>人形也按<strong>持剑/持盾/重武器</strong>分子类做<strong>基础版</strong>，再局部替换。</li></ul></li><li><strong>连段一致性的设计协作</strong><ul><li>与战斗设计约定：<strong>哪些受伤状态允许近身</strong>、哪些要<strong>锁面向</strong>或<strong>限制横移</strong>，避免轻击把人“弹走”。</li><li>给连段招式打<strong>白名单</strong>：受伤进入的<strong>位移/硬直</strong>采用<strong>连段友好配置</strong>。</li></ul></li><li><strong>可读性验收清单</strong><ul><li>远景（缩小）、强光/逆光、复杂背景、屏幕震动叠加时，受伤是否<strong>仍清晰</strong>。</li><li>“打到了/没打到”的<strong>反馈一致</strong>：受伤姿势 + 火花/音效 + 轻微镜头。</li></ul></li><li><strong>“一帧极端”的许可</strong><ul><li>允许在<strong>极短时间</strong>内使用<strong>夸张到失真的 Pose</strong>（参考卡比例子），强调冲击力；随后<strong>回归合理</strong>的运动。</li></ul></li></ol><blockquote><p>目标：让“被打”<strong>一眼可读、远景生效、连段稳定</strong>；在体型多样的前提下，靠<strong>首帧痛感＋轮廓设计＋根节点规范</strong>把受伤系统做“稳”和“懂”。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250810 - Unexpected Results</title>
      <link href="2025/08/10/20250810-d10/"/>
      <url>2025/08/10/20250810-d10/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解优化过程中可能会出现奇怪问题这一现象！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>D10 - Unexpected Results</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508101023632.png" alt="|792x446"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/6P8zwwQ9OhU?si=cc4x-zf33D0kaSse" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li><p>做过不少项目，但<strong>正式版里出现意料外的结果</strong>并不罕见，有时还会让成品“变味”。</p></li><li><p><strong>案例 1：〈Meteos〉</strong></p><ul><li>末期做了性能优化 → <strong>整体运行更快</strong>，而游戏内部许多逻辑<strong>直接依赖运行速度</strong>，结果<strong>难度曲线被抬高</strong>、玩家更快进入吃紧局面。这并非原意。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508101043217.png" alt="|474x267"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508101043466.png"></li></ul></li><li><p><strong>案例 2：〈甲虫王者·虫王〉</strong></p><ul><li>一直用“自制大型开发基板”调平衡，<strong>与量产机存在速度差</strong>；正式版出现<strong>饥饿值下降过快</strong>等偏差<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508101044263.png"></li></ul></li><li><p><strong>案例 3：〈任天堂明星大乱斗 特别版〉</strong></p><ul><li>首发版本里，大家普遍感到<strong>CPU 强度偏高</strong>；疑似优化引发的“间接加强”，但<strong>具体原因查不清</strong>。</li><li>若全面回调难度，会牵动巨量回归测试，<strong>代价太高</strong>。转而采取<strong>侧向对策</strong>：把“挑战者”难度调早、给“灯火之星”新增“非常简单”等；幸好有<strong>线上更新</strong>可补救。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508101045457.png" alt="|415x234"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508101045566.png"></li></ul></li><li><p>结论：和计算机打交道，<strong>意外一定会发生</strong>；并非所有风险都在清单里，很多项目其实都在“<strong>钢丝上行走</strong>”。</p></li></ul><hr><h5 id="方法论（避免“优化把游戏玩坏”的实用清单）"><a href="#方法论（避免“优化把游戏玩坏”的实用清单）" class="headerlink" title="方法论（避免“优化把游戏玩坏”的实用清单）"></a>方法论（避免“优化把游戏玩坏”的实用清单）</h5><h6 id="一、技术层：把“速度”从“玩法”中解耦"><a href="#一、技术层：把“速度”从“玩法”中解耦" class="headerlink" title="一、技术层：把“速度”从“玩法”中解耦"></a>一、技术层：把“速度”从“玩法”中解耦</h6><ul><li><strong>固定时间步 / 逻辑帧独立</strong>：用固定 <code>deltaTime</code> 进行<strong>物理、AI、计时器</strong>更新；渲染可变帧率，逻辑固定步长。</li><li><strong>与帧率脱钩</strong>：所有与节奏相关的数值（冷却、Buff 时长、AI 决策周期、生成频率）<strong>禁止依赖真实帧间隔</strong>。</li><li><strong>平台时钟一致性</strong>：统一时间源（避免不同硬件/地区时钟差、浮点精度差）以保持<strong>决定性/可复现性</strong>。</li><li><strong>速度因子总开关</strong>：全局 <code>GameSpeed</code> / <code>Timescale</code> 做<strong>最后保险</strong>，出现整体快/慢时一键回调。</li></ul><h6 id="二、AI-与平衡：可复现、可对比、可回退"><a href="#二、AI-与平衡：可复现、可对比、可回退" class="headerlink" title="二、AI 与平衡：可复现、可对比、可回退"></a>二、AI 与平衡：可复现、可对比、可回退</h6><ul><li><strong>黄金回放</strong>（golden recordings）：录制关键关卡/AI 对局输入流，优化前后重放，<strong>TTK、DPS、通过率</strong>自动比对，发现“被优化加强/削弱”。</li><li><strong>固定随机种子</strong>：平衡测试走固定 seed，减少噪声，便于比较。</li><li><strong>敏感度矩阵</strong>：列出受“速度/并发”影响最大的系统（投射物、抓取/投技、体力流失、刷怪、连招窗口），<strong>重点监控</strong>。</li><li><strong>难度旋钮外露</strong>：把关键难度参数做成<strong>热更新/配置化</strong>，便于首发后快速微调；预留“<strong>极易/无障碍</strong>”档位当安全网。</li></ul><h6 id="三、性能优化的“闸门”与回归"><a href="#三、性能优化的“闸门”与回归" class="headerlink" title="三、性能优化的“闸门”与回归"></a>三、性能优化的“闸门”与回归</h6><ul><li><strong>两段式优化</strong>：<ol><li>Beta 前：只做<strong>安全优化</strong>（内存、加载、I/O、裁剪）。</li><li>内容冻结后：再做<strong>潜在影响玩法的优化</strong>（循环并行、合批、时序改写）。</li></ol></li><li><strong>优化清单→行为回归</strong>：每一项可能改变时序/频率的优化，都要<strong>绑定一组行为用例</strong>（AI 反应、投射物寿命、计时器精度）。</li><li><strong>平台一致性检查</strong>：开发机≠量产机，<strong>尽早、频繁</strong>在目标硬件上做节奏/时序回归（掌机、低配、不同地区机型）。</li></ul><h6 id="四、流程与工具：尽量让“意外”被看见"><a href="#四、流程与工具：尽量让“意外”被看见" class="headerlink" title="四、流程与工具：尽量让“意外”被看见"></a>四、流程与工具：尽量让“意外”被看见</h6><ul><li><strong>度量基线</strong>：为关键体验设 KPI 阈值（如“平均第 X 分钟进入高压段”），做版本间对比曲线。</li><li><strong>灰度/AB</strong>：上线后以灰度或 AB 测试验证难度体感，<strong>数据+口碑</strong>双信号触发回调。</li><li><strong>紧急回退路径</strong>：发布流程内置“<strong>参数热修</strong>”与“快速补丁”路径，避免因全面回归阻塞救火。</li><li><strong>问题登记为“类型库”</strong>：把这类“优化→节奏漂移”的事故沉淀为<strong>清单</strong>，新项目复用。</li></ul><h6 id="五、设计侧的预备方案（当根因难以迅速定位）"><a href="#五、设计侧的预备方案（当根因难以迅速定位）" class="headerlink" title="五、设计侧的预备方案（当根因难以迅速定位）"></a>五、设计侧的预备方案（当根因难以迅速定位）</h6><ul><li><strong>替代性缓冲</strong>：像视频里那样，用<strong>早期下调挑战入口</strong>、新增<strong>更低难度/辅助功能</strong>来止血。</li><li><strong>节奏托底</strong>：在关键节点放<strong>资源/复活/护甲</strong>托底点，防整体变难后玩家卡死。</li><li><strong>沟通与预期管理</strong>：补丁说明清楚告知“<strong>性能优化引起节奏变化</strong>已回调/在监测”，降低负面感知。</li></ul><hr><h5 id="一句话收束"><a href="#一句话收束" class="headerlink" title="一句话收束"></a>一句话收束</h5><blockquote><p>任何“加速”和“并行”都有机会<strong>偷偷改写你的游戏节奏</strong>。把逻辑从帧率里解放出来，用可复现的对比与可回退的参数化，配合“优化闸门+黄金回放”，就能把“意外结果”压到最低，并保留快速修正的余地。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025 - 0809 - Thinking After Finishing GMTK 2025</title>
      <link href="2025/08/09/2025-0809-after-finishing-gmtk-game-jam-2025/"/>
      <url>2025/08/09/2025-0809-after-finishing-gmtk-game-jam-2025/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508092140449.png" alt="|792x588"></p><h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>最近和朋友 <a href="https://gennnjirr.itch.io/">@GennnjiRR</a> 一起参加了 <a href="https://itch.io/jam/gmtk-2025">GMTK Game Jam 2025</a>（以下简称 Jam），特此回顾一下。</p><p>参赛页面： <a href="https://itch.io/jam/gmtk-2025/rate/3780242">Eric The Office Breaker</a><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508092221377.png" alt="|792x284"></p><p>我后来基于相同素材制作的另一个游戏：<a href="https://playwithexperiences.itch.io/slices-of-shadows">Slices of Shadows</a></p><h2 id="Eric-the-Office-Breaker"><a href="#Eric-the-Office-Breaker" class="headerlink" title="Eric the Office Breaker"></a>Eric the Office Breaker</h2><h3 id="Brief"><a href="#Brief" class="headerlink" title="Brief"></a>Brief</h3><p>我们差不多在一个月前稍微跟着 Godot 的教程学了一下，也算是为此做了些准备。</p><p>本次 Jam 的主题是 Loop，持续时间从 0731 - 0803。<br>时间线上我俩周四中午进行了 brainstorm，周四晚找了素材，周五晚确定了基础的 3C，周六（0930-0200）和周天（0930-2300）是最主要的制作时间，总共大概是 37 小时左右。</p><p>朋友负责的部分主要是美学和叙事，玩法部分是一起讨论而出的，我这次其实大部分精力花在了实现上。</p><h3 id="Production"><a href="#Production" class="headerlink" title="Production"></a>Production</h3><ul><li>Gameplay &amp; Challenges</li></ul><p>周五晚确定了 2D 平面视角，以鼠标滞后跟随作为角色移动方式，以物品破坏为核心玩法。</p><ul><li>Aesthetics</li></ul><p>朋友在周四晚基本找完了大部分的美学相关的素材，后面都是缺啥找啥。但因为奇怪的 bug 导致 web 版本在运行时一旦生成音效游戏就会整个卡死，最终选择了将音效去除。这也使得这部分的评分下降，很多玩家都反馈破坏时 feedback 的缺失（视觉/听觉/屏幕振动）导致破坏行为不太能被理解。</p><ul><li>Narrative</li></ul><p>我们周四中午想的主题是和工厂流水线/游戏制作过程这一循环被打破相关的方向，但还没有定下叙事主线和基调，正因如此，我们在周六早上也有了一次叙事之争，由此也引出了在本文后半部分的我基于相同素材另外制作的游戏 <a href="https://playwithexperiences.itch.io/slices-of-shadows">Slices of Shadows</a>，这个后文再展开。</p><p>朋友找的素材基本都是工作室题材的，而且他其实有了一些叙事意图——整体是想要打破无良老板的工作循环，并受到了我的启发为物品加入了留言机制——即破坏足够数量之后会展示物品的“抱怨”。这部分其实都得到了比较好的落实和展现。</p><p>但根据玩下来的反馈感觉其实我看到的很多玩家是不会细看文本的，这可能也算是一定程度上和 survival 的玩法有了一些节奏上的冲突，以后可以再改进。</p><h3 id="Feedbacks"><a href="#Feedbacks" class="headerlink" title="Feedbacks"></a>Feedbacks</h3><p>如前所提到的，玩家的反馈主要是集中于 feedbacks 部分的缺失，导致“破坏”的感觉没能很好地传达。<br>功能方面，有玩家提到想要选关功能来跳关，以及想要在分数够了之后就过关等等。<br>Bug 就不说了，肯定会有的，因为对碰撞的处理不到位可能会导致玩家被挤出可移动范围导致无法移动。</p><h3 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h3><p>我们自己是觉得玩法和挑战方面做得比较好的是不需要什么教程，上手即玩，当然了，这也是因为玩法比较简单。<br>美学方面得益于朋友的投入完成度还是比较高的，除了因为技术原因没能成功加进去的音效，整体的观感都很不错。<br>叙事方面其实是朋友负责的，他的语言风格是比较轻快易读的，也比较契合素材中的音乐风格和玩法节奏。<br>整体完成度比较高，scope 定得也很不错，除了砍掉了一个 minigame 之外都算是成功落地了。这是我们第一次合作参加 game jam，能交出这样的答卷我已经很满意，并且这次也以主力的身份参与并完赛，也算是给了自己一些信心。</p><h2 id="Slices-of-Shadows"><a href="#Slices-of-Shadows" class="headerlink" title="Slices of Shadows"></a>Slices of Shadows</h2><h3 id="Brief-1"><a href="#Brief-1" class="headerlink" title="Brief"></a>Brief</h3><p>这是前面提到的因为存在叙事上的冲突，所以在比赛时我将我的叙事意图搁置了，在完赛之后借助已有素材来制作的另一个游戏。</p><h3 id="Differences"><a href="#Differences" class="headerlink" title="Differences"></a>Differences</h3><p>我制作游戏的 Vision 是希望能够借助游戏这一媒介来让和自己类似的人发现自身的阴影（shadow）——即自己人性深处尚未被揭示的部分。</p><blockquote><p>正如我在 <a href="https://medill-east.github.io/2024/02/25/20240225-simulator-of-the-meaning-of-life/">《人生意义模拟器》 Demo 展示及制作复盘分析</a> 中所写的，也许我理想中的游戏能做的是如荣格的阴影学说（shadow）中所提的一样，是对和自己有着相似阴影的他者的阴影的揭示。玩家在玩游戏时的体验能够帮助 TA 们揭示自身的阴影，游戏也是为玩家所提供的“爵士乐队”和“舞台”，玩家在此期间能够奏响独属于自己的“爵士乐”。</p></blockquote><p>由此我选择了几个不同的叙事主体：</p><ul><li>主角本身<ul><li>即玩家所操控的角色，是触发所有叙事的契机</li></ul></li><li>场景中的物<ul><li>借他们之口来控诉不断“逼迫自己”的主体</li></ul></li><li>半透明的主角“切片”<ul><li>借他们之口来谏言，希望能让主体换个视角看待问题，放松下来，不要一直逼迫自己</li></ul></li><li>全黑的主角“阴影”<ul><li>借他之口，与主体对话</li><li>并且创造“敌意-中立-友好”的叙事反差</li></ul></li></ul><p>在做的过程中，其实比较重要的是选定了合适的音乐：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202508092306754.png"></p><p>“Sincerely” Kevin MacLeod (incompetech.com)<br>Licensed under Creative Commons: By Attribution 4.0 License<br><a href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</a></p><p>我的所有叙事文本也是在听着音乐的同时写下的。</p><p>想要传达的其实主要是这么几点：</p><ul><li>珍惜时间来做想做的事情</li><li>不要逼迫自己毫不停歇</li><li>换个角度，享受地看待生活</li><li>其实有和你类似的人能够了解你</li><li>不要被生活卷入其中，而是主动拥抱生活</li></ul><p>本来其实是想在交完 Eric 之后尝试也把这个也做完交上去，但无奈能力有限，无法实现。但也不希望拖得太久，所以也算是在一周内（0808）提交了这个版本。</p><h3 id="Feedbacks-1"><a href="#Feedbacks-1" class="headerlink" title="Feedbacks"></a>Feedbacks</h3><p>这里提的反馈其实只来源于 @GennnjiRR。</p><ul><li>能感受到叙事意图</li><li>但叙事手段有些生硬</li></ul><p>但比较有意思的是他提到：</p><blockquote><p>我玩着玩着有种想法，想从上面那个门出去，总感觉被困住了。这说明压抑的气氛是给到了的。</p></blockquote><h3 id="Reflection-1"><a href="#Reflection-1" class="headerlink" title="Reflection"></a>Reflection</h3><p>我其实很认同他所说的“把故事先讲好玩家才会去探究背后”而不是强硬地让玩家接受你的想法，这一点在《故事》一书中亦有相关提法。<br>另一点是“先掌握框架才能打破框架”，我也非常认同。</p><p>真想能够早日有能力实现。</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250727 - M19 - Guidelines</title>
      <link href="2025/07/27/20250727-m19/"/>
      <url>2025/07/27/20250727-m19/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解规章制度与自由创作的纠葛！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>M19 - Guidelines</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507271106598.png" alt="|587x330"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/HgvheCHsExA?si=uTCTDo8AGO3prAKd" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><blockquote><p><strong>主题：</strong> “游戏中的各种『指南／规范（Guidelines）』为何存在？它们给开发者带来哪些正反影响？”<br><strong>讲述者：</strong> 樱井政博</p></blockquote><hr><h5 id="1-内容精炼翻译"><a href="#1-内容精炼翻译" class="headerlink" title="1. 内容精炼翻译"></a>1. 内容精炼翻译</h5><table><thead><tr><th>时间轴</th><th>重点句</th><th>中文意译</th></tr></thead><tbody><tr><td>00:05</td><td>“世上大多数产品都有指南；不达标就不能上市。”</td><td>几乎所有复杂产品都会强制遵守某套规范，否则无法作为正式商品／服务对外提供。</td></tr><tr><td>00:23</td><td>以《<strong>俄罗斯方块</strong>》为例</td><td>2002 年起 The Tetris Company 设定了统一规范：<strong>地面转块</strong>不能造成永不落定；各形状固定颜色、NEXT 个数、旋转轴、幽灵影像 (着地预览)…<br><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507271109639.png" alt="|245x138"><br><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507271110053.png"><br></td></tr><tr><td>01:07</td><td>“过去版本各不相同，玩家体验参差。”</td><td>早期各种民间版 Tetris 操作/旋转规则都不同，导致游玩体验割裂。</td></tr><tr><td>01:22</td><td>“指南的价值 vs. 创作自由”</td><td>- 指南有其合理性；<br>- 但开发者常因指南受限，无法实现想要的表达。</td></tr><tr><td>01:45</td><td>常见约束来源</td><td>- 年龄分级<br>- 平台/商店政策<br>- 在线服务条款<br>- 甚至自家内部制作规范<br><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507271111212.png"><br></td></tr><tr><td>02:12</td><td>“当玩家不知道背后限制时，可能误解设计”</td><td>设计师想做某种效果，却被规范禁止；玩家不知情，会觉得设计不佳。</td></tr><tr><td>02:23</td><td>指南并非绝对</td><td>Tetris 在街机需保证收益时，也可获“例外”许可。</td></tr><tr><td>02:41</td><td>结论</td><td>指南终究是“人定的”——可变动、可商量；若能更灵活，让“好作品”优先，会更理想。</td></tr></tbody></table><hr><h5 id="2-实用方法论总结"><a href="#2-实用方法论总结" class="headerlink" title="2. 实用方法论总结"></a>2. 实用方法论总结</h5><h6 id="A-理解「指南」三大作用"><a href="#A-理解「指南」三大作用" class="headerlink" title="A. 理解「指南」三大作用"></a>A. <strong>理解「指南」三大作用</strong></h6><ol><li><strong>一致性</strong>：确保跨版本/跨平台体验统一（如 Tetris 统一旋转轴）。</li><li><strong>合规性</strong>：满足法律、年龄分级、平台政策。</li><li><strong>可维护性</strong>：规范流程，减少上线后因“不可预见”导致的回炉。</li></ol><h6 id="B-常见指南来源-amp-检查清单"><a href="#B-常见指南来源-amp-检查清单" class="headerlink" title="B. 常见指南来源 &amp; 检查清单"></a>B. <strong>常见指南来源 &amp; 检查清单</strong></h6><table><thead><tr><th>来源</th><th>关键关注点</th><th>样例</th></tr></thead><tbody><tr><td><strong>IP 方官方</strong></td><td>品牌视觉、配色、玩法限制</td><td>Tetris 不允许无限“地面转”</td></tr><tr><td><strong>平台/商店</strong></td><td>成就、支付、隐私、内容审查</td><td>iOS《App Review》指南</td></tr><tr><td><strong>分级机构</strong></td><td>暴力、性暗示、赌博元素</td><td>ESRB / PEGI</td></tr><tr><td><strong>网络服务条款</strong></td><td>用户生成内容、社交功能</td><td>Xbox Live Policy</td></tr><tr><td><strong>公司内部</strong></td><td>代码规范、美术模板、性能预算</td><td>任天堂自家 TRC/LOTcheck</td></tr></tbody></table><h6 id="C-应对“被限制”的实用策略"><a href="#C-应对“被限制”的实用策略" class="headerlink" title="C. 应对“被限制”的实用策略"></a>C. <strong>应对“被限制”的实用策略</strong></h6><ol><li><strong>立项前</strong>——列出所有潜在指南 → 建立“可行性红黄绿表”。</li><li><strong>设计阶段</strong>——多方案备选；先草案与相关方沟通申请豁免可能。</li><li><strong>玩家沟通</strong>——若必要，可在 DevLog/访谈中说明为何做出某些取舍，减少误解。</li><li><strong>版本策略</strong>——若遇刚性条款，可考虑：<ul><li><strong>分区内容差异化</strong>（港版/国际版）</li><li><strong>可选设置</strong>（开启/关闭血液效果）</li><li><strong>后续补丁/活动</strong> 取得平台追加批准后再上线。</li></ul></li></ol><h6 id="D-心态提醒"><a href="#D-心态提醒" class="headerlink" title="D. 心态提醒"></a>D. <strong>心态提醒</strong></h6><blockquote><p>指南≠束缚创意；它既是“底线”，也能倒逼更巧妙设计。真正挑战是：<strong>在规则内做出玩家依旧感到自由的体验</strong>。</p></blockquote><hr><p><strong>一句话总结：</strong></p><blockquote><p>游戏开发者必须在「创作自由」与「多方指南」之间不断折衷；理解规范由来、灵活协商，以“保证体验一致 + 符合法规”为基础，才能把“好作品”顺利带给玩家。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250720 - F09 - A Fight Between Live Action and Animation</title>
      <link href="2025/07/20/20250720-f09/"/>
      <url>2025/07/20/20250720-f09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解统一“写实”和“动漫”风格的技巧！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201118913.png" alt="|747x420"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/luB-5GqW55Q?si=2wYVBsdAor8gZ2Eb" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p><strong>主题：</strong> 在《任天堂明星大乱斗》中，让来自“写实”与“卡通”两种极端美术世界观的角色同场对战而不违和，需要一套“统一风格”的系统化做法。<br><strong>分享者：</strong> 樱井政博</p><hr><ul><li><strong>多元角色同场</strong> —— 大乱斗里有马里奥这种卡通，也有贝姐这种写实，要避免 “动画人物 VS 真人演员” 的违和感。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201121979.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201121412.png"></p><ul><li><strong>示例：马里奥</strong><ul><li>原作马里奥：色块鲜艳、细节极简。</li><li>大乱斗马里奥：在保持原色的前提下增加牛仔布、金属钮扣等材质细节，经原厂确认 OK。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201121885.png"></li></ul></li></ul></li><li><strong>五大调整原则：</strong><ol><li><strong>饱和度降低</strong>——把“纯正红/蓝/黄”调淡，让角色更易受环境光影响，避免与暗色角色冲突。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201122570.png" alt="|681x383"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201122523.png"></li><li><strong>中度描纹</strong>——给卡通角色增纹理，给写实角色减重量，拉近“细节密度”。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201123397.png"></li><li><strong>微调头身</strong>——在不破坏辨识度的前提下保持各角色比例相对和谐（贝姐在大乱斗中头身被压缩）。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201123728.png" alt="|681x383"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201124512.png" alt="|681x383"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201124615.png"></li><li><strong>按需重设（Refine）</strong>——如奥利玛宇航服、冰冰人鞋底加钉齿与积雪，增加可信度。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201125939.png" alt="|681x383"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201125105.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201126785.png"></li><li><strong>“可能真实存在”的改写</strong>——允许运动闭眼改为“眨眼”，重新调整牙齿咬合；核心是问：如果角色真存在，他会长什么样？<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201126925.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201126735.png" alt="|681x383"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201127468.png"></li></ol></li><li><strong>总结</strong>：若不加控制，就会像“动画打真人”。必须用“设计意图”把整体拉回统一；不仅要管美术，还要配合动作、特效、音效等多维度。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507201127658.png"></li></ul><hr><h5 id="可直接套用的「跨风格角色统一」方法论"><a href="#可直接套用的「跨风格角色统一」方法论" class="headerlink" title="可直接套用的「跨风格角色统一」方法论"></a>可直接套用的「跨风格角色统一」方法论</h5><table><thead><tr><th>步骤</th><th>操作要点</th><th>风险 / 提示</th></tr></thead><tbody><tr><td><strong>① 统一色彩空间</strong></td><td>降饱和、拉近亮度区间，确保同一环境光下角色不会互相“抢眼”</td><td>过度去饱和会失去角色标识度</td></tr><tr><td><strong>② 调整“纹理密度”</strong></td><td>- 给纯色角色增加材质贴图<br>- 给写实角色做磨皮/降噪</td><td>保持 IP 特征纹理（如马里奥牛仔布）</td></tr><tr><td><strong>③ 统一尺度（头身）</strong></td><td>设定全局“头身范围”，在 5%–10% 内微调</td><td>角色标志性比例不可动太多</td></tr><tr><td><strong>④ 设计级 Refine</strong></td><td><strong>功能+故事</strong> 两条线：<br>- 功能：角色鞋底钉齿＝实际抓地逻辑<br>- 故事：宇航服磨损＝冒险感</td><td>勿“加戏过度” → 破坏识别度</td></tr><tr><td><strong>⑤ 真·存在视角</strong></td><td>问自己：若角色站在现实摄影棚灯光下，光影/表情/材质该如何</td><td>与 IP 审核方保持「迭代+确认」</td></tr></tbody></table><hr><h5 id="一句话总结"><a href="#一句话总结" class="headerlink" title="一句话总结"></a>一句话总结</h5><blockquote><p><strong>“降低差异、提升共性、保留灵魂”</strong>——通过五大技术/艺术手段，让马里奥和贝姐同场战斗却不“跳戏”，从而实现多 IP 跨界的美术融合。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 2025 审视我的 PKM</title>
      <link href="2025/07/19/20250719-pkm-review-2025/"/>
      <url>2025/07/19/20250719-pkm-review-2025/</url>
      
        <content type="html"><![CDATA[<h3 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h3><p>昨天在朋友圈看到一篇帖子，一位朋友也在践行 [[personal knowledge management - PKM 个人知识管理]]，甚感欣喜。今日一聊，对我当前的架构有兴趣，也可以当做回顾，遂有此文。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191514784.png" alt="|438x447"></p><h3 id="PKM-之道-WHY"><a href="#PKM-之道-WHY" class="headerlink" title="PKM 之道 - WHY"></a>PKM 之道 - WHY</h3><p>我所理解的道，回答的是 WHY：为何做？</p><p>这一点其实根据不同时期的目标，在不同阶段有些许变化：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191109023.png"></p><ul><li><p>本科时期 - 知识整理<br>如在 <a href="https://medill-east.github.io/2023/08/26/20230826-how-i-know-and-practice-pkm/">与 PKM 的相识和实践</a> 一文中所说，当时记录是为了服务于科研，需要有一种办法对文献进行系统性整理。</p></li><li><p>硕士阶段 - 生活追踪<br>在此时期，除了对于学术知识的整理之外，希望将这种整理延伸到生活之中，比如看过的书、电影、对体验的感悟等等。</p></li><li><p>当前 - 创作养分<br>正如 [[Neil Gaiman]] 在其 Master Class，以及 [[Story: Substance, Structure, Style and the Principles of Screenwriting - Robert McKee - 故事]] 一书中所提到的，任何经验，体会，都有机会成为创作者的养分。即使是平凡至极的“琐事”，也会在你准备好后，以你独有的方式成为灵感。</p></li></ul><p>所以，现在的 PKM 于我而言，不仅是我所经历的过去，不止是代表着我的思维之网，更象征着我未来的可能性，因为创意之花需要从中获取营养，才能茁壮生长。</p><h3 id="PKM-之术-HOW"><a href="#PKM-之术-HOW" class="headerlink" title="PKM 之术 - HOW"></a>PKM 之术 - HOW</h3><p>我所理解的术，回答的是 HOW：如何做？</p><p>如在 <a href="https://medill-east.github.io/2023/11/05/20231105-pkm-my-workflow/">PKM 在 Obsidian 上的卡片盒笔记法实践</a> 一文中所写，我所依托的术主要是 [[Niklas Luhmann 卢曼]] 的 [[zettelkasten 卡片笔记法]]，即将想法拆分为原子化的一张张卡片，有需要时进行排序整理。</p><p>这么些年用下来，个人感觉这个方法其实确实更适用于偏学术的场景：需要规范化地输出以文字为主的已有观点。</p><p>这个系统所构建的 [[fleeting notes 闪念笔记]] -&gt; [[literature notes 文献笔记]] -&gt; [[permanent notes 永久笔记]] 的路径其实很好，合理地将随机的想法，被启发的思考，以及能成文的段落区分开来。但其实对于非学术场景而言，想法从何而来的重要性被弱化，如何高效地传达的重要性提升了，由此使得原本的原子化方法变得稍显繁琐。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191201925.png"></p><p>另一个痛点在于，将其他类型笔记转化为 [[permanent notes 永久笔记]] 的阻力并不低。<br>理论上入口就是 [[SlipBox 卡片盒]] 卡片盒本身，从中能找到所有的 [[permanent notes 永久笔记]]，每一篇 [[permanent notes 永久笔记]] 当中包含了整理好的 [[literature notes 文献笔记]]。<br>输出其实是自上而下的，但输入其实是自下而上的。所有内容最终都应该能够通过对 [[permanent notes 永久笔记]] 的索引来找到。但每一次将一个 [[fleeting notes 闪念笔记]] 或者 [[literature notes 文献笔记]] 转化为 [[permanent notes 永久笔记]] 都需要花费时间，因为后者讲求的是“能够独立成文的段落”。<br>期间也想过各种提升效率的办法，也试过将他们统一提取成代办列表来减少开始转化的负担，但转化的速度还是不够，长此以往，待处理的笔记越堆越多，负担也越来越大了。</p><p>并且作为 Creative Owner 需要掌握更好的可视化输出方法，才能更好地向团队成员传递信息和想法，这也是当时学习 <a href="https://medill-east.github.io/2024/07/07/20240707-thinking-on-game-production-workflow/">Onepage Design</a> 的原因。</p><p>由此变成了现在的基于卡片盒的图式主题结构方法：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191502904.png"></p><table><thead><tr><th></th><th>[[zettelkasten 卡片笔记法]]</th><th>卡片法+图式主题结构</th></tr></thead><tbody><tr><td>特点</td><td>- 以卡片盒为中心，以双链联结内容<br>- 内容核心是独立成段的永久笔记</td><td>- 以主题图为中心，以双链联结内容<br>- 内容核心是基于主题的拆解结构</td></tr><tr><td>优势</td><td>- 以文本为主的规范化输出<br>- 非文件夹结构减轻归类负担</td><td>- 文本+示意图的可视化输出<br>- 输入阻力小</td></tr><tr><td>痛点</td><td>- 非学术场景对于输出的侧重不一样<br>- 转化为永久笔记的效率低，阻力大</td><td>- 嵌套富文本不易分享<br>- 成文一般需要更多再组织</td></tr></tbody></table><ul><li><p>卡片法的例子：</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191243865.png"></li></ul></li><li><p>卡片法+图式主题结构的例子：</p><ul><li><a href="https://play-with-experiences-digital-garden.vercel.app/">00 Homepage EGDS</a><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191230919.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191242488.png"></li></ul></li></ul><p>由此，信息以主题结构被组织，并且没有丢失双链对信息的联结，降低了输入负担，同时可以锻炼可视化能力。但在进行输出时需要进行再组织，但这可能本来也无法避免，所以我觉得暂时而言是够用的。</p><p>如果能够更加易于对嵌套性的富文本内容进行分享，就更好了，继续探索吧。</p><h3 id="PKM-之器-WHAT"><a href="#PKM-之器-WHAT" class="headerlink" title="PKM 之器 - WHAT"></a>PKM 之器 - WHAT</h3><p>我所理解的器，回答的是 WHAT：用什么做？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507191513251.png"></p><ul><li>首先是<strong>来源</strong><ul><li>线上<ul><li>如微信公众号</li></ul></li><li>线下<ul><li>书籍</li><li>电影</li><li>分享</li><li>玩乐</li><li>体验</li><li>想法</li></ul></li></ul></li><li>然后会将来源进行<strong>收集</strong><ul><li>比如会 <a href="https://medill-east.github.io/2025/01/05/20250105-use-obsidian-clipper-with-deepseek/">利用 obsidian web clipper 来将线上内容剪藏到 obsidian 内</a></li><li>或是用 [[Get 笔记]] 来将一些体会快速通过手机来录入</li></ul></li><li>收集好的内容会以这样或那样的方式被纳入 <strong>Input Vault</strong> 中<ul><li>Obsidian<ul><li>这其中基本包含了所有的内容</li></ul></li><li>Notion<ul><li>这一项的存在是因为我个人觉得 Ob 在手机端的阅读体验还不够好，所以我倾向于将一些不常改动的长期计划放到 Notion 当中</li></ul></li><li>Milanote<ul><li>这是一个我最近才发现的无限层级白板工具，主要是方便团队进行协作和查看。之前试过让团队成员一起使用 OB，但好像这样上手成本较高，大家意愿不够，所以才有了换协作工具的想法</li></ul></li></ul></li><li>最终是<strong>输出</strong><ul><li>取决于载体</li><li><a href="https://medill-east.github.io/">Blog</a><ul><li>会输出成体系的主题相关的内容</li></ul></li><li>[Notion Page]<ul><li>主要是对以往的设计相关的分享的总结沉淀</li></ul></li><li>[Official Account]<ul><li>这是今年刚开的坑，因为希望提高自己的输出频率，所以会将一些个人思考放到微信公众号或是小红书上</li></ul></li><li>[Game]<ul><li>游戏当然是最终的载体了，这是目前而言体验传达的终极形态</li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>不觉间又写了很多，包含了很多这段时间以来的改变和思考，还是应该保持审视地心态看待工具，根据需求来进行迭代，不断成长，持续前行！</p>]]></content>
      
      
      <categories>
          
          <category> PKM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PKM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250713 - Staying Organized with Hierachical Outlines</title>
      <link href="2025/07/13/20250713-c16/"/>
      <url>2025/07/13/20250713-c16/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解采用层级视图的好处！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>C16 - Staying Organized with Hierachical Outlines</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507130931490.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ZzCfzwe23kw?si=mDge12MoxGETlMdX" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><blockquote><p>“没有它，我几乎就无法开始任何规划。” —— 桜井政博</p></blockquote><hr><p>（00:04）<br>虽然 Microsoft Word 自带这项功能，但当我和团队成员交流时，他们经常说：“我都不知道有这个。”<br>所以我想来好好解释一下。对我来说，这是不可或缺的功能。</p><p>这就是所谓的「<strong>层级大纲（改装アウトライン）</strong>」，或称 Outline 视图。<br>它能让你以<strong>层级结构管理文档内容</strong>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507130940178.png"></p><hr><p>比如：</p><ul><li>这个结构就和《任天堂明星大乱斗特别版》的<strong>主菜单结构</strong>完全一致。</li><li>点开一个“手柄”图标，就可以展开查看其下的内容。</li><li>再点开一层，就可以继续向下钻。</li></ul><p>简单来说，<strong>它就像文字版的文件夹层级结构</strong>。</p><hr><p>举个例子：</p><ul><li>想整理各个角色的“必杀技”时，可以先列出角色名，再在角色名下写出技能列表，并加上技能说明。</li><li>技能说明可以折叠起来，视觉上保持简洁。</li><li><strong>层级与顺序都可以随意移动和调整</strong>。</li></ul><hr><p>在 Word 中，只要选择“显示”菜单，再选“<strong>大纲视图</strong>”即可进入该模式。</p><hr><p>我从 1993 年开始使用层级大纲了，当时公司刚配发 Macintosh。<br>在那之后，我几乎<strong>无法在没有层级大纲的情况下管理构想与资料</strong>。<br>它对于整理思路、规划游戏内容、组织创意非常重要。</p><p>当然：</p><ul><li>它主要是<strong>用于自己思考与整理用</strong>的；</li><li>如果要展示给别人看，还是需要进行适当美化或正式排版。</li><li>比如我们最终还是会将设计文档发布到公司内部网络中。</li></ul><hr><p>实际上，《本系列节目（指游戏制作讲座）》的内容分类与策划，<strong>最初也是用层级大纲规划的</strong>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507130939559.png"></p><p>是否使用这种方法，还是看个人喜好，但我强烈建议大家<strong>至少试试看</strong>！</p><hr><h5 id="🧠-实用方法论总结"><a href="#🧠-实用方法论总结" class="headerlink" title="🧠 实用方法论总结"></a>🧠 实用方法论总结</h5><h6 id="✅-什么是「层级大纲」？"><a href="#✅-什么是「层级大纲」？" class="headerlink" title="✅ 什么是「层级大纲」？"></a>✅ 什么是「层级大纲」？</h6><ul><li>一种<strong>用树状结构整理文本内容</strong>的方法。</li><li>常见于 Word、OneNote、Notion、Workflowy、Scrivener、Logseq、Obsidian 等工具。</li><li>本质上是“可以折叠的文本结构”。</li></ul><hr><h5 id="✅-用途场景（特别适合游戏策划-amp-创意管理）"><a href="#✅-用途场景（特别适合游戏策划-amp-创意管理）" class="headerlink" title="✅ 用途场景（特别适合游戏策划 &amp; 创意管理）"></a>✅ 用途场景（特别适合游戏策划 &amp; 创意管理）</h5><ol><li><strong>游戏角色技能/数据管理</strong><blockquote><p>角色名（第一级） → 技能名（第二级） → 技能效果说明（第三级）</p></blockquote></li><li><strong>关卡设计文档结构</strong><blockquote><p>章节名 → 关卡名 → 机制说明 / 美术需求 / 音乐风格</p></blockquote></li><li><strong>脚本/剧情编排</strong><blockquote><p>主线剧情 → 场景 A → 台词内容 → 分镜提示</p></blockquote></li><li><strong>游戏系统设计</strong><blockquote><p>系统模块 → 功能点 → 交互逻辑 → 风险点</p></blockquote></li><li><strong>个人创意笔记整理</strong><blockquote><p>灵感 → 分支思路 → 技术可行性 → 待验证项</p></blockquote></li></ol><hr><h5 id="✅-工具推荐（若你不使用-Word）"><a href="#✅-工具推荐（若你不使用-Word）" class="headerlink" title="✅ 工具推荐（若你不使用 Word）"></a>✅ 工具推荐（若你不使用 Word）</h5><table><thead><tr><th>工具</th><th>特点</th></tr></thead><tbody><tr><td>Notion</td><td>支持折叠标题，便于团队协作</td></tr><tr><td>Workflowy</td><td>极简纯文本无限嵌套结构</td></tr><tr><td>Logseq</td><td>本地+大纲+双向链接，适合深度知识整理</td></tr><tr><td>Obsidian</td><td>Markdown + 大纲 + 思维链接</td></tr><tr><td>Scrivener</td><td>写长篇剧情、脚本极佳，结构树管理优秀</td></tr></tbody></table><hr><h5 id="✅-使用建议"><a href="#✅-使用建议" class="headerlink" title="✅ 使用建议"></a>✅ 使用建议</h5><ul><li><strong>先草图、后结构化</strong>：先写乱的内容，再归入大纲结构中。</li><li><strong>只为自己而写</strong>：先别管排版，重点是理清逻辑结构。</li><li><strong>折叠能力解放大脑</strong>：大纲视图让你“看到想看、收起暂时不重要的”。</li><li><strong>定期整理/重构</strong>：创意更新时，把结构也迭代一遍。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250706 - Bug Testing Never Ends</title>
      <link href="2025/07/06/20250706-e07/"/>
      <url>2025/07/06/20250706-e07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解修复 Bug 的现实！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507061440165.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/yIXB0vGJBuw?si=ct1a4vXmKWZWmct0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>要完成游戏，<strong>Debug（除错）是必不可少的</strong>。<br>这里不谈监测与分析，仅专注于纯粹的“<strong>修复 Bug</strong>”。</p><h5 id="为什么即使能在线修补，也希望一开始就完美"><a href="#为什么即使能在线修补，也希望一开始就完美" class="headerlink" title="为什么即使能在线修补，也希望一开始就完美"></a>为什么即使能在线修补，也希望一开始就完美</h5><ul><li>没有开发者希望发布有 Bug 的游戏。</li><li>但如今游戏规模庞大，<strong>已经大到靠传统 Debug 无法穷尽所有组合</strong>：<ul><li>以《任天堂明星大乱斗》为例：<ul><li>光是 89 名角色的两两对战就有约 8000 种组合。</li><li>如果两名角色用不同招式攻击，组合数 = 技能数量 × 2。</li><li>加入道具、其他玩家（多人）、特殊攻击等，组合继续爆炸增长。</li><li>特定地形、关卡机关、灵魂（Spirits）也都进一步叠加组合。</li></ul></li><li><strong>所有组合都需要多次尝试确认才能严格 Debug，但根本做不到</strong>。</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202507061453839.png"></p><hr><h5 id="Bug-为何容易被玩家发现"><a href="#Bug-为何容易被玩家发现" class="headerlink" title="Bug 为何容易被玩家发现"></a>Bug 为何容易被玩家发现</h5><ul><li>一旦 Bug 被触发，只要知道重现方法，就可以无限复现并上传网络曝光。</li><li>开发中虽有针对“可疑区域”集中 Debug，但也有极限。</li></ul><hr><h5 id="哪些地方最容易出-Bug"><a href="#哪些地方最容易出-Bug" class="headerlink" title="哪些地方最容易出 Bug"></a>哪些地方最容易出 Bug</h5><p>以《大乱斗特别版》为例：</p><ul><li><strong>抓取、投掷、强制控制他人动作</strong>：易导致处理逻辑冲突。</li><li><strong>抓取中触发技能</strong>：易引发问题。</li><li><strong>最终切换场景类必杀技</strong>：可能残留场景垃圾。</li><li><strong>极端地形设计（如 V 字凹陷）</strong>：角色穿出地形难以避免。</li><li><strong>灵魂（Spirits）等大量可变系统</strong>：超越普通游戏规格，测试工作量庞大。</li></ul><hr><h5 id="为何游戏越大-Debug-越难"><a href="#为何游戏越大-Debug-越难" class="headerlink" title="为何游戏越大 Debug 越难"></a>为何游戏越大 Debug 越难</h5><ul><li>RPG 等需数十小时通关的游戏，<strong>Debug 总时长可能达到数千、数万甚至数十万小时</strong>。</li><li>即便可通过补丁修复：<ul><li>修复后无法立即上线，需要验证是否引入新 Bug。</li><li>修复一处，可能引发多处连锁需要重新检查（即“修 Bug 引 Bug”）。</li></ul></li></ul><hr><h5 id="现实与期望"><a href="#现实与期望" class="headerlink" title="现实与期望"></a>现实与期望</h5><ul><li>本次说明并非为 Bug 辩解，而是<strong>如实说明游戏开发现状</strong>。</li><li>若“完全零 Bug 才能发布”的观念僵化，可能导致<strong>游戏根本无法发布</strong>。</li><li>银行、航空、通信等领域必须追求零 Bug，但对于游戏来说，希望玩家理解开发中的实际限制。</li><li>制作方理解自己立场不便强调这一点，但仍希望玩家换个角度看待。</li></ul><hr><h4 id="方法论总结"><a href="#方法论总结" class="headerlink" title="方法论总结"></a>方法论总结</h4><h5 id="1️⃣-理解“完全零-Bug”在大型游戏中几乎不可能"><a href="#1️⃣-理解“完全零-Bug”在大型游戏中几乎不可能" class="headerlink" title="1️⃣ 理解“完全零 Bug”在大型游戏中几乎不可能"></a>1️⃣ 理解“完全零 Bug”在大型游戏中几乎不可能</h5><ul><li>游戏开发者需在：<ul><li><strong>Bug 完全修复</strong></li><li><strong>按时发布</strong></li><li><strong>避免引入新 Bug</strong></li></ul></li><li>之间取得平衡，过度追求完美会导致项目无限期延期。</li></ul><hr><h3 id="2️⃣-识别-Debug-高风险区域"><a href="#2️⃣-识别-Debug-高风险区域" class="headerlink" title="2️⃣ 识别 Debug 高风险区域"></a><strong>2️⃣ 识别 Debug 高风险区域</strong></h3><p>优先测试：</p><ul><li>强制控制行为（抓取、投掷）</li><li>技能与状态切换时机</li><li>特殊关卡与地形穿模点</li><li>多人状态、多人同时技能触发</li><li>参数可变系统（装备、灵魂、技能树）</li></ul><hr><h3 id="3️⃣-采用“集中排查-条件覆盖”组合策略"><a href="#3️⃣-采用“集中排查-条件覆盖”组合策略" class="headerlink" title="3️⃣ 采用“集中排查 + 条件覆盖”组合策略"></a><strong>3️⃣ 采用“集中排查 + 条件覆盖”组合策略</strong></h3><ul><li><strong>条件覆盖测试</strong>：覆盖主要组合及核心玩法路径。</li><li><strong>集中排查</strong>：针对已知高风险区域和 Bug 密集区域进行集中测试。</li><li>明确“不可能覆盖所有情况”，将测试集中在_最大可能影响体验_的场景。</li></ul><hr><h3 id="4️⃣-构建可持续更新和修复流程"><a href="#4️⃣-构建可持续更新和修复流程" class="headerlink" title="4️⃣ 构建可持续更新和修复流程"></a><strong>4️⃣ 构建可持续更新和修复流程</strong></h3><ul><li>将在线更新和热修补作为发布后的正常维护流程。</li><li>修复 Bug 后，进行自动化和人工回归测试确认无新 Bug 引入。</li><li>设置可快速响应玩家反馈和社区曝光 Bug 的修复流程。</li></ul><hr><h3 id="5️⃣-建立团队与玩家的共识沟通机制"><a href="#5️⃣-建立团队与玩家的共识沟通机制" class="headerlink" title="5️⃣ 建立团队与玩家的共识沟通机制"></a><strong>5️⃣ 建立团队与玩家的共识沟通机制</strong></h3><ul><li>教育玩家理解大型游戏 Debug 的实际难度。</li><li>在公告和开发者访谈中坦诚说明维护节奏和修复优先级。</li></ul><hr><h3 id="6️⃣-面向实际项目应用"><a href="#6️⃣-面向实际项目应用" class="headerlink" title="6️⃣ 面向实际项目应用"></a><strong>6️⃣ 面向实际项目应用</strong></h3><p>在你的开发管理中：<br>✅ 制定“Debug 优先级排查清单”，从高风险区域开始排查。<br>✅ 对大规模内容引入的组合爆炸问题，使用脚本化、回归工具和自动化压力测试配合。<br>✅ 将修复 + 验证作为更新发布流程的标准环节。<br>✅ 平衡质量与进度，设立“可容忍的非致命 Bug 清单”保证版本可上线。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250629 - N11 - Super Smash Bros for 3DS &amp; Wii U</title>
      <link href="2025/06/29/20250629-n11/"/>
      <url>2025/06/29/20250629-n11/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Super Smash Bros for 3DS &amp; Wii U 诞生的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291143196.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/DeLrIXCOUw0?si=NFqM5yCSXwGHNVwX" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>2011 年 Nintendo 宣布《任天堂明星大乱斗》将同时登陆 <strong>3DS（掌机）和 Wii U（家用机）</strong>，由樱井接手开发。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291154181.png"></p><h5 id="为何选择双平台同时开发"><a href="#为何选择双平台同时开发" class="headerlink" title="为何选择双平台同时开发"></a>为何选择双平台同时开发</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291154576.png"></p><ul><li><p><strong>3DS</strong>：</p><ul><li>第一次让大乱斗在掌机可玩，自带独特魅力。</li><li>性能限制，难以完全实现大乱斗的高速与表现力（如无法实现冰雪登山者的双人操作，击飞速度需要调慢以防画面跟丢）。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291159329.gif" alt="|358x172"></li></ul></li><li><p><strong>Wii U</strong>：</p><ul><li>可充分发挥 HD 表现力与特效。</li><li>但若仅在 Wii U 制作，只会成为以往的延续。</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291156783.png"></p><ul><li>注意到：<ul><li><strong>掌机“个人持有”</strong> 与 <strong>家用机“多人聚会”</strong> 的特性差异。</li><li>两机型共享系统、动作、平衡，但不增加双倍工作量。</li></ul></li></ul><hr><h5 id="开发体制"><a href="#开发体制" class="headerlink" title="开发体制"></a>开发体制</h5><ul><li>制作交由 <strong>万代南梦宫工作室（BNS）</strong> 执行。</li><li>各领域 Leader 充满干劲。</li><li>平衡在《大乱斗 X》速度过慢与《大乱斗 DX》过快之间。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291200227.png"></li></ul></li><li>3DS 与 Wii U <strong>关卡主题分开制作</strong>（3DS：掌机作品主题；Wii U：家用机作品主题）。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291200894.png"></li></ul></li></ul><hr><h5 id="特色玩法设计"><a href="#特色玩法设计" class="headerlink" title="特色玩法设计"></a>特色玩法设计</h5><ul><li><strong>3DS 专有：</strong><ul><li>_擦肩通信_、_场地乱斗（Field Smash）_（5 分钟强化后决战，参考《星之卡比：气球大战》City Trial 模式）。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291201796.png" alt="|274x154"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291201955.png"></li></ul></li></ul></li><li><strong>Wii U 专有：</strong><ul><li>_世界乱斗（World Smash）_（多人桌游式派对玩法）。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291201858.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291202990.png"></li></ul></li></ul></li></ul><p>二者均提供角色参数可变玩法：</p><ul><li><strong>可装备道具、自定义必杀技（每种 3 种可选）</strong>。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291203795.png"></li></ul></li><li><strong>Mii 格斗家加入自定义体系，几乎任何人都可加入战斗</strong>。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291203293.png"></li></ul></li><li><strong>amiibo 支持</strong>：训练、战斗成长、对战玩法。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291203399.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291204215.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291204907.png"></li></ul></li></ul><hr><h5 id="开发流程优化"><a href="#开发流程优化" class="headerlink" title="开发流程优化"></a>开发流程优化</h5><ul><li><strong>首度由团队多人调节参数</strong>（以往均由樱井本人独立输入）。</li><li>BNS 的制作效率叠加 Nintendo 以往大乱斗经验，极大提升了开发效率。</li><li>增加大量测试人员进行平衡测试。</li></ul><hr><h5 id="技术成就"><a href="#技术成就" class="headerlink" title="技术成就"></a>技术成就</h5><ul><li><strong>3DS 上实现裸眼 3D、60 帧流畅四人对战</strong>（非常罕见）。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291206318.png"></li></ul></li><li><strong>首次支持在线更新与 DLC 新角色发布</strong>，但也导致开发周期大幅拉长（最终开发结束于 2016 年春）。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291207347.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291207807.png"></li></ul></li></ul><hr><h5 id="宣发创新"><a href="#宣发创新" class="headerlink" title="宣发创新"></a>宣发创新</h5><ul><li>E3 公布“参战影片”成为固定宣发环节，直到《大乱斗特别版》依然延续。</li><li>3DS 于 2014 年秋先发售，Wii U 于冬季在日本最晚发布。<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506291208065.png"></li></ul></li><li>DLC 持续到最后，并在最终 DLC 公布时完成了下一作《大乱斗特别版》的策划书。</li></ul><hr><h5 id="方法论总结"><a href="#方法论总结" class="headerlink" title="方法论总结"></a>方法论总结</h5><h6 id="1️⃣-利用不同平台的特性设计体验"><a href="#1️⃣-利用不同平台的特性设计体验" class="headerlink" title="1️⃣ 利用不同平台的特性设计体验"></a><strong>1️⃣ 利用不同平台的特性设计体验</strong></h6><ul><li>掌机：强调 _个人独享_、_便携碎片化_、适合快节奏但要考虑屏幕尺寸限制。</li><li>家机：强调 _多人聚会_、_高清体验_、适合大型多人模式和派对玩法。</li></ul><blockquote><p>✅ <em>适用场景：任何需要跨平台开发时，利用平台差异创造双赢体验，而非复制粘贴。</em></p></blockquote><hr><h6 id="2️⃣-核心玩法与模式创新"><a href="#2️⃣-核心玩法与模式创新" class="headerlink" title="2️⃣ 核心玩法与模式创新"></a><strong>2️⃣ 核心玩法与模式创新</strong></h6><ul><li><strong>基础玩法共享</strong>（系统、动作、核心循环）。</li><li><strong>玩法模式差异化</strong>：<ul><li>为掌机设计快节奏收集模式（如 Field Smash）。</li><li>为家机设计多人派对模式（如 World Smash）。</li></ul></li><li><strong>参数可变系统（装备、技能定制）</strong>：<ul><li>增强玩家掌控感和重复可玩性。</li><li>支持如 amiibo 等硬件生态联动。</li></ul></li></ul><blockquote><p>✅ <em>适用场景：设计多人游戏或跨代续作时，区分模式定位以提升可玩性与多样性。</em></p></blockquote><hr><h6 id="3️⃣-开发流程和工具优化"><a href="#3️⃣-开发流程和工具优化" class="headerlink" title="3️⃣ 开发流程和工具优化"></a><strong>3️⃣ 开发流程和工具优化</strong></h6><ul><li>将<strong>参数调优权下放给多人</strong>，不依赖单人完成所有工作。</li><li>搭配大量测试人员进行平衡调整。</li><li>利用 DLC 与在线更新延续生命力，但需留意控制项目范围避免无限延期。</li></ul><blockquote><p>✅ <em>适用场景：中大型多人竞技或长线运营游戏开发流程优化时参考。</em></p></blockquote><hr><h6 id="4️⃣-技术目标明确"><a href="#4️⃣-技术目标明确" class="headerlink" title="4️⃣ 技术目标明确"></a><strong>4️⃣ 技术目标明确</strong></h6><ul><li>明确设定技术底线（如保持 60FPS 的优先级）。</li><li>根据平台限制提前预判功能可行性（如性能限制不做冰雪登山者双人）。</li></ul><blockquote><p>✅ <em>适用场景：任何跨平台游戏项目性能管理与功能规划。</em></p></blockquote><hr><h6 id="5️⃣-宣发内容模块化"><a href="#5️⃣-宣发内容模块化" class="headerlink" title="5️⃣ 宣发内容模块化"></a><strong>5️⃣ 宣发内容模块化</strong></h6><ul><li>“参战影片”成为具娱乐性、传播性强的固定宣传形式。</li><li>结合角色发布、DLC 等节奏控制社区热度。</li></ul><blockquote><p>✅ <em>适用场景：需持续运营社区或发布角色/内容的竞技类或服务型游戏。</em></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250622 - B16 - Game Essence in Shooting Games</title>
      <link href="2025/06/22/20250622-b16/"/>
      <url>2025/06/22/20250622-b16/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 [[Masahiro Sakurai on Creating Games]] 的视频，学习射击游戏中的风险与回报！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>B16 - Game Essence in Shooting Games</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221142377.png" alt="|639x329"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/iN3IyqPjLkc?si=bBIMdWaTZzcanzcz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p><strong>（00:01）</strong><br>在“游戏性”这一大类的开头，我以《太空侵略者》为例讲解了“游戏性与博弈”的概念。<br>[[push and pull]]<br>[[objective reason - risk and reward 风险和回报]]<br>这是理解“游戏性”这个主题的前提，建议你先去看那一期。</p><p>这次，我们聚焦于传统射击游戏，举一些例子进一步挖掘。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221144482.png"></p><hr><h5 id="🎯-核心前提："><a href="#🎯-核心前提：" class="headerlink" title="🎯 核心前提："></a>🎯 核心前提：</h5><blockquote><p><strong>“冒风险 → 得回报”是博弈与游戏性的根本</strong>。</p></blockquote><p>例如在横向射击游戏 [[game - Darius 达赖亚斯]] 中，  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221145388.png"><br>画面宽、子弹少，常常会有“弹切（无法射击）”的情况。</p><p>一般来说射击游戏如果子弹不够爽快，玩起来会不舒服，<br>但这款游戏却<strong>成功营造出了博弈感</strong>。</p><p>比如：</p><ul><li><strong>在屏幕后方</strong>（远离敌人）时，容易出现弹切，火力弱；<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221147852.png"></li><li><strong>靠近前方敌人或地形</strong>时，能持续连射，火力强。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221147111.png"></li></ul><p>这意味着：</p><blockquote><p>离敌人越近（风险高） → 火力越强（回报高）<br>离敌人远（安全） → 火力越弱 → 通关更慢</p></blockquote><hr><p><strong>（01:04）</strong><br>再看 [[game - Gradius 宇宙巡航机]] 等“强化型射击游戏”：<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221148088.png"></p><ul><li>有些强化道具被放在靠近危险地形或敌人的地方<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221149431.png"></li><li>你可以选择“靠近危险 → 换强化” 或 “远离危险 → 稳稳打”</li></ul><p>这种设计形成了<strong>风险与收益的权衡结构</strong>。</p><p>还有如“双向炮（Double shot）”这种武器：</p><ul><li>能打击上方敌人，覆盖更广，但</li><li>发射频率低，而且正面攻击力远不如激光<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506221150486.png"></li></ul><p>所以玩家会权衡：</p><blockquote><p>我要什么优势？我愿意接受什么劣势？</p></blockquote><p>这种设计非常适用于各种游戏类型。</p><hr><p><strong>（02:08）</strong><br>如果你能轻松无脑清屏，可能会有爽快感，<br>但缺少博弈张力，<strong>游戏性就会降低</strong>。</p><p>不过也不代表“高游戏性”就是唯一追求：</p><ul><li>太复杂的博弈系统可能会削弱视觉冲击力</li><li>也可能让玩家觉得麻烦、累</li></ul><p>所以要看你想做的游戏类型：</p><blockquote><p>🎯 如果你想做一款有<strong>独特体验</strong>的游戏，<br>就不能只去模仿形式，<br>而要去理解 <strong>“为什么它有趣”</strong> 。</p></blockquote><hr><h5 id="✅-二、设计方法论总结：打造射击游戏的“游戏性”"><a href="#✅-二、设计方法论总结：打造射击游戏的“游戏性”" class="headerlink" title="✅ 二、设计方法论总结：打造射击游戏的“游戏性”"></a>✅ 二、设计方法论总结：打造射击游戏的“游戏性”</h5><hr><h6 id="🎮-游戏性设计的底层结构"><a href="#🎮-游戏性设计的底层结构" class="headerlink" title="🎮 游戏性设计的底层结构"></a>🎮 游戏性设计的底层结构</h6><table><thead><tr><th>元素</th><th>举例</th><th>效果</th></tr></thead><tbody><tr><td>🎯 <strong>风险越高 → 回报越大</strong></td><td>近距离射击更强</td><td>玩家要主动权衡安全与效率</td></tr><tr><td>⚙️ <strong>地形决定打法差异</strong></td><td>靠近地形可得道具</td><td>引导玩家选择路线与策略</td></tr><tr><td>🧩 <strong>武器的优劣权衡</strong></td><td>双向炮 vs 激光</td><td>增加选择深度</td></tr><tr><td>🚫 <strong>限制火力强化过猛</strong></td><td>弹切机制</td><td>避免无脑爽快，保留张力</td></tr></tbody></table><hr><h6 id="🔧-设计建议"><a href="#🔧-设计建议" class="headerlink" title="🔧 设计建议"></a>🔧 设计建议</h6><table><thead><tr><th>目标</th><th>建议</th></tr></thead><tbody><tr><td>做出有层次的射击体验</td><td>在火力、地形、道具上设置风险与收益权衡</td></tr><tr><td>不想做得太复杂</td><td>精简强化系统，但保持一点“策略性选择”</td></tr><tr><td>想让玩家思考</td><td>鼓励多样武器与打法搭配，设置反直觉但合理的机制</td></tr><tr><td>想让游戏简单爽快</td><td>可以弱化博弈性，强化节奏与视觉反馈</td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250615 - J07 - Color-Coding Your Game</title>
      <link href="2025/06/15/20250615-j07/"/>
      <url>2025/06/15/20250615-j07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏的色彩编码！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>J07 - Color-Coding Your Game</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151048542.png"></p><p><strong>（00:03）</strong><br>在我担任导演的项目中，菜单界面通常都会进行颜色分类。<br>比如《任天堂明星大乱斗 特别版》的主界面就分为几个色系：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151051854.png"></p><ul><li><p>“大乱斗”相关内容 → 使用<strong>红色系</strong>菜单，进入后所有界面基调都是红色<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151051149.png"></p></li><li><p>“灵魂”模式 → 使用<strong>绿色系</strong>菜单，同理绿色为主<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151051654.png"></p></li></ul><p>其实很早以前我就开始使用这样的区分方法了。<br>当然，<strong>菜单颜色分类并不总是好的选择</strong>，<br>因为颜色用得太多，会给人“低幼化”的感觉。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151052841.png"></p><p>不过在我的项目中，我认为这种方式的好处大于坏处，所以才使用它。<br>每个游戏都有自己合适的色调风格（Tone &amp; Manner），要根据整体氛围自由设定。</p><hr><p><strong>（01:08）</strong><br>无论怎样，我都建议：</p><blockquote><p><strong>不要在同一张菜单上混用太多不同的颜色</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151053182.png"></p><p>虽然最终效果也取决于设计感和风格方向，但一般容易显得杂乱。</p><p>例如在《任天堂明星大乱斗 4》中，菜单中有很大的角色图像，也可以说“色彩混杂”，  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151053713.png"></p><p>但这种做法<strong>反而能起到“刷印图像”的作用</strong>：</p><ul><li>长时间使用后，玩家会更快识别菜单内容</li><li>因为<strong>找图比找字更快</strong>，更直观</li></ul><p>总体而言：</p><blockquote><p>看图或看颜色比看文字传达的信息更多，<br>比起左脑解析文字，右脑的图像直觉处理方式更加直接有效。</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151054216.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506151054839.png"></p><hr><p><strong>（02:15）</strong><br>尽管如此，我还是要强调一件事：<br>菜单风格必须优先配合<strong>游戏整体的“调性与规范”</strong>（Tone &amp; Manner）</p><p>我这么做，是因为它适合我的游戏风格。<br><strong>而“正确答案”要因游戏而异</strong>。</p><hr><h5 id="实用方法论总结：色彩编码-UI-的设计指南"><a href="#实用方法论总结：色彩编码-UI-的设计指南" class="headerlink" title="实用方法论总结：色彩编码 UI 的设计指南"></a>实用方法论总结：色彩编码 UI 的设计指南</h5><hr><h6 id="🎯-色彩分类菜单的-5-个原则"><a href="#🎯-色彩分类菜单的-5-个原则" class="headerlink" title="🎯 色彩分类菜单的 5 个原则"></a>🎯 色彩分类菜单的 5 个原则</h6><table><thead><tr><th>原则</th><th>要点</th></tr></thead><tbody><tr><td>🎨 1. 色彩分区增强功能识别</td><td>将不同功能模块用不同主色调区分（如红=战斗，绿=探索），利于记忆与快速导航</td></tr><tr><td>🧠 2. 图像比文字更高效</td><td>图像和颜色比文字更易识别，更快激活用户直觉</td></tr><tr><td>📚 3. 注意“低幼化”风险</td><td>色彩用得太多会显得儿童向，需根据目标用户调节色调</td></tr><tr><td>🧩 4. 色彩不应混乱</td><td>同一菜单中混合多种色调容易造成视觉负担，除非经过巧妙设计</td></tr><tr><td>📐 5. 尊重游戏调性</td><td>所有色彩风格应服务于游戏的总体视觉语言（Tone &amp; Manner）</td></tr></tbody></table><hr><h5 id="🔧-应用建议：在你的游戏中使用色彩编码时请考虑"><a href="#🔧-应用建议：在你的游戏中使用色彩编码时请考虑" class="headerlink" title="🔧 应用建议：在你的游戏中使用色彩编码时请考虑"></a>🔧 应用建议：在你的游戏中使用色彩编码时请考虑</h5><table><thead><tr><th>问题</th><th>推荐做法</th></tr></thead><tbody><tr><td>如何让玩家更快识别菜单项？</td><td>用统一的主色调配合图像提示（而非仅用文字）</td></tr><tr><td>如何在复杂菜单中避免混乱？</td><td>每一级菜单维持主色调一致，不要一级跳变</td></tr><tr><td>如何判断是否适合使用色彩编码？</td><td>评估你的目标用户是否更依赖“快速识别”而非“深度阅读”</td></tr><tr><td>怎么避免“低龄化”？</td><td>避免使用高饱和度撞色，选择低对比的成熟配色方案</td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250608 - M18 - The Team Behind Super Smash Bros. Brawl</title>
      <link href="2025/06/08/20250608-m18/"/>
      <url>2025/06/08/20250608-m18/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Super Smash Bros. Brawl 背后的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>M18 - The Team Behind Super Smash Bros. Brawl</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506081118204.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/MammcQ3XkpY?si=hsoVmHaOFZGbPE44" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>以下是视频《The Team Behind Super Smash Bros. Brawl》的**简洁准确中文翻译**与**实用方法论总结**：<hr><p><strong>（00:03）</strong><br>这是一次杂谈，关于 [[樱井政博 Sakurai Masahiro]] 在《任天堂明星大乱斗 X（Brawl）》 [[Super Smash Bros. Brawl]] 团队组建时经历的事。<br>当时我已经离开 HAL 研究所，以自由职业者的身份活动。</p><p>2005 年 5 月，在 E3 召开前的任天堂发布会上，公布了将制作新作《大乱斗》。<br>我也在会场，但事前完全不知情，连我自己是否会参与都不确定。</p><hr><p><strong>（01:06）</strong><br>E3 期间，[[岩田聪 Iwata Satoru]] 社长在洛杉矶的一家酒店约我见面，表达了希望我“以接近导演的身份参与新作制作”的请求。<br>公布《大乱斗》新作，是因为日美用户在 Wi-Fi 网络应用的呼声中，<strong>呼声最高的就是大乱斗</strong>。<br>他们还未决定开发体制，仅为展示 Wii 的 Wi-Fi 功能而仓促宣布。</p><p>但我当时已接下其他项目，如果接下大乱斗就等于强行插队，这让我非常为难。<br>我问岩田：“如果我不接这活儿，你们会怎么办？”<br>岩田表示会努力找其他人来做，但<strong>可能只限于 Wi-Fi 适配，不允许动用原有角色</strong>。<br>这其实不是“续作”的标准操作。</p><hr><p><strong>（02:10）</strong><br>岩田深知《大乱斗》的开发难度，才坚持让我来主导。<br>最终让我下决心的，是《塞尔达传说》制作人 [[青沼英二 Eiji Aonuma]] 的一句话：</p><blockquote><p>“如果樱井先生不参与，那就不再是《大乱斗》了。”</p></blockquote><p>这种风格混乱却不崩溃的作品，<strong>必须靠樱井的判断与感性支撑</strong>。<br>我也意识到，当前确实有“只有我能做”的任务存在。</p><p>所以我决定接受邀请，并全身心投入，甚至放弃了原先已推进一半的项目（如《甲虫王者ムシキング》）[[Sodatete: Kouchuu Ouja Mushiking]] 。</p><hr><p><strong>（04:17）</strong><br>岩田随后做出决断，<strong>将开发中心从 HAL 研究所转移至东京，并围绕我重新组建团队</strong>。<br>主力开发由刚完成项目的 Game Arts 公司承担，成员对《大乱斗 DX》的理解非常深入，连手柄摇杆都磨损得像橡皮擦一样。<br>团队热情高涨，随后在高田马场设立了新办公室。</p><p>开发从 10 月初正式开始，前期我负责企划和向各角色原作者提案。<br>最终团队规模达到约 100 人，完成了《大乱斗 X》的开发。</p><hr><p><strong>（05:21）</strong><br>一个系列新作既非由原公司开发，又由离职导演主导，这是非常罕见的情况。<br>而未来是否还能这样操作——比如《大乱斗 特别版》之后的作品——仍未可知。</p><p>从“去人格化”的角度看，系列应摆脱对某个人的依赖。<br>但目前来看，没有樱井的《大乱斗》仍难以想象。</p><p>即使这话由我说不具说服力，从客观角度讲也确实如此。<br>任天堂今后若计划继续制作《大乱斗》，必须提前准备各种应对方案。<br>我也希望能继续与任天堂合作，贡献我的力量。</p><hr><h5 id="实用方法论总结：大型游戏项目组建与接手关键机制"><a href="#实用方法论总结：大型游戏项目组建与接手关键机制" class="headerlink" title="实用方法论总结：大型游戏项目组建与接手关键机制"></a>实用方法论总结：大型游戏项目组建与接手关键机制</h5><hr><h5 id="🎯-一、项目组建的五大经验"><a href="#🎯-一、项目组建的五大经验" class="headerlink" title="🎯 一、项目组建的五大经验"></a>🎯 一、项目组建的五大经验</h5><table><thead><tr><th>#</th><th>原则</th><th>实践说明</th></tr></thead><tbody><tr><td>1</td><td><strong>关键人物是“灵魂”，不能贸然替换</strong></td><td>即使主创已离职，仍可能因其不可替代性而被重新召回。</td></tr><tr><td>2</td><td><strong>项目公布前不等于完成准备</strong></td><td>任天堂公布《大乱斗 X》时尚未有开发体制，仅为市场展示。</td></tr><tr><td>3</td><td><strong>集结团队要围绕“关键驱动力”组织</strong></td><td>岩田社长亲自决定围绕樱井聚人，而非指派新公司接手。</td></tr><tr><td>4</td><td><strong>经验型公司+强烈动机 = 核心团队</strong></td><td>Game Arts 团队对原作理解深刻，执行力强，愿意全力投入。</td></tr><tr><td>5</td><td><strong>愿景与认同推动决策</strong></td><td>决策的关键，不是合同或金钱，而是认同作品精神是否能延续。</td></tr></tbody></table><hr><h5 id="🔧-二、关键机制建议：如何处理“必须靠某人”的项目"><a href="#🔧-二、关键机制建议：如何处理“必须靠某人”的项目" class="headerlink" title="🔧 二、关键机制建议：如何处理“必须靠某人”的项目"></a>🔧 二、关键机制建议：如何处理“必须靠某人”的项目</h5><table><thead><tr><th>场景</th><th>建议做法</th></tr></thead><tbody><tr><td>关键人物离职后仍需其能力</td><td>主动协商核心角色回归，赋予主导权，减少组织结构阻力</td></tr><tr><td>项目已公布但尚无团队</td><td>快速形成以信任为基础的紧急编制，重点先保愿景统一</td></tr><tr><td>有多个并行项目牵扯</td><td>允许关键人物筛选优先级，接受部分项目中止</td></tr><tr><td>未来“去人格化”转型</td><td>提前建设标准化机制和可继承的核心设计文档体系</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250601 - Hit Marks</title>
      <link href="2025/06/01/20250601-h06/"/>
      <url>2025/06/01/20250601-h06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习击中特效！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>H06 - Hit Marks</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011018492.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/B-P4ysHSjCg?si=9quV9zgizl8_kX0L" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><hr><p><strong>（00:03）</strong><br>在攻击命中敌人时出现的视觉效果被称为“命中特效”（Hit Mark）。<br>我参与的作品中，命中特效往往较为华丽，呈现风格接近漫画式表现。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011020641.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011021913.png"></p><p>不过，在偏真实风格的游戏中，使用这种特效可能会显得突兀，因此需要按每个作品的风格权衡使用。<br>有时也会用飞溅效果等替代。<br>例如《任天堂明星大乱斗特别版》中也有多种命中特效，让我们通过慢镜头来看一下。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011027837.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011027449.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011027056.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011027598.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011029773.gif" alt="guard effects"></p><hr><p><strong>（01:10）</strong><br>以下是设计命中特效时应考虑的一些关键条件：</p><ol><li><p><strong>视觉冲击要与攻击的“价值”匹配</strong><br> 命中特效的目的是增强打击感，因此应尽可能<strong>华丽显眼</strong>。<br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011030790.png"></p></li><li><p><strong>具有强烈的“视觉节奏”</strong><br> 和其他特效一样，若效果模糊、颜色不清晰、没有明确节奏，会让打击感减弱。<br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011031581.png"></p></li><li><p><strong>命中位置要准确</strong><br> 命中特效应在攻击判定与受击判定重合的正确位置生成。<br> 像《大乱斗》这样视角拉远的游戏，攻击判定范围偏大，更容易出现特效偏移的情况。<br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011031637.png"><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011032833.png" alt="|319x156"><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011032552.png"></p></li><li><p><strong>使用多种视觉元素的组合</strong><br> 不仅仅是一个贴图或动画：可加入穿透感的冲击波、飞溅的液体、火花等，丰富视觉层次。<br> 但注意不要过于杂乱，要控制时机与色彩。<br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011033818.png"><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011033219.png"></p></li><li><p><strong>避免过度遮挡角色</strong><br> 特效不能把角色完全遮挡，否则会影响玩家判断和反馈。<br> 虽然可以通过降低特效图层优先级来减弱遮挡，但这样可能导致其他视觉问题。<br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011034086.png" alt="|319x154"><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011034601.png"></p></li><li><p><strong>停留时长适宜</strong><br> 连击类攻击的特效应更短暂，单发强攻击可适当延长时间，但总的来说应快速消失，避免拖沓。<br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011035084.png"><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011036086.png"></p></li></ol><ol start="7"><li><strong>有“明度差”适配不同背景</strong><br> 特效需要<strong>在亮色或暗色背景下都能被看清</strong>。<br> 可通过叠加暗色边框、混合深浅色等方式提升可视性。<br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011036889.png"><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011037454.png" alt="|319x154"><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011037846.png" alt="added dark backdrop"></li></ol><hr><p><strong>（03:25）</strong><br>此外，如果游戏采用“命中暂停（Hit Stop）”机制：</p><ul><li>命中特效通常在暂停期间<strong>持续播放或缓动</strong>，</li><li>这段时间可以被有效利用来突出命中感。</li></ul><p>作为补充：《大乱斗特别版》中，当玩家被命中并在 Hit Stop 期间尝试控制方向时，<br>会出现<strong>代表飞出方向的特效箭头</strong>，这是一个具有高度“规则可视化”的独特机制。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011039250.png" alt="|347x167"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202506011039193.png"></p><hr><h5 id="实用方法论总结：命中特效设计-7-大关键原则"><a href="#实用方法论总结：命中特效设计-7-大关键原则" class="headerlink" title="实用方法论总结：命中特效设计 7 大关键原则"></a>实用方法论总结：命中特效设计 7 大关键原则</h5><hr><table><thead><tr><th>序号</th><th>原则</th><th>实用建议</th></tr></thead><tbody><tr><td>1</td><td>视觉冲击感与打击价值匹配</td><td>强攻击应有更大更华丽的效果；弱攻击可以轻量简洁。</td></tr><tr><td>2</td><td>有节奏、有张力</td><td>确保视觉节奏明确，颜色、形状不模糊，避免“糊成一团”。</td></tr><tr><td>3</td><td>命中位置准确</td><td>特效必须出现在“攻击判定与受击判定”重合处，避免漂移错位。</td></tr><tr><td>4</td><td>复合视觉层次</td><td>结合冲击波、火花、碎片等增强打击感；适度分层，控制混乱度。</td></tr><tr><td>5</td><td>不遮挡关键角色动作</td><td>特效透明度、位置、图层需避免遮挡关键动画（如角色受击、动作反馈等）。</td></tr><tr><td>6</td><td>停留时长适中</td><td>根据攻击类型设定：连击→短，强击→略长；但总要“短促有力”。</td></tr><tr><td>7</td><td>明度差适配不同背景</td><td>为特效加上黑色边框、深浅色组合，确保无论背景如何都能看清。</td></tr></tbody></table><hr><h5 id="🎯-附加建议："><a href="#🎯-附加建议：" class="headerlink" title="🎯 附加建议："></a>🎯 附加建议：</h5><ul><li><strong>命中暂停时的特效播放</strong>可作为强化反馈的手段，</li><li><strong>用特效可视化操作反馈（如方向控制）</strong> 能提升可玩性和清晰度。</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250525 - F08 - Unifying Visual Style</title>
      <link href="2025/05/25/20250525-f08/"/>
      <url>2025/05/25/20250525-f08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解像素艺术的基础！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="Masahiro-Sakurai-on-Creating-Games-F08"><a href="#Masahiro-Sakurai-on-Creating-Games-F08" class="headerlink" title="Masahiro Sakurai on Creating Games - F08"></a>Masahiro Sakurai on Creating Games - F08</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505251018582.png" alt="|782x403"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/BLzEMMcwUKk?si=q94Q_7wucl7lNjYY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>《Unifying Visual Style（统一美术风格）》<p><strong>（00:04）</strong><br>如果你是从事游戏开发的专业人士，不论你擅长什么，都必须完成各种任务。<br>美术也是一样——加入一个团队后，就必须<strong>配合团队的整体画风</strong>。<br>比如一个擅长写实肌肉风格的画师，也可能不得不长期画“可爱风”的角色。</p><p>当公司内部有多个项目时，当然有机会被分配到自己擅长的风格上；但也有很多时候，并没有选择余地。<br>不过，大多数美术人员都很“灵活”，能很好地调整自己的风格。</p><p>[音乐]<br>画图也好，游戏开发也好，竞争非常激烈，所以最终还是靠“技术实力”来适应风格。</p><hr><p><strong>（01:07）</strong><br>为了让整个团队在风格上保持一致，通常会制作“<strong>形象设定图（Image Board）</strong>”。<br>这类设定图会描绘游戏的世界观、背景、角色、道具等，是“整体风格参考图”。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505251021713.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505251021404.png"></p><p>这种图不会画很多，一般由技术和美术理解都出色的人负责绘制。<br>随后，团队会在这些基础上建模、布光，从而缩小每位成员在理解和风格上的差异，让团队整体朝着统一方向靠拢。</p><p>以我自己的作品为例，甚至连“牛仔布上的缝线”都被具体画出来。  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505251022262.png"></p><p>这是为了在《任天堂明星大乱斗》（Super Smash Bros.）这样一款风格混合、角色多样的游戏中，尽可能统一整体美术风格所做的努力。</p><p>如果没有这些统一措施，画风就会像“动画角色和写实角色互殴”那样混乱。<br>关于这个问题我们以后可以再深入聊聊，但总的来说：</p><blockquote><p><strong>游戏画面越精致、表现力越强，美术风格一致所需的工作量也就越大</strong>。<br>不过，这项工作无论如何都是“必要的”，所以只能努力去做好。</p></blockquote><hr><p><strong>（02:16）</strong><br>许多游戏都会推出“设定资料集”，内容就像百科全书一样，翻起来非常享受，简直是“视觉上的幸福”。<br>但有时候看到这些资料，你会忍不住想：“这个世界真的有人能做到如此细致入微吗？”——这让人感到震撼。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505251022882.png"></p><p>游戏开发通常是从<strong>统一的画风概念</strong>出发，靠团队成员灵活地执行，逐步构建出完整的作品。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505251023288.png"></p><hr><h3 id="🎨-美术风格统一的实用方法论"><a href="#🎨-美术风格统一的实用方法论" class="headerlink" title="🎨 美术风格统一的实用方法论"></a>🎨 美术风格统一的实用方法论</h3><table><thead><tr><th>方法</th><th>原理 / 目的</th></tr></thead><tbody><tr><td><strong>制作 Image Board（形象设定图）</strong></td><td>提供全员参考的视觉模板，统一角色、场景、道具的基调</td></tr><tr><td><strong>由美术能力强者主导风格样例</strong></td><td>样例质量越高，全员跟进越容易，减少误差与主观理解偏差</td></tr><tr><td><strong>建模与灯光参考设定图进行微调</strong></td><td>在 3D 阶段进一步确保表现一致</td></tr><tr><td><strong>细节规范到材质/纹理级别</strong></td><td>如牛仔布的缝线都画出来，让画风差异最小化</td></tr><tr><td><strong>视风格复杂度分配资源与时间</strong></td><td>表现力越高，统一难度越高；需提前预估成本并分配任务</td></tr><tr><td><strong>设定灵活的团队协作习惯</strong></td><td>接受风格非己所长、积极配合团队风格是专业美术的必备素养</td></tr></tbody></table><hr><h3 id="🧠-补充说明"><a href="#🧠-补充说明" class="headerlink" title="🧠 补充说明"></a>🧠 补充说明</h3><ul><li><strong>艺术风格的统一不仅是美观问题，更是玩家沉浸感的基础</strong>。<br>  没有统一风格的游戏会让玩家感到“割裂”“混乱”。</li><li><strong>在多人合作项目中，风格统一不仅靠规范文档，还要靠“领导示范”和“美术支撑”。</strong><br>  一个高质量的参考图，胜过上百条风格说明文字。</li></ul><hr><h3 id="✅-总结"><a href="#✅-总结" class="headerlink" title="✅ 总结"></a>✅ 总结</h3><blockquote><p>游戏越精致，统一画风越困难，但<strong>统一美术风格是每一个项目必须解决的核心问题</strong>。<br>通过设定参考图、由美术主力提供样板、细化材质风格、强调协作意识等方法，可以在团队中有效建立统一的视觉体系。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250518 - Motion Sickness in 3D Games</title>
      <link href="2025/05/18/20250518-c15/"/>
      <url>2025/05/18/20250518-c15/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何应对游戏晕动症！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>C15 - Motion Sickness in 3D Games</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505181149228.png" alt="|718x372"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/OS4CZkBBbW4?si=ERJKY2v8nlJU5-QN" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><hr><p><strong>标题：《3D 游戏中的晕动症》</strong></p><p>在玩 3D 游戏时，有些人会严重晕 3D，这是因人而异的。我本人不太会晕，就算连续玩好几个小时也没问题，但不适应的人真的很痛苦。</p><p>[[晕动症 motion sickness]] 和晕车类似，原理相同，但作用机制相反——本质是视觉信息与内耳（平衡感）信息的不一致。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505181155166.png"></p><ul><li><strong>晕车时</strong>，内耳感受到车辆加速、转弯、颠簸，但眼睛盯着静止的车内或手机。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505181155857.png"></p><ul><li><strong>晕游戏时</strong>，眼睛看到屏幕里剧烈运动（加速、转向），但身体完全静止，内耳没有感知到这些动作。<br>这种不协调会引发恶心、头晕等不适反应。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505181156016.png"></p><p>所以晕车时会建议“看远处风景”，来协调视觉与身体感受。玩游戏时则没有这种“协调”的自然机制。</p><hr><h3 id="🎮-对玩家的建议："><a href="#🎮-对玩家的建议：" class="headerlink" title="🎮 对玩家的建议："></a>🎮 <strong>对玩家的建议：</strong></h3><ul><li><strong>增大视野角（FOV）</strong>：能帮助大脑更好理解“我没有动”。</li><li><strong>提醒自己屏幕以外是静止的现实</strong>：保持一点外部参照。</li><li><strong>使用晕车药</strong>：对游戏晕动也可能有效，可以尝试。</li><li><strong>避免长时间游玩</strong>：疲劳、压力会加重晕感。</li></ul><hr><h3 id="🛠-对开发者的建议："><a href="#🛠-对开发者的建议：" class="headerlink" title="🛠 对开发者的建议："></a>🛠 <strong>对开发者的建议：</strong></h3><ol><li><strong>减少演出效果</strong>：<ul><li>例如：关闭 FPS 中常见的“脚步引起的上下镜头晃动”。</li></ul></li><li><strong>固定摄像机</strong>：<ul><li>尽量避免以角色髋部或头部为锚点导致镜头晃动。</li><li>把摄像机“钉死”在画面上，即使不那么真实，但能避免晕动。</li></ul></li><li><strong>在画面中增加“视觉锚点”</strong>：<ul><li>像准星这种固定在画面中心的元素，能减轻视觉漂浮感。</li><li>放在角落效果不佳，但放中间又有些碍眼，因此需要权衡。</li></ul></li><li><strong>提供可选的“防晕设置”</strong>：<ul><li>比如“关闭镜头晃动”“切换固定视角”等可供玩家自由开关。</li></ul></li><li><strong>在团队中保留“容易晕 3D”的测试人员</strong>：<ul><li>否则连问题是否存在都难以发现。晕动感存在极大个体差异。</li></ul></li></ol><hr><h3 id="🎮-玩家防晕方法论（避免晕-3D）："><a href="#🎮-玩家防晕方法论（避免晕-3D）：" class="headerlink" title="🎮 玩家防晕方法论（避免晕 3D）："></a>🎮 玩家防晕方法论（避免晕 3D）：</h3><table><thead><tr><th>方法</th><th>目的/原理</th></tr></thead><tbody><tr><td>提高视野角（FOV）</td><td>让画面更“真实自然”，减少头晕感</td></tr><tr><td>保持外部参照</td><td>看屏幕以外的静物，让大脑意识到“自己没在动”</td></tr><tr><td>使用晕车药</td><td>缓解身体的恶心、眩晕反应</td></tr><tr><td>避免疲劳、控制游戏时间</td><td>身体状态差时更容易晕</td></tr></tbody></table><hr><h3 id="🛠-开发者防晕设计方法论（设计不晕的-3D-游戏）："><a href="#🛠-开发者防晕设计方法论（设计不晕的-3D-游戏）：" class="headerlink" title="🛠 开发者防晕设计方法论（设计不晕的 3D 游戏）："></a>🛠 开发者防晕设计方法论（设计不晕的 3D 游戏）：</h3><table><thead><tr><th>设计策略</th><th>实施方式</th></tr></thead><tbody><tr><td><strong>简化演出效果</strong></td><td>关闭或默认关闭镜头晃动、冲击波、快速变焦等</td></tr><tr><td><strong>固定摄像机视角</strong></td><td>避免镜头跟随角色身体部位摆动，尤其是 FPS 游戏中的“头部视角”</td></tr><tr><td><strong>添加视觉锚点</strong>（固定参照）</td><td>画面中心添加十字准星、小光标等固定图形</td></tr><tr><td><strong>设置可选的“防晕模式”</strong></td><td>提供关闭演出、切换摄像头类型等选项，交由玩家选择</td></tr><tr><td><strong>团队内保留敏感测试人员</strong></td><td>找出真实晕 3D 的测试人员做实际体验反馈</td></tr></tbody></table><hr><h3 id="🎯-结论："><a href="#🎯-结论：" class="headerlink" title="🎯 结论："></a>🎯 结论：</h3><blockquote><p>“晕 3D”不是少数人问题，而是“个体差异巨大”的用户体验障碍。设计者应主动重视，通过控制视觉演出、稳定摄像机、增加锚点、提供选项，最大限度减少这类问题对玩家的负面影响。</p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025-0511 - Thinking After Playing 33 Expedition</title>
      <link href="2025/05/11/2025-0511-after-playing-33-expedition/"/>
      <url>2025/05/11/2025-0511-after-playing-33-expedition/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111439712.jpg"></p><h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>最近在玩 [[33 号远征队 - 33 Expedition]]（以下简称 33），和朋友聊天时提起在游玩时想到了“究竟什么才是 JRPG”的问题，讨论后遂有此文。</p><p>本次除我之外参与讨论的朋友，感谢大家：</p><ul><li>[[@哗哗君]]</li><li>[[@shadowdiesmilliontimes]]</li><li>[[@Silencecarry]]</li><li>[[@Stan]]</li></ul><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="33-号远征队"><a href="#33-号远征队" class="headerlink" title="33 号远征队"></a>33 号远征队</h3><p>最开始是感受性的问题：当提到 33 时，你脑中浮现了什么词（How will you describe the game?）</p><p>在回答得差不多之后，基于 <a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">EGDS</a> 将其分为了几个方面的描述：</p><ul><li>[[感受 feelings]]<ul><li>Addictive (due to replayability)<ul><li>Parry</li><li>Enemy variations</li><li>Build depth</li></ul></li><li>Cool</li></ul></li><li>Gameplay &amp; Challenge<ul><li>Reactive</li><li>Action</li><li>Fairy tale</li><li>Fragile</li><li>French Romantic</li></ul></li><li>Narrative<ul><li>Trategy</li></ul></li><li>Storytelling<ul><li>Cutscene</li><li>Beauty character</li><li>Atmosphere</li><li>Music</li><li>Humor</li><li>Punk</li></ul></li></ul><p>我本身并不是传统 JRPG 玩家，但玩 33 也玩得停不下来，我也问过自己，到底是出于什么原因？我个人给出的答案是由于其局内弹反和闪避机制的加入让其符合了我对于 [[player skill - physical]] 的需求，这一点其实在 <a href="https://medill-east.github.io/2022/07/30/20220730-why-i-think-elden-ring-is-attractive/">我为何喜欢艾尔登法环一文</a> 中也有体现——难，但是有章法，并且可以通过 [[player skill - mental]] 来合理规避：具体而言，游戏战斗中的弹反可以获得最高收益，闪避次之，满足了我对于即时动作属性的需求，但如果真的碰到了暂时无法克服的怪物，那么可以通过提高 progression 程度来降低难度。</p><p>第二个吸引点其实是经过上面的讨论后才得出的一个结论——法式浪漫在叙事和呈现中得到了充分展现。<br>按理来说别的 JRPG 中不乏很好的叙事和呈现，但 33 确实做出了独属于自己的法式浪漫，这是独属于 33 的韵味，我听到不止一个人评价“只有法国人才能做出来”。想来可能是以下很多方面的综合体验：</p><ul><li>向死而生的世界</li><li>为此抗争的顽强生命意志</li><li>令人遗憾的感情在生命的最后时刻回响</li><li>纠葛而复杂的人性</li><li>对于花的运用</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111507576.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111508373.jpg"></p><p>上面的那些其实都是 [[叙事内容 narrative content]] 的概括描述，如果只看这些描述你可能会觉得很多偏重叙事的 RPG 都满足，但其中所蕴含的法式韵味让我对原有的 narrative 框架进行了进一步细化，这可能也是这次讨论的重要收获之一：</p><ul><li>Narrative<ul><li>[[叙事结构 narrative structure]]</li><li>[[叙事内容 narrative content]]</li><li>[[叙事口吻 narrative tone]]</li><li>[[叙事视角 narrative voice]]</li><li>[[叙事节奏 narrative pacing]]</li></ul></li></ul><p>印象中之前看到过冯骥对于 [[黑神话 悟空]] 的描述之一是“以中国视角讲述中国故事”。而 33 给我的感觉就是“以法式浪漫重新演绎 JRPG”。</p><h3 id="JRPG"><a href="#JRPG" class="headerlink" title="JRPG"></a>JRPG</h3><p>那么问题来了，到底什么是 JRPG？<br>JRPG 是 Japanese Role-Play-Game 的缩写，[[@哗哗君]] 找到了在 <a href="https://www.playstation.com/zh-hans-hk/editorial/great-japanese-rpgs-on-ps4/">Playstation 所推荐的日系角色扮演游戏的网页</a> 上的这样一段定义：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111522901.png"></p><p>[[@Silencecarry]] 提到最开始 JRPG 其实是以日本视角来阐释西方奇幻（受 [[龙与地下城 Dungeons &amp; Dragons]] 的影响较深），并且最开始可能是受制于技术，没有办法实现实时战斗，由此选择了回合制这样的战斗形式。</p><p>但在后面的讨论中我们也指出，虽然最开始可能是因为成本或技术原因选择了回合制，但随着品类的不断迭代发展，有了喜爱回合制战斗（重策略而轻操作）的一群玩家，让回合制战斗也从某种程度的生产妥协变成了纯粹的设计决策。</p><p>这里也延伸出近年来 JRPG 中战斗系统的一些变化：大家都试图在偏向策略的纯回合制与偏向动作的纯即时战斗之间找到某种平衡。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111629064.png"></p><p>还有一个 JRPG 很常见的特性就是群像叙事。因为 JRPG 是以故事为核心的，所以其中的复杂人物关系也是其特点之一。</p><p>[[@哗哗君]] 还对日式和西式 RPG 进行了一番对比：</p><table><thead><tr><th></th><th>日式 RPG（以轨迹系列为例）</th><th>西式 RPG（以辐射、老滚系列为例）</th></tr></thead><tbody><tr><td>[[叙事结构 narrative structure]]</td><td>通常符合英雄之旅</td><td></td></tr><tr><td>[[叙事内容 narrative content]]</td><td>追求人与人之间的理解，需要齐心协力以克服困难</td><td>角色之间有更加独立的目的和追求目标</td></tr><tr><td>[[叙事视角 narrative voice]]</td><td>通常而言是在扮演别人，选择相对固定（不会有那么多冲突的道德抉择）</td><td>玩家通常可以选择扮演自己，有更多定制化的选择，结局更加开放</td></tr></tbody></table><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111556593.png" alt="英雄之旅 The Hero&#39;s Journey"></p><p>由此我们可以对典型的 JRPG 做一个定义：</p><p>JRPG 是以叙事为核心，围绕多角色故事及其关系以及成长所展开的冒险游戏。典型 JRPG 的叙事结构受到英雄之旅影响，其叙事内容聚焦于人与人之间的理解，需要齐心协力克服困难，具有较少的道德抉择，选择相对有限，结局相对固定。</p><h3 id="品类的定义、创新和发展"><a href="#品类的定义、创新和发展" class="headerlink" title="品类的定义、创新和发展"></a>品类的定义、创新和发展</h3><p>忘了从哪里看到的观点，但我也认同：定义品类本身是一种商业行为，是为了帮助玩家更好地寻找到适合自己或自己感兴趣的游戏。品类的定义是后验的——在创作的当下，这个品类定义本身并不存在。</p><p>随着品类的发展，越来越多的商业化游戏追寻的都是渐进式创新——即对现有不足的优化和改进。从商业决策角度而言这样当然是风险更低的路径，但对于行业发展而言可能是后劲不足的。</p><p>最近发售的 [[Blue Prince 蓝途王子]] 也具有很高的评价，其主创 <a href="https://mp.weixin.qq.com/s/jpgyzwMJji-y7-rmPdC-IQ">“也并未从太多别的游戏中获得参考”</a>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111715750.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111720419.png"></p><p>[[游戏设计快乐之道 - A Theory of Fun for Game Design]] 的作者 [[Raph Koster]] 也在书中提及设计者应该避免路径依赖。</p><p>并不是说不应该站在前人的肩膀上继续前行，这是前人用经验血泪所总结的教训，应该好好学习。但如果是未曾出现的路，无需顾虑太多，相信自己只需要打动和自己类似的玩家，放手去做。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>[[player skill - physical]] 的难可以让人保持兴奋，但也可以通过 [[game systems - progression]] 以及对 [[player skill - mental]] 的运用来降低难度</li><li>[[narrative]] 除了 [[叙事结构 narrative structure]] 和 [[叙事内容 narrative content]] 之外，还需要考虑 [[叙事口吻 narrative tone]]，[[叙事视角 narrative voice]] 以及 [[叙事节奏 narrative pacing]]</li><li>[[narrative]] 和 [[storytelling]] 只有配合起来，才能够有更好的效果（对于 [[33 号远征队 - 33 Expedition]] 而言，它甚至还没有和 [[gameplay &amp; challenge]] 配合起来，已经足够动人）</li><li>JRPG 是以叙事为核心，围绕多角色故事及其关系以及成长所展开的冒险游戏。典型 JRPG 的叙事结构受到英雄之旅影响，其叙事内容聚焦于人与人之间的理解，需要齐心协力克服困难，具有较少的道德抉择，选择相对有限，结局相对固定。</li><li>品类的定义是后验的，本质上是一种商业行为，便于玩家挑选心仪的游戏。以前由卖方定义（品类），以后由玩家自发定义（tag）</li><li>作为创作者，虽然要学习前人经验，但也要避免路径依赖</li><li>只要能打动自己，就有机会打动和自己类似的人，不用为所有人而做</li></ul><hr><p>寥寥数言，浅薄己见，看个乐 (￣▽￣)”</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250511 - B15 - Is Your Game Appealing Enough to Start Over</title>
      <link href="2025/05/11/20250511-b15/"/>
      <url>2025/05/11/20250511-b15/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 [[Masahiro Sakurai on Creating Games]] 的视频，学习设计死亡重来机制的要点！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111103351.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/atHnu2fKtZA?si=lRluwcgfYRaeTFX2" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>从《Demon’s Souls》和《Dark Souls》的成功开始，受其影响，自 2010 年代后期起，到现在为止，高难度游戏的数量持续增加。看得出来它们互相影响、相互激发，尤其是那些包含“永久死亡”或类似机制的游戏，也就是一旦失败就必须重新开始的类型。</p><p>比如 <strong>Roguelike（类 Rogue）</strong> 和 <strong>Roguelite（轻 Rogue）</strong> 这些子类型的游戏现在也变得非常常见。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111114920.png"></p><p>顺便说一下，我来简单解释一下这两个术语的区别，算是一次友好的科普：</p><ul><li><strong>Roguelike</strong>：通常指的是像《Rogue》这样的游戏，即地下城和道具为随机生成，一旦死亡就得从头开始，且玩家与敌人轮流行动。早期 PC 游戏中，《Rogue》是一款代表作。在日本，《不可思议的迷宫》系列最为人熟知。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111114040.png"></p><ul><li><strong>Roguelite</strong>：则是包含部分上述要素的游戏。定义因人而异，但如果是动作类游戏，又带有 Roguelike 特征，那就通常被称为 Roguelite。这类游戏往往动作节奏更快、更爽快，并通过随机装备、道具或剧情变化，带来独特的游戏体验，广受好评。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505111115876.png"></p><p>总的来说，如果严格遵循《Rogue》那一套就是 Roguelike；如果只是部分使用或融入其他元素，就是 Roguelite。但即便如此，大多数人统称为 Roguelike 也没什么大问题。</p><p>话说回来，“失败就要重来的机制”非常适合独立游戏。因为从根本上说，游戏其实总是在让玩家重复类似的事情。而独立游戏往往资源有限，这种机制非常契合他们的开发方式。</p><p>不过，这里需要大家好好思考一个问题：</p><p><strong>玩家真的愿意一直不断地从头开始，玩同样的内容吗？</strong></p><p>游戏要能让玩家持续游玩，<strong>就必须给出足够的“动机”</strong>。其中最主要的动机是——<strong>我想看看后面还有什么</strong>。</p><p>而这份“想看后面”的欲望，前提是你要让玩家看到值得期待的“未来”。也就是说，游戏必须有让人想“继续探索”的吸引力。如果你无法展示这种魅力，变化也不够，玩家自然不会愿意一直重复一样的玩法。</p><p>当然，难度本身也需要合理设计。如果玩家卡在某个点太久，视野里看到的永远都是同一块场景，这本身就会让人失去动力。</p><p>像《Dark Souls》这类游戏能让人继续玩下去，是因为玩家内心有<strong>强烈想要继续前进的愿望</strong>。而且很多时候，这种愿望也来自于对 FromSoftware 和宫崎英高的“信任”。</p><p>但如果一款游戏只是复制了这种系统结构，却没能提供这种“想看到未来”的动机，那玩家根本没法坚持玩下去。</p><p>所以：</p><ul><li>到底多长时间能让玩家走到下一区域？</li><li>游戏有多少内容、怎样展开、哪些地方有厚度？</li></ul><p>这些问题，都应该因你的作品而异，<strong>不能仅仅因为别的游戏很难，你自己习惯了高难度，就理所当然地把标准套在所有玩家身上</strong>。</p><p>我自己也常玩游戏，但这种类型的作品，说实话，我经常会比较快地放弃。毕竟花同样的时间，我更愿意接触更多的游戏、获得更多新的刺激。</p><p>作为创作者，你必须好好思考——你在每一段内容中提供了多少吸引力？尤其是当玩家在同一个地方被迫反复游玩时，你是否预想到了这种状况？</p><hr><h3 id="🎯-设计高难度-重复型游戏时的关键提问"><a href="#🎯-设计高难度-重复型游戏时的关键提问" class="headerlink" title="🎯 设计高难度/重复型游戏时的关键提问"></a>🎯 设计高难度/重复型游戏时的关键提问</h3><h4 id="1-“失败重来机制”适合什么样的开发者？"><a href="#1-“失败重来机制”适合什么样的开发者？" class="headerlink" title="1. “失败重来机制”适合什么样的开发者？"></a><strong>1. “失败重来机制”适合什么样的开发者？</strong></h4><ul><li>特别适合<strong>资源有限的独立游戏团队</strong>。</li><li>因为它鼓励内容重复利用，用较少的资源延长游戏时间。</li></ul><hr><h4 id="2-玩家愿意反复挑战的前提是什么？"><a href="#2-玩家愿意反复挑战的前提是什么？" class="headerlink" title="2. 玩家愿意反复挑战的前提是什么？"></a><strong>2. 玩家愿意反复挑战的前提是什么？</strong></h4><ul><li>玩家必须<strong>看到“前方值得期待的内容”</strong>。</li><li>如果前景不明或变化太少，重复就变成了“枯燥”。</li></ul><hr><h4 id="3-设计上的核心注意事项"><a href="#3-设计上的核心注意事项" class="headerlink" title="3. 设计上的核心注意事项"></a><strong>3. 设计上的核心注意事项</strong></h4><ul><li><strong>设定合理的推进节奏</strong>：<ul><li>玩家不能被卡太久。</li><li>否则他们看到的场景和玩法始终不变，缺乏新鲜感。</li></ul></li><li><strong>持续给出前进动机</strong>：<ul><li>提前展示或暗示未来的地图、剧情、角色或装备。</li></ul></li><li><strong>不要只模仿系统</strong>：<ul><li>高难度+重复机制并非万能。</li><li>没有“期待感”的复制，会让玩家很快流失。</li></ul></li><li><strong>站在玩家角度做难度测试</strong>：<ul><li>不要以“我能过关就够了”的标准来设计游戏。</li><li>要考虑新手玩家的卡点和挫败感。</li></ul></li></ul><hr><h4 id="✅-一句话总结："><a href="#✅-一句话总结：" class="headerlink" title="✅ 一句话总结："></a>✅ <strong>一句话总结：</strong></h4><blockquote><p><strong>“让玩家重复挑战之前，先确保你的游戏值得他们‘重新开始’。”</strong><br>—— 如果没有足够的期待、魅力与变化，再强的系统也留不住人。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250502 - Arranging Music</title>
      <link href="2025/05/02/20250502-i07/"/>
      <url>2025/05/02/20250502-i07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏背景音乐的背后故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>I07 - Arranging Music</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505020940980.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/qahwb7_67f0?si=IsB1QqS258mpuJhU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>(00:01) 在《大乱斗》系列中，我们邀请众多作曲家改编了大量乐曲。具体流程如下：</p><ol><li><strong>初选阶段</strong>：<ul><li>我从各游戏原作中预选大量候选曲目（数量远超最终需求）</li><li>强调三大改编原则：<br>✓ 必须适配对战节奏（考虑 3-2-1 倒计时后音乐起始点）<br>✓ 针对老游戏短循环问题，采用「主旋律+副歌混编」结构<br>✓ 需包含情绪起伏（铺垫→高潮→可循环段落）</li></ul></li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202505020945825.png"></p><ol start="2"><li><strong>作曲家匹配</strong>：<ul><li>优先让音乐人自选有共鸣的曲目（不强制熟悉原作）</li><li>必要时根据作曲家专长指定曲风（如管弦/电子等）</li></ul></li></ol><p>(02:10)<br>3. <strong>制作监管</strong>：</p><ul><li>通过专业音效总监传递修改意见（避免非专业术语干扰）</li><li>重点把控：<br>✓ 节奏精度（标准时长：普通模式 2 分钟/特别模式 2 分半）<br>✓ 主旋律辨识度（必须保持「随口哼唱即原曲」的还原度）<br>✓ 情绪递进（参考《星球大战》主题曲的恒定统一性）</li></ul><ol start="4"><li><strong>质量守则</strong>：<ul><li>杜绝「改编变改毁」现象（吸取游戏改编 CD 的失败教训）</li><li>保留循环点灵活性（可在前奏/尾奏任意位置设置）</li></ul></li></ol><p>最终成果体现在《大乱斗》庞大的音乐库中，下期将分享制作中的技术难题解决方案。</p><ol start="2"><li>方法论总结（音乐改编黄金准则）：</li></ol><p>【游戏音乐改编四步框架】</p><p><strong>STEP 1 选曲标准</strong></p><ul><li>建立 3 倍于需求的候选曲库</li><li>标记原曲特征：<br>◉ 循环长度（短于 30 秒需重组结构）<br>◉ 情绪曲线（标注高潮段落时间码）</li></ul><p><strong>STEP 2 作曲家协作</strong></p><ul><li>双轨制分配：<br>→ 70%曲目由音乐人自主选择<br>→ 30%关键曲目定向分配（隐藏专长匹配表）</li><li>提供「改编圣经」文档：<br>✓ 强制规范：主旋律音符不得修改<br>✓ 禁止事项：避免爵士化等风格突变</li></ul><p><strong>STEP 3 技术规范</strong></p><ul><li>时间轴模板：<br>│0:00-0:03│ 空白（适配倒计时）<br>│0:04-0:30│ 强化主旋律记忆点<br>│1:50-2:00│ 淡出+循环头衔接</li><li>动态密度要求：<br>每 20 秒需包含明显情绪转折</li></ul><p><strong>STEP 4 品控流程</strong></p><ol><li>盲测筛选：组织非音乐组员工识别原曲</li><li>游戏场景测试：<ul><li>在 8 人乱斗模式下检验清晰度</li><li>确保不会因音效覆盖导致旋律丢失</li></ul></li><li>多版本备份：保留激进/保守两种改编方案</li></ol><p><strong>避坑指南</strong><br>⚠️ 老游戏音乐处理：</p><ul><li>FC 时代短循环曲：插入过渡小节延长至 45 秒</li><li>MIDI 音源曲：保留原始音色至少 30%</li></ul><p>这套方法论尤其适用于需要统一性的系列作品（如《拳皇》《最终幻想》重制版），核心在于「让老玩家耳熟能详，新玩家不觉违和」的平衡艺术。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250427 - A13 - Broad Input, Broad Output</title>
      <link href="2025/04/27/20250427-a13/"/>
      <url>2025/04/27/20250427-a13/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解作为创意工作者保持输入和输出习惯的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>A13 - Broad Input, Broad Output</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504271418160.png" alt="|415x213"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/VGsxpvJ4IfM?si=qjo_x7UoCA5BKi9l" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>关于创意工作者的输入输出方法论</p><p>(00:03) 对于导演等创意工作者而言，想要持续产出优质作品，必须建立「广泛的输入与输出管道」。输入是吸收外部刺激，输出是释放个人创造，这两者都需要培养成日常习惯。</p><p>我的输入方式主要是大量体验游戏和影视作品：</p><ul><li>坚持玩大量游戏（即使忙碌也会抽时间）</li><li>比起深度通关单个游戏，更注重广泛接触不同作品</li><li>但会通过查看结局来把握当代游戏的内容规模基准</li></ul><p>输出实践案例包括：</p><ul><li>持续 18 年 9 个月的周刊专栏连载</li><li>开发期间在日报页面分享行业见闻</li><li>通过 Twitter「今日一图」发布开发中的截图</li><li>制作本系列视频也是输出环节</li></ul><p>(01:09) 关键认知：</p><ul><li>输入形式因人而异（不必强求游戏形式）</li><li>重点在于「深度反刍」而非信息过手（避免左耳进右耳出）</li><li>保持输入输出的活跃循环才能激发创造力</li></ul><hr><p>【创意工作者输入输出系统搭建指南】</p><p>▌输入侧（保持管道粗壮）</p><ol><li>量 &gt; 质原则</li></ol><ul><li>每月设定最低接触量（如 10 款游戏试玩/5 部电影）</li><li>建立快速评估机制（前 30 分钟判断是否深入）</li></ul><ol start="2"><li>领域跨界策略</li></ol><ul><li>20%时间接触非本行业内容（如建筑师可研究音乐专辑视觉设计）</li></ul><ol start="3"><li>结构化记录</li></ol><ul><li>用 Evernote 等工具建立「灵感银行」分类标签（如「关卡设计参考」「叙事技巧」）</li></ul><p>▌输出侧（强制形成肌肉记忆）</p><ol><li>建立输出节奏</li></ol><ul><li>每日：工作群分享 1 个行业动态</li><li>每周：整理 3 条可复用的设计启示</li><li>每月：公开 1 篇分析文章（无需完美）</li></ul><ol start="2"><li>低成本输出形式</li></ol><ul><li>开发日志截图+一句话洞察</li><li>语音备忘录记录即时想法（后期转文字归档）</li></ul><ol><li>设置输出 KPI</li></ol><ul><li>季度目标：完成 X 次对外分享</li><li>年度目标：积累 Y 篇深度分析</li></ul><p>⚠️ 注意事项：</p><ul><li>警惕「消费错觉」（刷剧≠有效输入）</li><li>输出不必追求完整度（未完成的设计草图也有价值）</li><li>定期清理无效输入源（退订低质量资讯）</li></ul><p>这套系统特别适合需要持续创新的游戏导演/设计师，核心在于将被动接收转化为主动生产循环。初期可先从「5:1输入输出比」开始训练（每接触 5 个作品强制输出 1 条分析）。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250420 - N10 - Kid Icarus - Uprising</title>
      <link href="2025/04/20/20250420-n10/"/>
      <url>2025/04/20/20250420-n10/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Kid Icarus - Uprising 诞生的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201011208.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/p-uwRfckTs4?si=_hCYX1FjkbTFm-VQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>(00:03) 在《任天堂明星大乱斗 X》 [[Smash Bros. Brawl]] 后续工作告一段落后， [[岩田聪 Iwata Satoru]] 社长在任天堂 3DS 尚未公布时便下达了两个特殊任务：一是从外部视角提供 3DS 硬件使用建议，二是开发专属游戏。这在任天堂内部史无前例，为此我多次往返京都总部。关于游戏开发的具体构想：任天堂并未限定游戏类型，考虑到当时 DS 主推的”触摸世代”（Touch Generations）系列更偏向休闲娱乐，我决定反其道而行——为硬核玩家打造内容扎实的 3DS 作品。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201026402.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201036178.png"></p><p>(01:05) 裸眼 3D 是 3DS 的核心特性，因此必须突出景深表现。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201037748.png"></p><p>最终选定 TPS（第三人称射击）为基础框架，但创新性地拆分为两个阶段：空中轨道射击（固定路线高速移动）和地面自由战斗。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201038654.png"></p><p>传统 FPS/TPS 已有成熟范式，我们像用《大乱斗》革新格斗游戏那样，尝试通过下屏触控（如滑动操作）带来新体验。主题选定为《光之神话》是后期决定，写在企划书末尾。岩田社长曾表示若契合新企划，可考虑使用任天堂角色。最终选择该 IP 因其自 1986 年后鲜有新作，且在海外有大量粉丝诉求。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201104111.png"></p><p>(02:08) 核心创意是让不会飞的天使 Pit 借助女神 Palutena 施予的”5 分钟飞行奇迹”投入战斗，形成”空中射击→地面近战”的独特循环。为此专门成立临时公司”Project Sora”进行开发。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201105084.png"></p><p>关键设计要点：空中战采用固定路线轨道射击，避免传统 TPS 同时处理移动/瞄准/射击对新手的高门槛；配合场景变化的动态音乐增强沉浸感。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201106130.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201107260.png"></p><p>地面战则针对掌机特性放大敌人体积（杂兵也有 Pit 的 4.5 倍大小），并活用滑垫的弹射输入实现冲刺和紧急回避——这套操作体系继承自《大乱斗》经验。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201108434.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201108502.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201109044.png"></p><p>(05:18) 瞄准系统创新：触控屏模拟轨迹球操作，快速滑动实现灵敏瞄准，拖拽则进行微调。攻击系统简化为单按钮自动切换射击/格斗模式。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201113085.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201114180.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201115164.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201116744.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201119429.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201118792.gif"></p><p>虽然后期 3DS 扩展摇杆上市，但因会导致 5%性能损耗而放弃支持。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201119323.png"></p><p>叙事方面摒弃过场动画，采用实时广播式对话（整体保持原作诙谐风格），并设计了三方势力混战（美杜莎军团、自然之神部队、外星入侵者等）来丰富武器神器的背景设定。108 种神器各自拥有独特属性（影响速度/攻击方式等），通过收集和强化形成深度玩法。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201120953.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201124370.gif"></p><p>(09:35) 独创的”天使狩猎”在线模式：玩家携带神器参战，阵亡会扣减团队点数，最后阵亡者变身为强力天使角色（攻防核心目标）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201125591.png"></p><p>AR 卡片（AR Card）功能不仅可查看角色，还能实现实体卡牌对战。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504201125482.png"></p><p>开发过程异常艰难：早期 3DS 性能不稳定，团队协作也因跨部门合作频发摩擦。尽管成品堪称杰作且值得登陆大屏幕，但临时团队已解散使得续作开发渺茫。下个项目将回归 [[Smash Bros. for 3DS/Wii U]] 开发。</p><ol start="2"><li>方法论总结：</li></ol><p>【创新性游戏开发执行框架】</p><ol><li>硬件特性深度挖掘</li></ol><ul><li>围绕裸眼 3D 设计多层次景深战斗场景</li><li>触控屏开发双模式瞄准系统（轨迹球式滑动+精细拖拽）</li></ul><ol start="2"><li>操作体系革新</li></ol><ul><li>拆分复杂动作为两阶段（轨道射击→地面 TPS）</li><li>移植成熟 IP 操作经验（如《大乱斗》的弹射输入）</li><li>单键自适应攻击（根据距离自动切换远程/近战）</li></ul><ol start="3"><li>内容设计策略</li></ol><ul><li>角色比例重构：放大敌人模型适配掌机小屏</li><li>动态音乐系统：按战斗阶段同步切换 BGM</li><li>叙事轻量化：实时广播对话替代过场动画</li></ul><ol start="4"><li>多人模式创新</li></ol><ul><li>“天使狩猎”不对称对抗规则</li><li>AR 实体化玩法（卡牌对战延伸游戏生命周期）</li></ul><ol start="5"><li>开发风险管理</li></ol><ul><li>成立专项临时团队规避组织惯性</li><li>性能红线设定（拒绝超过 5%负荷的外设支持）</li><li>模块化开发：先建立空中/地面独立系统再整合</li></ul><p>注：适用于需要融合多品类要素的创新项目，重点在于建立清晰的体验分层（如本作的空中/地面阶段划分）和操作简化（将复杂输入转化为直觉操作）。跨 IP 协作时建议优先选择有粉丝基础但开发空白期的经典 IP。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250413 - Games During My Childhood</title>
      <link href="2025/04/13/20250413-m17/"/>
      <url>2025/04/13/20250413-m17/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解樱井小时候与游戏结缘的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>M17 - Games During My Childhood</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504131107514.png"></p><hr><blockquote><p>本次是一次闲聊内容，我想聊聊我小时候是怎么接触游戏的。这完全是聊天性质的话题。</p></blockquote><p>我最早接触电子游戏的记忆，是那种类似《Pong》（乒乓）的游戏，需要用电位器拨动拨杆操作的类型。用手转动旋钮，电视里的东西就会跟着动，而且画面还闪闪发光——对小时候的我来说，这种体验令人震撼。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504131111001.png"></p><p>1978 年左右，正值《Space Invaders》（太空侵略者）风靡全国，我当时七八岁。热潮快结束时，街机游戏种类已经非常丰富了。我来聊点本地的事情：我们当地有家叫“忠实屋”的超市，每逢周日，我们一家人都会去那里采购。</p><p>一到超市，爸妈会给我 200 日元，我就握着这 200 日元直奔游戏区。爸妈去买东西，我去玩游戏。那时候，孩子自己行动是很正常的事——现在看来也许有点夸张了。用这 200 日元，我可以玩四次 50 日元的游戏，所以每次都要仔细挑选哪一款最想玩。</p><p>玩完之后，我就去玩具区逛，那儿有各种游戏主机展示，我也乐在其中。差不多等爸妈买完东西，就来接我回家了。</p><p>顺便一提，那家“忠实屋”现在已经变成了“the Marketplace 东大和”购物中心。</p><p>我们也会去附近的大城市立川，那里的商店和游戏厅规模都更大。我有时候也会用零花钱去那的游戏厅玩。</p><p>此外，那时候百货商店等地方经常临时举办游戏比赛或遥控车比赛，基本都能直接报名参加。有时我会参加两个比赛，满手抱着奖品回家。看起来我游戏水平还不错。</p><p>当时还有不少商店展示电脑和 PC 游戏，虽然那时我还买不起电脑。直到高中，我才终于拥有了自己的 PC。顺便一提，日本 Falcom 公司就设在立川。当时那边是商店和开发室共用的空间，开发现场从商店这边都能看见，这在现在几乎不可想象。虽然我没有盯着看，但那可能是我第一次真实接触到游戏开发的场景。</p><p>1983 年，红白机（Famicom）发布了，震撼之大自不必说。但在那之前，其实就已经有很多种游戏存在。</p><p>红白机发布前后，不管是街机、家用主机、还是 PC 游戏，各自都百花齐放。那是一个五光十色的时代。每过一年技术就有大进步，成长速度飞快，带来的刺激真的难以想象。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504131114477.png"></p><p>当然我也不是只玩游戏，那时候各种娱乐方式都很多，各有各的乐趣。小时候喜欢的东西、感受到的快乐，会在长大后深深影响一个人的思维方式。</p><p>如今我成了一名游戏开发者，或许正在影响着某个素未谋面的孩子的童年。这种传承感很奇妙。</p><p>有本叫《コロコロコミック》（CoroCoro Comic）的日本儿童杂志，在 2019 年的调查中，最受欢迎的爱好是电视游戏，而最受欢迎的游戏则是《Super Smash Bros. Ultimate》（任天堂明星大乱斗 特别版）[[Smash Bros. Ultimate]]。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504131115274.png"></p><p>这本杂志正好是我小时候创刊的，那时候我怎么也不会想到自己未来会从事娱乐相关的工作。时代更替，真的很有趣。</p><p>现在的孩子们玩什么，是否也会影响未来的游戏？这我也说不好。</p><p>不过，我最初感动于电视画面里“发光发亮的东西会动”的那个瞬间，而现在的小朋友一开始就接触到高度复杂的游戏，不知道他们又会作何感想呢？</p><p>——就这样，这就是我小时候关于游戏的闲聊啦。</p><hr><h4 id="从个人童年经验提炼的游戏观察与设计启示"><a href="#从个人童年经验提炼的游戏观察与设计启示" class="headerlink" title="从个人童年经验提炼的游戏观察与设计启示"></a>从个人童年经验提炼的游戏观察与设计启示</h4><ol><li><strong>感官刺激的初体验非常关键</strong><ul><li>最初打动我的，是画面中的亮光与直接操控的感受。这提醒我们，游戏的“第一感动点”非常重要，尤其是在儿童用户中。</li></ul></li><li><strong>“场所感”与游戏体验的绑定</strong><ul><li>在超市、百货、城市商圈这些具体场景中玩游戏，使游戏变成了生活的一部分。这表明游戏不仅存在于屏幕，也在空间中发生。设计线下联动或沉浸式体验时，可借鉴这种“场景游戏感”。</li></ul></li><li><strong>零散但反复的短时体验塑造了深刻记忆</strong><ul><li>每次玩游戏只有几百日元，却能不断回忆、沉浸，这说明“短频高感”的游戏体验同样可以留下长久印象。</li></ul></li><li><strong>游戏与成长相互塑造</strong><ul><li>儿时的游戏经验塑造了我后来的创作方向。开发者应意识到：自己的作品或许正深刻影响着某个孩子的未来观念。</li></ul></li><li><strong>快速迭代的技术环境能放大创意的刺激感</strong><ul><li>当年技术一年一个台阶，极大刺激了想象力和期待感。现代开发中，也应创造周期性的“跳跃式更新”，带动玩家期待和探索欲。</li></ul></li><li><strong>展示开发过程、拉近玩家关系</strong><ul><li>小时候“透过玻璃看到开发室”的经历令人印象深刻，这种“半透明的开发过程”可以降低距离感。现在可以用 Dev Diary、直播开发等方式来实现。</li></ul></li><li><strong>代际传承的重要性</strong><ul><li>小时候玩到的游戏，长大后成为开发者；现在做的游戏，又可能影响下一代。这提醒我们，做游戏不是“一次性产品”，而可能是跨代记忆的媒介。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250406 - Daily Report Suggestions</title>
      <link href="2025/04/06/20250406-e06/"/>
      <url>2025/04/06/20250406-e06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解日报的好处！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202504061032210.png"></p><p><strong>1. 简洁通俗的中文翻译（保留专有名词）：</strong></p><p>从《大乱闘スマッシュブラザーズX》（即 [[Smash Bros. Brawl]] 《Super Smash Bros. Brawl》）时期开始，我就养成了一个习惯：每天在团队内部写一份“日报”。这份日报不对外公开，只在团队内部阅读。不管是工作日还是加班，只要是有工作的一天，我都会写。</p><p>像我后来在 Twitter 上分享的「今日一图」，其实最初就是我每天在团队中发的一张截图开头的。接着，我会写三到五个话题。这些话题可能是项目的最新进展、工作内容的检查清单、Bug 报告，有时也会写一些批评意见。不一定都是传达工作的内容，也可能是我玩了某个游戏的感想、当天发生的事情、一些个人想法等，算是“随笔”。</p><p>每个话题下，团队成员都可以评论，因此我们之间的交流变得很频繁。</p><p>这份日报带来了很多好处。首先，我的初衷之一是希望让团队更了解我。因为我本身不属于某个固定的公司团队，通常是以“外来者”的身份加入项目。一个不知从哪儿来的陌生人突然来发号施令，对团队成员来说难免让人心里别扭。但如果他们每天读我的日报，起码就不再是“完全不知道这人是谁”。</p><p>其次是信息共享。就算我们用邮件群发重要信息，其实很多人也不会认真看。但日报页面每天都有变化，反而有更多人会主动来看，所以比起邮件，它的信息传达效果更好。比如有一次在 Smash Bros. 团队内部，我打算在下午五点通过日报页面发布新角色的消息——是 Sephiroth 的那次。结果访问量太大，居然把服务器挤爆了——而且是在只限团队内部的页面哦！</p><p>第三是对我个人来说的输出训练。每天习惯性地写点什么，是一种锻炼……不对，应该说是让输出成为一种“习惯”，变成自然的一部分。尤其是作为导演（Director），有强大的输出能力几乎是必备的。</p><p>再来，就是每天给团队带来一点小刺激。我每天写的内容都不一样，所以对于那些每天重复性工作的团队成员来说，或许能带来一些启发或者新的思考。</p><p>最后一个好处是方便了解项目进展。团队变大之后，每个人都在忙着做游戏的某个“零件”，很容易忽视整体。通过日报能看到其他人正在做什么，是件很重要的事。像我每天贴出的那张「今日一图」，一开始就是为了让大家看到最新的开发进展，帮助全体掌握整体状况。当然，我也会在其他话题里单独放图。</p><p>也有些人自己也写小日报，记录当日成果和一些小总结。这种做法能传达出他们的个性，其实也很重要。</p><p>这类日常交流，有助于打造一个“空气流通”的开发环境，非常推荐。而且我们在团队组建初期，也设立了类似“意见箱”的东西，团队成员可以自由发布“我想这样做”或者“我不想这样做”的建议，这也很有用。</p><hr><p><strong>2. 实际可用的方法论总结：</strong></p><p><strong>《团队日报制度：一种高效、透明、温度感十足的管理实践》</strong></p><p><strong>核心目标：</strong><br>不是单纯记录工作，而是建立“持续沟通、理解彼此、共享情报、稳定节奏”的机制。</p><p><strong>具体做法：</strong></p><ol><li><strong>每日坚持（日常化输出）</strong><ul><li>工作日、加班日均需撰写。</li><li>每天贴一张「今日一图」（截图/进度图），再附上 3～5 个话题。</li></ul></li><li><strong>话题内容灵活组合：</strong><ul><li>项目进展（新内容、决策通知等）</li><li>检查清单 / Bug 报告</li><li>个人杂感（游戏体验、当天想法）</li><li>允许随笔型内容，保持人性化与温度</li></ul></li><li><strong>开放评论，促进互动：</strong><ul><li>团队成员可以对每个话题留言、讨论</li><li>鼓励日常对话，增加非会议场景下的协作频率</li></ul></li><li><strong>输出训练（特别适用于管理者）：</strong><ul><li>不是为了“锻炼”，而是将表达变成日常操作</li><li>Director 级角色尤其需要具备强输出习惯</li></ul></li><li><strong>信息共享替代邮件：</strong><ul><li>邮件往往被忽视，日报页面每日有新内容，访问率高</li><li>可用来预告关键事件（如角色发布），并测试反应热度</li></ul></li><li><strong>打破“异物感”，构建认同感：</strong><ul><li>对“外来者型领导者”尤其有效</li><li>让成员每天了解你、熟悉你、信任你</li></ul></li><li><strong>激活团队氛围（微刺激）</strong><ul><li>给重复性工作注入“新鲜感”</li><li>鼓励思考、发现、转变视角</li></ul></li><li><strong>促进“全景认知”与“人格交流”：</strong><ul><li>通过图片与内容了解全局进展</li><li>鼓励其他成员也写，展现每个人的风格与判断</li></ul></li><li><strong>建立意见反馈机制：</strong><ul><li>设定“我要这样做 / 不想这样做”的反馈入口</li><li>打开双向沟通通道，增加团队共同治理感</li></ul></li></ol><p><strong>一句话总结：</strong><br>团队日报不是单纯的管理工具，而是一种「低成本、高密度、有情感」的团队驱动力机制，适合任何渴望打造信任感与共享文化的创作型组织。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250330-L03-Game Demos</title>
      <link href="2025/03/30/20250330-l03/"/>
      <url>2025/03/30/20250330-l03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解制作 Demos 的收益和挑战！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="L03-Game-Demos"><a href="#L03-Game-Demos" class="headerlink" title="L03 - Game Demos"></a>L03 - Game Demos</h2><ul><li>L03 - Game Demos</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503301149455.png" alt="|415x213"></p><p>(00:03) 制作游戏试玩版（Demo）是非常有效的营销手段。因为大多数玩家对未接触过的游戏缺乏认知，让产品被知晓总比默默无闻强。即使开发者觉得已经传达了大量信息，对普通玩家而言依然不够。试玩版的用户友好度很高，玩家可能会疑惑：”为什么不多出些试玩版？” 但实际试玩版开发需要远超想象的巨大工作量——绝不是简单截取游戏前段内容就能完成，其难度甚至堪比开发一个完整的小型游戏。</p><p>(01:08) 发售前发布的试玩版必须严防剧透风险。如果试玩版日志文件包含正式版的关键剧情线索，一旦被玩家解析就会造成灾难。必须细致筛查所有文件内容，但精准识别每个文件的具体内容并删除敏感信息极其困难。从试玩版完成的那一刻起，开发团队就要同时维护正式版和试玩版两个独立版本，这意味着双倍的更新、调试和管理压力。试玩版作为对外发布的产物，其调试标准必须接近正式版水平。由于删除了部分游戏元素，试玩版更容易出现运行故障，且未完成的平衡性调整可能导致玩家负面评价——虽然试玩版比没有好，但差评泛滥会打击其他玩家的兴趣。</p><p>(02:12) 若想实现与正式版相同的平衡性，只能在游戏发售后推出试玩版，但此时营销效果已大打折扣。试玩版开发会严重挤压本就紧张的开发资源。虽然通过删减正式版内容制作试玩版更省力，但会降低推广效果。近年全球游戏展会盛行，现场试玩版虽制作辛苦，但优点是无需长期维护用户端版本。随着在线下载试玩版成为常态，其营销价值依然显著。但游戏体量日益庞大复杂，试玩版制作难度持续攀升。是否制作试玩版取决于发行商和开发商的策略，但不可否认：让玩家知道总比不知道好。</p><ol start="2"><li>方法论总结：</li></ol><p>【游戏试玩版开发实施指南】</p><ol><li>资源评估先行</li></ol><ul><li>立项前核算开发成本：试玩版开发需投入相当于完整小型游戏的资源</li><li>预留双版本维护成本（人力/时间）</li></ul><ol start="2"><li>风险管理措施</li></ol><ul><li>防剧透处理：建立敏感内容筛查流程，逐文件审核剧情/系统数据</li><li>技术防护：对试玩版日志文件进行脱敏处理，移除调试信息</li></ul><ol start="3"><li>版本控制策略</li></ol><ul><li>同步开发：从试玩版立项即建立独立版本库</li><li>双线调试：制定试玩版专属 QA 标准（接近正式版水平）</li></ul><ol start="4"><li>发布时机选择</li></ol><ul><li>追求平衡性：建议正式版发售后推出（牺牲部分营销时效性）</li><li>展会专用版：制作短期展示版本，规避长期维护压力</li></ul><ol start="5"><li>内容设计原则</li></ol><ul><li>避免简单截取：需专门设计独立体验模块</li><li>平衡性预调整：即使删减内容也要保证基础玩法合理性</li></ul><ol start="6"><li>效果监控机制</li></ol><ul><li>设置舆情监控：及时收集试玩版反馈，防范差评扩散</li><li>数据埋点：统计试玩版转化率，验证投入产出比</li></ul><p>注：适用于 3A 级或玩法复杂的游戏，中小型项目需根据实际资源量力而行。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250323 - G09 - Squashing and Scaling</title>
      <link href="2025/03/23/20250323-g09/"/>
      <url>2025/03/23/20250323-g09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 scaling 的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231113606.png" alt="|404x209"></p><p>G09 - Squashing and Scaling</p><p>【动画中的挤压与缩放（Squashing and Scaling）】<br>(00:04) 在动画中，模型的放大缩小被称为 Scaling（缩放）。在计算机图形学中，多边形模型及其运动本质上由三个基础要素构成：Scaling（缩放）、Rotation（旋转）和 Translation（平移）。</p><p>不要低估了 scaling 的效果，它可能为结果增色不少！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231135394.gif"></p><p>当制作球体弹跳动画时，例如这个简易 GIF，虽然普通版本尚可，但结合 Scaling 缩放后效果截然不同——质感显著提升，甚至能传递出物体的触感。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231138438.gif"></p><p>(01:09) 这种扁平化缩放被称为 Squash &amp; Stretch（挤压与拉伸），它能有效增强物体的质感与动势。实现这类动画时需遵循”质量守恒”原则：纵向压缩时横向应同步扩展。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231139989.png"></p><p>例如《星之卡比》的下蹲和落地动作，若仅简单扁平化会显得单薄，需通过椭圆形轮廓保持体积感（类似像素动画的处理方式）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231140340.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231140672.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231145203.gif"></p><p>(02:12) 马里奥出拳时的放大属于夸张表现手法，与此类基础形变不同。当动画表现力不足时，不妨尝试强化 Scaling 的应用。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503231141735.png"></p><ol start="2"><li>方法论总结：</li></ol><p>动画质感提升四步法</p><p>1️⃣ <strong>基础形变三要素</strong></p><ul><li>始终围绕 Scaling（缩放）、Rotation（旋转）、Translation（平移）构建基础运动</li></ul><p>2️⃣ <strong>挤压拉伸原则</strong></p><ul><li>物体受冲击时：纵向压缩（Squash）+ 横向伸展（Stretch）</li><li>保持体积守恒（如：压扁高度 20%则拓宽宽度 20%）</li></ul><p>3️⃣ <strong>细节量感控制</strong></p><ul><li>避免简单扁平化：通过椭圆轮廓/混合形状（Blend Shape）保留边缘体积感</li><li>参考案例：星之卡比落地时采用椭圆形变形而非纯垂直压缩</li></ul><p>4️⃣ <strong>动态强化技巧</strong></p><ul><li>夸张表现法：对关键帧进行适度放大（如马里奥出拳时拳头尺寸增大）</li><li>质感暗示：通过形变传递材质特性（弹性/重量/柔软度）</li></ul><p><em>实践工具建议</em></p><ul><li>2D 动画：逐帧调整关键点缩放比例</li><li>3D 动画：使用混合形状控制器/骨骼驱动形变</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250316 - The Fun in Picking Sides</title>
      <link href="2025/03/16/20250316-c14/"/>
      <url>2025/03/16/20250316-c14/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏竞技中选边的乐趣和重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>C14 - The Fun in Picking Sides</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503161028816.png" alt="|351x182"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/A_A4tgLIXO4?si=NBs9CVdP82f3eWCw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>(00:03) 我不太看体育比赛，因为本身不容易兴奋。我清楚原因在于自己并不特别支持任何队伍。像奥运会这样有祖国需要支持的情况稍有不同，但即使对手国家表现出色，我也会由衷敬佩。反过来说，要真正享受观赛乐趣，首先需要选择支持某一方。同理，在存在对抗胜负的场合，从一开始就有明确支持对象会更令人激动。任天堂明星大乱斗的在线观战模式中，可以给预测的胜者下注小额点数。虽然有些微线索，但毕竟素不相识的玩家对战，根本无法准确预测胜负。</p><p>(01:05) 不过实际上这些点数本身价值不大，也不构成有效激励。它更多是作为”选择支持对象”这种微小动机的载体。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503161033404.png"></p><p>在知名选手方面，电竞产业培养明星选手是件好事。虽然如果同样的选手总是获得同样的结果会是个问题，但任何能让玩家感到兴奋的要素总是好的。</p><p>建议在需要营造感染力的作品中，应该构建能让玩家选择支持阵营的环境。值得一提的是，大乱斗的观战支持系统经过了各国法规审核，为避免涉及赌博元素进行了反复调整，这个过程其实相当不易。</p><p>说到类似赌博的机制，社交游戏中的扭蛋系统或许有值得借鉴之处。</p><p>(02:08) 即使是类似的随机获取机制，让玩家从 2-3 个选项中自主选择，或通过合理权重设计来替代完全随机，都能获得更好的体验反馈。[音乐]</p><ol start="2"><li>方法论总结：</li></ol><p>▌观众参与度提升方法论<br>① 立场选择机制</p><ul><li>强制观众在初期选择支持阵营</li><li>通过小额投注系统（非货币化积分）强化代入感</li><li>典型案例：格斗游戏观战模式中的预测下注</li></ul><p>② 明星效应运用</p><ul><li>培养具有辨识度的明星选手/角色</li><li>建立选手背景故事与用户的情感联结</li><li>电竞领域的选手 IP 化实践</li></ul><p>③ 随机性改良设计</p><ul><li>将纯随机机制转化为有限选择（2-3 个选项）</li><li>通过可视化权重影响用户心理预期</li><li>案例延伸：扭蛋系统可改良为”三选一保底”机制</li></ul><p>④ 合规性构建要点</p><ul><li>区分游戏内积分与现实货币价值</li><li>避免直接对应现实赌博形式</li><li>地域化调整：根据各国法规设计差异化的激励呈现方式</li></ul><p>▌设计原则<br>情感锚定 &gt; 随机概率：通过建立用户与阵营/角色的情感连接，将胜负体验转化为故事性叙事，比单纯的概率刺激更具持久吸引力。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250309 - Maps Are Game Screens Too</title>
      <link href="2025/03/09/20250309-d09/"/>
      <url>2025/03/09/20250309-d09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏小地图的不同处理方法以及考虑玩家注意力的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>Masahiro Sakurai on Creating Games - D09 - Maps Are Game Screens Too</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503091135002.png" alt="|650x334"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/-Fhj07C1ou0?si=32eXtuo7PvHZwq7e" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>(00:03) 玩过各种游戏后，我常深切感受到：我们其实是在地图界面上玩游戏。虽说是漫步在 3D 空间，但视线总被角落的小地图绑架——明明主画面辽阔壮美，实际却盯着方寸之地操作，总觉暴殄天物。平面俯瞰尚可应付，立体空间的表现则尤为棘手。像 [[Subnautica]] 那样需要表现三维地形的作品，全局地图的识别度与操作流畅度如何平衡？频繁切换全屏地图毕竟恼人，但这不该成为放弃思考的借口。谈及地图处理，[[Shiren the Wanderer]] 系列让我印象深刻</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503091136904.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503091137083.png" alt="|415x201"></p><p>(01:07) 该系列采用半透明全局地图覆盖主画面，按键即可切换纯净地图模式。虽非万能设计，却是革命性的启示：与其强化地图功能，不如增加主画面的信息密度。比如 [[极限竞速 Forza Horizon]] 等竞速游戏的引导系统，即使不看小地图，也能通过弯道曲率提示预判路线。即便不采用此法，通过环境叙事暗示关键位置——建筑排布、地貌特征等视觉语言，同样能达成空间引导。思考玩家的视觉焦点分布本就是重要课题，洞悉玩家认知规律更是核心要义</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503091139455.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503091140212.png"></p><p>(02:12) 这个充满启示的命题，或许值得在游戏创作中持续探索</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250302 - Family BASIC</title>
      <link href="2025/03/02/20250302-k05/"/>
      <url>2025/03/02/20250302-k05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Family Basic 这一让樱井进入游戏行业的契机！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="K05-Family-BASIC"><a href="#K05-Family-BASIC" class="headerlink" title="K05 - Family BASIC"></a>K05 - Family BASIC</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021101207.png" alt="|408x210"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/89_FhHQ5n-g?si=hUBOukpIiHD-6vEj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>Family BASIC [编程与技术] - YouTube<br><a href="https://www.youtube.com/watch?v=89_FhHQ5n-g">https://www.youtube.com/watch?v=89_FhHQ5n-g</a>  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021102982.png"></p><p>(00:03) 我进入游戏行业的最大契机是接触了 Family BASIC。这就是实机——Family BASIC！现在看键盘真是超小啊。1984 年 6 月，FC（红白机）问世约一年后推出的这款外设，通过连接 FC 主机就能将其变成游戏电脑。这台实机的白色部分是我自己喷漆的，多漂亮啊。和 FC 主机一样，白色部分会随着岁月发黄。而这款 Family BASIC 的 RAM 容量只有 2KB，也就是 0.002MB，打满约 2000 字符就塞满了。即便在当时也实在太小了。  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021103703.png"></p><p>(01:08) 但它有个绝佳功能——充分发挥了 FC 特性。好久没启动过了，想看运行效果吗？能启动吗？[音乐] 通电成功！开始运行啦！先按键盘按钮试试。「我是 FC 主机，不是 Family BASIC 哦。」这机器开机总会先问名字之类的。哇这键盘现在看太小了吧！小到都不知道怎么按。按「开始」后选「GAME BASIC」会显示「你好」，试试看效果。  </p><p>(02:12) 输入「你好」，结果出现「您看起来气色不错，虽然睡了 30 多年但精神很好嘛」。机器正常运作中（虽然只是说了句你好）。要占卜吗？虽然想玩但太花时间了，还是先介绍 BASIC 功能吧。忘记操作了？毕竟这是上古 6502 芯片，程序动不动就崩溃也正常。这电脑的反应真不像现代设备，希望能保存程序别被删掉。总之先进入 BASIC 模式。  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021106638.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021106311.png"></p><p>(03:17) 原来如此！Hudson 公司开发的 HUBASIC 有着惊人功能——专门为 FC 定制的精灵控制指令。试试看：6 行代码就能让角色移动！执行后效果是这样的（展示角色流畅移动）。「MOVE」指令超厉害，用简单命令就能控制角色动作。具体解析：10-20 行负责精灵和 CG 初始化，循环语句定义移动轨迹。DEF MOVE 指令设置角色参数，0 号角色是马里奥，改成 1 号会变成配色古怪的女士（需调整调色板参数才能正常显示）。  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021110795.png"></p><p>(04:22) 8 个方向预设动作是精髓。比如马里奥的攀梯、跳跃、行走动作只需调用不同参数。虽然自由度不高（仅 8 方向/固定移动量），但在当时能如此便捷地控制精灵已属革命性。[音乐] 用更实用的精灵指令写了个演示程序（操作略显生疏请见谅）。运行效果：可用 FC 手柄控制角色顺滑移动！要知道当年电脑程序都是卡顿的，这种流畅度太惊艳了。  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021113682.png"></p><p>(05:27) 通过这个我学会了惯性力等物理反馈设计，后来开发《星之卡比》时都用上了。背景编辑功能虽然有限（毕竟是 FC），但也能更换调色板呈现不同风格，比如马里奥兄弟的地板、大金刚的脚手架。不过 FC 的 16x16 色块属性限制会导致拼接处颜色异常，需要手动调整位置来规避。  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202503021114043.png"></p><p>(09:51) 最厉害的是卡带背面装有两节五号电池实现存档！虽然电池供电不太稳定（滑动开关可关闭）。查资料发现，这比 1986 年《屠龙剑》早两年使用电池存档。</p><p>80 年代想用电脑做游戏对中学生太奢侈（整套 40 万日元），而 Family BASIC 只需半年零花钱。如果没遇见它，我就不会入行，也就没有卡比和大乱斗了。世界充满蝴蝶效应，动手尝试才是关键。希望这个视频能启发未来的游戏创作者！[音乐]  </p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250215 - PRESS START</title>
      <link href="2025/02/16/20250216-m16/"/>
      <url>2025/02/16/20250216-m16/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 PRESS START 游戏音乐会！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M16-PRESS-START"><a href="#M16-PRESS-START" class="headerlink" title="M16 - PRESS START"></a>M16 - PRESS START</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202502161110315.png" alt="|747x384"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/zJcPrrjFNFw?si=eNuTqboUPShDRn-U" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>从 2006 年开始，我主持了为期 10 年的每年一次的游戏音乐音乐会，这就是 <strong>Press Start</strong>。它由多种游戏音乐组成，主要是东京的演出，也曾在横滨、大阪、名古屋以及海外的上海和巴黎等地举办过。</p><p>其他的主办者包括指挥家 [[竹本泰造 Taizo Takemoto]] 先生、著名作曲家 [[植松伸夫 Nobuo Uematsu]]（_最终幻想_系列的作曲者）、卡比系列的作曲家 [[堺翔吾 Shogo Sakai]] 先生以及 <em>最终幻想 7</em> 等的编剧 [[野岛一成 Kazushige Nojima]] 先生。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202502161114161.png" alt="|408x197"></p><p><strong>(01:18)</strong><br>发起的契机是 2002 年，<em>最终幻想</em> 和 _任天堂明星大乱斗_（_Smash Bros. Deluxe_）分别举办了两场交响乐音乐会。当时两场音乐会的指挥都是竹本泰造先生。在一次聚会中，五个人围坐一桌，我们讨论到如何通过交响乐音乐会将游戏音乐更广泛地传播出去。<br>通常这种话题会在酒桌上结束，但借助音乐制作公司和赞助商 <em>Enterbrain</em> 的帮助，这个想法最终成真了。</p><p><strong>(02:24)</strong><br>Press Start 之前，[[杉山浩一 Koichi Sugiyama]] 先生曾经举办过类似的游戏音乐音乐会，也采取了类似的 _Omnibus_（杂锦）形式，并且得到了游戏公司支持。我曾经去听过他的演出，记得当时在会场上听到 <em>超级大金刚</em> 的音乐时，感觉仿佛看到巨大金刚向我冲来，那种感觉无法言喻。  </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202502161116318.png"></p><p>此外，感谢他当时为我们演奏了 <em>星之卡比 超级豪华版</em> 的音乐。那时的游戏音乐交响乐会，还是一个让人难以理解的存在。<br>杉山先生的 <em>龙之勇者</em> 的交响乐版本很经典，但并不是所有的游戏音乐都适合用交响乐来演绎。尽管如此，他推动游戏音乐地位提升的努力，值得尊敬。</p><p><strong>(03:27)</strong><br>回到 Press Start 音乐会的制作，我们首先从曲目选择开始。团队中只有我对游戏比较熟悉，所以我负责收集各种游戏的音频，大家开会时听取不同的音乐，然后进行筛选。<br>当游戏和曲目确定后，会有不同的编曲家进行交响乐编曲，将它们转化为乐谱，并经过排练最终准备好音乐会。<br>有时我们会准备游戏的画面素材，但是为了专注于音乐表演，我们通常不会过多展示原作视频内容。</p><p><strong>(04:34)</strong><br>Press Start 每次演出时基本上都能座无虚席，我觉得我们得到了不错的成绩。不过，持续举办这类活动确实面临一些挑战。每次音乐会使用的乐曲数量大约是 14 到 16 首，但如果算上每个游戏的乐曲合成曲目，整个音乐会的乐曲数量有时能达到 60 首左右。<br>考虑到我们团队的其他工作，研究这些游戏并整合它们的音乐是一项很大的挑战。<br>此外，由于版权问题，我们不能把 CD 制作出来，所以现场能欣赏的观众人数也有限。尽管如此，我一直怀着将这场音乐会持续十年的目标，最终也实现了。</p><p><strong>(04:34)</strong><br>这之后，至少在日本，游戏音乐会数量逐渐增多，游戏音乐也逐渐得到了更多的认可。我认为我们在这一领域已经完成了自己的使命。<br>然而，随着新冠疫情的爆发，现场演出面临了巨大的困难。虽然每个人的观点不同，但我想说的是，现场演奏的体验是无可替代的。<br>随着疫情的缓解，音乐会等活动将逐步恢复，我鼓励大家在机会到来时亲自去体验。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250119 - The Basics of Pixel Art</title>
      <link href="2025/01/19/20250119-f07/"/>
      <url>2025/01/19/20250119-f07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解像素艺术的基础！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="Masahiro-Sakurai-on-Creating-Games-F07"><a href="#Masahiro-Sakurai-on-Creating-Games-F07" class="headerlink" title="Masahiro Sakurai on Creating Games - F07"></a>Masahiro Sakurai on Creating Games - F07</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191054401.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/NDno0U5UxSI?si=pU9wylAdDZwdYwwK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>(00:04) 在初代 [[Kirby]] 中，我制作了像素艺术。我画了许多敌人角色和背景，其中一些也被用于 Kirby 的 Famicom 版本。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191055486.png"></p><p>如今的游戏颜色种类非常多，所以这些技巧可能不太适用，但我想简要讲解一下在色彩较少的系统中，如 [[Game Boy]] 和 [[NES - Nintendo Entertainment System]]，常用的像素艺术技巧。</p><p>在  [[Game Boy]] 和 [[NES - Nintendo Entertainment System]] 中，16x16 像素的精灵图是常用的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191057112.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191058988.png"></p><p>精灵图是屏幕上可平滑移动的图像单元。卡比本身也是 16X16 的大小。正如大家所知，16 像素宽是标准尺寸。然而，当绘制圆形时，你会发现 15 像素的圆形实际上看起来比 16 像素的圆形更好。</p><p>(01:08) 对比这两者，你会发现 15 像素的圆形更接近真实的圆形，因为它能保持中心对称轴。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191059908.png"></p><p>这在做建筑物或其他元素时也有帮助。如果是在像素较粗糙的游戏中，推荐使用奇数宽度来保持更好的对称性，这样会更精确，非常实用。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191059177.png"></p><p>如果只有黑白两色，你可以通过添加轮廓然后在图像上加高光来改变纹理，使其看起来像气泡。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191100701.png"></p><p>添加材质会让其看起来更加扁平而不是更加圆润。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191101427.png"></p><p>但将材质进行翻转可以一下子让其感觉不一样。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191101016.png"></p><p>也可以将图形填充为黑色并添加高光，就能让它看起来像个金属球。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191102306.png"></p><p>即使是最简单的形式，也能表达出丰富的内容。</p><p>(02:11) 如果你能使用更多的颜色，添加渐变效果将变得可能。这对于更精细的表现非常重要。对于反射材料（如金属），在地面上加上反射的光泽效果也很有效。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191103774.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191103590.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191104835.png"></p><p>通过从边缘使用渐变，图像会变得更加平滑。当然，这取决于背景色。</p><p>我目前分享的只是像素艺术的基本入门知识。不过，在制作动画时，这个过程会变得更加有趣和富有魅力。</p><p>顺便说一句，你知道在 [[Kirby’s Adventure]] 版本中，卡比获得复制能力时会稍微变胖吗？正如你所见，卡比的色调也会发生一些变化。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501191105373.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250112 - Explain Ideas to Everyone at Once</title>
      <link href="2025/01/12/20250112-e05/"/>
      <url>2025/01/12/20250112-e05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解向大家一起传达理念的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="E04-Explain-Ideas-to-Everyone-at-Once"><a href="#E04-Explain-Ideas-to-Everyone-at-Once" class="headerlink" title="E04 - Explain Ideas to Everyone at Once"></a>E04 - Explain Ideas to Everyone at Once</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501121141730.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/CafmzxRBo4Y?si=QVYyKIyoUNtMoPU_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>对于《新·光神话 帕尔提娜之镜》这款游戏的开发过程，我有一些反省。  </p><p>举个例子：<br>我作为导演，为了实现某个要素，会先把想法传达给企划（策划）。然后，企划再把这些内容告诉程序员。结果却常常出现，最终产出的东西或理解方向，与我的预期完全背道而驰，简直偏离了 180 度。</p><p>《新帕尔提娜》的开发体制有点像一个“大杂烩”，各个开发成员的文化背景差异非常大。我过去那一套指示和沟通方式，很多时候都无法得到理想的效果，所以也让我非常头疼。</p><p>于是，从自制的 [[Smash Bros. for 3DS/Wii U]] 《任天堂明星大乱斗 for Nintendo 3DS / Wii U》（通称“スマブラ4”）开始，我推行了一种新的机制——只要是和某个要素相关的人员，全部都要一起听我对那个要素的说明或建议。</p><hr><p><strong>（01:09）</strong><br>举例来说，当我要审定“战斗角色 Inkling（墨水 ling）”的必杀技规格说明时，以往只要告诉策划就可以。但现在，需要与 Inkling 相关的策划、程序、美术建模、动作、特效、音效等所有工作人员及其负责人全部到场，一起听我讲解。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501121145727.png"></p><p>我座位周围有一个小广场，还配有能够投放开发机或电脑画面的超大显示器。一旦要进行说明或审定，工作人员就会围坐在那里，一般大约 30 人，多的时候可达 50 人。即使和  这个项目部分不直接相关的人员，也允许自由观摩。</p><p>我会一边操作显示器一边用麦克风来讲解，结束后还会接受提问。此外，像战斗角色、建模、美术设计、场景、动作、颜色等相关团队也会定期开会，让所有关联人员到场做集中检查或审定。</p><hr><p><strong>（02:12）</strong><br>这样做还有一个好处：大家不止能看到自己负责部分的检查，也能了解其他部分的工作是如何被审查、确认的，从而互相借鉴。其实，在 [[Smash Bros. for 3DS/Wii U]] 之前，我们就开始采用类似的方法。</p><p>虽然这种方式会让各位成员多花一些时间，表面上看似乎有点浪费，但它的效果非常显著。每个人都能更深入地理解设计初衷和意图。当对规格或表现产生疑问时，不管身处哪个岗位，也都能清楚该往哪个方向努力。</p><p>此外，对于那种规模庞大的项目，团队成员常常会迷失在自己负责的小块工作里。这种做法有助于让整体沟通更加顺畅。我个人非常推荐，而且工作人员的评价也不错。</p><hr><p><strong>（03:15）</strong><br>题外话，在这个让大家集合开会的小广场里，我一直备有各种零食。由我亲自购买并补充库存，方便团队随时取用。可是在启用远程办公之后，就一直没能继续了。对了，这个零食篮子里最多的是 Bourbon 的产品，Bourbon 真的相当好吃啊！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250105 - 利用 Deepseek 结合 Obsidian Web Clipper 实现快速剪藏及内容总结</title>
      <link href="2025/01/05/20250105-use-obsidian-clipper-with-deepseek/"/>
      <url>2025/01/05/20250105-use-obsidian-clipper-with-deepseek/</url>
      
        <content type="html"><![CDATA[<h2 id="想法来源"><a href="#想法来源" class="headerlink" title="想法来源"></a>想法来源</h2><h3 id="以前的稍后读的问题"><a href="#以前的稍后读的问题" class="headerlink" title="以前的稍后读的问题"></a>以前的稍后读的问题</h3><p>其实做剪藏（将感兴趣的文章收集起来，期望稍后阅读）的习惯由来已久。之前的 workflow 是这样的：</p><ul><li>一般是在网页/公众号/知乎等平台看到了感兴趣的文章</li><li>分享到微信文件传输助手</li><li>之后需要手动回顾和微信文件传输助手的聊天记录，并将它们手动归类放到 Notion 中</li><li>（有空的时候）阅读然后总结到 obsidian 中</li><li>（有需要的时候）查看对应主题的多篇文章</li></ul><p>上述 workflow 的问题在于：</p><ul><li>发给文件传输助手后还需要手动回顾聊天记录<ul><li>如果中间还传了别的东西，就很难回顾</li><li>并且印象中一次只能多选 100 条消息，消息多了之后可能出现需要反复上下翻的情况</li></ul></li><li>虽然确实在 Notion 中有了一个多分类的资源库，但问题在于确实很多时候会发现没空阅读的情况，而且确实在资源一多之后，再选择要读什么时还是一样的大海捞针的局面</li></ul><h3 id="新的工作流"><a href="#新的工作流" class="headerlink" title="新的工作流"></a>新的工作流</h3><p>由此，便有了今天的这篇文章，其中会介绍新的 workflow：</p><ul><li>在网页中看到感兴趣的文章</li><li>在 chrome 中点击 obsidian web clipper 插件</li><li>等待 AI 总结完成后，再次点击一次，就会直接存储到 obsidian 库中</li></ul><p>这样省去了大量的中间步骤，并且也可以通过快速预览 AI 帮助总结的要点来决定是否要深入阅读。</p><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="DeepSeek"><a href="#DeepSeek" class="headerlink" title="DeepSeek"></a>DeepSeek</h3><p>正好在最近 DeepSeek 推出了最新的模型 v3，表现很不错，而且价格也很实惠。</p><h4 id="注册-登录-充值"><a href="#注册-登录-充值" class="headerlink" title="注册 登录 充值"></a>注册 登录 充值</h4><p>进入 <a href="https://www.deepseek.com/">官网</a>，注册登录后，来到<a href="https://platform.deepseek.com/top_up">充值页面</a> 按需充值，可以使用微信或支付宝哦！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051445420.png"></p><h4 id="获取-API"><a href="#获取-API" class="headerlink" title="获取 API"></a>获取 API</h4><p>之后来到 <a href="https://platform.deepseek.com/api_keys">API 页面</a> 创建一个新的 API，记得先暂时存下来，后面要用到。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051446207.png"></p><p>至此，deepseek 部分的操作就完全结束啦。</p><h3 id="Obsidian-Web-Clipper"><a href="#Obsidian-Web-Clipper" class="headerlink" title="Obsidian Web Clipper"></a>Obsidian Web Clipper</h3><h4 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h4><p>这里以 Chrome 为例，进入 <a href="https://obsidian.md/clipper">官方网站</a> 后可以直接将插件一键添加到插件栏中：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051434600.png"></p><p>之后点击插件栏中的对应 icon 就可以打开对应的设置页面。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051436182.png"></p><h4 id="配置-template"><a href="#配置-template" class="headerlink" title="配置 template"></a>配置 template</h4><p>其中重要的配置个人认为是 template：<br>这里也将 <a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051438625.json">我的 template</a> 分享出来，大家可以按需修改（可以下载后选择 new template 然后 Import 就可以直接导入了）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051518983.png"></p><p>和 default 相比，我稍微做了一些更改：</p><ul><li>更改了 Vault (这个可能需要去 General 里面进行设置)</li><li>Properties<ul><li>删去了一些我觉得没有必要的部分</li></ul></li><li>Note content<ul><li>这里在前面添加了两个部分用于让 AI 进行文章内容总结<pre class="line-numbers language-none"><code class="language-none">&#123;&#123;&quot;a summary of the page, translate to Chinese&quot;&#125;&#125;&#123;&#123;&quot;key facts of the page in chinese&quot;&#125;&#125;---&#123;&#123;content&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="配置-API"><a href="#配置-API" class="headerlink" title="配置 API"></a>配置 API</h4><p>这其实是想写这篇文章的真正原因，因为这里的配置会有一些出乎自己意料的部分… 也就是坑，写出来希望能帮助大家节省一些时间~</p><p>来到 Interpreter 页面。</p><p>要注意下面的 Behavior 中的 Automatically run 如果打开，之后使用时就会直接自动调用 API 进行总结了。如果想减少开销，这里可能要考虑关闭，然后手动触发。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051455040.png"></p><h4 id="Providers"><a href="#Providers" class="headerlink" title="Providers"></a>Providers</h4><ul><li>这里 Provider 记住选择 <code>OpenAI</code></li><li>Base URL<pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;api.deepseek.com&#x2F;chat&#x2F;completions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>API key<ul><li>填写在前一步操作中得到的 API key</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051451660.png"></p><h4 id="Models"><a href="#Models" class="headerlink" title="Models"></a>Models</h4><ul><li>Provider<ul><li>OpenAI</li></ul></li><li>Display name<ul><li>v3<ul><li>这里其实你写什么应该都可以，只是用于区分</li></ul></li></ul></li><li>Model ID<pre class="line-numbers language-none"><code class="language-none">deepseek-chat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051452165.png"></p><p>至此配置就完成啦！</p><h2 id="试用"><a href="#试用" class="headerlink" title="试用"></a>试用</h2><p>以 <a href="https://mp.weixin.qq.com/s/0Ue2tN8Xxp1ESyddGOUlEg">刘书亮 | 重新思考游戏研究中的心流理论——以“魂系”游戏为切入点</a> 为例，在页面中点击插件 icon，就会看到下面的窗口：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051456896.png"></p><p>在其运行完之后就会看到：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051457181.png"></p><p>再点击 <code>Add to Obsidian</code> 就可以在自己的库中的 <code>Clippings</code> 文件夹中找到它了！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051457075.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然还有一个步骤稍显繁琐（比如需要把页面转到 chrome 中打开），但将 AI 纳入工作流中确实极大加快了效率，但那么剩下的事情就只有在 ob 中将内容整合到自己的知识体系中了（这又是 <a href="https://medill-east.github.io/2023/08/26/20230826-how-i-know-and-practice-pkm/">PKM</a> 的话题了）！</p>]]></content>
      
      
      <categories>
          
          <category> PKM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PKM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250105 - Game Writing is Unique</title>
      <link href="2025/01/05/20250105-c13/"/>
      <url>2025/01/05/20250105-c13/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏叙事的独特性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C13-Game-Writing-is-Unique"><a href="#C13-Game-Writing-is-Unique" class="headerlink" title="C13 - Game Writing is Unique"></a>C13 - Game Writing is Unique</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051023830.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ssvIEm_2mYM?si=-9gwrpFmaFSqDM5W" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>[00:03]<br>游戏的剧本（情节设计）与一般媒体的剧本创作有很大的不同。正因为这些差异，我们也能“反其道而行之”，做出一些更具新意的呈现方式。不过在说明如何利用这些不同点之前，我想先介绍其中四个主要差异。</p><p><strong>第一点</strong>：对想「玩游戏」的人而言，剧情本身有时会变成一种干扰。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051027236.png"></p><ul><li>对想看故事的人来说，长篇的过场动画当然很棒，但如果这些过场动画一直在播放，迟迟不让玩家进入游戏，尤其是动作类游戏时，就会让人有些心烦。</li><li>当然，我们也可以设置跳过选项，但玩家若跳过剧情，又会担心自己看不懂故事主线，所以这部分需要仔细权衡。</li></ul><p><strong>第二点</strong>：游戏基本上是以「主角视角」展开。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051028218.png"></p><ul><li>在漫画等其他媒体中，在故事进展的同时插入伙伴或反派 Boss 的背景故事，已经算是王道（常见）的展开，但在游戏里，这种表现形式不一定合适。</li></ul><p>[01:11]<br><strong>第三点</strong>：如果故事围绕着主角与敌方势力战斗展开，那么主角通常需要是一直“往上爬”、不断胜利的存在。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051029182.png"></p><ul><li>很多人都曾遇到过，明明在战斗中赢了，结果在剧情中却被强行判定为输了，这种不合理的情节会让人感到不快。</li><li>也就是说，如果剧情的需求让玩家努力获得的成果付诸东流，会带来很大的压力与挫败感。</li></ul><p><strong>第四点</strong>：伙伴在剧情中死亡或脱离队伍这类做法，在其他媒体中很有效果，但在游戏中却会带来许多麻烦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051029943.png"></p><ul><li>例如队伍组成临时被打乱，或者物品和装备无法继承等等，这些都会对游戏的玩法和系统造成影响。</li></ul><p>以上四点既是游戏剧情设计中的难题，也代表了它与其他媒体不同的特性。<br>当然，我们也可以故意无视这些“定式”，把它们直接带进游戏里，尽管会让玩家感到不快，但也有可能因此而让剧情更令人印象深刻。</p><p>然而就当下的游戏作品而言，玩家其实不一定会非常投入去追剧情。若我只能强调一件事，那就是：  </p><p>[02:16]<br><strong>最好在一开始，就让玩家马上进入游戏</strong>，而不是从一开始就用很长的序章来叙述故事。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202501051031465.png"></p><ul><li>简洁地把玩家丢进游戏世界，然后再慢慢补充剧情细节，也许更合适。</li></ul><p>例如在《新・光神话 帕尔提娜之镜》（[[Kid Icarus - Uprising]]）中，关卡刚开始，主角立刻就通过一道门，游戏也随之马上开始。</p><ul><li>按照一般类型的设计流程，或许会先有一段「任务简报」之类，说明这关的目标和背景。但在《新帕尔提娜》中，玩家是一边玩游戏，一边才听到任务的说明。</li><li>在过去，大家可能更倾向于“游戏时间越长越好”，但现在更推荐“干脆利落地把玩家带进游戏”。</li></ul><p>本作的剧本是我在正式开发前就事先写好的。我努力让剧本和游戏的特色相辅相成，呈现出能发挥游戏优势的剧本与演出方式。  </p><p>[03:20]<br>在《新・光神话 帕尔提娜之镜》（[[Kid Icarus - Uprising]]）的开发中，这种做法算是成功运用了游戏的利点，我也认为这对整体呈现非常有帮助。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241222 - Branching Tastes</title>
      <link href="2024/12/22/20241222-a12/"/>
      <url>2024/12/22/20241222-a12/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解细分市场与主流市场的选择！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>A12 - Branching Tastes</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412221142641.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/50Khnf80P7M?si=aAlmWwT5fUoCJrce" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>在开始之前，希望大家能理解“想法多种多样”这一点。人们确实具有多样性，不过在年轻的时候，这种差异可能还不太明显。</p><p>即使笼统地说“玩游戏的人”，他们的风格和经验也很不同。至少，完全以同样方式玩同一个游戏的人，在整体中应该是很少的。</p><p>有人一直购买家用游戏机的实体游戏包装，有人只玩特定的社交游戏，有人玩的是基于位置的游戏（location-based），有人夜以继日地在 FPS 等对战型游戏中激烈竞争，也有人使用 VR 沉浸在虚拟世界中，还有人为维持健康而玩游戏，也有人每天都在 MMORPG 中与伙伴见面，还有人主要在 PC 上疯狂体验各种独立游戏。</p><p>即使都称作“玩游戏”，做的事情也大不相同；即便都是游戏粉丝，其本质也各有不同。</p><hr><p>在昔日的红白机时代，与现在相比，大多数人玩的内容其实都差不多。后来，随着价值观的多样化，游戏也像分枝一样向各处扩展开来，大家各自找到了自己喜欢的领域。不过这次想谈的，并不是怀旧的话题。</p><p>任天堂的作品，尤其是销量前几名的作品，卖得都特别好，对吧？在全球范围内都很强势。至少在日本，总是占据销量榜首。为什么呢？当然作品本身质量很高，但它们在硬件技术上并不一定是最前沿的。如今的游戏机和表现、处理等方面都已经相当出色，所以不存在太大的技术优势。  </p><p>[[樱井政博]] 认为，任天堂作品之所以如此畅销，其中一个原因是它们能抓住年轻群体的喜好。</p><p>随着人成长，价值观会不断多元化。每个人都会因为不同的经历、文化背景、各种机遇或契机，而分化出不同的“分支”。不过顺着这些分枝走得越远，自然就会越“细”，受众会越来越小。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412221148591.png"></p><p>但是，在分枝出现之前的“主干”却是非常粗壮的。如果把年轻人视作处于这个“主干”上的阶段，那么就很容易理解，尚未产生细分分枝的市场是很大的。而且他们在那个时期所体验的东西，如果恰好当时出现了符合时代需求的新产品，那么就有可能代代相传。</p><p>本次想说的，并不是“任天堂的作品为什么会畅销”。这里面还有更多的原因。但放在游戏制作领域，在广泛的价值观之下，想要瞄准哪个方向时，不能只凭自己的好恶，而是应该从更高的角度去思考。这大致就是我想表达的内容。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412221149932.png"></p><p>普适性的东西、王道类型的内容往往更容易获得成功，或许正是因为系列作品能够符合人们已形成的价值观。另外，那些“细分市场”，的确可以说是小众。但如果只有最末端的那群人才能狂热地享受，也当然是存在这种可能性的。所以并不是说要大家全都只走“大路”。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412221150379.png"></p><p>只要有意识，其实就能更好地做定位。这就是这次所想表达的一个简单想法。  </p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241215 - J06 - Menus Define Your World</title>
      <link href="2024/12/15/20240721-j06/"/>
      <url>2024/12/15/20240721-j06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏的界面风格！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="J06-Menus-Define-Your-World"><a href="#J06-Menus-Define-Your-World" class="headerlink" title="J06 - Menus Define Your World"></a>J06 - Menus Define Your World</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151052674.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/pivfg2DrFfY?si=SOX8XldigY37S8Dc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>即使游戏性和内容完全相同，仅通过改变 UI 和字体的使用方式，也能完全改变目标用户群体。</p><p>例如，即便是表达相同功能的内容，通过加入酷炫的设计，可能让成年人也愿意尝试；或者展现一种可爱的风格，营造恐怖氛围，甚至打造明亮而华丽的效果。也可以塑造出类似电幻世界的感觉、日式风格、西方风情、中式主题，南亚风情等等。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151056486.png" alt="可能对成年人有吸引力的视觉风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151057584.png" alt="更可爱的风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151058341.png" alt="恐怖的风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151058870.png" alt="明亮耀眼的风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151058913.png" alt="电子风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151059219.png" alt="日式风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151059069.png" alt="维多利亚风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151100325.png" alt="中式风格"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151100172.png" alt="南亚风格"></p><p>相比设计角色和背景，通过改变字体来传达世界观是比较轻松的一种方式。<br>不过，实际情况中，有时需要从零开始制作字体，因此也不能说是完全省事。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412151102862.png"></p><p>实际上，字体的改变往往需要和图标、背景壁纸等其他元素结合考虑。尽管如此，字体和 UI 对于塑造整个世界氛围的效果依然是巨大的。在保持可读性的同时，[[樱井政博]] 认为应该积极地进行设计。</p><p>字体和 UI 不仅是世界的组成部分，更像是让世界“成为一体”的工具。<br>不仅仅是字体本身，其颜色和装饰也是非常重要的。</p><p>现如今的整体设计风格似乎更倾向于简洁清爽，但字体本身依然值得我们继续关注！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241208-Canceled Games</title>
      <link href="2024/12/08/20241208-m15/"/>
      <url>2024/12/08/20241208-m15/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解未公布的项目！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M15-Canceled-Games"><a href="#M15-Canceled-Games" class="headerlink" title="M15 - Canceled Games"></a>M15 - Canceled Games</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412081021541.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/5Ob9OA0peQY?si=Qyr0n1XjQpqAMNbD" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>有很多游戏开发了一半，但从未向全世界发布过，作为一名开发者，我也看到和听到过很多游戏在向公众公布之前就被取消了。</p><p>这些游戏，有的甚至没有公开发布过消息，却在玩家不知情的情况下悄然逝去，玩家知道后可能会感到震惊。项目取消对谁都没有好处，所以应该尽量避免。而且当你花了几个月甚至几年时间开发的游戏无法在更大范围内发行时，你一定会非常伤心。</p><p>但另一方面，如果你是在为一家公司工作，即使你没有完成任务，你也会得到报酬，除非这家公司倒闭了，在这种情况下，真正受到取消或推迟开发影响的是这家公司。</p><p>哪怕是取消一个项目，也可能会让公司陷入绝境。而取消的原因很多时候是因为公司的维护成本太高了。这不仅意味着公司开不下去了，也包括资金紧张时会放弃一些潜在利润更低的项目。停止开发的决定往往基于未来成本与预期利润之间的平衡。当然了，最终的利润可能会更好，但如果不是有明显的预兆或理由，很难对此有乐观的估计。开发过程到最后成本是最高的，需要测试、宣传，人力也最多。取消项目是有关止损的决策，如果不觉得能成功，那最好还是尽早停止。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412081036001.png"></p><p>适当撤出也是正确的商业决策，开发者也必须意识到停止开发的风险和可能性。 至少，你不该假设即使每个人完成了各自的工作你就能成功。团队成员越能意识到最终的游戏中需要些什么，那么大家就更有可能掌握最终的结果。所有人需要携手向前，所以才能达成有建设性的进展。</p><p>虽然有数不清的游戏成功上线了，有更多的游戏从未出现在人们眼前就已经消亡了。基于这样的前提，我们应该为每一个成功上线的项目感到高兴和感激。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241201 - Don&#39;t Rely on a Plan B</title>
      <link href="2024/12/01/20241201-a11/"/>
      <url>2024/12/01/20241201-a11/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解提案撰写的深度优先原则！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>A11 - Don’t Rely on a “Plan B”</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202412011155291.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/QgkLrqGrwy4?si=KN-2S5eNUIXvI6tp" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>当撰写提案或是设计文档时，你可能会对于使用什么样的规格参数来推进抱有疑问。</p><p>在方案 A 和 B 之间，哪种方案可行性更高？哪种方案对于玩家来说更好玩？将这个决策留给他人当然省时省力，这就是为什么在很多提案和文档中你会看到“或者我们也可以这么做”，然后让两种可能性都留存。但其实在具体的提案中，最好直接将备选方案直接剔除。审视全局，并且挑选你觉得最合理的方案。</p><p>基于当前情况肯定会有一个最合适开始的方案，应该基于此来进行调整，这样会得到比起“差不多”而言更好的效果。为了实现这一点，你需要听取团队的大量意见，并且保持开放的心态来对待这些意见。</p><p>提案的撰写者应该以该提案的理想情况来撰写，如果遇到问题，大家应该作为一个团队来共同解决。你可能最终会回到最开始你所想的方案 B 上，但是在提案阶段，重要的是坚持观点并且展示你已经对其进行的充分思考。这也是一种创造良好体验的方法。</p><p>在此之上，游戏导演通常也需要考虑程序实现性和开发效率等问题。但无论如何，提案是游戏的骨架，不要不停地调整其形状，确保其稳固坚实！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241124 - Super Smash Bros. Brawl</title>
      <link href="2024/11/24/20241124-n09/"/>
      <url>2024/11/24/20241124-n09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Super Smash Bros. Brawl 诞生的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N09-Super-Smash-Bros-Brawl"><a href="#N09-Super-Smash-Bros-Brawl" class="headerlink" title="N09 - Super Smash Bros. Brawl"></a>N09 - Super Smash Bros. Brawl</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411241510890.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/dXpFTHtlmCo?si=iC_5hhyTvC48xvRB" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>在 [[Nintendo Wii]] 发表之后的一天的 2005 年 E3 游戏展上，[[岩田聪 Iwata Satoru]] 找到了 [[樱井政博]]，希望他能够为 [[Nintendo Wii]] 开发一款 [[Smash Bros.]] 的系列作品。其中的细节，以及团队是如何组建的暂且按下不表。但樱井想提的是，当时他已经是自由职业状态，如果当时他拒绝了这份工作，任天堂可能会把 [[Smash Bros. Melee]] 中的 26 名斗士原封不动地移植到 [[Nintendo Wii]] 上，这是 [[岩田聪 Iwata Satoru]] 当时说的。<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411241521827.png"></p><p>在 [[Smash Bros. Brawl]] 的概念中有两个关键的部分：联网支持和单人模式。</p><p>[[Nintendo Wii]] 有内置的联网功能，所以 [[Smash Bros. Brawl]] 能够支持联网很重要。虽然 [[樱井政博]] 个人的想法是 [[Smash Bros.]] 系列并不是那么契合联网玩法。[[Smash Bros.]] 其中一个最好的点就是能在朋友间成为冠军，但如果胜负都是在网络上实现的，可能会打击玩家的信心。并且，游戏需要使用完全同步通信技术——每个玩家的每个输入都会即时反映到所有玩家的屏幕上。比起在 [[Mario Kart]] 中见到的异步通讯技术而言，完全同步是个难题。你可能最终只能和离你最近的那些玩家匹配上，所以最好而言能不仅仅只是和自己国家的玩家进行匹配，而是和相邻区域的玩家进行匹配。此外，网络延迟也会让游戏表现得不尽如人意。然而，当涉及到技术问题时，樱井个人的看法倒反不那么重要，如果需要做，那么就做。谁知道呢，可能克服问题的过程也很有趣。</p><p>实际上，当真的实现了网络对战功能时，他心里想的是“哇，没想到真的能行啊”。</p><p>另一个关键的部分是添加相对较长的单人游玩模式，最终给予那个模式的名字是 [[The Subspace Emissary]]，这也是游戏终局的重要组成部分。</p><p>它拥有 cutscenes 以及一个引人入胜的故事，一张地图，基于贴纸的增益系统 sticker-based powerups，以及电影式结局。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411241536726.png" alt="sticker-based powerups"></p><p>将 [[Smash Bros.]] 中的一个简单斗士纳入一个令人玩起来心满意足的单人训练场中是一项艰巨的挑战，他们也想借此机会让角色变得更加有血有肉一些。</p><p>在 [[Smash Bros.]] 中游玩的大部分时间，玩家都是在控制一个很小的斗士与其他斗士作战，但将如此多的品类和系列角色放到一起的一个游戏而言，这显得有些浪费。樱井想让每个角色都有在聚光灯下闪亮的机会。但也如你所想，这将耗费很多的精力和工作。</p><p>不同的舞台、敌人、过场动画… 几乎就像是制作一个全新的游戏。</p><p>在策划阶段，樱井曾希望是由除了主要开发团队之外的团队来开发，但最终因为没有办法找到合适的合同而作罢了。所以，除了过场动画之外，所有的内容都是由 [[Smash Bros. Brawl]] 团队内部完成的。</p><p>顺带一提，这也是开发团队首次突破 100 人。</p><p>在开发中也发现，需要为 [[The Subspace Emissary]] 模式中设置特殊的跳跃和移动参数。直接把斗士从对战模式中进行移植的效果并不好，所以做了各种调整。这意味着每个增加的斗士，其实都有着两套需要微调的参数。这些最终都是樱井的工作，非常有挑战。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411241546241.gif"></p><p>在 [[Smash Bros. Brawl]] 中还有另一个新的元素—— [[Final Smashes]]。如果仅仅只是有一个更强力的攻击，其实可以通过简单地添加一个物品来实现这一点，但是因为想要切实地加强每一个角色，所以每个斗士都有其独特的攻击方式。虽然制作并不容易，但樱井很高兴看到每一个斗士都有机会来更多地展现自己。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411241548709.png"></p><p>并且也引入了 [[Assist Trophies]]，当时通过精灵球来召唤宝可梦已经为人所知，这也意味着可以从其他的任天堂作品中借用角色。实际上，原地进行召唤也是游戏的 [[push and pull]] 的一部分。</p><p>另一个独特特性是 My Music Option。以超级马里奥为例，每一代玩家其实都有他们最熟悉的作品，音乐也是如此。看起来只用一首音乐来代表一个游戏世界有一些浪费，所以他们也开发了一套系统以应用更多的歌曲库。这也给了樱井一个机会来组建他心目中的游戏作曲家的“梦之队”。</p><p>另一个特性是从外部公司中借用的客串斗士—— Snake 和 Sonic。实话讲，这个对樱井要做的工作没有什么影响，因为于他而言，任天堂也是外部公司。</p><p>所以，樱井和最开始的创作者进行了联系，与他们沟通了他的意图，并试图在原作的角色和即将在 [[Smash Bros. Brawl]] 中登场的角色的新形态之间找到合适的平衡点。</p><p>另一点要提的是，[[Smash Bros. Brawl]] 是非常快节奏的游戏，所以想要完全掌握并不简单，这也对初学者不那么友好。非常高的控制自由度对于顶尖玩家或者观众而言是好事一桩，但对于休闲玩家而言就有些折磨了。甚至让一些喜爱竞技的玩家得了腱鞘炎（别骂了别骂了呜呜）。这虽然也代表着游戏很不错，但另一个程度上也算一个痛点。</p><p>[[Nintendo Wii]] 是一款主要面向休闲玩家的主机，所以樱井觉得不应该让其像 [[Smash Bros. Melee]] 那么硬核，并且需要让其也能够通过 [[Wii Remote]] 游玩。</p><p>也存在一些只有在联网时才会出现的丢帧问题，输入密度越高，丢失的帧可能越多。所以当时在制作时也稍微控制游戏的速度偏慢一些，也更偏向休闲玩法一些。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411242026189.png"></p><p>这也是第一次引入了 play tester，即通过游玩来帮助团队进行斗士平衡的专职人员（一共有四人）。他们当然算不上大家说的职业水平的玩家，并且樱井还是负责斗士参数的调整。</p><p>[[Nintendo Wii]] 和 [[Nintendo DS]] 世代通常以 [[Touch! Generations]] 等作品闻名。与之相比，像 [[Smash Bros. Brawl]] 这样的格斗游戏作品，即使已经是偏向休闲的玩法，学习曲线仍然会显得比较陡峭，但团队已经尽力，从而让尽可能多的玩家都能享受其中。</p><p>排除 [[Wii U]] 和 [[3DS]] 的捆绑销售，[[Smash Bros. Brawl]] 是整个 [[Smash Bros.]] 系列中销量第二高的作品。如果最开始甚至都没有制作这款游戏，这甚至可能意味着人们现在所熟知的 [[Smash Bros.]] 系列会就此终结。</p><p>下一次该系列的视频会介绍的游戏是 [[Kid Icarus - Uprising]]。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407072136575.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/b3Fd8pBK0EA?si=0XJMOhJB71glA3Rj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>在 [[樱井政博]] 所有开发的游戏中， [[Sodatete: Kouchuu Ouja Mushiking]] 是开发团队最小的，这是一个为很小的手持设备开发的电子游戏。<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140917088.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140918957.png"></p><p>以前，在日本有一种发售于 2003 年的，需要插卡的街机游戏被称为 [[Kouchuu Ouja Mushiking]]。当投入 100 日元后，机器会打印出一张印有犀牛或甲虫的卡片，将这张卡片放到读卡的部分，就可以让卡牌上的角色互相战斗。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140919175.png" alt="Kouchuu Ouja Mushiking"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140922523.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140925721.png"></p><p>战斗的规则就是石头剪刀布。每一个角色精通三种能力中的一种，让游戏具有 [[push and pull]] - 是要以角色的强势技能出招呢，还是出其不意使用其他技能呢，这都取决于你能否读懂对手。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140927065.png"></p><p>对于年轻观众和海外观众而言可能有些无法想象，但 mushiking 在当时非常火爆，特别是在低年级的小学生群体之中，虽然成年人也有玩的。</p><p>樱井当时与此结缘是因为当时在 [[世嘉 SEGA]] 的 [[竹岐忠 Tadashi Takezaki]] 联系了他。 [[竹岐忠 Tadashi Takezaki]] 当时在 [[世嘉 SEGA]] 是非常出名的员工，现在是一家名为 [[TMS Entertainment]] 的动画公司的 CEO，樱井和他现在也还是好朋友。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140945794.png"></p><p>[[竹岐忠 Tadashi Takezaki]] 最开始的要求包括将当时火爆的电子宠物和甲虫王者结合。 [[Sodatete: Kouchuu Ouja Mushiking]] 的创意大致和樱井当时所做的提案一致，现在就让我们一起看一看！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140946986.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140959230.png"><br>建议去原视频里看一看，非常有趣！</p><p>在宠物游戏中，不同的成长阶段的能力会变得不同，所以在设计时避免让玩家无法回避战斗。并且为了强调养成感，也有一些特殊设定，比如比起狼吞虎咽，樱井他们选择让甲虫慢慢享用。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407141009352.png"></p><p>喜爱度，喜欢或者不喜欢，物品，疾病，训练，疲劳，变异，展示，告别，逃跑… 在这个小小的设备中有很多特性。</p><p>如果在早晨，角色还在睡觉时将其叫醒，它会调整它的时间表来配合你的叫醒时间，这只是其中一个隐藏特性。</p><p>[[樱井政博]] 在 2005 年的日本春节期间写了这个提案，在之后不久的 E3，樱井就被联系让其制作 [[Smash Bros. Brawl]]，同时制作两个项目真的很有挑战。</p><p>在当时，樱井也在远程工作，这在当时被称为 SOHO - small office/ home office。樱井只和核心成员在 [[世嘉 SEGA]] 总部进行过几次当面会议。在此之外，他们都是通过邮件和在线沟通来推进项目直到完成。</p><p>题外话，编程是由 [[Dragon Quest III]] 和 [[Dragon Quest IV]] 的主程序 - [[内藤宽 Kan Naito]] 完成的，他非常厉害。</p><p>这个游戏是在一块不足一平方米的定制开发板上开发的 - 我们把电路板固定在一块普通的旧木头上面。因为开发和 [[Smash Bros. Brawl]] 的开发相冲突，樱井得在忙别的时候把板子收起来，其实并不是很方便。</p><p>在完成之前，樱井都没有机会在手持设备上进行实机测试，正因如此，在最后的版本中存在一个问题 - 可能是因为处理速度的差别，角色比预期中饿得更快，这使得它几乎随时都想要吃东西，给玩家带来了一些预期之外的压力。樱井对此表示非常遗憾。</p><p>至于游戏的核心，樱井觉得还是非常有趣的，IR-Link 战斗也非常有意思。</p><p>因为 mushiking 已经存在，樱井不用为这个项目再过多构想 [[push and pull]]，但他很高兴他有机会为小型电子设备创建一款作品。</p><p>系列视频的下一部，便是在这期里面提到的同时期开发的作品 - [[Smash Bros. Brawl]]。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241123 - 情感化游戏设计系统 - 3 - BOSS 战设计框架</title>
      <link href="2024/11/23/20241123-emotional-game-design-system-3-boss-fight-design-structure/"/>
      <url>2024/11/23/20241123-emotional-game-design-system-3-boss-fight-design-structure/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411242058969.JPG"></p><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>在开始一个 BOSS 的设计时有些摸不着头脑，所以正好借助 <a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">情感化游戏设计系统 EGDS</a> 对 BOSS 战的设计框架进行了拆解分析，以此作为 BOSS 战设计的底子，从而做到有的放矢。</p><h3 id="内容汇总"><a href="#内容汇总" class="headerlink" title="内容汇总"></a>内容汇总</h3><ul><li>视频<ul><li><a href="https://www.bilibili.com/video/BV1tjB1YVEey/">bilibili 链接</a></li></ul></li><li>PDF<ul><li><a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411231611505.pdf">BOSS Fight Design Structure - Slides</a></li></ul></li><li>BOSS 战设计框架问题一览表<ul><li><a href="https://op45siya8y.feishu.cn/sheets/YgLhse9bXhcTr8txrY8c4GXTnye?from=from_copylink">飞书链接</a></li><li><a href="https://docs.google.com/spreadsheets/d/1yipv0Am1Dk4ZiX6DlhYviKBkLRpEVbwDhYM9nv9Nk2w/edit?usp=sharing">Google Sheets</a></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>需要指明的是，即使回答了所有的问题，也并不意味着 BOSS 战的设计就完全结束了，只是通过回答这些问题，可以帮助设计师更好地“开始”。在后续过程中也需要结合故事版等其他方式来进一步对设计进行细化。</p><p>感谢您的阅读，欢迎大家批评指正！ </p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><ul><li><a href="https://medill-east.github.io/2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/">20240413 - 情感化游戏设计系统 - 0 - 从叙事结构出发</a></li><li><a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">20240414 - 情感化游戏设计系统 - 1 - 构建系统</a></li><li><a href="https://medill-east.github.io/2024/04/28/20240428-emotional-game-design-system-2-intrinsic-feeling-exploration/">20240428 - 情感化游戏设计系统 - 2 - 探索感作为感性感受如何被纳入系统中进行分析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241117 - Voice Recording</title>
      <link href="2024/11/17/20241117-i06/"/>
      <url>2024/11/17/20241117-i06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解角色语音的录制流程！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>I06 - Voice Recording</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411171027842.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/C3ANiCI1Em4?si=gyko5hd4fvlL-zN4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>即使有很多人为此工作，创造一个单独的斗士也需要花费很长的时间。每个斗士都至少代表着一年的工作，包括 tuning 在内，甚至可能一直调整至发售。由此，你也可以想象，负责的团队成员对此投入了多长的时间。<p>但是对于 [[Smash Bros.]] 而言，斗士的语音录制一般只需要一个小时左右。即使是有着斗士登场或是故事短片，一般也不会超过两个小时。虽然过程本身很快，但这些直接融入游戏的声音能被玩家直接感知。所以，今天这期内容会介绍一些有关语音录制的细节~</p><ol><li>Casting 选角 - 谁来承担哪位斗士的语音</li></ol><p>在 [[樱井政博]] 近期的很多作品中的角色其实已经有其配音演员，所以这部分不用那么操心。通常会尽量采用原作中的配音演员，但如果一个角色在游戏的新系列作品中已经有过重新选角的情况，也有可能会选择新的配音角色。</p><ol start="2"><li>Script Prep - 准备台词</li></ol><p>通常，会直接在游戏文档中以水平方式书写文本。但日本的配音脚本是以竖向文本排列，从右至左阅读。</p><p>每一个语气词都需要呈现，以被录制。所有的必须动作，比如攻击，跳跃，受击反馈等都需要被包括在内。对于特殊的动作，重击，角色登场台词等也都需要被录制。</p><p>如果有来自原作的台词，也会提供对应的参考音频。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411171038540.png"></p><p>在 [[Smash Bros.]] 中的台词一般都较短，并且在允许的情况下一般不会重用。太长的台词或是喋喋不休在战斗中可能会让玩家分心，从而破坏沉浸感。并且音频之间互相“抢戏”也不太好，所以对于类似 Bowser 或是 Donkey Kong 这样听起来有些暴躁的角色，在音频叠加时都做过特殊的处理。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411171045164.png"></p><p>一旦和事务所以及每个演员都协商好之后，就会约录音工作室。<br>对于 [[Smash Bros.]] 的 [[3DS]] / [[Wii U]] / [[Smash Bros. Ultimate]] 版本相较而言就比较简单，因为 [[万代南梦宫 Bandai Namco Studios]] 有自己的录音工作室。但通常而言需要自己寻找合适的录音工作室。</p><ol start="3"><li>Recording - 录制</li></ol><p>对于 [[Smash Bros.]] 而言，原本的权利相关者（original rights holders?）也会一起到场。会给配音演员简单介绍需要录制的角色，让他们能够还原角色的感觉，然后配音演员们会各自进行录制。</p><p>在很多时候，樱井自己会利用“talkback”按钮与演员交谈，亲自指导。但这也会基于不同的游戏系列，由其声音导演来主导。</p><p>之后，海外的配音会基于日本的配音版本来进行录制，由任天堂美国和任天堂欧洲来完成。</p><p>有一些角色（比如不同的宝可梦）会更耗费精力一些，因为宝可梦们在不同语言的版本中所说的可能并不相同。</p><p>在录制之后其实才是真正忙起来的时候。所录制的声音会被一次次编辑以与游戏更好地融在一起。这也是配音如何最终进入游戏的步骤。</p><p>对于 [[Kid Icarus - Uprising]] 而言，樱井和配音演员们一起合作，确保他们也能正确传达出角色之间的戏谑。但有时因为时间安排问题也不得不单独录制一些台词。</p><hr><p>当然了，有很多演员都会参与录制，所以不可避免会发生各种各样的事情。大多数时候，录制顺利进行，你也能够得到想要的结果。但当你在开发过程中会一遍又一遍听到这些台词时，它们会烙在你的脑海中。但樱井也猜想，也许有玩家听过这些台词的次数比开发者们还要多。这也意味着，撰写和指导这些台词责任重大。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241103 - G08 - Posing Suggestions</title>
      <link href="2024/11/03/20241103-g08/"/>
      <url>2024/11/03/20241103-g08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，通过把玩模型来学习如何制作酷酷的姿势！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G08-Posing-Suggestions"><a href="#G08-Posing-Suggestions" class="headerlink" title="G08 - Posing Suggestions"></a>G08 - Posing Suggestions</h2><p>Masahiro Sakurai on Creating Games - G08 - Posing Suggestions</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031105034.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/LsSF_H-W-w8?si=ORSNF4pK21t04kQw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>你是否曾经拿着一个人物模型然后在手中模拟他们飞行的样子呢？在日本这个行为被称为 [[bundodo]]。这其实可能是一个对于动画设计师而言很好的游戏。<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031108072.gif"></p><p>如果你想要追求的是非常真实的移动，可能并不完全使用，但保持你的姿势看起来酷总是非常重要的。在日本，更是有着很多拥有特别动作姿势的角色。</p><p>但是，怎么让一个姿势看起来很酷呢？什么是最好的角度呢？如果有一个可以变形的人偶可以教会你很多：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031119867.png"></p><p>[[樱井政博]] 用了 Pit 的人偶来举例：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031120371.png"></p><p>如果站在他面前，会有一个 pre-posing 的姿势，其实并不那么令人兴奋。但如果对其进行一些调整，是不是看起来很潇洒？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031121233.png"></p><p>你能做到什么程度取决于这个模型，但以下是一些 tips</p><ul><li>避免对称，或避免左右两边是镜像姿势</li><li>不要以完全正面呈现</li><li>往下调整下巴<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031125788.png"></li><li>避免躯干、臀部、腿部平行 - 即让其成为 S 曲线<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031125217.png"></li><li>调整围巾的角度让其纹路可见<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031127471.png"></li><li>裙摆是不可调整的，但你应该尝试让衣服像这样一样有一些褶皱<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031128998.png"></li><li>让肩部成为直角肩，并且尝试将肩部稍微抬高<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031129203.png"></li><li>以不同的角度呈现手臂，使其弯曲的同时也拥有很好的轮廓线，并且不要让其距离躯干太远<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031129980.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031130596.png"></li><li>将手腕稍微前弯一些，它们不应该是手臂的直接延伸<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031131449.png"></li><li>稍微调整其整体重力使其不要正好在中间<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031132505.png"></li><li>将双脚稍微向外调整，确保他们与镜头不等距<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031133312.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031134910.png"></li><li>让翅膀有一种物理感 (physicality)<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031134415.png"><br>即使是一个站立的模型，也有数不清楚的点需要考虑。最终，其实并没有所谓的公式或逻辑要严格遵循，只要看起来好就很好！</li></ul><p>很自然地，如果是下一个动作的预备姿势，就会有更多需要考虑的东西。如果搜索特定角色， [[Smash Bros.]] 的作品通常都会是搜索结果的前列：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202411031138436.png"></p><p>这些斗士都制作精良，这些图片都是造型参考，如果基础造型看起来不够好，最终的结果也不会太好。</p><p>如果想要培养自己对于造型的审美，基本没有比把玩模型更好的办法，玩起来！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241027 - B13 - Mountain Climbing Is More Than Just Climbing</title>
      <link href="2024/10/27/20241027-b13/"/>
      <url>2024/10/27/20241027-b13/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 [[Masahiro Sakurai on Creating Games]] 的视频，学习游戏中难度曲线应该起起伏伏的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B13-Mountain-Climbing-Is-More-Than-Just-Climbing"><a href="#B13-Mountain-Climbing-Is-More-Than-Just-Climbing" class="headerlink" title="B13 - Mountain Climbing Is More Than Just Climbing"></a>B13 - Mountain Climbing Is More Than Just Climbing</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410271634732.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/Be6km65CuuM?si=bmRPnHUyT1PBYbh4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>在角色扮演或是其他含有角色成长要素的游戏中，你需要平衡玩家能力以及不断变强的敌人和障碍。<p>以下两种方式都不是 [[樱井政博]] 自己采用的方式：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410271636004.png"></p><p>樱井的观点是：总是让玩家和敌人能力保持正比不是一件好事。</p><p>以爬山来类比，如果爬山时的坡度永远相同，应该不是一件有乐趣的事情，特别当景色没什么变化的时候尤为如此，或者说唯一的亮点是周期性出现的休息站。这当然无趣，也并不是真正的爬山会碰到的事情。</p><p>你所真正应该追求的曲线是起起伏伏的，不仅有峰，也要有谷：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410271639151.png"></p><p>其中不仅包含了需要克服的挑战，也有供玩家喘息休憩的“平原”，并且通常来讲，这些峰值点都会围绕 BOSS 来打造：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410271641476.png"></p><p>BOSS 不应该仅仅只是比常规敌人更加强一些的版本，相反，如果玩家要战胜 BOSS，应该需要让玩家必须做出战略准备和决策，一旦战胜 BOSS，也需要提供相应的丰厚奖励。</p><p>为此你可能也需要准备相对平整的一块区域，对于一个总是面对敌人的游戏而言，这可能意味着突然有一个区域或一个时间段内没有再出现敌人。为玩家准备一些可以快速“刷资源”的点也是很有效的。这些方法可以让游戏的 [[intrinsic feeling - 探索 exploration]] 更加有趣。</p><p>实际的游戏中可能更加复杂，通常会让你自由地向不同的方向随意探索，这样的情况不用说也知道很难找到完美的平衡。</p><p>如果你的游戏中包含随着玩家变强也会使得敌人也不断变强的系统，你会让玩家失去不断变强的动力。有很多种解决这类问题的办法，但总体而言，你的解决方法应该确实地为玩家的策略留出空间，即允许玩家以不同的策略进行攻克。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250223 - B14 - Make Retries Quick</title>
      <link href="2024/10/27/20250223-b14/"/>
      <url>2024/10/27/20250223-b14/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 [[Masahiro Sakurai on Creating Games]] 的视频，学习失败后快速重开的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B14-Make-Retries-Quick"><a href="#B14-Make-Retries-Quick" class="headerlink" title="B14 - Make Retries Quick"></a>B14 - Make Retries Quick</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202502231127291.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/oSi0wEJHLuA?si=19v-7Rx8J1xFBI3l" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>(00:03) 当玩家失误需要重试时，应根据游戏性质和设计目标调整机制。重点是要确保重试过程尽可能迅速。这能有效提升玩家持续挑战的意愿，避免半途而废。</p><p>关键在于最大限度减少无效空白时间——精简过场动画、缩短加载时长。</p><p>虽然重试惩罚机制会影响玩家去留，但更核心的是快速重启带来的正面影响：这种做法能提升玩家对挫败的耐受度。</p><p>(01:08) 在被击败的瞬间到重新掌控角色的空档期，正是玩家热情迅速消退的危险时段。间隔越长，动力消退越明显。理想情况下，在热情冷却前让玩家重获操控权，他们就会条件反射般继续操作。随着进度推进，新动力又会自然产生。单纯让画面恢复动效还不够，真正关键是让玩家重获主导权。即便只是允许跳过对话，也比让系统反应时间过长好得多。</p><p>值得注意的是，无限原地复活机制容易让玩家产生”无脑通关”的错觉，这需要谨慎设计平衡。击败效果需要在短时间内强力呈现，确保玩家意识到真正的失败。</p><p>根据游戏类型，推荐以 1 至数秒为限的短时惩罚设计，之后立即恢复玩家控制。但要注意避免复活后立即遭袭的情况——如果难度过高，玩家尚未操作就连续受挫，会极大打击积极性。</p><p>最终，惩罚力度需要匹配游戏目标，在理解设计原理基础上合理运用。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241020 - Don&#39;t Be Unresponsive!</title>
      <link href="2024/10/20/20241020-c12/"/>
      <url>2024/10/20/20241020-c12/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解提供按键反馈的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C12-Don’t-Be-Unresponsive"><a href="#C12-Don’t-Be-Unresponsive" class="headerlink" title="C12 - Don’t Be Unresponsive"></a>C12 - Don’t Be Unresponsive</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410201103937.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/eia2IAmvtKI?si=SaIpBfB0hPGAiSgY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>游戏主机上有很多按键，简单一算也有超过 12 个，对于菜单或者是 UI 等部分， [[樱井政博]] 建议使用不止一个按键作为确认键。<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410201104447.png"></p><p>即使对于只需要一两个功能按键的简单游戏而言，有一些重复的按键也是很好的。<br>相比起没有任何的相应，按键具有功能是更好的选择。当然了，这并不意味着你需要为每一个按键都设置功能。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410201108918.png"></p><p>当你在游玩时，信号从手中的控制器发送给电脑，玩家再通过屏幕上的信息获得反馈。正因如此，从手中发出的信号非常关键。每个人也有其游玩方式。所以，当玩家们按下按键的时候，比起无事发生，更好的体验是有所反馈对吧！</p><p>如果玩家按键之后，游戏并没有提供任何的反馈，会感觉“缺了点什么”。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410201109797.png"></p><p>如果左肩键（L1）同时也能作为确认键或动作键，你就可以单手游玩了。樱井也觉得需要实际上手感受之后才知道什么按键具有什么功能有一些缺点，但他也觉得这好过于没有任何的反馈。</p><p>特别是对于过场影片，他觉得最好是能在玩家按下按键时有某些反馈（比如提示这段过场可被跳过）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410201116720.png"></p><p>玩家按键是希望能从游戏中得到些什么，最好也要避免过于模糊的反馈，从而让玩家不知道按键是否被按下了。</p><p>樱井并不是说缺乏反馈总是坏事，但是游戏总是和操作&amp;反馈（action &amp; reaction）有关，这一点是值得铭记的！</p><p>顺带一提，这个手柄的这个部分贴了一个贴纸，这意味着这是 switch #1 的 #2 控制器。因为他家里有很多套设备… （不愧是你 (￣▽￣)／）<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410201119593.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410201120662.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20241013 - Screen Shake</title>
      <link href="2024/10/13/20241013-h05/"/>
      <url>2024/10/13/20241013-h05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习屏幕抖动！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131145027.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/2JXR7IASSog?si=j8P0IiLMiYD3maXw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>让屏幕抖动可以用于传递“有重要的事情发生了”的信息，所以 [[樱井政博]] 建议如果有合适的机会就尽管使用！<p>他从 [[Kirby’s Adventure]] 开始就经常使用屏幕抖动，并且觉得其非常重要。因为屏幕抖动会让东西看不清楚，所以也要避免抖动太过度。</p><p>有两种屏幕抖动的主要方式：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131149397.png"></p><ul><li><p>抖动摄像机（更常用）</p><ul><li>让摄像机在三维世界中运动<ul><li>远端物体可能受影响较小</li><li>需要考虑如何移动中心点<ul><li>可以让其和摄像机抖动保持一致</li><li>甚至可以以更大幅度进行抖动</li><li>如果摄像机中心点太远会导致抖动很不明显<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131154036.gif"></li></ul></li></ul></li></ul></li><li><p>抖动渲染后的画面</p><ul><li>整体抖动（包括 UI）<ul><li>有可能会暴露出一些“黑边”<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131151611.png"></li></ul></li></ul></li></ul><p>[[Super Smash Bros.]] 中使用了很多不同的屏幕抖动模式和技术：</p><ul><li>Large - L - 大</li><li>Medium - M - 中等</li><li>Small - S - 小</li><li>Extra-small - XS - 超小</li></ul><p>这不仅只是相同抖动的不同版本，也用了不同的抖动模式：</p><ul><li><p>小抖动 - 只有上下抖动<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131159114.gif"></p></li><li><p>中抖动 - 上下+水平抖动<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131202415.gif"></p></li><li><p>大抖动 - 比中抖动更加剧烈<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131203005.gif"></p></li><li><p>持续抖动 - 垂直方向的抖动有助于传达地面抖动的信息</p><ul><li>这类的抖动不建议在任一轴向的抖动幅度太大<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131204684.gif"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131207290.gif"></li></ul></li></ul><p>然后下面是一些不同的实现技术：</p><ul><li>基于摄像机距离改变抖动大小（否则如果距离过近的情况下会感觉震动过大）<ul><li>距离同时也会影响视野（fov field of view）所以需要让所有情况下看起来都舒服</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131211065.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131212211.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131213868.gif"></p><ul><li>但有一些特殊 stage 会固定 fov 这会使得平时的抖动幅度过大，所以也做了针对性的调整<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131216149.gif"></li><li>抖动最开始很强烈，然后逐渐减弱<ul><li>并且并不是很完美的螺旋线，而是带有一些随机使其看着更舒服<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131217496.gif"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131239621.gif"></li></ul></li><li>过去，樱井有时候会通过转鼠标的方式来模拟摄像机抖动然后再基于此来设计屏幕的抖动方式（笑死 (￣▽￣)／）</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131241020.gif"></p><p>如果游戏中没有屏幕抖动，可能会感觉非常“乏味（bland）”，即使只是很小的抖动也可以让人感觉很不一样。屏幕抖动是非常常用的技术，也非常有效！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202410131247041.gif"></p><p>3D 场景中可能没那么容易找到让人舒服的抖动方式，但如果你找到了会让游戏舒服很多！所以樱井觉得绝对值得投入！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240930 - Behavior at ledges</title>
      <link href="2024/09/30/20240930-d08/"/>
      <url>2024/09/30/20240930-d08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏中的边缘掉落处理！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="D08-Behavior-at-ledges"><a href="#D08-Behavior-at-ledges" class="headerlink" title="D08 - Behavior at ledges"></a>D08 - Behavior at ledges</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409301504901.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/rcuihq0j7VM?si=lasofBh3F42hXWIK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li><p>处理边缘掉落的手段</p><ul><li><p>直接掉落</p></li><li><p>移动中掉落，而不在操作中掉落</p></li><li><p>部分动作掉落，其他一些不会（推荐）</p><ul><li><p>比如前滚翻不会，但前冲攻击会</p></li><li><p>有一些游戏会让你需要做额外操作才会掉落</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409301508457.png"></li></ul></li><li><p>有一些游戏会调整你的移动方向（边缘保护）</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409301508391.png"></li></ul></li><li><p>甚至有游戏在你到达边缘后会自动跳跃</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409301510252.png"></li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240922 - 本就不可能存在</title>
      <link href="2024/09/22/20240922-after-watching-attack-on-titan/"/>
      <url>2024/09/22/20240922-after-watching-attack-on-titan/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409222133297.png"></p><p>历史无可回避<br>未来已经穷尽<br>被抹掉的记忆会在结束后回归<br>但逝去的已在树下安眠<br>无法理解的彼此只能屈服于无边的恐惧<br>不变的死见证变动的活的轮回<br>纵然无悔来时路<br>尽头皆枉然</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240922 - Paint an Accurate Picture of Your Game</title>
      <link href="2024/09/22/20240922-l02/"/>
      <url>2024/09/22/20240922-l02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解宣传画面和实际内容相符的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="L02-Paint-an-Accurate-Picture-of-Your-Game"><a href="#L02-Paint-an-Accurate-Picture-of-Your-Game" class="headerlink" title="L02 - Paint an Accurate Picture of Your Game"></a>L02 - Paint an Accurate Picture of Your Game</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409221020691.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/tb6GJUvJGpM?si=_GVfvBkKrc8V6YI2" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>如果不实际上手游玩，很难知道游戏里有些什么。为了知道游戏的玩法和它能够带来的乐趣，你可能需要依赖类似标题、封面美术、截图、宣传视频等方式。<p>如果游戏还提供了 demo，你还可以在购买之前上手试玩，但实际上要制作 demo 会给开发者造成相当大的压力，所以也无法保证一定会有 demo 可供试玩。这也就意味着，游戏的内容会通过标题和视觉媒体来传达，而当做这些事的时候，有一个绝对的禁忌：无论你多想为玩家创造惊喜，不要呈现无法代表你的游戏的图片！</p><p>比如说你本来以为你买了一个香蕉，但你尝了之后发现它吃起来像苹果，这应该… 不太对吧？</p><p>[[樱井政博]] 很能理解大家想要让游戏感觉新鲜和独特的意图，但是当你看到封面图时，玩家对于游戏的印象应该你的游戏实际上能给玩家带来的乐趣相符。</p><p>现如今，一个游戏的标题或内容有时候并不总是和其市场宣传那么契合。但不管怎么说，如果游戏所宣传的内容和实际的内容差异太大，你不仅无法触达游戏本来所面向的目标用户，也会让那些为此而购买的用户感到失望。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409221030734.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409221030166.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409221031569.png"></p><p>想要以各种方式来为玩家创造惊喜无可厚非，但至少保证让宣传的画面和游戏中实际的感觉相匹配！</p><p>另外，当你在为游戏设想标题的时候，你也可以从玩家可能如何对其进行简称入手。</p><p>比如 [[Super Smash Bros.]] 可能被称为 smash，这也能让人们更容易记住它。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409221035215.png"></p><p>[[樱井政博]] 所制作的所有游戏中，标题和实际内容相差最大的是日本发行的 [[Kirby Super Star]]。封面非常的简单，但其实内容非常丰富。非常感谢 [[糸井重里 Shigesato Itoi]] 先生提出了将如此奢华的体验放到一个精美的木质盒子中的想法。这也与卡比本身所追求的“简单”的设计理念所契合。虽然说 super famicom 的折扣标签也贴在了封面上有一点点破坏了本身想要传达的效果…</p><p>封面可能看起来和游戏没有关联，但樱井觉得这种非常直接的呈现方式就是他们想要的效果。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409221037085.png"></p><p>无论你想要卖出的是怎样的产品，市场宣传可能并不总能非常准确地传达作品本身想要传递的信息。所以樱井在这种时候也会将重任交给 [[糸井重里 Shigesato Itoi]]！</p><p>一旦游戏发售，封面美术对于吸引潜在的玩家是非常关键的！ 虽然其中一种策略是颠覆玩家的期望，但更有效的策略就是呈现你的游戏实际上到底是什么。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409221047252.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240917 - Development Secrets of the Original Kirby</title>
      <link href="2024/09/17/20240917-m14/"/>
      <url>2024/09/17/20240917-m14/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解初代卡比的秘密！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M14-Development-Secrets-of-the-Original-Kirby"><a href="#M14-Development-Secrets-of-the-Original-Kirby" class="headerlink" title="M14 - Development Secrets of the Original Kirby"></a>M14 - Development Secrets of the Original Kirby</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171205128.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ZUY2AtBD6Sk?si=yhjVmPANJ_d-JuEN" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>2017 年举办了一场庆祝 [[Kirby]] 25 周年的音乐会，在当时， [[樱井政博]] 准备了一些首部卡比的幕后开发故事在舞台上进行了呈现，这一期也将对其进行呈现~<p>在频道的 Game Concepts 分类中讨论过早期的卡比作品，今天是一些更加深入的内容。甚至会分享一些只在 Osaka 表演中呈现过的和 [[魅塔骑士 Meta Knight]] 相关的秘密！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171209749.png"></p><p>所有的内容都是 PPT 制作的：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171211266.png"></p><p>[[Kirby’s Dream Land 1992]] 于 1992 年在 [[Game Boy]] 上发售。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171211943.png"></p><p>[[Kirby]] 是一个可以将敌人吞入吐出，以及飞行的神秘生物。在这一作中还没有引入它的复制能力（在下一作 [[Kirby’s Adventure]] 中才会引入 ）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171213443.png"></p><p>[[樱井政博]] 在其 19 岁时（大概是 1990 年五月）提出了卡比的游戏设想，他的目标是让没有接触过游戏的人们也能体会游戏的乐趣。花费了大概一年时间进行开发。</p><p>游戏流程相对较短，有经验的玩家大概 20 分钟就可以通关。这部作品在全世界售出了超过 500 万份。当时占据 [[Game Boy]] 畅销榜榜首好几个月。当时采用了最先进的硬件 [[Twin Famicom]] 来开发卡比。</p><p>连接了在 [[HAL Laboratory]] 制作的 trackball (滚球输入，以替代鼠标键盘)，并且从光碟读取开发工具，并用其进行开发。这在当时是非常好的设备，樱井也非常喜欢！(看样子猫猫也很喜欢！)</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171242098.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171245522.png"></p><p>之后展示了一些开发机上的实机录像，需要从一个复合电缆上进行录像，所以效果可能没有那么好。</p><p>首先可以绘制像素美术</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171248590.png"></p><p>之后需要结合这些图像来创造角色</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171248897.png"></p><p>然后让它们按照预期移动！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171249720.png"></p><p>[[魅塔骑士 Meta Knight]] 在初代卡比中还不存在，这个图中展示的是 [[Kirby’s Adventure]] 的它，这也是如何对动画进行测试的办法。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171250222.png"></p><p>然后是 [[Kirby’s Adventure]] 第五关的 BOSS - [[Kirby’s Adventure - Heavy Mole]]，这些都是在 Famicom 上完成的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171251757.png"></p><p>甚至可以绘制背景</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171252907.png"></p><p>也用其制作了标题画面，你可以看到这个开发工具真的非常具有很多功能</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171253875.png"></p><p>之后是使用开发工具将游戏可视化，这里需要涉及到 ROM Size 的话题。最开始的目标大小是 512 kbit（64KB/0.064MB/0.000064GB），但最终发售时的包体大小达到了 2Mbit。总而言之，这是个非常小的游戏。后面的讨论会基于这一点展开。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171256769.png"></p><p>下面的角色中的 Waddle part 指的是鸭子和企鹅不稳定的行走方式，为了便于区分，你可以想象有两个 oo 的就是有着大眼睛的 Doo。</p><p>它们如此相似的原因是樱井想用 1.5 ROM 的空间大小来创造两个角色，所以两个角色共享了身体的后半部分</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171258530.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171301061.png"></p><p>这是 Gordo 的美术素材，完整的 Gordo 由这个素材拼合（以及旋转）而成</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171302289.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171302679.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171303634.png"></p><p>而具有复杂动画的 Poppy Bros. Sr. 其实也只有三种手部模式和两种头部模式</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171304502.png"></p><p>樱井用了很多小技巧来使用更少的资源来创造吸引人的动画。但他还是想让 BOSS 战感觉非常精彩。卡比是对新手玩家友好的游戏，所以即使瞄准有一点点偏差，也应该能击中敌人。</p><p>以此为前提，下面是 Whispy Woods 的部分创作过程。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171306908.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171306765.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171306844.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171307153.png"></p><p>下面是 Kracko 的创作过程：<br>它的身体是将各部分翻转得到的，眼睛只有一种模式，并且也复用到了 Kracko Jr. 身上。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171309560.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171310577.png"></p><p>如上所述，将角色放到有限的 ROM 空间中是很重要的过程。</p><p>因为卡比占据了 8 * 16 的大小，所以红色方框部分就不得不留空了，这是非常令人心痛的浪费！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171312833.png"></p><p>由此， Green Greens - Stage 1 就被创建了出来，</p><p>在一个 256 * 256 的空间中，左边部分存放了在关卡转换过程之外的卡比自己，中间是在整个游戏中都保持不变的元素（Maxim Tomato 得到了字母 M 是因为 M 可以通过翻转得到）；右边的部分是每个关卡所独有的部分，这张图中包含了 Grizzo - 初代卡比中唯一的大型敌人，所以你也可以看到有很多空白部分。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171318689.png"></p><p>而关卡的背景也是通过使用相同素材的不同组合得到的：<br>当时的可用空间只有 NES 游戏的一半，也不可以将素材进行垂直翻转，樱井他们已经尽力去做了（效果也非常的好！）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171322734.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171323291.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171324363.png"></p><p>下面是 Dedede 的素材，因为它在场时没有其他敌人会出现，所以它的美术也是最华丽的！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171326869.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171326490.png"></p><p>顺带一提，上面的所有作品几乎都是 [[樱井政博]] 自己画的： Kirby, Dedede, Waddle Dee, enemies, backgrounds, items, effects…</p><p>有另一位设计师参与了其他舞台的制作。在当时，很多人在纸上先进行绘制，但樱井是直接对像素进行绘制的。</p><p>接下来要讲的是和敌人移动相关的秘密！</p><p>图中的这只寄居蟹 Coner 可能是樱井画的第一个敌人，它会向前爬行，然后从悬崖掉下，沉入水中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171610578.png"></p><p>Waddle Dee 会顺着楼梯不断向下</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171611079.png"></p><p>但在初代卡比中，这些看似自然的移动，实现方式却不那么容易。实际上敌人是没有地面碰撞的</p><p>对于寄居蟹 corner 而言，红色路线是预制好的路线，只是正好让其与背景相匹配而已。这是种很浪费的做法！樱井使用了之前的开发工具并输入了对应的姿势和移动</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171612576.png"></p><p>图中的红色区域控制的就是移动<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171614455.png"></p><p>这里展示的就是 Poppy Bros. Sr. 左右横跳的控制码<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171616045.png"></p><p>下方是输入的方式<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171617735.png"></p><p>当时采用的是 trackball 来进行输入，没有鼠标和键盘，所以需要这个光标来输入对应的十六进制值。</p><p>樱井采用类似的方式制作了寄居蟹 corner 的移动，现如今看来这是非常不便捷高效的制作方式，但当时而言樱井刚刚开始制作游戏，所以他将其当做成长的必经之路，并且享受微调的乐趣。</p><p>不用说，这个方法还是尤其好处 - 不太需要太多的运算处理就能使其表现很好，这对于在 [[Game Boy]] 上的开发是很重要的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171620936.png"></p><p>系列中的一个常见角色被称为 Cappy<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171622716.png"></p><p>它也不会检查地形碰撞，但也具有很好的动画效果。如果它需要很多的运算资源的话，估计也没有办法看起来如此 Q 弹有趣了。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171622440.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171624190.gif"></p><p>接下来要讲的是和另一个游戏的惊人巧合。</p><p>这是卡比的初始设计文档，但樱井最开始先画的是像素画，这些示意图是后面才画的。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171626928.png"></p><p>有一部分文档很有趣：</p><ul><li>通常而言，屏幕会随着你在中心的角色一起滚动</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171627670.png"></p><ul><li>但是，当你被敌人击中弹飞时，屏幕会停止滚动<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171627315.png"></li><li>一旦你停下之后，屏幕会慢慢地回滚，并且重新聚焦到你身上<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171629937.png"></li><li>如果完全飞出了屏幕，那么就会损失一条生命<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171630852.png"></li></ul><p>没错，这一运镜规则在 [[Super Smash Bros.]] 中也是相同的！<br>樱井在当时制作初代卡比时已经在构思 smash 的伤害累计系统了！这真是令人惊掉下巴的事实！<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171630160.png"></p><p>并且当时的策划案中也陈述了角色的击飞距离与角色生命相关，当时还是 1990 年。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171633735.png"></p><p>那么有一个新的问题出现了：为什么要在 [[Smash Bros.]] 中引入这个“老”想法呢？</p><p>答案是，樱井完全忘记了原来已经想过这个系统…</p><p>最后樱井让我们接受谜团</p><p>实际上当初代卡比发售时，卡比和 Dream Land 的世界还满是谜团：</p><p>比如，你在屏幕上看到的这是什么呢？<br>在当时，它被称为 Bourbon。</p><blockquote><p>来自评论区的解释：<br>在这里，他说的 “Bourbon “指的是一家日本糖果公司。这是因为该公司销售的一种名为 Chocoliere 的饼干很像那个神秘物体。</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171636003.png"></p><p>虽然卡比的体谅不大，但里面充满了你未曾在普通游戏中见到过的图像：比如说，为什么在每次打通一个关卡时卡比都会分成三个呢？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171640889.gif"></p><p>有很多个卡比不断地出现，但通常而言你并不会在 Mario 或者 Link 系列游戏中见到这样的场景。</p><p>也有很多关于 Warp Star 的问题：</p><ul><li>它是什么</li><li>它是怎么带着你飞行的<br>虽然有游戏设计的理由，但这些都是谜</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171643204.gif"></p><p>甚至有一关的转场是你被从鲸鱼的喷气孔发射到了天上，然后你就可以发射 mint breath </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171644851.gif"></p><p>在朝着最后的 BOSS Dedede 的城堡进发时，关卡中的文字随着屏幕滚走了，在当时这是从未见过的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171647045.gif"></p><p>然后，触碰这些长得像卡比的生物会清除前方的道路</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171648565.gif"></p><p>这些事情不必有理，不要思考！感觉！拥抱谜团！</p><p>另外，初代卡比中有一个动态的结局：卡比的任务是将梦之岛的食物带回来，所以它变得巨大无比，并且直接将整个城堡都带着飞回了家。</p><p>这是一个充满迷之生物的迷之世界，超越任何理由 - 这就是卡比的核心。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171654230.gif"></p><p>之后是 Bonus！</p><p>关于 [[魅塔骑士 Meta Knight]] 的设计！<br>樱井当时在 Osaka 演出时在最后呈现了这个部分</p><p>哪一个图形是魅塔骑士的面具缺口呢？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171657872.png"></p><p>答案是…<br>全部！</p><p>每一个形状都曾被用来表示魅塔骑士<br>左边的形状是魅塔骑士在 [[Kirby Return to Dream Land]] 以及动画中的造型（是一个类似 V 的形状，边缘是截断的）：<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171658401.png"></p><p>右边的是魅塔骑士在 [[Smash Bros.]] 系列中的形象（在边缘加入了凹形曲线，赋予其一种酷和老练的感觉）<br>这也是为了让其能在面对更具真实感的对手时更加契合（不仅是魅塔骑士，很多角色都做了类似的调整）<br>类似肩膀上的 M 元素也在后期的卡比作品中被体现了出来：<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171659776.png"></p><p>这是一张对比图，更新的作品中的魅塔骑士没有旧作中那么圆润。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171702967.png"></p><p>至于中间的形状，是魅塔骑士初次亮相时的形象 - 即在 kirby [[Kirby’s Adventure]] 中的形象，当时魅塔骑士的设计还是基于像素的</p><p>当然了，边缘部分看起来只是一个点，开口的位置也是在稍微偏移的位置。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171704656.png"></p><p>因为 [[Kirby’s Adventure]] 中的图形和左边的很像，这后来渐渐也变成了魅塔骑士真实的样子。但对于每一部游戏而言，在考虑其角色定位之后，都会重新审视其设计，为其找到最契合的形象和设计。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171657872.png"></p><p>最后是一个问题<br>这张图片来自于 Famicom 开发工具，但这是什么呢？<br>这是 [[Kirby Super Star]] 在 NES 上的原型</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171709635.png"></p><p>[[Kirby Super Star]] 也通常作为 NES 上的超级游戏被认知，因为在 SNES 开发工具出来之前还有一段时间，所以樱井从设计文档中找到了当时的素材，并且想象着卡比的大小画出了这幅作品。</p><p>比如这是在最终游戏中也采用了的 beam 能力（虽然特效有一些不同）<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171712340.png"></p><p>这是当卡比使用回旋踢时能够骑上 yoyo 的能力<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171713215.png"></p><p>图中展示了斗士能力所能使用的不同技术<br>最终发售时的动作组就是从早期开发阶段的这里脱胎而出的<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171714494.png"></p><p>然后是 cutter 能力<br>上方和下方的动作设置有一些问题，但最终版本的 cutter 连招就是这样的</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409171718098.gif"></p><p>从最开始，卡比就一直是樱井个人的风格 - 从项目最早期就尽可能清晰地将设计进行可视化呈现。具体的视觉可以让团队更容易前行。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240901 - How I Stuck With My Column</title>
      <link href="2024/09/01/20240901-a10/"/>
      <url>2024/09/01/20240901-a10/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解他如何坚持为专栏撰稿！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A10-How-I-Stuck-With-My-Column"><a href="#A10-How-I-Stuck-With-My-Column" class="headerlink" title="A10 - How I Stuck With My Column"></a>A10 - How I Stuck With My Column</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409011043412.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ff7HadWHTJo?si=KdD51M5aLTfGlmW9" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>在过去， [[樱井政博]] 在 [[Weekly Famitsu]] - 即日本最大的游戏杂志上有一个专栏。<p>这个专栏持续了有 18 年 9 个月之久，樱井为其一共撰稿 640 篇，他觉得这也许是一个游戏导演在一本游戏杂志上撰写专栏时间最长的记录！</p><p>虽然这已经是一段很长的专栏撰写时间了，但其实还是没有赶上 [[伊集院光 Hikaru Ijuin]]，他在樱井在专栏存在之前就已经开始撰写文章了！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409011046555.png"></p><p>在樱井开始写专栏时（2003 年），他当时是卡比系列的首席导演，当时正好是 [[Kirby Air Ride]] 的游戏导演。他在不久之后离开了 [[HAL laboratory]]。他还记得当时和编辑还有一些没有达成一致的事项——他当时在写有关离开公司的事情，但编辑说“这些东西是不能发表的！”</p><p>当时樱井忙于开发，几乎没有足够的时间来撰稿——有时候甚至要通宵，这让他都没有时间玩别的游戏，所以一旦当时手头的项目结束之后，就没有内容可写了。一不小心，可能灵感库就会枯竭。但不知怎的，樱井总是能如期交稿，并让专栏持续下去——他是怎么做到的呢？</p><p>樱井自己总结了三个原因：</p><ol><li>Output 输出<br>作为游戏导演，他并没有觉得进行观点传达是非常麻烦的事情，毕竟他就是干这个的。这个 youtube 频道也是一个证明。</li><li>Minimal Time Investment 最小时间投入<br>在撰写专栏时，他通常会在一个小时内完成，其实这个时间还算合理</li><li>No Pressure<br>樱井自己没有感到太有压力。相比起“因为不得不做”或是“因为有很多人在看”这样会带来压力和责任感的原因，他仅仅只是将自己认为好的想法进行输出。如果老是过度思考，有太多负担，肯定是做不好的。</li></ol><p>以上的原因想要指出的是，樱井并没有将撰稿视作一种义务，或者说“为了游戏行业好”这样太大的目标，如果开始这样思考，他会付出很大的代价。所以无论是任何工作，如果可以的话，最好还是能保持一些松弛感，特别是如果你在进行一些周期性的计划。应该要享受这个过程，而不应该被其拖累！</p><p>樱井自己在 [[Weekly Famitsu]] 刚开始发刊时就已经对其很感兴趣，所以他很感激自己能有这样的机会在这个杂志上进行如此长时间的撰稿。但他也知道，是时候停笔了。</p><p>正如他有时在这个频道中提到的，这个专栏中有很多有价值的信息，所以樱井建议如果有机会的话看一看吧，说不定正好能发现对你有用的东西~</p><p>专栏也以书本形式发售，但可能不太易于购买。也有电子版，所以可以尝试看一看~</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409011115894.png"></p><p>现如今，樱井基本都在制作这个 youtube 频道。如果不是已经培养起了撰写专栏的习惯，可能永远都不会有这个想法。由此而言， [[Weekly Famitsu]] 上的专栏也可以视作这个 YouTube 频道前身了！</p><p>顺带一提，如果对于樱井最开始如何撰写专栏感兴趣…<br>他当时通过 MMORPG [[最终幻想 Final Fantasy XI]] 遇见了 [[Weekly Famitsu]] 的专栏负责人。虽然没有在现实中见面，但通过组队和一起游玩的相处，她当时问樱井是否有为 [[Weekly Famitsu]] 撰稿的打算，她的原话大概是她觉得肯定会很有趣的。如果不是如此巧合的相遇，这个频道可能也不会存在了…<br>你永远也无法预知事情会走向何方！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240824 - Dying Comes as a Relief?</title>
      <link href="2024/08/24/20240824-b12/"/>
      <url>2024/08/24/20240824-b12/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 [[Masahiro Sakurai on Creating Games]] 的视频，学习游戏中角色死亡带来解脱感的原因！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B12-Dying-Comes-as-a-Relief"><a href="#B12-Dying-Comes-as-a-Relief" class="headerlink" title="B12 - Dying Comes as a Relief?"></a>B12 - Dying Comes as a Relief?</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408241041092.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/vDEJ0sXw8Ks?si=8v-5XBOplTfTOSas" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>- 根据一项海外进行的游戏研究，人们在游玩竞技性的第一人称游戏时，当击杀敌人后会感到 [[intrinsic feeling - 不安 焦虑 anxiety]]，当被击杀后会感到 [[intrinsic feeling - 解脱 relief]] - 你可能会想是不是搞错了，不是应该反过来吗？但如果你仔细思考，其实就是这样。    - 被打败这一事件让玩家从紧张中解脱，你也可以说这是使得游戏 [[intrinsic feeling - 有趣 fun]] 的其中一个原因，更详细的原因，你可以查看樱井自己的书（可惜只有日文） [[Thinking About the Video Games X Kadokawa Game Linkage - Masahiro Sakurai]] 的 148 页， [[樱井政博]] 会在这里对内容进行总结        ![](https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408241053545.png)- 首先，玩家很有可能并没有与角色共情    - 如果你真的与角色共情了，角色的每一次死亡都会让你感到悲伤- 其次，游戏规则可以让 [[intrinsic feeling - 失望 disappointment]] 的感觉一扫而空    - 无论是游戏还会继续，或者是新的一轮马上开始，只要重新开始的相对时长较短，你就会一直关注未来，从而没有时间伤感过去- 最后，击败一个对手可能并不是真正的奖励    - 你的最终目标是胜利，如果说击败一个对手并不意味着绝对的胜利和结束时刻，那么目标就还未达成，也就是说还不到放松的时候    - 某种程度而言，击败对手也展示了一种在未来你有可能是被击败的一方的可能性<ul><li>无论是击败敌人的一方，还是被击败的一方，当 [[intrinsic feeling - 有趣 fun]] 被实在地感受到了，这就是最好的娱乐方式。这也是樱井最想要清晰传达的一点。<ul><li>“刚才竟然输了真是不甘心！但下次我一定会赢！”</li><li>所有的这些方面——包括你如何让玩家在死亡之后继续尝试，都值得仔细考虑</li></ul></li><li>要知道，竞技性游戏并不只是关于如何击败敌人的乐趣！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240818 - The Family Computer (and the NES)</title>
      <link href="2024/08/18/20240818-m13/"/>
      <url>2024/08/18/20240818-m13/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Famicom 和 NES！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M13-The-Family-Computer-and-the-NES"><a href="#M13-The-Family-Computer-and-the-NES" class="headerlink" title="M13 - The Family Computer (and the NES)"></a>M13 - The Family Computer (and the NES)</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181011638.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/PHBKYrnIUmY?si=76BmIEMsR5PWj7_f" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>[[樱井政博]] 很自豪地说他为 [[Famicom - Family Computer]] 开发过一款游戏，这是非常幸运的事情！而这款游戏就是 [[Kirby's Adventure]]：<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181013665.png"></p><p>有许多和樱井同龄的游戏导演，但其中只有一小部分为 [[红白机 Famicom - Family Computer]] 开发过游戏。尽管年少时已经入行，樱井自己也差点错过了这个机会。</p><p>[[红白机 Famicom - Family Computer]] 是任天堂在 1983 年七月十五日首发于日本的家用游戏主机：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181016365.png"></p><p>樱井当时的感觉是这是一款制作非常精良的游戏主机，当时的很多游戏都有单色的像素斑点，在走动时就会在帧与帧之间跳动，而具有出色的图形显示效果的 [[红白机 Famicom - Family Computer]] 就非常令人惊喜了。不仅如此，其上的游戏还具有令人印象深刻的音乐、音效，顺滑高速的图形处理。其控制器也易于使用，价格也非常实惠（当时的 14800 日元），最重要的是，上面的游戏都很好玩！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181033618.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181033675.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181034741.png"></p><p>你甚至可以以几乎相同的 [[game essence]] 玩到当时在街机上大火的游戏 [[Donkey Kong]]，这非常棒！<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181036942.png"></p><p>樱井自己在 1983 年购入了一台，即发售的当年。其上的按钮最开始是方形的，然后樱井展示了来自它的 famicom 的手柄。虽然有些陈旧了，但他很开心他的手柄按钮从来没有卡住过。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181040504.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181041481.png"></p><p>方形按钮是橡胶材质的，有一些玩家的手柄按键经过长时间使用后就卡在里面了。</p><p>之后的设计中将方形按钮换为了圆形按钮，所以樱井觉得方形按钮的模具可能只存在了可能大概一年时间。</p><p>两年后，即 1985 年，海外所熟知的 [[NES - Nintendo Entertainment System]] 首先在北美发售了：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181043879.png"></p><p>在这两年间，日本游戏在制作和内容方面有了巨大的飞跃。以在 1983 年发售的 [[Mario Bros. 1983]]，和在 1985 年发售的 [[Super Mario Bros. 1985]] 为例，你可以看到图形的明显升级：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181045138.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181047949.png"></p><p>[[NES - Nintendo Entertainment System]] 当时有两种捆绑包：NES action set 和 NES deluxe set：</p><ul><li>NES Action Set 包含<ul><li>[[Super Mario Bros. 1985]]</li><li>[[Duck Hunt]]</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181049111.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181051398.png"></p><p>在当时，也有一些更老的，更简单一些的游戏具有不错的市场反响，所以樱井能够想象当时的玩家第一次看到 NES 上的游戏内容时应该会因其巨大提升而非常惊喜。</p><p>顺带一提，[[Mario Bros. 1983]] 的 ROM 大小是 24 KB，而 [[Super Mario Bros. 1985]] 的 ROM 大小是 40 KB。<br>这个差别看起来不是很大，但其实对当时的游戏而言意义非凡。在当时那么小的空间中所汇聚的技术可谓令人瞠目结舌。</p><ul><li>NES Deluxe set 包含<ul><li>[[Robotic Operating Buddy - R.O.B]]</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181056097.png"></p><p>这个（出现在 [[Smash Bros.]] 中的）小家伙其实来头不小！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181057166.png"></p><p>多亏了 ROM 空间大小的提升以及引入的自制芯片 custom chips， famicom 进化为了一台完全不同的主机。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181102973.png"></p><p>Custom chips 上面有一些特殊的单元可以处理一些特殊运算。</p><p>通常而言，这些芯片应该属于主机本身，但有一些因为制作足够便宜，所以被添加到了那些特殊单元中。</p><p>[[红白机 Famicom - Family Computer]] 也使用了特定的接口，使得玩家可以进行音频扩展，所以日本的 ROMS 有时候比起海外版本拥有更加丰富的音乐：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181104965.png"></p><p>这里在视频中播放了 [[Castlevania III]] 的 NES 以及 famicom 版本的音乐对比，感兴趣可以去原视频中听一下~</p><iframe width="560" height="315" src="https://www.youtube.com/embed/PHBKYrnIUmY?si=ZvynH42NBOLgCQS6&amp;start=245" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>自上世纪 80 年代中后期以来，日本沉浸在 Famicom 的狂热中。<p>在 1988 年发售了 [[Dragon Quest III 1988]] 更是火爆一时的现象级游戏，当时人们在深夜已经大排长龙，为了入手这一游戏。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181108386.png"></p><p>即使在那时，在黎明时分排队购买热门新事物的习俗也已经存在。或者说，当时可能更加普遍，因为在当时还没有预购呢！</p><p>樱井自己也是通过这样的排队方式给自己买到了限量的光碟系统 [[family computer disk system]] ：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408181113509.png"></p><p>对于小朋友来说， famicom 的卡带很昂贵，即使如此，大家也会努力购买，一起游玩，并且互相交换卡带。</p><p>因为 [[红白机 Famicom - Family Computer]] 的市场反响非常好，所以几乎每一个拥有主机的人很自然地就会与他人交换昂贵的卡带进行游玩。</p><p>如果 [[红白机 Famicom - Family Computer]] 从未存在过，现代游戏市场可能会是完全不同的局面。它是一款出名的游戏主机，即使是现在也有很多方式来游玩其上的游戏（比如 Switch 会员提供的模拟器）。但樱井想要强调的是在当时，它真的是一台梦想中的游戏主机！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240804 - Praise the Player!</title>
      <link href="2024/08/04/20240804-c11/"/>
      <url>2024/08/04/20240804-c11/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解赞扬玩家的例子和重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C11-Praise-the-player"><a href="#C11-Praise-the-player" class="headerlink" title="C11 - Praise the player!"></a>C11 - Praise the player!</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408041047882.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/fryDyXROp8A?si=pMYkN5qaX6oJxoHj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>- [[樱井政博]] 的游戏中的很多 feature 都会以某种方式来进行庆祝    - 比如在 [[Smash Bros.]] 中，如果将对方角色击飞/KO，或是胜利时，都可以听到欢呼声        ![](https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408041049383.png)    - 如果很艰难地成功扒边，就会听到人群中轻声的“oh！”        ![](https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408041052455.png)    - 在 [[Kirby Air Ride]] 中，在赛道结束后的舞蹈音乐中也能听到人们的鼓掌        ![](https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408041054417.png)- 这些“观众”是谁？    - 游戏的意义之一就是提供乐趣，所以赞赏玩家的好的行为是非常重要的    - 你可以说物品或是进程的奖励是玩家自己争取的奖励，但其实这样还不够    - 在设计中，这些奖励是游戏中所期望会出现的内容，但其中并没有明显包含告诉玩家他们做得好的这样的内容<ul><li><p>一些赞扬玩家的例子</p><ul><li>在 [[Dynasty Warriors]] 系列中，同盟指挥官会基于玩家所击败的敌人数量来赞扬玩家<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408041100440.png"></li><li>在 [[Forza]] 中，你做的每一件事几乎都有相应的加成奖励，无论你开得“好”还是“烂”<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408041101602.png"></li></ul></li><li><p>这些方法都很有效，所以无需犹豫，尽管将其加入游戏当中！</p></li><li><p>在 [[Smash Bros. Ultimate]] 中，当玩家被 KO 时，加入了一些五彩碎纸特效</p><ul><li>这对于刚刚犯错的玩家可能看起来有些奇怪，但这对于刚刚成功 KO 的玩家是一种五彩的赞扬~<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202408041105048.png"></li></ul></li><li><p>无论你的游戏是什么，尽量不要用最明显的、时尚的方式来表达</p><ul><li>相对的，找到能够契合玩家感觉的，或是能够加强玩家感觉的方式</li><li>无论是直接还是间接地做这件事，确保心怀善意！（kill’em with kindness!）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240728 - Using Tickets to Manage Tasks</title>
      <link href="2024/07/28/20240728-k04/"/>
      <url>2024/07/28/20240728-k04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解工单系统（tickets）！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="K04-Using-Tickets-to-Manage-Tasks"><a href="#K04-Using-Tickets-to-Manage-Tasks" class="headerlink" title="K04 - Using Tickets to Manage Tasks"></a>K04 - Using Tickets to Manage Tasks</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407281121840.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/7NpLxkkeh6Y?si=8duojo93mdmJynsn" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>- 今天的主题也与团队管理契合- [[樱井政博]] 猜想，现如今如果已经有一定规模的团队已经在使用 ticketing 系统，但对于那些不熟悉的工作场景，或游戏行业之外的情况，这可能是个值得讨论的问题<ul><li>当在项目中工作时，基本所有的任务都会被转化为工单（tickets），即基于服务器的电子数据（如 [[Jira]]）<ul><li>这种情况下，工单在不同人员之间流转，拿到工单的人会负责产出内容</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407281125771.png"></p><ul><li><p>樱井会给出例子 - 以一个角色的生产为例</p><ul><li>Planner<ul><li>创建参数，并将其列在文档中</li></ul></li><li>Modeler<ul><li>创建模型和绑定骨骼</li></ul></li><li>Animator<ul><li>创建动画</li></ul></li><li>Programmer<ul><li>添加逻辑</li></ul></li><li>Effect designer<ul><li>创建视觉效果</li></ul></li><li>Sound designer<ul><li>创建音效</li></ul></li><li>Play tester<ul><li>提供平衡依据</li></ul></li></ul></li><li><p>工单在不同团队间流转</p></li><li><p>每一个工单都会被分配给团队领导或成员</p><ul><li>由此来确认当前状态以及防止漏掉任何事情</li></ul></li><li><p>当上下流的工作有所交集的时候，有多个工种成员可能都会共享相同的工单</p><ul><li>比如动画的制作需要在模型完成后才能进行</li></ul></li><li><p>有时候，如果进度拖后了，下游的成员那可能会基于手头已有的东西提前开始，但这最好尽量避免</p></li><li><p>每个工单都有状态来快速判断事情的情况</p><ul><li>进行中</li><li>完成</li><li>等待中</li><li>撤销</li><li>…</li></ul></li><li><p>一般情况下，工单也会有截止日期</p><ul><li>这样可以方便生产管理部门提前预知风险</li></ul></li><li><p>测试者们也会有工单系统</p><ul><li>一般由生产部门提交一个需要验证的 bug</li><li>测试团队会对其进行验证，之后返回给生产团队进行修复</li><li>Bug 内也会写清复现步骤及预期行为</li></ul></li><li><p>工单这个说法在不同的环境中可能说法不同，但其本质都是一个任务，通常而言，将任务进行可视化呈现是很重要的</p><ul><li>对任务进行管理，并且确保其清晰定义</li></ul></li><li><p>过去没有这样的系统，但现在这是非常重要的系统，否则工作就不好推进下去！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240721 - Emphasizing Text</title>
      <link href="2024/07/21/20240721-j05/"/>
      <url>2024/07/21/20240721-j05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏的文本呈现！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="J05-Emphasizing-Text"><a href="#J05-Emphasizing-Text" class="headerlink" title="J05 - Emphasizing Text"></a>J05 - Emphasizing Text</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407211049237.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/bZSNYX5CVpw?si=HpAVfxKwa270mFgn" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>在文本阅读需求较大的作品中，根据作品的不同你可能会看到一些改变文字外观的特殊效果，比如：- 改变字体大小- 改变颜色- 给予其特殊动画效果- 改变字体- ...<p>屏幕颤抖或是闪光特效可以提供相似的结果，但这一期让我们专注于文字本身！</p><p>在一些更为严肃的作品中，改变文字可能并不那么适合，但改变一些特定字母或词语的呈现方式，不仅能够帮助传递一个角色的情绪，也可以相较于直接的呈现之外增添别样风味，所以这些效果还是非常重要的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407211055812.png"></p><p>设计一个可以改变上述效果的系统是个好办法，所以当你的游戏需要被翻译为另一个语言，本地化工作者可以直接改变对应的脚本内容来实现相同的效果。</p><p>这里的脚本（scripting）指的是能够让文本产生特殊效果的特殊代码片段。相比于让开发人员来调整这些部分，最好还是让本地化团队来对其进行维护，毕竟不同的语言有不同风格的强调方式。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407211101553.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407211101394.png"></p><p>比如，日本有着非常长的漫画文化，有着 kakimoji （直接写在背景中的音效描述词） 和 manpu （画在人物周围用于表现其情绪的符号，比如大颗汗珠，不会真实存在于现实中，但具有非常清晰和具体的含义）等不同的方法。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407211106889.png"></p><p>通过改变字体，或改变对话气泡等方式，可以在相对有限的空间内也传达出很丰富的信息。在这样的文化历史背景下，只改变文本大小感觉有些浪费，可以用更多方式将文字的表现力进一步增强。</p><p>但可能并不是所有的语言都会受益于相同的文字特效，最好是让本地化团队基于其语言特性进行工作，这也是为什么让本地化团队能直接更改脚本那么重要。</p><p>文本显示——这是基本中的基本，但如果你的游戏中有着大量的文本阅读需求，那么采用合适的方式来强化文本的表现力一定会让你受益的！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240714 - Sodatete! Kouchuu Ouja Mushiking</title>
      <link href="2024/07/14/20240714-n08/"/>
      <url>2024/07/14/20240714-n08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Sodatete 诞生的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N08-Sodatete-Kouchuu-Ouja-Mushiking"><a href="#N08-Sodatete-Kouchuu-Ouja-Mushiking" class="headerlink" title="N08 - Sodatete! Kouchuu Ouja Mushiking"></a>N08 - Sodatete! Kouchuu Ouja Mushiking</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407072136575.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/b3Fd8pBK0EA?si=0XJMOhJB71glA3Rj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>在 [[樱井政博]] 所有开发的游戏中， [[Sodatete: Kouchuu Ouja Mushiking]] 是开发团队最小的，这是一个为很小的手持设备开发的电子游戏。<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140917088.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140918957.png"></p><p>以前，在日本有一种发售于 2003 年的，需要插卡的街机游戏被称为 [[Kouchuu Ouja Mushiking]]。当投入 100 日元后，机器会打印出一张印有犀牛或甲虫的卡片，将这张卡片放到读卡的部分，就可以让卡牌上的角色互相战斗。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140919175.png" alt="Kouchuu Ouja Mushiking"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140922523.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140925721.png"></p><p>战斗的规则就是石头剪刀布。每一个角色精通三种能力中的一种，让游戏具有 [[push and pull]] - 是要以角色的强势技能出招呢，还是出其不意使用其他技能呢，这都取决于你能否读懂对手。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140927065.png"></p><p>对于年轻观众和海外观众而言可能有些无法想象，但 mushiking 在当时非常火爆，特别是在低年级的小学生群体之中，虽然成年人也有玩的。</p><p>樱井当时与此结缘是因为当时在 [[世嘉 SEGA]] 的 [[竹岐忠 Tadashi Takezaki]] 联系了他。 [[竹岐忠 Tadashi Takezaki]] 当时在 [[世嘉 SEGA]] 是非常出名的员工，现在是一家名为 [[TMS Entertainment]] 的动画公司的 CEO，樱井和他现在也还是好朋友。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140945794.png"></p><p>[[竹岐忠 Tadashi Takezaki]] 最开始的要求包括将当时火爆的电子宠物和甲虫王者结合。 [[Sodatete: Kouchuu Ouja Mushiking]] 的创意大致和樱井当时所做的提案一致，现在就让我们一起看一看！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140946986.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407140959230.png"><br>建议去原视频里看一看，非常有趣！</p><p>在宠物游戏中，不同的成长阶段的能力会变得不同，所以在设计时避免让玩家无法回避战斗。并且为了强调养成感，也有一些特殊设定，比如比起狼吞虎咽，樱井他们选择让甲虫慢慢享用。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407141009352.png"></p><p>喜爱度，喜欢或者不喜欢，物品，疾病，训练，疲劳，变异，展示，告别，逃跑… 在这个小小的设备中有很多特性。</p><p>如果在早晨，角色还在睡觉时将其叫醒，它会调整它的时间表来配合你的叫醒时间，这只是其中一个隐藏特性。</p><p>[[樱井政博]] 在 2005 年的日本春节期间写了这个提案，在之后不久的 E3，樱井就被联系让其制作 [[Smash Bros. Brawl]]，同时制作两个项目真的很有挑战。</p><p>在当时，樱井也在远程工作，这在当时被称为 SOHO - small office/ home office。樱井只和核心成员在 [[世嘉 SEGA]] 总部进行过几次当面会议。在此之外，他们都是通过邮件和在线沟通来推进项目直到完成。</p><p>题外话，编程是由 [[Dragon Quest III]] 和 [[Dragon Quest IV]] 的主程序 - [[内藤宽 Kan Naito]] 完成的，他非常厉害。</p><p>这个游戏是在一块不足一平方米的定制开发板上开发的 - 我们把电路板固定在一块普通的旧木头上面。因为开发和 [[Smash Bros. Brawl]] 的开发相冲突，樱井得在忙别的时候把板子收起来，其实并不是很方便。</p><p>在完成之前，樱井都没有机会在手持设备上进行实机测试，正因如此，在最后的版本中存在一个问题 - 可能是因为处理速度的差别，角色比预期中饿得更快，这使得它几乎随时都想要吃东西，给玩家带来了一些预期之外的压力。樱井对此表示非常遗憾。</p><p>至于游戏的核心，樱井觉得还是非常有趣的，IR-Link 战斗也非常有意思。</p><p>因为 mushiking 已经存在，樱井不用为这个项目再过多构想 [[push and pull]]，但他很高兴他有机会为小型电子设备创建一款作品。</p><p>系列视频的下一部，便是在这期里面提到的同时期开发的作品 - [[Smash Bros. Brawl]]。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240707 - 如何和所有的成员一起从无到有推进功能落地</title>
      <link href="2024/07/07/20240707-thinking-on-game-production-workflow/"/>
      <url>2024/07/07/20240707-thinking-on-game-production-workflow/</url>
      
        <content type="html"><![CDATA[<h1 id="中文版"><a href="#中文版" class="headerlink" title="中文版"></a>中文版</h1><p><strong>English version see below</strong> 😀</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062343205.png"></p><p>这次的 Design Discussion 的主题是“一路走来困扰我的问题之如何和所有的工种一起从无到有推进 功能落地”。（本文中的“功能”用于指代 Feature）</p><h2 id="工作中实际遇到的问题以及个人解决方案"><a href="#工作中实际遇到的问题以及个人解决方案" class="headerlink" title="工作中实际遇到的问题以及个人解决方案"></a>工作中实际遇到的问题以及个人解决方案</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062348438.PNG"></p><p>讨论之前我先以我在工作过程中所实际碰到的问题以及我个人的解决方案作为引子：</p><ul><li>如何清晰地传达设计</li><li>如何让每个人都知道当前的生产状态</li><li>如何让 QC 方便地知道测试流程</li><li>如何将参与制作的所有成员都凝聚到一起</li><li>如何方便地追踪进度</li></ul><h3 id="如何清晰地传达设计"><a href="#如何清晰地传达设计" class="headerlink" title="如何清晰地传达设计"></a>如何清晰地传达设计</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062354764.PNG"></p><ul><li>关于如何清晰传达设计<ul><li>之前的项目一直用的是下列方案<ul><li>Confluence - 设计呈现</li><li>Jira - 任务追踪</li><li>Excel - 任务倒计时</li></ul></li><li>好处<ul><li>非常结构化</li></ul></li><li>缺点<ul><li>可视化很弱</li><li>难以知道你自己的工作与其他工种的工作之间的联系<ul><li>可能发生的情况是直接从 JIRA board 中拿出一个 jira 直接进行生产，其实并不了解这个东西会被用在什么地方，也不知道别的工种的工作如何与自己的这部分工作结合在一起</li></ul></li><li>很难以全局视角总览整个功能的实现情况</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062359591.PNG"></p><ul><li>如何清晰传达设计<ul><li>受到 [[Stone Librande]] 的启发，我开始使用 <a href="https://gdcvault.com/play/1012356/One-Page">One Page Design</a> 来呈现设计<ul><li>可视化的方式使其能够更有效地传递信息</li><li>比起纯文本而言更易读</li><li>鼓励评论</li></ul></li><li>即将设计可视化地以卡片方式进行呈现</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070001292.PNG"></p><ul><li>如何清晰传达设计<ul><li>其实就是将 Miro 引入了工作流中<ul><li>Miro - all-in-one 的信息汇总处</li><li>Confluence - 信息存储，也便于搜索</li><li>Jira - 任务追踪</li><li>Excel - 任务倒计时</li></ul></li><li>好处<ul><li>可以方便地在一个地方查看所有信息</li><li>有很好地可视化方案</li><li>便于理解不同工种之间的工作内容的联系（后面会详细介绍）</li></ul></li><li>缺点<ul><li>对 PM 和 QC 提出了更高的要求（需要使用正确的 labels 对 jira 进行标注）</li><li>手动维护成本比较高（所以引入了自动化的 jira-structure，后面会提到）</li></ul></li></ul></li></ul><h3 id="如何让每个人都知道当前的生产状态"><a href="#如何让每个人都知道当前的生产状态" class="headerlink" title="如何让每个人都知道当前的生产状态"></a>如何让每个人都知道当前的生产状态</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070005355.PNG"></p><ul><li>如何让每个人都知道当前的生产状态 <ul><li>有一段特定的生产时期中引入了每周的 QC smoke test<ul><li>让 QC 对功能的全流程进行测试，以发现问题</li></ul></li><li>引入了每周的评审会议（后来改进为了圆桌 playtest 的形式）<ul><li>圆桌 playtest 的形式可以让每个参与人员都以玩家身份对其进行体验，从而<ul><li>对功能全貌有所了解</li><li>更容易提出反馈意见</li><li>清楚地了解一些设计决策产生的原因</li></ul></li></ul></li></ul></li></ul><h3 id="如何让-QC-方便地知道测试流程"><a href="#如何让-QC-方便地知道测试流程" class="headerlink" title="如何让 QC 方便地知道测试流程"></a>如何让 QC 方便地知道测试流程</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070009273.PNG"></p><ul><li>如何让 QC 方便地知道测试流程 <ul><li>引入了逻辑流程图以清晰定义预期操作和预期行为</li><li>这不仅可以帮助 QC，也可以帮助参与设计的所有人都清晰了解设计如何被呈现</li></ul></li></ul><h3 id="如何将参与制作的所有成员都凝聚到一起"><a href="#如何将参与制作的所有成员都凝聚到一起" class="headerlink" title="如何将参与制作的所有成员都凝聚到一起"></a>如何将参与制作的所有成员都凝聚到一起</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070012729.PNG"></p><ul><li>如何将参与制作的所有成员都凝聚到一起 <ul><li>之前的方法很难知道自己的工作是如何与他人的工作结合的（特别是对于 Designer 之外的工种，很容易出现前面提到的拿到 jira 就直接做的情况）</li><li>由此引入了 LoQ-JobFamily 表<ul><li>左边的设计细节部分所呈现的本身就是对应 L3 阶段的情况</li><li>这个表将对应设计细节的不同工种在不同 level of quality 级别下的目标进行拆分列出，由此可以让参与该部分的成员清楚知道自己的工作内容如何与他人的工作内容结合到一起</li></ul></li></ul></li></ul><h3 id="如何方便地追踪进度"><a href="#如何方便地追踪进度" class="headerlink" title="如何方便地追踪进度"></a>如何方便地追踪进度</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070017516.PNG"></p><ul><li>如何方便地追踪进度 <ul><li>引入了 jira-structure<ul><li>手动维护的成本比较高，所以使用 jira-structure 中的 auto filter 对相应的 jiras 进行自动化归类显示</li><li>由此可以在 LoQ-JobFamily 表格中的对应位置来显示这部分的生产进度</li></ul></li><li>另一个好处在于在进行评审会议时，可以通过查看“最近 x 天关闭的 jiras”来方便地知道当前版本与之前版本的差异情况</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070022887.PNG"></p><h3 id="快速总结"><a href="#快速总结" class="headerlink" title="快速总结"></a>快速总结</h3><ul><li>快速总结<ul><li>为了能清晰地传递设计<ul><li>引入了 One page design 的可视化呈现方法</li></ul></li><li>为了能够让每个人都清楚知道当前的生产情况<ul><li>引入了每周的 QC smoke test</li><li>引入了每周的评审会议（后来改进为了圆桌 playtest）</li></ul></li><li>为了能让 QC 更好地知道测试流程<ul><li>引入了逻辑流程图以清晰定义预期操作和预期行为 </li></ul></li><li>为了能将参与实现的所有成员凝聚在一起<ul><li>引入了 LoQ-JobFamily 表格，让大家知道自己的工作如何与他人工作结合在一起</li></ul></li><li>为了能更好地追踪生产进度<ul><li>引入了自动化的 jira-structure</li></ul></li></ul></li></ul><h2 id="理解合作的本质"><a href="#理解合作的本质" class="headerlink" title="理解合作的本质"></a>理解合作的本质</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070025608.PNG"></p><ul><li>理解合作背后的本质<ul><li>责任 &amp; 参与</li><li>沟通 &amp; 迭代</li></ul></li></ul><h3 id="责任-amp-参与"><a href="#责任-amp-参与" class="headerlink" title="责任 &amp; 参与"></a>责任 &amp; 参与</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070027775.PNG"></p><ul><li>理解合作背后的本质<ul><li>责任 &amp; 参与<ul><li>设计师应该对设计负责<ul><li>这并不仅仅只是一句看似无用的废话，只有设计师真正对自己的设计负责，才有可能感染参与设计实现的每位成员，让他们一起对设计负责</li></ul></li><li>我个人的观点是每个人都拥有设计，设计师不过是推动其向前的助力<ul><li>诚然，是设计师将设计进行整合，但设计应该是属于每个参与者的，每个人都应该对其报以批判的眼光，而不仅仅只是瀑布式地接受任务并完成任务</li></ul></li><li>让所有实现人员参与设计本身使得所有人员都共享设计，对其做出贡献<ul><li>设计师应该在一切开始之前尽可能了解与该设计相关的所有背景，限制（limitation，即无法做什么事），局限（constraint，即在一定条件下才能做的事），并且向大家收集可能的方向（其实算是某种头脑风暴），之后基于此来产出设计初稿</li><li>之后便进行生产实现</li><li>组织大家进行 playtest</li><li>基于 playtest 的结果对设计进行迭代，并不断重复以上步骤</li></ul></li></ul></li></ul></li></ul><h3 id="沟通-amp-迭代"><a href="#沟通-amp-迭代" class="headerlink" title="沟通 &amp; 迭代"></a>沟通 &amp; 迭代</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070036189.PNG"></p><ul><li>理解合作背后的本质<ul><li>沟通 &amp; 迭代<ul><li>设计不应该是瀑布式地，固定式的，而应该是基于 playtest 结果不断迭代的<ul><li>所有参与者在 playtest 时的感受都是真实的，都能够对改进设计提供帮助</li><li>有时候可能需要做一些设计权衡，但每个参与实现的成员都应该清楚知道这背后的原因</li></ul></li></ul></li></ul></li></ul><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407071328431.png"></p><ul><li>要点<ul><li>不断思考，不断学习<ul><li>不仅让思考结果能够让自己受益，应该尽量使得整条工作流上的其他成员也能受益</li></ul></li><li>设计师应该将大家凝聚到一起<ul><li>改进工作流能够让所有人都更加轻松</li><li>了解别人的工作也能启发自己的工作</li></ul></li><li>拥抱 playtest 以及迭代式设计<ul><li>一起 playtest！</li><li>迭代式开发不仅仅只是一种方法论，应该是一种思维<ul><li>这意味着需要不断挑战你（自以为正确）的假设</li><li>拥抱失败</li><li>并基于 playtest 的结果不断改进</li></ul></li><li>不应该将迭代看做是无谓的工作而感到沮丧，而应该将其视为改进设计的机会而感到兴奋！</li></ul></li></ul></li></ul><h2 id="不同工具流的特点对比"><a href="#不同工具流的特点对比" class="headerlink" title="不同工具流的特点对比"></a>不同工具流的特点对比</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070045970.PNG"></p><p>在之后我们更具体地讨论了不同工具流的特点：</p><ul><li>Feature Sign-off<ul><li>工具<ul><li>Excel - 将设计以行为单位进行拆解</li><li>Jira - 任务追踪</li></ul></li><li>好处<ul><li>因为大家所用的形式都是一致的，区别只是在于细粒度的拆分，所以可以认为其保证了下限</li><li>对于 programmer &amp; qc 很友好，因为他们可以逐行进行实现/检查</li></ul></li><li>缺点<ul><li>难以维护<ul><li>特别是当功能变得复杂，以及要维护的东西越来越多时</li></ul></li><li>难以跨团队进行内容的检索<ul><li>因为所有的设计都被分开存储在不同的 excel 中，很难进行全局检索</li></ul></li><li>对于不同工种的颗粒度要求是一致的，这很不合理<ul><li>特别是对于设计而言，比如对于一些符合常识的设计，比如一只小狗需要其会游泳，可能大家大概都能想到最终期望的效果，但如果是从未见过的幻想生物的游泳行为，那可能就需要很多行才有可能较好地进行定义（而且因为很难进行可视化表达，很多细节可能会漏掉，只能通过口头传达）</li></ul></li></ul></li></ul></li><li>Web-based<ul><li>工具<ul><li>Confluence - all-in-one 的设计呈现/储存方案</li><li>Jira - 任务追踪</li></ul></li><li>好处<ul><li>易于搜索内容<ul><li>得益于 confluence 内置的搜索工具，可以较为方便地以关键词进行搜索</li></ul></li></ul></li><li>缺点<ul><li>可视化很弱</li><li>难以知道你自己的工作与其他工种的工作之间的联系<ul><li>可能发生的情况是直接从 JIRA board 中拿出一个 jira 直接进行生产，其实并不了解这个东西会被用在什么地方，也不知道别的工种的工作如何与自己的这部分工作结合在一起</li></ul></li><li>很难以全局视角总览整个功能的实现情况</li><li>页面内容变多之后加载会变慢，并且经常需要重新登录</li><li>因为没有统一的模板，所以呈现的效果依赖于使用者</li></ul></li></ul></li><li>One-page（可视化设计）<ul><li>工具<ul><li>Miro - all-in-one 的信息汇总处</li><li>Confluence - 信息存储，也便于搜索</li><li>Jira - 任务追踪</li><li>Excel - 任务倒计时</li></ul></li><li>好处<ul><li>可以方便地在一个地方查看所有信息</li><li>有很好地可视化方案</li><li>便于理解不同工种之间的工作内容的联系（后面会详细介绍）</li></ul></li><li>缺点<ul><li>对 PM 和 QC 提出了更高的要求（需要使用正确的 labels 对 jira 进行标注）</li><li>手动维护成本比较高（所以引入了自动化的 jira-structure，后面会提到）</li><li>相较于 confluence 而言，可能跨文档搜索没有那么方便</li><li>因为没有统一的模板，所以呈现的效果依赖于使用者</li></ul></li></ul></li></ul><h2 id="各工种成员对于新的工作流的反馈"><a href="#各工种成员对于新的工作流的反馈" class="headerlink" title="各工种成员对于新的工作流的反馈"></a>各工种成员对于新的工作流的反馈</h2><ul><li>QC<ul><li>觉得 jira-structure 能够自动链接和更新对应 bug，不用在各个页面之间多次切换，非常方便</li><li>并且 miro 中可以很方便地查看设计</li><li>逻辑流程图只要熟悉之后就能比较方便地使用</li></ul></li><li>VFX<ul><li>Miro 没有格式限制，并且编辑方便</li><li>对于简单一些的功能，每周评审可能效果会好一些，因为可以比较快速地看到最新的进展，但对于更复杂一些的功能，可能评审时间需要调整</li></ul></li><li>VFX<ul><li>当前的 one page 版本有更好的全局视角</li><li>并且基本不用在多个页面中频繁切换，体验要优于 confluence</li><li>信息汇总之后也比较方便看</li><li>比较喜欢圆桌 playtest 的形式，可以让大家都参与其中，并且能以不同的视角来看待自己的工作，应该让所有的参与者都在与会者有比较好的参会体验，而不是坐着看了一个小时之后拿到了一个新的任务，所以新的形式比较好</li></ul></li><li>Programmer<ul><li>没有特别的感觉</li><li>更重要的是人与人在细节问题上的沟通</li><li>文档更多是作为实现时的检查工具，如果忘记了才会看</li><li>每周评审可以保证质量推进</li><li>压力会来自于质量要求的更改</li><li>可能并不一定适合每一个人</li></ul></li><li>Animator<ul><li>重要的是让更多人能够参与其中，一起圆桌测试是很好的形式</li><li>并且希望 QC 能够更进一步作为 QA 来辅助设计的推进</li><li>不应该只是领导参与会议，负责动画师甚至其他工种也应该参与 playtest，否则信息在传达过程中就会缺失</li></ul></li><li>Audio<ul><li>希望能够接到的是更场景化的和情绪导向的声音需求，而不是功能性描述——“希望在这里有一个声音能够吸引玩家注意”</li><li>当前工作流可以让声音设计师更好地了解具体的应用场景和需求，有利于进行声音设计</li><li>有时候感觉页面中的信息太多了，不知道从何看起</li></ul></li></ul><h2 id="基于此所进行的讨论"><a href="#基于此所进行的讨论" class="headerlink" title="基于此所进行的讨论"></a>基于此所进行的讨论</h2><ul><li>Q 有时候感觉页面中的信息太密集，希望能够改进信息的组织形式<ul><li>需要加入更显眼的开始视图，并辅以清晰的跳转链接来帮助导航</li><li>不一定非要将内容平铺，也可以将内容以类似网页的形式进行组织（即更清晰的从上到下的结构）</li></ul></li><li>Q 设计师应该如何与多工种很好地进行合作，避免产生瀑布式的、任务分配式的设计<ul><li>这里其实前面在合作背后的本质部分提到了，设计师应该在基于设计意图的前提下充分与各工种成员进行沟通，从而尽可能达到双方所期望的结果，并且在实现之后基于测试结果进行迭代。因为每个成员都参与 playtest，所以他们能够清楚知道设计决策背后的原因，有时候甚至他们自己也可以提出改进建议</li><li>并且这也是构建<a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">情感化游戏设计系统（Emotional Game Design System, EGDS）</a>的必要性。Game Designer 提升的办法应该是让自己成为 Experience Designer，虽然可能没有办法在每一方面都做到对应工种的实现能力，但是应该要对各个工种都够提供的帮助都了然，这样既能够减少沟通成本，也能更好地推进设计</li></ul></li><li>Q 如何确定页面所要包含的内容的范围（比如是否要将所有相关内容都放在里面）<ul><li>在前面提到过，可以基于 Jira Epic 来创建 miro page，理想情况下当前页面中的所有信息都是直接由你负责的，并且是直接相关的。剩余一些虽然与之相关，但却不是直接负责生产的部分，可以在页面下方贴上外链，这部分内容主要是设计师用于追踪相关进度，不太需要耗费太多篇幅。</li></ul></li><li>Q 关于文档编辑权限<ul><li>理想情况下应该是共建的形式，但为了避免误操作，目前的形式是设计师进行维护，并且开放页面的评论权限，这样别的成员也可以方便地对页面信息进行评论，并由设计师进行维护更改</li></ul></li><li>Q 是否会增加设计师的工作量<ul><li>当前所做的其实是将原本 confluence 上的内容以 miro 进行呈现，如果要实现较好地可视化传达，其呈现难度确实会更高一些，但对于维护而言是更方便的</li><li>这些信息本就需要被呈现，只是需要以良好的方式被组织起来</li><li>未经转化的会议记录不应该直接成为文档内容的一部分，应该经过转化后成为页面的一部分</li></ul></li><li>Q 对于不同工种的成员，其阅读需求不一样，该如何满足<ul><li>文档最终服务于三种需求<ul><li>生产团队的需求<ul><li>大家需要知道自己所负责的部分是如何对功能产生贡献的</li><li>并且最好能够知道自己所负责的部分如何与他人工作结合在一起，由此也可以激发创意</li></ul></li><li>使用团队的需求<ul><li>比如对于一个 ingredient，当关卡设计师阅读文档时比较关心的是“是什么”以及“怎么用”，他们并不用太知道当前的生产进度（设计师需要及时与使用团队更新当前进度以及迭代情况）。那么就需要基于这样的需求来将内容进行适当分割，比如提供“1 min overview (what and possible gameplay scenarios)”以及“how to use (metrics and tips)”部分以适应他们的需求。</li></ul></li><li>任何人都能接手的需求<ul><li>其实目标就是做到 self-explained</li><li>应该提供具有实践价值的模板来帮助大家形成共识，从而更好地理解每个部分的作用</li></ul></li></ul></li></ul></li></ul><h2 id="可以继续延伸的讨论话题"><a href="#可以继续延伸的讨论话题" class="headerlink" title="可以继续延伸的讨论话题"></a>可以继续延伸的讨论话题</h2><ul><li>如何以恰当的形式进行 Playtest<ul><li>会上提到了 EOTA (Experience observation theory advice) 的方法<ul><li>E - No discuss        </li><li>O – what did you found</li><li>T – problems to be addressed</li><li>A – how to address</li></ul></li><li>对于不同类型的功能，其适合的 playtest 方法也不尽相同，以后需要对此进行详细讨论</li></ul></li><li>如何成为更好的 game designer<ul><li>前面提到了一部分关于 experience designer 的部分，以后有机会可以更详细地展开</li></ul></li></ul><h2 id="可能的新的设计呈现方式"><a href="#可能的新的设计呈现方式" class="headerlink" title="可能的新的设计呈现方式"></a>可能的新的设计呈现方式</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407071301118.png"></p><p>① 为了提升可阅读性</p><ul><li>提供巨大显眼的开始视图</li><li>提供可跳转的 table of content 脑图</li><li>提供 1min overview 以供人们快速了解这个功能（包含可能的玩法场景）</li><li>基于 jira epic 来创建新的页面（可以将相关 jiras 放在最下方）<br>② 为了帮助人们找到需要的信息</li><li>基于需求来切分内容模块（考虑谁会是读者）<ul><li>对于生产团队<ul><li>设计师会带着他们一起看整个设计，所以他们更关心的可能是 Logic Flow 部分</li></ul></li><li>对于使用团队（比如对于使用该功能的 Level Designer）<ul><li>理论上设计师也需要带着他们一起看整个设计，所以对于他们有用的可能是 How to use 部分</li></ul></li><li>为了让整个设计不言自明（以使得任何人能够接手）<ul><li>这个就需要设计师对 Design Detail 部分更好地进行呈现</li><li>并且如果大家能够基于相同的模板来进行信息呈现，理解的成本就会降低</li></ul></li></ul></li><li>使用跳转链接来使得读者可以快速回到 TOC 部分<br>③ 为了更清晰地呈现信息</li><li>即 Design Detail 部分需要设计师很好地进行设计<br>④ 如何让 QC 清晰知道如何进行测试</li><li>即 Logic Flow 部分</li><li>希望不仅只是作为 quality control, 而是 quality assurance 来提升设计<br>⑤ 如何将参与制作的所有成员都凝聚到一起 </li><li>引入 LoQ-JobFamily 表格，让大家知道自己的工作如何与他人工作结合在一起<br>⑥ 如何更好地追踪生产进度</li><li>引入自动更新的 jira-structure（使用正确的 labels 来实现这一点）<br>如何让每个人都清楚知道当前状况</li><li>（可选）引入每周的 QC smoke test</li><li>基于需要组织评审会议（比如圆桌 playtest）<ul><li>使用恰当的形式组织 playtest（并不是每个功能都适合使用圆桌 playtest 的形式）</li></ul></li></ul><p>感谢您的阅读，欢迎大家批评指正！ </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407071413500.PNG"></p><hr><h1 id="English-Version"><a href="#English-Version" class="headerlink" title="English Version"></a>English Version</h1><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062343205.png"></p><p>The theme of this Design Discussion is “Questions that bother me along the way: how to implement a feature from A to Z together with ALL job families”</p><h2 id="Problems-I-met-and-how-I-resolve-them"><a href="#Problems-I-met-and-how-I-resolve-them" class="headerlink" title="Problems I met and how I resolve them"></a>Problems I met and how I resolve them</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062348438.PNG"></p><p>Before the discussion, I will start with the actual problems I encountered during my work and my personal solutions:</p><ul><li>How to deliver the design clearly</li><li>How to enable everyone aware of current status</li><li>How to enable QC to know the flow easily</li><li>How to connect all job families together</li><li>How to track production status</li></ul><h3 id="How-to-deliver-the-design-clearly"><a href="#How-to-deliver-the-design-clearly" class="headerlink" title="How to deliver the design clearly"></a>How to deliver the design clearly</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062354764.PNG"></p><ul><li>How to deliver the design clearly<ul><li>Before, we use the following tools<ul><li>Confluence - deliver the design</li><li>Jira - track the mission</li><li>Excel - jira epic countdown</li></ul></li><li>Pros<ul><li>Structured</li></ul></li><li>Cons<ul><li>Not good at visualization</li><li>Hard to make you aware of the connections between your work and others’ work<ul><li>What may happen is that you take a jira from the JIRA board and start to implement directly, without actually knowing the context, where it will be used, or how others’ work will be connected with your work</li></ul></li><li>Hard to track as a whole picture</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407062359591.PNG"></p><ul><li>How to deliver the design clearly<ul><li>Inspired by [[Stone Librande]], I start to use <a href="https://gdcvault.com/play/1012356/One-Page">One Page Design</a> to deliver my design (i.e., to visualize your design with the format of cards)<ul><li>Visualization makes it be more efficient on delivering info</li><li>Easier to read compared with pure text</li><li>Encourage comment</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070001292.PNG"></p><ul><li>如何清晰传 How to deliver the design clearly<ul><li>I introduce Miro into the workflow<ul><li>Miro - all-in-one place to check info</li><li>Confluence - storage, and facilitate the search across teams</li><li>Jira - track the mission</li><li>Excel - jira epic countdown</li></ul></li><li>Pros<ul><li>Convenient to check at one place</li><li>Good visualization</li><li>Easy to understand the connections between all job families</li></ul></li><li>Cons<ul><li>More requirements for PM and QC to use correct labels</li><li>Manual maintain takes time (so we introduced auto update jira-structure) </li></ul></li></ul></li></ul><h3 id="How-to-enable-everyone-aware-of-current-status"><a href="#How-to-enable-everyone-aware-of-current-status" class="headerlink" title="How to enable everyone aware of current status"></a>How to enable everyone aware of current status</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070005355.PNG"></p><ul><li>Introduced weekly QC smoke test during a specific production period<ul><li>Let QC test the entire process of the feature to find problems</li></ul></li><li>Introduced weekly review meetings (later switched to roundtable playtest)<ul><li>The roundtable playtest allows everyone involved to experience it as a player, so that they could<ul><li>Get a full picture of the feature</li><li>Provide feedback easily</li><li>Clearly understand the reasons for some design decisions</li></ul></li></ul></li></ul><h3 id="How-to-enable-QC-to-know-the-flow-easily"><a href="#How-to-enable-QC-to-know-the-flow-easily" class="headerlink" title="How to enable QC to know the flow easily"></a>How to enable QC to know the flow easily</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070009273.PNG"></p><ul><li>How to enable QC to know the flow easily<ul><li>Introduced a logical flow chart to clearly define expected input and expected output</li><li>This not only helps QC, but also helps everyone involved in the design to clearly understand how the design is presented</li></ul></li></ul><h3 id="How-to-connect-all-job-families-together"><a href="#How-to-connect-all-job-families-together" class="headerlink" title="How to connect all job families together"></a>How to connect all job families together</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070012729.PNG"></p><ul><li>The previous method made it difficult to know how everyone’s work was combined with the work of others (especially for job families other than Designer, it was easy to only do the work directly after getting the jira as mentioned above)</li><li>The LoQ-JobFamily table was introduced<ul><li>The design details on the left itself correspond to the situation at the L3 stage</li><li>This table lists the goals of different jobs at different levels of quality corresponding to the design details, so that members involved in this part can clearly know how their work is combined with the work of others</li></ul></li></ul><h3 id="How-to-track-production-status"><a href="#How-to-track-production-status" class="headerlink" title="How to track production status"></a>How to track production status</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070017516.PNG"></p><ul><li>How to track production status<ul><li>Introduced jira-structure<ul><li>The cost of manual maintenance is relatively high, so the auto filter in jira-structure is used to automatically classify and display the corresponding jiras</li><li>This allows the production progress of each part to be displayed in the corresponding position in the LoQ-JobFamily table</li></ul></li><li>Another benefit is that during the review meeting, you can easily know the difference between the current version and the previous version by viewing the “jiras closed in the last x days”</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070022887.PNG"></p><h3 id="Quick-summary"><a href="#Quick-summary" class="headerlink" title="Quick summary"></a>Quick summary</h3><ul><li>To clearly communicate the design<ul><li>Introduced the visual presentation method of One page design</li></ul></li><li>To enable everyone to clearly understand the current production situation<ul><li>Introduced weekly QC smoke test</li><li>Introduced weekly review meetings (later switched to roundtable playtest)</li></ul></li><li>To allow QC to better understand the test process<ul><li>Introduced a logical flow chart to clearly define expected inputs and expected outputs</li></ul></li><li>To bring all members involved in the implementation together<ul><li>Introduced the LoQ-JobFamily table to let everyone know how their work is combined with others’ work</li></ul></li><li>To better track production progress<ul><li>Introduced an automated jira-structure</li></ul></li></ul><h2 id="Understand-the-core-behind-the-collaboration"><a href="#Understand-the-core-behind-the-collaboration" class="headerlink" title="Understand the core behind the collaboration"></a>Understand the core behind the collaboration</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070025608.PNG"></p><ul><li>Responsibility &amp; Participation</li><li>Communication &amp; Iteration</li></ul><h3 id="Responsibility-amp-Participation"><a href="#Responsibility-amp-Participation" class="headerlink" title="Responsibility &amp; Participation"></a>Responsibility &amp; Participation</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070027775.PNG"></p><ul><li>Understand the essence behind collaboration<ul><li>Responsibility &amp; participation<ul><li>Designers should be responsible for their designs<ul><li>This is not just a seemingly useless nonsense. Only when designers are truly responsible for their own designs can they inspire every member involved in the design implementation and let them be responsible for the design together</li></ul></li><li>My personal opinion is that everyone owns the design, and designers are just the driving force to push it forward<ul><li>It is true that designers integrate the design, but the design should belong to each participant, and everyone should be critical of it, rather than just accepting and completing the task in a waterfall manner</li></ul></li><li>Let all implementers participate in the design itself so that all people share the design and contribute to it<ul><li>Designers should try to understand all the background, limitations (i.e., what can’t be done), constraints (i.e., things that can only be done under certain conditions) related to the design before everything starts, and collect possible directions from everyone (a kind of brainstorming), and then produce the first draft of the design based on this</li><li>Implement</li><li>Organize everyone to playtest</li><li>Iterate the design based on the results of playtest, and repeat the above steps</li></ul></li></ul></li></ul></li></ul><h3 id="Communication-amp-Iteration"><a href="#Communication-amp-Iteration" class="headerlink" title="Communication &amp; Iteration"></a>Communication &amp; Iteration</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070036189.PNG"></p><ul><li>Understand the essence behind cooperation<ul><li>Communication &amp; iteration<ul><li>Design should not be waterfall-like or fixed, but should be continuously iterated based on playtest results<ul><li>All participants’ feelings during playtest are valid and can help improve the design</li><li>Sometimes some design trade-offs may be required, but each member involved in the implementation should clearly know the reasons behind them</li></ul></li></ul></li></ul></li></ul><h2 id="Takeaways"><a href="#Takeaways" class="headerlink" title="Takeaways"></a>Takeaways</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407071328431.png"></p><h2 id="Comparisons-between-different-workflow"><a href="#Comparisons-between-different-workflow" class="headerlink" title="Comparisons between different workflow"></a>Comparisons between different workflow</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407070045970.PNG"></p><p>Later we discussed the pros and cons of different tool flows in more detail:</p><ul><li>Feature Sign-off<ul><li>Tools<ul><li>Excel - Break down the design line by line</li><li>Jira - Task tracking</li></ul></li><li>Props<ul><li>Because everyone uses the same format, so it can be considered that it is friendly to less-experienced designers</li><li>Very friendly to programmers &amp; qc, because they can implement/check line by line</li></ul></li><li>Cons<ul><li>Difficult to maintain<ul><li>Especially when the feature becomes complex and there are more and more things to maintain</li></ul></li><li>Difficult to retrieve content across teams<ul><li>Because all designs are stored separately in different excels, it is difficult to do global retrieval</li></ul></li><li>The granularity requirements for different job families are consistent, which is unpractical<ul><li>Especially for design, for some designs that conform to common sense, such as a puppy needs to be able to swim, everyone may be able to think of the final desired results, but if it is the swimming behavior of a fantasy creature that has never been seen, it may take many lines to define it well (and because it is difficult to express visually, many details may be missed and can only be communicated verbally)</li></ul></li></ul></li></ul></li><li>Web-based<ul><li>Tools<ul><li>Confluence - all-in-one design presentation/storage solution</li><li>Jira - task tracking</li></ul></li><li>Pros<ul><li>Easy to search for content<ul><li>Thanks to the built-in search tool in confluence, you can search by keywords more easily</li></ul></li></ul></li><li>Cons<ul><li>Not good at visualization</li><li>Difficult to know the connection between your work and others’ work. <ul><li>What may happen is that you take a jira directly from the JIRA board and directly implement it, but you don’t actually know where this thing will be used, nor do you know how the work of others’ work is combined with yours</li></ul></li><li>It is difficult to have a global perspective on the implementation of the entire feature</li><li>The page will load more slowly when the content grows, and you often need to log in again</li><li>Because there is no unified template, the presentation results depends on the designers</li></ul></li></ul></li><li>One-page (visual design)<ul><li>Tools<ul><li>Miro - all-in-one place</li><li>Confluence - Information storage, also easy to search</li><li>Jira - task tracking</li><li>Excel - jira epic countdown</li></ul></li><li>Props<ul><li>Convenient to check at one place</li><li>Good visualization</li><li>Easy to understand the connections between all job families</li></ul></li><li>Cons<ul><li>More requirements for PM and QC to use correct tags</li><li>Manual maintain takes time, need automation setting</li><li>Can not search content from other teams directly</li><li>Depends on the user, could make it good or bad</li></ul></li></ul></li></ul><h2 id="Feedbacks-from-different-job-family-members"><a href="#Feedbacks-from-different-job-family-members" class="headerlink" title="Feedbacks from different job family members"></a>Feedbacks from different job family members</h2><ul><li>QC<ul><li>Jira-structure can automatically link and update the corresponding bugs, without switching between pages many times, which is very convenient</li><li>And miro can easily view the design</li><li>As long as you are familiar with the logic flow chart, you can use it smoothly</li></ul></li><li>VFX<ul><li>Miro has no format restrictions and is easy to edit</li><li>For simpler features, weekly reviews may be more effective because you can see the latest progress easily, but for more complex features, the review time may need to be adjusted</li></ul></li><li>VFX<ul><li>The current one page version has a better global perspective</li><li>And basically there is no need to switch frequently between multiple pages, the experience is better than confluence</li><li>It is also easier to read after the information is put together</li><li>I prefer the round-table playtest format, which allows everyone to participate and look at their work from different perspectives. All members should have a better experience as participants, rather than sitting and watching for an hour and then getting a new task, so the new format is better</li></ul></li><li>Programmer<ul><li>No special feeling</li><li>What is more important is the communication between people on details</li><li>Documents are more of a checking tool for implementation, and I will only look at them if forget</li><li>Weekly reviews can ensure quality progress</li><li>Pressure comes from changes in quality requirements</li><li>It may not be suitable for everyone</li></ul></li><li>Animator<ul><li>It is important to allow more people to participate, and roundtable testing together is a good form</li><li>And I hope that QC can go a step further as QA to assist in the advancement of design</li><li>It should not be just the leaders who participate in the meeting, but the animators and even everyone involved should also participate in the playtest, otherwise the information will be lost in the communication</li></ul></li><li>Audio<ul><li>I hope to receive more scenario-based and emotion-oriented sound requirements, rather than functional descriptions - “I hope there is a sound here that can attract the player’s attention”</li><li>The current workflow allows sound designers to better understand the specific scenarios and requirements, which is conducive to sound design</li><li>Sometimes I feel that there is too much information on the page and I don’t know where to start</li></ul></li></ul><h2 id="Discussions-based-on-this"><a href="#Discussions-based-on-this" class="headerlink" title="Discussions based on this"></a>Discussions based on this</h2><ul><li>Q Sometimes I feel that the info on the page is too dense, and I hope to improve the organization of the information.<ul><li>A more prominent start view needs to be added, supplemented with clear jump links to help navigation</li><li>It is not necessary to lay out the content flat, and the content can also be organized in a web page-like format (i.e. a clearer top-to-bottom structure)</li></ul></li><li>Q How should designers work well with all job families to avoid waterfall-style, task-oriented designs?<ul><li>This is actually mentioned in the previous section on the core behind the collaboration. Designers should fully communicate with members of different job families based on the design intent to achieve the results expected by both parties as much as possible, and iterate based on the playtest results after implementation. Because each member participates in playtest, they can clearly understand the reasons behind the design decisions, and sometimes they can even make suggestions for improvement themselves.</li><li>This is where the needs of creating the <a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">Emotional Game Design System (EGDS)</a> comes from. The way a Game Designer grows is to become an Experience Designer. Although it may not be possible to as capable as other job families in their expertise, designers should be clear of the help that others can provide. This can not only communicate efficiently, but also have better chance to improve a design.</li></ul></li><li>Q How to determine the scope of the content to be included in the page (such as whether to put all related content in it)<ul><li>As mentioned earlier, you can create a miro page based on Jira Epic. Ideally, all the information on the current page is directly related and belongs to you. The remaining parts that are related but not your team is not directly responsible for production can be posted as external links at the bottom of the page, this part of the content is mainly used by designers to track related progress and does not need to take up too much space.</li></ul></li><li>Q Regarding document editing permissions<ul><li>Ideally, it should be a collaborative page, but in order to avoid miss-editing, current way is for designers to maintain and grant the page comment permissions, so that other members can also easily comment on the page, and the designer can maintain and iterate it.</li></ul></li><li>Q Will it increase the workload of designers?<ul><li>What we are doing now is actually presenting the original content on Confluence in Miro. If we want to achieve better visual communication, the presentation difficulty will be higher, but it is more convenient for maintenance.</li><li>Info needs to be presented one way or another, but it needs to be organized in a good way.</li><li>Unconverted meeting recap should not be directly be part of the page content, but should be converted first</li></ul></li><li>Q Different job families have different needs, how to handle this? <ul><li>There are three needs<ul><li>The needs of the production team<ul><li>Everyone needs to know how their work contributes to the feature</li><li>It is also better to know how their work is connected to others’ work, which can also inspire creativity</li></ul></li><li>The needs of the user team<ul><li>For example, for an ingredient, when the level designer reads the document, they are more concerned about “what is it” and “how to use it”. They may don’t need to know too much about the current production progress (the designer needs to update the current progress and iteration status with the user team timely)</li><li>Then it is necessary to divide the content appropriately based on such needs, such as providing “1 min overview (what and possible gameplay scenarios)” and “how to use (metrics and tips)” sections to meet their needs</li></ul></li><li>The need for anyone to take over<ul><li>In fact, the goal is to be self-explained </li><li>Templates should be provided to help everyone reach a consensus and better understand the role of each part.</li></ul></li></ul></li></ul></li></ul><h2 id="Other-topics-may-be-extended-in-the-future"><a href="#Other-topics-may-be-extended-in-the-future" class="headerlink" title="Other topics may be extended in the future"></a>Other topics may be extended in the future</h2><ul><li>How to do playtest in an appropriate way<ul><li>The EOTA (Experience observation theory advice) method was mentioned in the meeting<ul><li>E - No discussion</li><li>O – what did you find</li><li>T – problems to be addressed</li><li>A – how to address</li></ul></li><li>Different type of features have different suitable playtest methods, which need to be discussed in detail in the future</li></ul></li><li>How to become a better game designer<ul><li>A part about experience designer was mentioned above, and this is to be discussed in the future</li></ul></li></ul><h2 id="A-possible-new-workflow"><a href="#A-possible-new-workflow" class="headerlink" title="A possible new workflow"></a>A possible new workflow</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407071301118.png"></p><p>① To improve readability</p><ul><li>Provide a large and eye-catching start view</li><li>Provide a table of content mind map that can be used for navigation</li><li>Provide a 1min overview for people to quickly understand this feature (including possible gameplay scenarios)</li><li>Create a new page based on jira epic (you can put the relevant jiras at the bottom)<br>② To help people find the information they need</li><li>Split the content based on needs (consider who will be the reader)<ul><li>For the production team<ul><li>The designer will walk them through the design, so they may use the Logic Flow part heavily</li></ul></li><li>For the user team (such as the Level Designer who uses this feature)<ul><li>In theory, the designer also needs to walk them through the design, so the How to use part may be useful to them</li></ul></li><li>To make the entire design self-explanatory (so that anyone can take over)<ul><li>This requires the designer to better present the Design Detail part</li><li>And if everyone can present information based on the same template, the cost of understanding will be reduced</li><li>Use jump links to allow readers to quickly return to the TOC part<br>③ To present information more clearly</li></ul></li></ul></li><li>That is, Design Detail part requires good presentation<br>④ How to let QC know how to test clearly</li><li>That is, the Logic Flow part</li><li>Hope to involve them not only as quality control, but also as quality assurance<br>⑤ How to bring together all members involved in the production</li><li>Introduce the LoQ-JobFamily table to let everyone know how their work is connected to others’ work<br>⑥ How to track production</li><li>Introduce an automatically updated jira-structure (use the correct labels to achieve this)<br>How to let everyone know the current status clearly</li><li>(Optional) Introduce a weekly QC smoke test</li><li>Organize review meetings based on needs (such as roundtable playtests)<ul><li>Organize playtests in an appropriate form (not every feature is suitable for the form of roundtable playtests)</li></ul></li></ul><p>Thanks for your watching, looking forward to your comment 😀</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202407071413500.PNG"></p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240630 - Exaggerate to Make Up for Information Loss</title>
      <link href="2024/06/30/20240630-g07/"/>
      <url>2024/06/30/20240630-g07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解让动画变得夸张以弥补信息缺失的必要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G07-Exaggerate-to-Make-Up-for-Information-Loss"><a href="#G07-Exaggerate-to-Make-Up-for-Information-Loss" class="headerlink" title="G07 - Exaggerate to Make Up for Information Loss"></a>G07 - Exaggerate to Make Up for Information Loss</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406301120591.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/Ivwt37x-2EU?si=umx1D9nhOP5PVGlt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>今天这期要讲的是和动画有关的 tip<p>2002 年，[[卡普空 Capcom]] 在 PS2 上发布了 [[钟楼惊魂 3 Clock Tower 3]]，这也是日本有名的电影导演 [[深作欣二 Kinji Fukasaku]] 监制的最后一部作品。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406301124093.png"></p><p>不难看出，游戏中的转场表演非常夸张，甚至到了有些好笑的程度。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406301140499.gif"></p><p>据说深作先生对此事是这样说的：利用基于多边形的角色，你会失去很多由真实的人类提供的信息，所以你需要利用夸张的表演来弥补这部分缺失。</p><p>[[樱井政博]] 说，实话讲，他受到震撼了。即使这只是 [[深作欣二 Kinji Fukasaku]] 的第一部电子游戏制品，他是如此清晰而具体地掌握了事情的关键！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406301146399.gif"></p><p>游戏角色确实由许多部分构成，但包括动画在内的所有部分都并非真实存在，正因如此，“太过了”其实就是“刚刚好”。</p><p>当你使用 [[动作捕捉 motion capture]] 来制作动画时，通常你是没办法将原始数据直接导入游戏中就万事大吉的。虽然取决于游戏品类，但通常而言，让其变得夸张会让其变得更好。角色在屏幕上的相对大小也会对此有影响，当角色处于近距离时，有些元素可能恰到好处，但当角色变小了或者距离远了，这些元素最终就感觉太轻描淡写了。</p><p>对于动作游戏而言，每一作都会在一些元素上做一些调整，比如 [[push and pull]] 或是 [[intrinsic feeling - 控制感 controls feel]]。但通常而言，让动画变得更加夸张总没错的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406301155305.gif"></p><p>如果你让一个挥剑的动画仅仅只是挥剑，一定会在最重要的部分显得有所不足。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406301157347.gif"></p><p>[[钟楼惊魂 3 Clock Tower 3]] 是来自不同时代的游戏作品， [[樱井政博]] 也并不是说它就比目前的作品要好，但他确实认为这部作品是宝贵的资源。当你缺失信息的时候，就用夸张的动画来弥补吧！时刻谨记你的角色在屏幕上的存在，大小，控制，然后让动画变得夸张，让它们组合起来向玩家重拳出击，让玩家铭记！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240623 - Supervising Art Through Retouches</title>
      <link href="2024/06/23/20240623-f05/"/>
      <url>2024/06/23/20240623-f05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何监制游戏美术！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="F05-Supervising-Art-Through-Retouches"><a href="#F05-Supervising-Art-Through-Retouches" class="headerlink" title="F05 - Supervising Art Through Retouches"></a>F05 - Supervising Art Through Retouches</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231147549.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/s08NT-TVCvU?si=_Q1MEZvd9nc8ef7v" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>当监制一款游戏的图形时，最好的办法就是展示到底想要什么。<br>这期内容中， [[樱井政博]] 会分享一些他自己曾经监制的 background art</p><p>下面是一幅以洞穴为主题的背景图，当你送出命魂进行探索时就会显示这个。这一张图片的色彩饱和度有些偏低，所以樱井对其进行了一些修正之后来显示他想要的效果<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231125454.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231127711.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231128467.png"></p><p>下面是一张用于对抗 Marx 的 BOSS 战斗的背景图，以及樱井重新调整后送回的图像</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231129395.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231129419.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231130535.png"></p><p>这是一张展示 [[World of Light]] 的路径图，樱井想强化对比度，并且突出岩浆的热度，所以进行了调整。他避免让岩浆太亮从而让眼睛感到不适。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231131843.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231132718.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231133519.png"></p><p>这些解释其实很难用言语来传达，你认为什么是最好的传达方式呢？</p><p>当然了，让导演为所有的美术作品都做调整示例并不现实，时间肯定不够。也就是说，刚才展示的那些调整都是在五分钟内，最多十分钟就完成的，这样比起用言语来解释会更有效率。</p><p>以 cave 那张图为例：</p><ul><li>先将其载入 Photoshop</li><li>复制图层后再增加对比度</li><li>调整饱和度</li><li>用橡皮擦将光会照射的部分的饱和度修正图层的调整擦去<ul><li>由此，紫色的图层开始呈现出漂亮的反光效果<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231139238.png"></li></ul></li><li>最终调整颜色让其更加自然<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231140454.png"></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406231141019.png"></p><p>通过在一个单一色调的背景图中引入更加复杂的色彩材质，樱井觉得这样让图片获得了整体提升。</p><p>顺带一提，他自己是不用绘画板的，只使用鼠标。</p><p>这些调整示例只是些例子，艺术家们需要再做进一步工作。当然，如果大家提交的第一版美术就能被通过是最好不过了！</p><p>最终，监督所做的真的就是规划创意路线。为了让艺术作品达到可发售的级别，艺术家们需要重新接过手并且认真打磨。</p><p>樱井还有很多如此这般的监督故事，如果感兴趣的话会再分享。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240908 - An Up-Close Look at Smash Bros. Stages</title>
      <link href="2024/06/23/20240908-f06/"/>
      <url>2024/06/23/20240908-f06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Smash Bros. Ultimate 的场景设计！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="F06-An-Up-Close-Look-at-Smash-Bros-Stages"><a href="#F06-An-Up-Close-Look-at-Smash-Bros-Stages" class="headerlink" title="F06 - An Up-Close Look at Smash Bros. Stages"></a>F06 - An Up-Close Look at Smash Bros. Stages</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409080939913.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/lvYN7JciOdk?si=Rh-Xwe30LXt9r6BC" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>[[Super Smash Bros.]] 有着非常多不同的地图（stages），单单 [[Smash Bros. Ultimate]] 就有着大概 115 张地图。</p><p>让这些地图在 [[Nintendo Switch]] 上有 8 位斗士同时在场战斗的情况下以 60 帧每秒运行真的很不容易！然而，在给这么多作的 [[Super Smash Bros.]] 重新创建这些世界之后， [[Smash Bros. Ultimate]] 给人的感觉是这一作的宽度非常夸张。在今天的这期视频里面会着重看几个地图！你会有机会看到地图团队的辛苦工作，这也能给一些有抱负的游戏艺术家们提供一些很好的参考~</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081256588.png" alt="Battlefield"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081257154.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081258574.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081258025.png" alt="Rainbow Cruise"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081259863.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081300235.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081301081.png" alt="Kongo Falls"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081302526.png" alt="Jungle Japes"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081303799.png" alt="Great Bay"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081304411.png" alt="Yoshi&#39;s Story"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081304848.png"> </p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081305774.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081305125.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202409081306315.png"></p><p>这期都是场景展示，后面的就不再截图啦，大家最好还是直接去观看原视频, 有很多有趣的小细节！并且还有对应的背景音乐~</p><p>有如此多不同游戏的相关主题都放入了大乱斗中，真是不可思议！通常而言是不可能在市场上见到一部作品中包含如此之多其他作品的元素的！创建它们当然都很有挑战，但能够见到如此之多不同游戏的元素也是乐趣之一！所以 [[樱井政博]] 可以保证团队的大家都全心投入其中，并且也非常享受制作的过程！</p><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240107 - Game Music and Ambient Sounds</title>
      <link href="2024/06/16/20240616-i05/"/>
      <url>2024/06/16/20240616-i05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解真实音效与夸张音效！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="I05-Audio-as-Fiction-and-Non-Fiction"><a href="#I05-Audio-as-Fiction-and-Non-Fiction" class="headerlink" title="I05 - Audio as Fiction and Non-Fiction"></a>I05 - Audio as Fiction and Non-Fiction</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406161138503.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/6Ns03q8noEA?si=36l74DyBudMeWvOE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>想一想 2D/3D 的格斗游戏，如果它们用的都是完全真实的音效， [[樱井政博]] 怀疑它们是否还会如今天这般受到欢迎。<p>视频中展示了广受好评的 [[街头霸王 2 Street Fighter II]] 的音频，实际上听起来非常假对不对？</p><p>他在想不知道海外的玩家们会不会听着觉得很怪？（挺酷的呀哈哈哈）个人来讲，樱井觉得这些音效让他回想起了日本昭和时代的老式黑道电影。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406161143321.gif"></p><p>有许多种制作电影的方式，但从文化特性上讲，日本总是倾向于使用夸张音效，甚至是动漫之外的媒介也是如此。当然了，所有的音效师必须让其听起来很不错。</p><p>无论是电影还是游戏，视觉效果越真实，夸张的音效就越容易让人觉得奇怪。即是说，如果游戏用了真实的音效，你只会在角色互相打击时听见很多巴掌煽动声和沉闷的打击声，感觉就少了很多意思。</p><p>如果你从一开始就不记得格斗游戏与真正的格斗完全不同的话（Fighitng games are nothing like actual fighting!），你很可能最后会大大偏离你想要达到的 [[game essence]] </p><p>当然了，使用真实音效也并不是没有任何好处——可以让你为一些可能原本毫无意义的事物赋予意义。</p><p>然后视频里播放了 [[Minecraft]] 里面各种非常真实的音效</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406161258865.gif"></p><p>音效既可以非常夸张，也可以非常真实，为你的游戏寻找合适的平衡，以此让游戏世界变得更加充实！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240613 - 游戏之于我</title>
      <link href="2024/06/13/20240613-thinking-on-game/"/>
      <url>2024/06/13/20240613-thinking-on-game/</url>
      
        <content type="html"><![CDATA[<h5 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h5><p>开了几次 design discussion 之后，有了做点什么的想法。做什么呢？并没有一个明确的答案。</p><p>好像越来越难以对什么东西提起兴趣了——玩了一段时间后感觉好像知道再玩下去会发生些什么，即使这可能并不是真的。</p><p>飞机上很适合阅读和想问题，因为没办法舒服地干别的事。很自然地，想到了一些绕不开的问题：</p><ul><li>什么是游戏</li><li>于我而言，什么是好游戏</li><li>我究竟在游戏中寻找些什么</li><li>什么是我想做的游戏</li></ul><p>在这个不知道该干些什么的晚上，我决定再想一想。</p><h5 id=""><a href="#" class="headerlink" title="?"></a>?</h5><h6 id="什么是游戏"><a href="#什么是游戏" class="headerlink" title="什么是游戏?"></a>什么是游戏?</h6><p>至今也见过、听过不少回答——是问题，是可以主动交互的电影，是一种可以暂时脱离现实的方式…在很长一段时间内将其搁置后，尝试在这里给出答案：<br>游戏是一种不应当被媒介本身所限制的展现思想的途径。<br>玩游戏这一行为是对制作者所展现的思想一隅的琢磨和探寻。</p><p>对于非独立游戏，这依然成立，只是可能能够被完整体会的部分会被不同程度地稀释。事物被构建的方式即是对制作者思想的某种呈现。</p><h6 id="于我而言，什么是好游戏？"><a href="#于我而言，什么是好游戏？" class="headerlink" title="于我而言，什么是好游戏？"></a>于我而言，什么是好游戏？</h6><p>基于此，能自然、融洽地展现制作者思想的，应该都可以被纳入“好游戏”的范畴。<br>自然，指的是大音希声、大象无形、莫逆于心、心有灵犀。融洽，指的是 <a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">EGDS</a> 中各个部分（storytelling, gameplay &amp; challenges, narrative）能很好地耦合在一起。这真的很难。</p><p>正如我在 <a href="https://medill-east.github.io/2024/02/25/20240225-simulator-of-the-meaning-of-life/">《人生意义模拟器》 Demo 展示及制作复盘分析</a> 中所写的，也许我理想中的游戏能做的是如荣格的阴影学说（shadow）中所提的一样，是对和自己有着相似阴影的他者的阴影的揭示。玩家在玩游戏时的体验能够帮助 TA 们揭示自身的阴影，游戏也是为玩家所提供的“爵士乐队”和“舞台”，玩家在此期间能够奏响独属于自己的“爵士乐”。</p><h6 id="我究竟在游戏中寻找些什么"><a href="#我究竟在游戏中寻找些什么" class="headerlink" title="我究竟在游戏中寻找些什么"></a>我究竟在游戏中寻找些什么</h6><p>当时在飞机上是直接从这个问题开始回答的，当时的答案是——</p><ul><li>对好奇的满足（自主探索）</li><li>非惊吓刺激（打击感/冲击力/爽/美）</li><li>再次打开/不想停下的冲动（具体可以看 <a href="https://medill-east.github.io/2024/03/01/20240301-thinking-on-game-replayability/">为什么玩游戏时“根本停不下来” - 从可重玩性出发的思考</a>）</li></ul><p>现在在回答了上面两个问题之后，感觉当时的答案是对于“所喜欢的游戏提供了什么吸引我的东西”的回答，其实并不是我在游戏中所寻找的，因为长久以来我可能很少能在其中找到我想找到的东西。在写下这些文字之前，我甚至都没有很清楚地意识到我在寻找什么——发现自我阴影的机会。</p><h6 id="什么是我想做的游戏"><a href="#什么是我想做的游戏" class="headerlink" title="什么是我想做的游戏"></a>什么是我想做的游戏</h6><p>以前和朋友聊天时说起过，感觉想做的游戏并不属于传统意义上的“好玩”的游戏，更类似是将一个“已然存在之物”的“实体化”——即它可能本来就在那里，只是借我之手呈现世间。但朋友也批评我很容易“概念先行”，我当时有些不知道怎么回答，后来想想，所说的应该是我所提的设计无法回答 WHY——为何如此存在。</p><p>我不知道这是否是一个可以回答的问题。可能这也是为什么在工作中被评价为 “sometimes too rational”——可能是一种对这一无法回答问题的某种补偿吧哈哈。</p><h5 id="…"><a href="#…" class="headerlink" title="…"></a>…</h5><p>絮叨一堆，略有所得，来日方长，就此停笔。</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240602 - Ten People Can Produce Seven People&#39;s Work</title>
      <link href="2024/06/02/20240502-e04/"/>
      <url>2024/06/02/20240502-e04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解人多意味着管理成本的上升和产出的相对下降！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="E04-Ten-People-Can-Produce-Seven-People’s-Work"><a href="#E04-Ten-People-Can-Produce-Seven-People’s-Work" class="headerlink" title="E04 - Ten People Can Produce Seven People’s Work"></a>E04 - Ten People Can Produce Seven People’s Work</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406021124186.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/1-iZFmenARA?si=a6L0WtiNQAArQENT" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>- 十个人能干十个人的活，并不总是真的    - 取决于不同的情况，但十个人一般能产出七个人的产出<ul><li>这是因为你需要花费更多的时间在管理上，即团队管理也需要耗费精力</li><li>当然了，可以让员工们百分百投入到自己的工作上，但这可能不太能被称之为团队，至少需要人来<ul><li>项目管理，管理工作量</li><li>商务合作，和其他公司进行交涉</li><li>监督/导演，来决定创意方向<ul><li>有事导演本身就是创意指导</li><li>但更大一些的项目其实管理的是 Lead Designer/Programmer 来进行整体的质量管理</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202406021128354.png"></p><ul><li><p>当能力比较强的员工成为了管理者，他们通常无法再和以前一样进行同等量级的工作产出</p><ul><li>当经验丰富的创意人员转换到管理岗时，毋庸置疑，你会失去他们作为执行人员时的产出，可这就是团队中会发生的事情</li><li>经验丰富的人们成为了大脑，决定创意方向，以及进行质量把控，确保团队向着目标前进</li></ul></li><li><p>在只有很少的人的小型团队中，每个成员可能都能像往常一样继续产出。但团队越大，在管理上需要耗费的精力就越多</p><ul><li>人越多，就越难以达成共识<ul><li>并不只是对于创意方向是如此，工具、安全、规则等都需要被设定以及理解</li></ul></li></ul></li><li><p>为了帮助团队成员获得自顶向下的全局视角， [[樱井政博]] 的建议是当子团队有成果产出时，召开团队会议进行展示</p><ul><li>比如，角色设计团队可能会展示他们在一定时间内设计好的角色</li><li>除了让整个团队知道别的人在做什么工作，这也能锻炼团队的展示能力，同时让他们也知道他们在为其他人做一些有价值的工作</li></ul></li><li><p>最终，玩家们会上手游玩你的游戏，所以在此之前，让你的产品经受多方的检视，一起打磨产品吧！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240526 - Mastering Up</title>
      <link href="2024/05/26/20240526-m12/"/>
      <url>2024/05/26/20240526-m12/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Mastering Up！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M12-Mastering-Up"><a href="#M12-Mastering-Up" class="headerlink" title="M12 - Mastering Up"></a>M12 - Mastering Up</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405260958865.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/y2Webks5iTs?si=g2CVK69TKkzvc8kM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>经过长时间的辛苦工作，你的游戏终于制作完成了，恭喜！将制作好的游戏提交的过程被称为 [[mastering up]]（封版？）<p>你现在可能认为 [[mastering up]] 是结束的快乐时刻，但实话讲，并不总是如此的。<br>为了能够到达那个阶段，你可能需要做出一些艰难的抉择，砍掉一些内容。<br>如果你们的游戏可以在线更新，你甚至还需要不断解决那些溜进最终版本的问题。如果非要说有什么感受的话，更常见的感受是有些受伤（wounded）。至少 [[樱井政博]] 自己是这么觉得的。<br>当然了，这个阶段也应该向那些陪你一路走来辛苦付出的同事表示感谢。</p><p>在 [[NES]] 和 [[Game Boy]] 时代，当时的互联网不如现在这般普及，所以需要真的将最终版本以实体版送去交付。<br>比如，在东京做出了 ROM，有一个人坐上高铁，像保护珍视之物般保护 ROM，将其送到任天堂的总部。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405261038402.png"></p><p>当时，最快的 nozomi bullet train 甚至还不存在，或是刚刚开始运行。你可以想象，当时的旅途是多么令人忐忑。你需要携带公司的重要机密横跨半个国家。</p><p>当时，ROM 还是实体形式，网上更新也还不现实，开发真的就结束于此了。即使有海外版本需要制作，截止日期通常也明确定下。</p><p>现如今，因为网上在线更新成为可能，即使达到了 [[mastering up]] 的阶段，你也并不会感到松一口气以及项目已经结束。</p><p>然而，经历了长时间的开发，克服种种困难，告诉自己已经有了一个完成的产品还是很不错的一件事。这也能给 [[樱井政博]] 一些机会来回顾和思考世上有多少其他开发者也必须经历相同的困境才能完成他们的游戏。</p><p>[[樱井政博]] 自己非常了解这些痛苦，所以他对自己玩到的游戏总是心存感激。</p><p>现在，对所有完成了 [[mastering up]] 的开发者们说一句：恭喜！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240519 - 游戏头脑风暴方法</title>
      <link href="2024/05/19/20240519-game-brainstorm/"/>
      <url>2024/05/19/20240519-game-brainstorm/</url>
      
        <content type="html"><![CDATA[<h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191432892.JPG"></p><p>最近以“如何进行游戏头脑风暴”为主题进行了一次 [[design discussion]]，这里将内容进行一下汇总。</p><h2 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h2><p>这次的 PPT 中的内容基本是从 [[游戏设计艺术 the art of game design]] 以及下面这期 Youtube 视频中学习到的：</p><iframe width="560" height="315" src="https://www.youtube.com/embed/y2IAjXl5xRU?si=2_OsTBCl8CZHtXJ2" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h2 id="CONTENT"><a href="#CONTENT" class="headerlink" title="CONTENT"></a>CONTENT</h2><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191435650.JPG"></p><p>会涵盖以下方面：</p><ul><li>[[头脑风暴 brainstorm]] 的关键</li><li>什么是一个好的想法</li><li>进行 [[头脑风暴 brainstorm]] 的建议</li><li>基于给定元素的头脑风暴方法 </li><li>基于已有想法的头脑风暴方法</li><li>审视你的想法</li><li>实际练习</li></ul><h3 id="头脑风暴的关键"><a href="#头脑风暴的关键" class="headerlink" title="头脑风暴的关键"></a>头脑风暴的关键</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191439882.JPG"></p><p>就是越多越好——想到的点子越多，就越有可能得到一个好的点子！</p><h3 id="什么是一个好的想法"><a href="#什么是一个好的想法" class="headerlink" title="什么是一个好的想法"></a>什么是一个好的想法</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191441235.JPG"></p><p>这是 <a href="https://www.youtube.com/watch?v=y2IAjXl5xRU">GET GAME IDEAS - The Ultimate Guide!</a> 视频中所提出的观点，我稍微对其进行了分类：</p><ul><li><p>Design</p><ul><li>Evokes emotions<ul><li>能引起情绪共鸣</li></ul></li><li>Excited to work on！  <ul><li>能让我们感到兴奋！</li></ul></li><li>Exciting for others<ul><li>让别人（主要是目标受众）也能感到兴奋！</li></ul></li></ul></li><li><p>Production</p><ul><li>Reasonable scope you know you can execute!<ul><li>是我们能做出来的</li></ul></li></ul></li><li><p>Marketing</p><ul><li>Target audience<ul><li>有目标受众</li></ul></li><li>Appealing fantasy<ul><li>看起来就很酷</li></ul></li><li>Easy to communicate<ul><li>容易产生话题</li></ul></li><li>Good amount of familiarity<ul><li>有一定的熟悉性</li></ul></li></ul></li></ul><h3 id="进行头脑风暴-brainstorm-的建议"><a href="#进行头脑风暴-brainstorm-的建议" class="headerlink" title="进行头脑风暴 brainstorm 的建议"></a>进行头脑风暴 brainstorm 的建议</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191444575.JPG"></p><p>这是来自 the [[游戏设计艺术 the art of game design]] 一书第七章中的内容：</p><ol><li>Write it down</li></ol><ul><li>即将想法都写下来，以免忘记，也可以让大家都看到</li></ul><ol start="2"><li>Write or type, find your own way</li></ol><ul><li>有的人喜欢写下来，有的人喜欢打出来，选择适合自己的方式！</li></ul><ol start="3"><li>Draw to visualize</li></ol><ul><li>可以将其画出来，方便他人理解！</li></ul><ol start="4"><li>Toys help sparkle</li></ol><ul><li>既是说应该使用实体的玩具帮助我们进行理解</li><li>玩具也具有 tangible 的属性，也许能够迸发创意</li><li>另一层理解是要让游戏像玩具一样可玩~</li></ul><ol start="5"><li>Change the perspective (place/position)</li></ol><ul><li>换个环境（海边而不是工位），换个思路</li><li>换个姿势（躺着而不是坐着），换个角度</li></ul><ol start="6"><li>Immerse to investigate</li></ol><ul><li>选定主题后，要深入研究</li></ul><ol start="7"><li>Make jokes to relax</li></ol><ul><li>记得放松</li></ul><ol start="8"><li>Do not save spaces to write</li></ol><ul><li>不要节省空间，大写特写！</li></ul><ol start="9"><li>Write on a wall</li></ol><ul><li>在墙上写下来，可以让大家都看到</li></ul><ol start="10"><li>Spatial memory</li></ol><ul><li>空间联系可以激发创造力</li></ul><ol start="11"><li>Write everything down</li></ol><ul><li>想到就写，无论好坏</li></ul><ol start="12"><li>Count ideas</li></ol><ul><li>为想法计数<ul><li>既让其变得“郑重”</li><li>也在万一漏掉的时候，让人们容易发现</li></ul></li></ul><ol start="13"><li>Make rules and break them</li></ol><ul><li>打破常规</li></ul><ol start="14"><li>Create pairs with categories (Tech/Art/Mechanics/Story)</li></ol><ul><li>利用 技术 X 美学 X 机制 X 叙事 透镜来创建新的可能</li></ul><ol start="15"><li>Talk to yourself (Think it aloud)</li></ol><ul><li>自言自语</li><li>放声思考！</li></ul><ol start="16"><li>Do it together with friends</li></ol><ul><li>和朋友们一起！</li></ul><h3 id="基于给定元素的头脑风暴方法"><a href="#基于给定元素的头脑风暴方法" class="headerlink" title="基于给定元素的头脑风暴方法"></a>基于给定元素的头脑风暴方法</h3><p>下面的方法同样来自 [[游戏设计艺术 the art of game design]] 第七章，即基于给定元素的头脑风暴方法：</p><ol><li>进行任意联想，无论对错 - 5 min</li><li>将所想到的所有关键字收集为思想卡片</li><li>将思想卡片两两一对进行随机组合，大家一起为每组卡片设想新的玩法（限时 5 分钟）<ul><li>在此期间不进行想法的剔除，鼓励产生更多的想法</li></ul></li><li>为所有想法进行评分<ul><li>每人两票</li><li>建议先自己投票，再汇总投票，以免受到他人投票的干扰</li><li>选出得票最高的三个想法</li></ul></li><li>如果有需要的话就再来一遍</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191452784.JPG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191454828.JPG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191456869.JPG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191459600.JPG"></p><h3 id="基于已有想法的头脑风暴方法"><a href="#基于已有想法的头脑风暴方法" class="headerlink" title="基于已有想法的头脑风暴方法"></a>基于已有想法的头脑风暴方法</h3><p>这是 <a href="https://www.youtube.com/watch?v=y2IAjXl5xRU">GET GAME IDEAS - The Ultimate Guide!</a> 视频中所提出的观点，我稍微做了一些删减：</p><ol><li>从熟悉的开始<ul><li>挑选你熟悉的品类，这样你更容易找到迭代的方向，并且这应该也是你所喜欢的内容</li></ul></li><li>将其变为原创<ul><li>找找你游玩时碰到的问题（并提出改进方案）/ 创建新的挑战 / 移除已有机制</li><li>让故事变得清晰<ul><li>明确/改变其发生的时间</li><li>明确/改变其发生的地点</li></ul></li><li>打破常规</li><li>例子<ul><li>平台跳跃游戏<ul><li>改变机制<ul><li>不能跳跃</li></ul></li><li>添加挑战<ul><li>但能够挖掘前进</li></ul></li></ul></li><li>建造一个水上公园<ul><li>明确/改变其发生的时间<ul><li>但需要在古代进行建造</li></ul></li></ul></li></ul></li></ul></li><li>让其脱胎换骨<ul><li>目标<ul><li>玩家的游玩目标是什么</li></ul></li><li>路径<ul><li>玩家如何达成游玩目标</li></ul></li><li>挑战<ul><li>玩家在达成目标过程中会遇到怎样的挑战</li></ul></li><li>体验<ul><li>期望达成的玩家体验是什么</li></ul></li><li>3C<ul><li>如何控制</li><li>摄像机如何运作</li><li>角色设计</li></ul></li><li>卖点<ul><li>即玩家为什么买你的游戏</li></ul></li><li>Ask why to remove<ul><li>这个和陈星汉提到过的设计需要至少满足三个原因是一样的</li><li>如果不能解释一个设计为何存在，那么可能就是冗余设计</li></ul></li><li>One sentence<ul><li>用一句话解释这个游戏是关于什么的，它为什么特别</li></ul></li></ul></li></ol><blockquote><blockquote><p>“三个原因” 的原则指的是在进行元素引入等设计决策时，应该至少满足三个引入原因，这样才能称得上是有力的设计。<br>《游戏设计艺术》 <a href="https://medill-east.github.io/2022/07/11/20220711-theartofgamedesign-chap13/#toc-heading-1">第十三章 游戏机制必须平衡</a> 中所提到的 <a href="https://medill-east.github.io/2022/07/11/20220711-theartofgamedesign-chap13/#toc-heading-26">49 号透镜：优雅</a> 所说的也是同样的道理，即一个设计应该能够满足多个设计目的。</p></blockquote></blockquote><ol start="4"><li>休息一下（移除偏见）</li><li>和别人分享（特别是和目标玩家进行分享）<ul><li>记录人们的反馈，让下一次设计变得更好！</li></ul></li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191514936.JPG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191515725.JPG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191518970.JPG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191522697.JPG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191522740.JPG"></p><h3 id="审视你的想法"><a href="#审视你的想法" class="headerlink" title="审视你的想法"></a>审视你的想法</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191523502.JPG"></p><p>下面的方法来自 [[游戏设计艺术 the art of game design]] 第八章的透镜 15：</p><ol><li>这个游戏看起来不错吗?</li><li>我们的目标玩家喜欢这个游戏吗?</li><li>这个游戏设计得不错吗?</li><li>这个游戏是否与众不同?</li><li>这个游戏能够盈利吗?</li><li>这个游戏在技术上是否具备可行性?</li><li>这个游戏完成我们的社交或者社区目标了吗?</li><li>游戏测试者是否享受这个游戏?</li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Reading </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240519 - Game Essence in Falling-Block Puzzle Games</title>
      <link href="2024/05/19/20240519-b11/"/>
      <url>2024/05/19/20240519-b11/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习砖块掉落谜题的游戏核心！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B11-Game-Essence-in-Falling-Block-Puzzle-Games"><a href="#B11-Game-Essence-in-Falling-Block-Puzzle-Games" class="headerlink" title="B11 - Game Essence in Falling-Block Puzzle Games"></a>B11 - Game Essence in Falling-Block Puzzle Games</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191019093.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/QOkY6BULsgo?si=vWq2lQCUh0Xz5NkU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>- 当谈及 puzzle game，其实有很多种类    - [[jigsaw puzzles 拼图游戏]] 以及相关类型的游戏并不包含任何的 [[push and pull]]。这类游戏的乐趣来源于把东西整合到一起的成就感。<ul><li>让我们看看有名的 [[俄罗斯方块 Tetris]] <ul><li>它毋庸置疑是好玩的</li><li>它原本的概念其实来源于一个拼图游戏 [[pentomino]]<ul><li>在这个游戏中，你需要将 12 个独特形状的模型拼为一个长方形</li><li>但就像 [[jigsaw puzzles 拼图游戏]] 一样，这个游戏也没有 [[game essence]] </li><li>但 [[俄罗斯方块 Tetris]] 却并非如此<ul><li>即其具有很强的 [[push and pull]]</li><li>原因就在于其具有 [[extrinsic feeling - risk and reward]] </li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191028665.png" alt="Tetris"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191029349.png" alt="Pentomino"></p><ul><li><p>[[risk and reward - risk]]</p><ul><li>如果掉落物不断积累，风险就不断提高<ul><li>堆得越高，思考时间越少</li></ul></li><li>消掉掉落物，对应的风险也就降低了</li><li>为了能一次清掉很多掉落物，可能需要寻找掉落物积累高度的平衡<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191053435.png"></li></ul></li><li><p>[[俄罗斯方块 Tetris]] 中，随着时间增长，掉落物的下降速度也会越快，这带来了更高的风险，也使得游戏更加刺激</p></li><li><p>有一项在游戏后期才加入的特性，是掉落物落地后仍然可以对其进行旋转<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191104760.gif"></p></li><li><p>你也可以尝试将 [[game essence]] ，也就是 [[push and pull]] /  [[extrinsic feeling - risk and reward]] 引入 [[pentomino]] </p><ul><li>但因为碎片的摆放需要一些试错，你所想出的规则需要考虑到这点</li></ul></li><li><p>[[falling-block puzzles 砖块掉落谜题]] 非常的简单且符合直觉，这也使得这类游戏的 [[game essence]] 非常容易理解</p></li><li><p>不应该从砖块必须消失开始设计，而是应该考虑为什么让这些砖块消失是有趣的</p></li><li><p>之前 [[樱井政博]] 提到过 [[Meteos]] 的设计过程，其实当时只花了五分钟就已经想出了发射砖块的核心想法</p><ul><li>虽然樱井自己不太擅长 [[falling-block puzzles 砖块掉落谜题]]，但因为他已经理解这个品类的 [[game essence]]，所以仍然有办法进行设计<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405191111372.png"></li></ul></li><li><p>如果你理解 [[game essence]] 的原则，你就可以快速进行想法迭代，即使你并不是那么擅长这类游戏</p><ul><li>继续关注后续视频来深入了解 [[game essence]] 吧！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240512 - Making Tutorials Feel Natural</title>
      <link href="2024/05/12/20240512-c10/"/>
      <url>2024/05/12/20240512-c10/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解好的新手教程的特点！ </p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C10-Making-Tutorials-Feel-Natural"><a href="#C10-Making-Tutorials-Feel-Natural" class="headerlink" title="C10 - Making Tutorials Feel Natural"></a>C10 - Making Tutorials Feel Natural</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121149390.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/Xz53DEwuAcU?si=GBG0nzXH9kezV8hc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li>教程是教会新玩家如何操作的有效的指导书</li><li>在现代游戏中，这是不折不扣的必备功能</li><li>好在， [[樱井政博]] 觉得业界已经知道了怎么做好的新手教程</li></ul><p>以前，玩家会被置于一个练习场景中，然后被要求与靶子作战。现在这已经变得不那么常见了。</p><p>当介绍一款游戏时，更好的办法是让玩家面对真正的挑战，然后让他们学习如何克服这些挑战。</p><p>让玩家直接开始游玩，他们会更加有参与感，也更加兴奋。</p><p>教程在游戏发展过程中非常重要，至少在上世纪 90 年代后期，新手教程已经是很热门的特性了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121159284.png"></p><p>以早期的 [[Donkey Kong Country 3]] 的关卡结构为例，如果你仔细观察，你会发现香蕉被排列为了字母 A 的形状：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121200400.png"></p><p>通过对应按键，玩家所操控的角色也能做出符合当时情境的合适行为。</p><p>在现代的横版卷轴游戏中，你通常会看到一个在屏幕中出现的交互提示。只需要按下对应按键，一般就能解决这里所面临的问题，从而继续前进：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121203021.png"></p><p>有时候，消息也会直接写在墙上，有可能需要按键才能触发：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121204499.png"></p><p>也有一些情况下，信息直接整合为了 UI 的一部分：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121205157.png"></p><p>无论是何种情境，如果你为控制显示了视觉指引，可能需要考虑按键重映射的问题——是让人头疼的问题。你需要显示玩家可能使用的所有类型的手柄（对应的按键）：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121208364.png"></p><p>对于获取新技能的教程，推荐的做法是展示一小段影片来让玩家直观知道技能效果：</p><blockquote><blockquote><p>这也是我在 emotional game design system 中所提到过的 [[storytelling - CG]] 的用法之一。</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121208406.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121209664.png"></p><p>也有一些游戏甚至可以让你在获取技能之前，先进行试用。但 [[樱井政博]] 认为这个功能比起所达到的效果而言，所花费的精力过多。如果这个特性有加载时间，玩家甚至可能会不愿意使用这个功能。</p><p>对于基于移动的技能，许多游戏会先将玩家限制在一个较小区域内，让他们使用这些技能来推进：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405121212883.png"></p><p>只要玩家最后学到了如何操控，其实形式怎么样都好，但如果能让这个过程更加有趣，就再好不过了！</p><p>教程不该像是上班一样完成任务，也不该让玩家觉得你只是在推迟玩家真正开始游戏的时间。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240505 - Units of Speed</title>
      <link href="2024/05/05/20240505-d07/"/>
      <url>2024/05/05/20240505-d07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏中的速度单位！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="D07-Units-of-Speed"><a href="#D07-Units-of-Speed" class="headerlink" title="D07 - Units of Speed"></a>D07 - Units of Speed</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405051525248.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/_B0cpF8fQ4s?si=qcAgsWKYYN5MR_eY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>速度影响着游戏的方方面面，非常重要。<br>速度 = 距离 / 时间：</p><p>$$<br>Speed = \frac{Distance}{Time}<br>$$</p><p>过去，当时 [[樱井政博]] 还在给基于精灵（sprite-based）的游戏（比如在 [[NES]] 上的游戏）写参数规格的时候，当时的速度公式是 p/f，即 pixels/frame，每帧的像素量，这代表了一个物体每帧能移动的距离。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405051536896.gif"></p><p>在 [[Mario Bros.]] 中，樱井猜 Mario 的移动速度最快也就 1p/f。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405051542157.gif"></p><p>[[Game Boy]]，[[NES]] 以及 [[Super NES]] 都有不同的像素范围，不同设备的画布大小也不相同：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405051546350.png"></p><p>正因如此，如果让物体总是以相同速度移动，结果可能差别很大。</p><p>再之后，3D 游戏出现了，樱井他们可以使用标准的速度单位了，比如 KM/H。</p><p>只要角色和环境使用现实世界中的测量单位，也就可以顺理成章地使用真实的速度及其单位了，这也让事情变得容易理解了许多。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405051549173.png"></p><p>当然了，也并非是说就没有别的需要考虑的方面了… 取决于不同的游戏类型，可能还是有需要将速度定义为单位帧数中的移动距离、每帧移动多少米、每帧移动多少厘米等的情况。</p><p>以 [[Kirby Air Ride]] 为例，游戏中使用 km/h 来表示速度。这个速度可能看起来相对较低，但这是因为卡比自己也只不过是 20cm 的方块大小，所以对其而言，这其实已经是很快的速度了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405051553111.png"></p><p>[[Kid Icarus - Uprising]] 中有一场地面战斗，PIT 其实在步行状态下已经移动得非常快，在跑步时甚至更快。如果以正常情况下的逻辑来制作动画，可能根本看不到他的腿抬起来，所以最终选择让他呈现了更多的跳跃动作，并且让他在地板上滑行前进。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405051555164.png"></p><p>无论是参数说明还是实际参数，如果不能转换速度，是走不长远的。所以，让整个团队都理解移动距离和时间的关系，从而定义测量单位是很重要的。</p><p>培养你在游戏中的速度感是很重要的技能，当你开始解释物体是如何移动，并且为其列出合适的参数时，如果你的估计是准确的，能够节省很多时间。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240428 - 情感化游戏设计系统 - 2 - 探索感作为感性感受如何被纳入系统中进行分析</title>
      <link href="2024/04/28/20240428-emotional-game-design-system-2-intrinsic-feeling-exploration/"/>
      <url>2024/04/28/20240428-emotional-game-design-system-2-intrinsic-feeling-exploration/</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>前段时间再次听了一遍机核在多年前对陈星汉的专访，有了一个想法——“电影工业中，对于观众的情绪塑造和引发有着相对成熟的方法论，但游戏工业中目前好像还没有这样的方法论，能否构建？”</p><blockquote><p><a href="https://www.gcores.com/radios/14599">专访陈星汉 I （游戏之路） - Jenova Chen</a><br><a href="https://www.gcores.com/radios/14601">专访陈星汉 II - 《Journey》 - Jenova Chen</a></p></blockquote><p>在上一篇文章 <a href="https://medill-east.github.io/2024/04/13/20240413-emotional-game-design-system-1-create-the-system/">情感化游戏设计系统 - 1 - 构建系统</a> 中对情感化游戏设计系统进行了构建，此篇中将从我们常说的探索感 Exploration 出发，尝试将其纳入系统中进行分析，在此记录。</p><p>需要指出的是文中很多内容都是和大语言模型（ChatGPT/Claude/Kimi）讨论后得到，尽管我极力避免，但仍有可能会受到 AI 幻觉的影响。如有错误，欢迎批评指正！</p><h3 id="内容概览"><a href="#内容概览" class="headerlink" title="内容概览"></a>内容概览</h3><ul><li>情感化游戏设计系统（Emotional Game Design System, EGDS）回顾</li><li>[[探索 Exploration]] 如何被纳入系统中进行分析<ul><li>Exploration 与 EGDS 关系概述</li><li>Exploration 与 EGDS 关系解释<ul><li>Exploration contributes to emotional experiences</li><li>Exploration as part of feelings</li><li>Exploration itself and how it is achieved</li></ul></li></ul></li><li>总结</li><li>相关链接</li></ul><h3 id="情感化游戏设计系统（Emotional-Game-Design-System-EGDS）回顾"><a href="#情感化游戏设计系统（Emotional-Game-Design-System-EGDS）回顾" class="headerlink" title="情感化游戏设计系统（Emotional Game Design System, EGDS）回顾"></a>情感化游戏设计系统（Emotional Game Design System, EGDS）回顾</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404271604414.png"></p><ul><li>整个游戏最终的目标是为了构建情绪曲线 [[emotional curve]] </li><li>情绪曲线由多个情绪体验 [[Emotional Experiences.excalidraw]] 构成</li><li>情绪体验由 [[感受 feelings]] 铺垫而来</li><li>感受由 [[gameplay &amp; mechanics]] 和 [[storytelling]] 触发</li><li>以上两者又都对 [[narrative]] 进行表达</li></ul><h3 id="探索-Exploration-如何被纳入系统中进行分析"><a href="#探索-Exploration-如何被纳入系统中进行分析" class="headerlink" title="探索 Exploration 如何被纳入系统中进行分析"></a>探索 Exploration 如何被纳入系统中进行分析</h3><blockquote><blockquote><p>最开始其实想讨论的是游戏中那些为你带来不同触动的机制有哪些，思考了一段时间后发现这个题目太大了，并且最终不容易找到落脚点，所以才打算转向稍微具体一些的题目。</p><p>[[探索 Exploration]] 作为游玩体验中经常被提到的一种，很适合作为讨论的起点。</p></blockquote></blockquote><h4 id="Exploration-与-EGDS-关系概述"><a href="#Exploration-与-EGDS-关系概述" class="headerlink" title="Exploration 与 EGDS 关系概述"></a>Exploration 与 EGDS 关系概述</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281726949.png"></p><p>如果基于 EGDS 自顶向下的关系而言：</p><ul><li><p>[[intrinsic feeling - 探索 exploration]] 对于实现以下 [[Emotional Experiences]] 有帮助</p><ul><li>[[兴趣 interest]]</li><li>[[期待 anticipation]]</li><li>[[惊喜 surprise]]</li></ul></li><li><p>[[intrinsic feeling - 探索 exploration]] 和其他 [[感受 feelings]] 的关系是：</p><ul><li>Driven by<ul><li>[[intrinsic feeling - 好奇 curiosity]] <ul><li>Caused by <ul><li>[[extrinsic feeling - 未知 unknown]] </li></ul></li><li>Enhanced by<ul><li>[[extrinsic feeling - 有意义的选择 meaningful choice]]<ul><li>Contributes to<ul><li>[[extrinsic feeling - Positive feedback loop]]</li></ul></li><li>Opposite<ul><li>[[extrinsic feeling - 无意义选择 meaningless choice]]<ul><li>Contributes to<ul><li>[[extrinsic feeling - negative feedback loop]]</li></ul></li></ul></li></ul></li><li>Supported by <ul><li>[[extrinsic feeling - 合理的世界 reasonable world]]<ul><li>Supported by <ul><li>[[extrinsic feeling - suspension of disbelieve]] <ul><li>Against<ul><li>[[extrinsic feeling - 叙事失调 Ludonarrative dissonance]]</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>Enhanced by<ul><li>[[extrinsic feeling - 可重玩性 Replayability]]<ul><li>Contributes to<ul><li>[[extrinsic feeling - Positive feedback loop]]</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li><p>[[intrinsic feeling - 探索 exploration]] 自身及其实现方式是：</p><ul><li>包括 <ul><li>[[exploration - narrative content]]</li><li>[[exploration - gameplay &amp; mechanics]]<br>  即我们所谈及的任何探索内容其实都可以被归于以上两类</li></ul></li><li>Achieved with<ul><li>[[gameplay &amp; mechanics]]<ul><li>包括但不限于<ul><li>[[gameplay &amp; mechanics - skill]]</li><li>[[gameplay &amp; mechanics - resource management]]</li><li>[[gameplay &amp; mechanics - collection]]</li><li>[[gameplay &amp; mechanics - simple interaction feedback]]</li><li>[[gameplay &amp; mechanics - progression validation]]</li><li>[[gameplay &amp; mechanics - crafting]]</li><li>[[gameplay &amp; mechanics - puzzle]]</li><li>[[gameplay &amp; mechanics - environmental challenge]]</li><li>[[gameplay &amp; mechanics - objective-based mission]]</li><li>[[gameplay &amp; mechanics - map reveling]]</li><li>[[gameplay &amp; mechanics - discovery-based mission]]</li><li>[[gameplay &amp; mechanics - dynamic story branching]]</li><li>[[gameplay &amp; mechanics - interactive storytelling]]</li></ul></li></ul></li><li>[[storytelling]] <ul><li>包括但不限于<ul><li>[[storytelling - CG]]</li><li>[[storytelling - environmental]]</li><li>[[storytelling - npc-dialogue]]</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="Exploration-与-EGDS-关系解释"><a href="#Exploration-与-EGDS-关系解释" class="headerlink" title="Exploration 与 EGDS 关系解释"></a>Exploration 与 EGDS 关系解释</h4><h5 id="Exploration-contributes-to-emotional-experiences"><a href="#Exploration-contributes-to-emotional-experiences" class="headerlink" title="Exploration contributes to emotional experiences"></a>Exploration contributes to emotional experiences</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281727658.png"></p><blockquote><p>如果基于 EGDS 自顶向下的关系而言：</p><ul><li>[[intrinsic feeling - 探索 exploration]] 对于实现以下 [[Emotional Experiences]] 有帮助<ul><li>[[兴趣 interest]]</li><li>[[期待 anticipation]]</li><li>[[惊喜 surprise]]</li></ul></li></ul></blockquote><p>[[探索 Exploration]] 是一种 Intrinsic feeling，即由情绪和想象引发的体验。<br>个人认为，如果一款游戏的探索感塑造出色，能够引发玩家的兴趣、期待、惊喜等情绪体验。</p><h5 id="Exploration-as-part-of-feelings"><a href="#Exploration-as-part-of-feelings" class="headerlink" title="Exploration as part of feelings"></a>Exploration as part of feelings</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281728717.png"></p><blockquote><ul><li>[[intrinsic feeling - 探索 exploration]] 和其他 [[感受 feelings]] 的关系是：<ul><li>Driven by<ul><li>[[intrinsic feeling - 好奇 curiosity]] <ul><li>Caused by <ul><li>[[extrinsic feeling - 未知 unknown]] </li></ul></li><li>Enhanced by<ul><li>[[extrinsic feeling - 有意义的选择 meaningful choice]]<ul><li>Contributes to<ul><li>[[extrinsic feeling - Positive feedback loop]]</li></ul></li><li>Opposite<ul><li>[[extrinsic feeling - 无意义选择 meaningless choice]]<ul><li>contributes to<ul><li>[[extrinsic feeling - negative feedback loop]]</li></ul></li></ul></li></ul></li><li>Supported by <ul><li>[[extrinsic feeling - 合理的世界 reasonable world]]<ul><li>Supported by <ul><li>[[extrinsic feeling - suspension of disbelieve]] <ul><li>Against<ul><li>[[extrinsic feeling - 叙事失调 Ludonarrative dissonance]]</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>Enhanced by<ul><li>[[extrinsic feeling - 可重玩性 Replayability]]<ul><li>Contributes to<ul><li>[[extrinsic feeling - Positive feedback loop]]</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281725294.png"></p><ul><li>Exploration is driven by curiosity, which is caused by unknown<ul><li>即探索感是被好奇心所驱动的一种感受，而好奇心的来源是未知</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281726327.png"></p><ul><li>Curiosity is enhanced by meaningful choice<ul><li>玩家的好奇心会被有意义的选择而加强<ul><li>有意义的选择的意思系统会回应玩家所做出的行为<ul><li>比较常见的例子是游戏中的善恶值系统，比如你杀死了 NPC 之后，罪恶值就会增加，系统会有一系列相应的反馈</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281724471.png"></p><ul><li>Meaningful choice contributes to positive feedback loop<ul><li>有意义的选择会促进正反馈循环的生成，即玩家的输入行为受到系统输出的鼓励，从而被强化——行为有了结果，所以更想做了，即常说的滚雪球（需要提出的是，只要系统给出反馈都可以算作 meaningful choice）<ul><li>Positive feedback loop opposes negative feedback loop<ul><li>即正反馈循环和负反馈循环相反，前者是滚雪球，强化玩家输入行为，后者是踩刹车，即弱化玩家输入行为</li></ul></li></ul></li></ul></li><li>Meaningful choice opposes meaningless choice<ul><li>即与有意义的选择相对的是无意义的选择，即玩家做了某个交互行为，但系统没有对应的反馈</li><li>Meaningless choice contributes to negative feedback loop<ul><li>即无意义的选择会促成消极反馈循环的形成，玩家因为得不到反馈，或得到负面的反馈，使得玩家不再愿意继续进行原行为</li><li>比如陈星汉曾分享在 journey 制作过程中，因为玩家总是喜欢将别人推下悬崖，最终选择去掉了物理碰撞，从而使得玩家的推动别人这一行为变得“无意义”</li></ul></li></ul></li><li>Meaningful choice enhanced by replayability<ul><li>如果我们将有意义的选择算作系统对于玩家的一种输入行为有一种输出反馈，那么 replayability 这里可以理解为扩充系统的输出反馈的类别</li><li>Replayability contributes to positive feedback loop<ul><li>即因为可重玩性的提升，使得玩家“停不下来”（关于 replayability 的详细讨论可以看<a href="https://medill-east.github.io/2024/03/01/20240301-thinking-on-game-replayability/">这篇</a>）</li><li>比如黑道圣徒中单是对敌人的处决动画都有非常多种，玩家很有可能会不断尝试对敌人进行处决</li></ul></li></ul></li><li>Meaningful choice is supported by reasonable world<ul><li>即合理的世界可以支持玩家进行有意义的选择</li><li>合理的世界指的是玩家可以通过游戏中所呈现的信息自行进行逻辑推理，从而能够自主进行决策<ul><li>比如对马岛之魂的设计师的<a href="https://www.youtube.com/embed/b5rUPBWgwuw">分享</a>中将其称为 player safari<blockquote><pre><code>        - Player safari            - 让玩家能够追根溯源            - 例子                - 想要买苹果                    - 不能去杂货店                    - 那么就找苹果树                        - 苹果树在哪呢                            - 在果园                                - 那就去果园找苹果</code></pre></blockquote></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281723113.png"></p><ul><li>Reasonable world is supported by suspension of disbelieve<ul><li>即怀疑悬置可以帮助设计者构建合理的世界<ul><li>比如游戏中的时间流逝时间很快，受伤角色不需要十天半个月才能恢复，而是在旅馆中睡一觉就能完全恢复。玩家也不必真的对武器进行淬火才能锻造，而可能只是简单地按一个键就能锻造成功。</li><li>可以说怀疑悬置是在游戏世界中对真实世界的合理简化和加强</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281723363.png"></p><ul><li>Suspension of disbelieve against ludonarrative dissonance<ul><li>即怀疑悬置与叙事失调对立<ul><li>叙事失调换个说法就是出戏<ul><li>例如在紧张刺激的战斗中，本来与你一同作战的 NPC 突然通过语音系统给你说他正在海边度假，邀请你一起去玩，这样会让玩家感觉不知所措（除非原本的设计是与你一同作战的 NPC 是假冒的之类的…）</li></ul></li></ul></li></ul></li></ul><h5 id="Exploration-itself-and-how-it-is-achieved"><a href="#Exploration-itself-and-how-it-is-achieved" class="headerlink" title="Exploration itself and how it is achieved"></a>Exploration itself and how it is achieved</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281730276.png"></p><blockquote><ul><li>[[intrinsic feeling - 探索 exploration]] 自身及其实现方式是：<ul><li>包括 <ul><li>[[exploration - narrative content]]</li><li>[[exploration - gameplay &amp; mechanics]]<br>  即我们所谈及的任何探索内容其实都可以被归于以上两类</li></ul></li><li>Achieved with<ul><li>[[gameplay &amp; mechanics]]<ul><li>包括但不限于<ul><li>[[gameplay &amp; mechanics - skill]]</li><li>[[gameplay &amp; mechanics - resource management]]</li><li>[[gameplay &amp; mechanics - collection]]</li><li>[[gameplay &amp; mechanics - simple interaction feedback]]</li><li>[[gameplay &amp; mechanics - progression validation]]</li><li>[[gameplay &amp; mechanics - crafting]]</li><li>[[gameplay &amp; mechanics - puzzle]]</li><li>[[gameplay &amp; mechanics - environmental challenge]]</li><li>[[gameplay &amp; mechanics - objective-based mission]]</li><li>[[gameplay &amp; mechanics - map reveling]]</li><li>[[gameplay &amp; mechanics - discovery-based mission]]</li><li>[[gameplay &amp; mechanics - dynamic story branching]]</li><li>[[gameplay &amp; mechanics - interactive storytelling]]</li></ul></li></ul></li><li>[[storytelling]] <ul><li>包括但不限于<ul><li>[[storytelling - CG]]</li><li>[[storytelling - environmental]]</li><li>[[storytelling - npc-dialogue]]</li></ul></li></ul></li></ul></li></ul></li></ul></blockquote><h6 id="Exploration-itself"><a href="#Exploration-itself" class="headerlink" title="Exploration itself"></a>Exploration itself</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281731886.png"></p><p>之前在做 <a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">Challenges for Game Designers - Chap 2 - Callenge3</a> 时对探索进行过分析：</p><blockquote><p>最开始在寻找以探索为核心的游戏过程中受到朋友提醒，去看了看火人（firewatch）和见证者（witness）的通关视频（见最后部分的 reference），然后有了以下思考：</p><p>设计以探索（exploration）作为核心玩法的游戏，需要考虑探索（Exploration）和下面两个概念之间的关系：移动（move）和尝试（attempt）。</p><ul><li>探索 vs. 移动<br>  移动是一种操作，可以视为玩家能够探索的前提；而探索是移动之后的行为，可以看做移动的后续结果。<br>  是否存在不依赖于移动操作的探索行为？<br>  存在，即解密/探案游戏，如《Clue》、《Her Story》等。</li><li>探索 vs. 尝试<br>  二者都是对未知结果的某种所求。探索可能没有很强的结果预设性，但尝试可能有。</li></ul><p>基于以上思考，对以探索元素为主或和探索相关的游戏大概可以分为下面这些类别：</p><ul><li>对于非实体答案的逼近探索<ul><li>故事的揭示（发生过什么）<ul><li>叙事推进<ul><li>MMO/AVG/RPG/走路模拟器</li><li>密室逃脱（其实也可以视为一种 RPG/AVG）</li><li>谜题游戏<ul><li>如海龟汤（不断逼近答案的一种边界条件探索）</li><li>如侦探游戏（不断接近真相）</li></ul></li></ul></li></ul></li><li>可能性的揭示（行为有什么结果）<ul><li>不同配装思路的结果<ul><li>MMO/RPG</li></ul></li><li>PUZZLE<ul><li>即解开谜题的结果</li></ul></li></ul></li></ul></li><li>对于实体内容的揭示<ul><li>元素/内容的揭示（一个地方有什么东西）<ul><li>如恐怖游戏转角处的内容</li><li>可交互物的内容</li></ul></li></ul></li><li>对于实体空间的揭示探索<ul><li>地图探索（有什么地方/前方是什么）<ul><li>密室逃脱/MAZE</li><li>MMO/AVG/RPG</li><li>战争迷雾的驱散（RTS）</li></ul></li></ul></li></ul></blockquote><p>当时还没有提出 EGDS，现在反观，其实当时所提出的类别其实都是对探索目标的分类，且这些分类都可以被视作系统中的 [[gameplay &amp; mechanics]] 或是 [[narrative content]] 的子集。</p><p>如：</p><ul><li>非实体答案 - 故事的揭示 - narrative content</li><li>非实体答案 - 可能性揭示 - gameplay &amp; mechanics</li><li>实体内容 - narrative content / [[gameplay &amp; mechanics]] </li><li>实体空间 - 地图探索 - [[narrative content]] </li></ul><p>由此，可以说，探索的目标可被分为下面两类：</p><ul><li>[[exploration - narrative content]] </li><li>[[exploration - gameplay &amp; mechanics]] </li></ul><h6 id="How-exploration-is-achieved"><a href="#How-exploration-is-achieved" class="headerlink" title="How exploration is achieved"></a>How exploration is achieved</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281732077.png"></p><p>如果我们以上面两类探索的目标分别作为横轴的两方，以实现/揭示这些目标的方式/手段作为纵轴，那么我们大概会得到下面这样一张图（基于主观感受，可能并不准确）：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404271801766.png"></p><p>这里只进行部分举例：比如，使用 [[storytelling - CG]] 方法，随机找到的例子有：</p><ul><li><p>[[2024-0423-0035 小鳄鱼爱洗澡 CG 教程 展现叙事和玩法]] </p><ul><li>个人认为这段开场 CG 既展现了叙事，也展现了玩法，但因为偏重叙事，所以放在了 [[exploration - narrative content]] 一方的 7 分位置<iframe width="560" height="315" src="https://www.youtube.com/embed/YN_T9LUeTao?si=E0G6EzhgDKhlULrH" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></li></ul></li><li><p>[[2024-0422-0053 战神4技能树使用 CG 进行展示]]</p><ul><li>个人认为技能树中的 CG 主要展现的是玩法，只有较少的叙事呈现，所以放在了 [[exploration - gameplay &amp; mechanics]] 一方的 5 分位置<iframe width="560" height="315" src="https://www.youtube.com/embed/M_DWzzKBaRU?si=eTL5idytgAde_eX5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></li></ul></li><li><p>[[2024-0425-0051 怪猎崛起 点击式教程]]</p><ul><li>个人认为这段点击式教程的重点可能都是机制教学，几乎没有叙事呈现，所以放在了 [[exploration - gameplay &amp; mechanics]] 一方的 1 分位置<iframe width="560" height="315" src="https://www.youtube.com/embed/TmlnWlvkCpY?si=RZTO4yumgjMRrupA&amp;start=2674" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在讨论过程中其实很多部分还不甚明晰，特别是 exploration 如何被纳入系统中进行分析这一部分。</p><p>经过梳理之后</p><ul><li>明晰了它对于兴趣、期待、惊喜等情绪体验的贡献</li><li>厘清了 exploration 作为 intrinsic feeling 与其他感性/理性感受的关系</li><li>总结了探索的目标分为对叙事内容的探索和玩法机制的探索</li><li>列举了探索感是基于 [[gameplay &amp; mechanics]] 或是 [[storytelling]]，甚至是二者结合的方式实现的</li></ul><p>有此框架之后，就可以继续对其他常见感受进行分析，不断对系统进行完善。</p><p>感谢您的阅读，欢迎大家批评指正！ </p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><ul><li><a href="https://medill-east.github.io/2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/">20240413 - 情感化游戏设计系统 - 0 - 从叙事结构出发</a></li><li><a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">20240414 - 情感化游戏设计框系统 - 1 - 构建系统</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240428 -  Just Do It Already!</title>
      <link href="2024/04/28/20240428-a09/"/>
      <url>2024/04/28/20240428-a09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，不再拖延，干就完了！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A09-Just-Do-It-Already"><a href="#A09-Just-Do-It-Already" class="headerlink" title="A09 - Just Do It Already"></a>A09 - Just Do It Already</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281059401.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/IN-Uh2VfL8c?si=fRKVCu6j2LNyb1bg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li><p>有时候如果有工作需要做，为其找到驱动力可能不太容易，就是很难开始，该怎么办呢？</p></li><li><p>实话说，想要让“引擎”顺畅地运行，没点燃料/润滑油是不行的</p></li><li><p>幸运的是， [[樱井政博]] 找到了最好的、唯一的、谁都能用的办法—— Just do it already 开始去做！<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281103396.png"></p></li><li><p>如果你在起草一份设计文档或之类的，开始写！</p></li><li><p>如果你在创建一幅艺术作品，开始画！</p></li><li><p>如果需要离开房间，那么就穿好衣服出发！</p></li><li><p>做，现在就做！</p></li><li><p>如果你现在在看这个视频，关掉它，现在就去工作！</p></li><li><p>想象房间中有一个炸弹，如果不立马开始就会爆炸！<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404281106696.png"></p></li><li><p>做！立马！现在！</p></li><li><p>虽然这里稍微说得有点夸张了，但真的就是这样</p></li><li><p>如果觉得没有动力，思来想去没有任何意义</p></li><li><p>正当下，立马行！动机遂至！</p></li><li><p>社交媒体、视频网站、网络、游戏都很有吸引力，但让自己抽身而出，动手去做吧！</p></li><li><p>樱井保证，最好的让自己变得更好的办法，或者通常意义上变得成功的办法，就是做做做！</p></li><li><p>不迈出第一步是不可能成功的，意义什么的也可以后面再想，现在，樱井建议你做就完了</p></li><li><p>顺带一提，对于记录，可以采用将任务可视化的办法，但这些总可以在后面再考虑，与此同时，做就完了！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240421 - Do Competitive Games Have to Be Complex?</title>
      <link href="2024/04/21/20240421-b10/"/>
      <url>2024/04/21/20240421-b10/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，考虑竞技性游戏的复杂性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B10-Do-Competitive-Games-Have-to-Be-Complex"><a href="#B10-Do-Competitive-Games-Have-to-Be-Complex" class="headerlink" title="B10 - Do Competitive Games Have to Be Complex?"></a>B10 - Do Competitive Games Have to Be Complex?</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404211237713.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/1ggw9xXbzig?si=wKT-mH3U1j6ypiew" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li><p>现如今，要想深度参与现代的竞技性游戏需要很大的勇气</p><ul><li>考虑到这些游戏的复杂性，樱井猜想很多人都很难跟上节奏</li><li>即使只是看别人玩，可能也很难理解相关的规则或玩法</li></ul></li><li><p>问题是，难道没有办法制作一款简单的竞技性游戏吗</p><ul><li>考虑制作一款竞技性的格斗游戏<ul><li>想象一款玩家无法移动，并且只有一种出招方式的格斗游戏<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404211243307.png"></li><li>这样的话游戏中可以说没有 [[立回 push and pull]] <ul><li>只是重复狂按按钮很无聊</li></ul></li></ul></li><li>由此加入了移动<ul><li>这样为游戏加入了一个新的维度，但这仍显不够</li></ul></li><li>再在出拳基础之上允许玩家踢腿<ul><li>并且踢腿的复原时间比起出拳更长</li><li>因此，如果失误，就会被反击</li><li>这样一来已经有了一些 [[立回 push and pull]] 的空间</li></ul></li><li>再加入跳跃</li><li>加入防守</li><li>加入投掷</li></ul></li><li>不断加入的特性让游戏深度更深</li></ul></li><li><p>如果我们以竞技性游戏的视角来看 [[Mario Bros.]]<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404211258672.png"></p><ul><li>核心玩法很有趣，但很难想象一玩就是几个小时<blockquote><blockquote><p>不是很难想象嘛哈哈哈</p></blockquote></blockquote></li></ul></li><li><p>当竞技性格斗游戏最开始出现时，比起当时其他的街机游戏，它们允许玩家做出更多操作，由此让玩家们觉得其更具深度</p><ul><li>在当时，很多街机游戏将每个操作映射到独立按键上<ul><li>有一些游戏拥有蹲伏或跳跃攻击，但仅此而已</li></ul></li><li>第一款比较出名的竞技性街机游戏是两人版本的 [[Karate Champ 1984]]<ul><li>画面中显示的是更早的单人版本，但双人版本内容是差不多的<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404211305760.png"></li><li>你可以使出超过 20 种不同的操作</li></ul></li><li>之后就是初代的街头霸王 [[Street Fighter 1987]]<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404211307377.png"><ul><li>那个版本中的招式都很难，单是控制角色就已经很难了</li><li>有些难以感受到游戏中的 [[立回 push and pull]] </li><li>虽然仍然很有趣</li></ul></li><li>先不说难度如何，你已经看到在早期已经有非常多的招式可供使用<ul><li>单一类型的出拳或踢腿是行不通的</li></ul></li><li>[[街头霸王 2 Street Fighter II]] 让格斗游戏真的火了起来<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404211312457.png"><ul><li>这款游戏的 [[立回 push and pull]] 经过了精妙地设计</li><li>并且很多招式有其特殊的作用，使得游戏非常具有深度</li></ul></li></ul></li><li><p>当然了，并不是说所有的游戏都需要朝着这样的深度目标前进</p><ul><li>永远都有轻度休闲游戏的一席之地</li></ul></li><li><p>但是，如果想让游戏经久不衰，能够在千百次对局后仍具乐趣，其机制不可避免地需要具备一定深度</p><ul><li>很难估计一个游戏应该具有怎样的深度或广度</li></ul></li><li><p>[[樱井政博]] 自己在制作游戏时也会将游戏深度作为目标，但他觉得每个人看待这个事情的方式不太一样</p></li><li><p>对于经历了历史迭代的品类，你很可能会偶尔看到一些复杂的，没有对游戏的 [[立回 push and pull]] 有所帮助的机制</p><ul><li>作为开发者或玩家，你很可能将那些你已经“习以为常”的特性视为一种“理所当然”</li><li>所以 [[樱井政博]] 建议人们可以在项目初期重新审视游戏的机制和规则</li></ul></li><li><p>[[樱井政博]] 自己也是这样做的<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404211329183.gif"></p><ul><li>每个版本的 [[Super Smash Bros.]] 的跳跃机制都略有不同</li><li>一定程度上讲，可能没有办法防止游戏变得复杂，但最好是不要做预先假设（把那些“理所当然”都舍弃）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240414 - 情感化游戏设计系统 - 1 - 构建系统</title>
      <link href="2024/04/14/20240414-emotional-game-design-system-1-create-the-system/"/>
      <url>2024/04/14/20240414-emotional-game-design-system-1-create-the-system/</url>
      
        <content type="html"><![CDATA[<h3 id="202409-视频版更新"><a href="#202409-视频版更新" class="headerlink" title="202409 视频版更新"></a>202409 视频版更新</h3><ul><li><a href="https://www.bilibili.com/video/BV1r3xCe1EXZ/?share_source=copy_web&vd_source=ae6360fc02a06275c80f3c44e417c599">中文版</a></li><li><a href="https://youtu.be/EaUxVSXQ5dc">English Version</a></li></ul><p>其中包含了结构更新和添加了一些例子 (￣▽￣)／</p><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>前段时间再次听了一遍机核在多年前对陈星汉的专访，有了一个想法——“电影工业中，对于观众的情绪塑造和引发有着相对成熟的方法论，但游戏工业中目前好像还没有这样的方法论，能否构建？”</p><blockquote><p><a href="https://www.gcores.com/radios/14599">专访陈星汉 I （游戏之路） - Jenova Chen</a><br><a href="https://www.gcores.com/radios/14601">专访陈星汉 II - 《Journey》 - Jenova Chen</a></p></blockquote><p>在上一篇文章 <a href="https://medill-east.github.io/2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/">情感化游戏设计系统 - 0 - 从叙事结构出发</a> 中对常见叙事结构进行了学习，此篇中将对情感化游戏设计系统进行构建，在此记录。</p><p>需要指出的是文中很多内容都是和大语言模型（ChatGPT/Claude/Kimi）讨论后得到，尽管我极力避免，但仍有可能会受到 AI 幻觉的影响。如有错误，欢迎批评指正！</p><h3 id="内容概览"><a href="#内容概览" class="headerlink" title="内容概览"></a>内容概览</h3><ul><li>情感化游戏设计（Emotional Game Design）<ul><li>什么是情感化游戏设计</li><li>为何关心情感化游戏设计</li><li>光遇如何运用情感化游戏设计</li><li>情感化游戏设计系统</li><li>小结</li></ul></li><li>相关链接</li></ul><h3 id="情感化游戏设计（Emotional-Game-Design）"><a href="#情感化游戏设计（Emotional-Game-Design）" class="headerlink" title="情感化游戏设计（Emotional Game Design）"></a>情感化游戏设计（Emotional Game Design）</h3><h4 id="何为情感化游戏设计"><a href="#何为情感化游戏设计" class="headerlink" title="何为情感化游戏设计"></a>何为情感化游戏设计</h4><p>如起因中所言，“电影工业中，对于观众的情绪塑造和引发有着相对成熟的方法论，但游戏工业中目前好像还没有这样的方法论，能否构建？”<br>情感化游戏设计指的就是能否构建类似的可靠方法，从而在游戏中为玩家们创造难忘的情绪化体验。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141652814.PNG"></p><h4 id="为何关心情感化游戏设计"><a href="#为何关心情感化游戏设计" class="headerlink" title="为何关心情感化游戏设计"></a>为何关心情感化游戏设计</h4><p>之前一年都在做 [[Challenges for Game Designers]] 一书中的练习（感兴趣可以看<a href="https://medill-east.github.io/2022/04/28/index-showcase/">这里</a>），但做着做着感觉自己基本都是在机制层面打转。去年有一次和前辈聊了之后，也问了该如何提升的问题，答案是不再用机制设计，而是用体验设计的方法来做 Demo —— 每次选择一个核心体验，关注某一个方面（Gameplay/LA/LD/…），并在那个方面做到自己在当时能够做到的极致，这样整体的设计能力能够实现螺旋上升，而不只是某方面专精，其他方面成为短板。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141654424.PNG"></p><p>之后便是受到了 [[陈星汉 Jenova]] 在机核专访中所谈话题的启发，开始构思适用于游戏工业的情感化游戏设计方法。</p><p>前段时间翻看 GDC Valut 上 [[陈星汉 Jenova]] 在 <a href="https://gdcvault.com/play/1028065/Can-We-Experience-Compassion-through">Can We Experience Compassion through Play</a> 这次演讲时，他也提到了，电影工业中其实早就已经有 [[four-quadrant movie]] 这样的概念——即超越性别（男人女人都爱看），超越年龄（大人小孩都爱看）的电影：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141654950.PNG"></p><p>那么游戏的目标也应该是创造面向更广大群体的，跨越性别和年龄的，难忘的情感体验：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141656500.PNG"></p><h4 id="光遇如何运用情感化游戏设计"><a href="#光遇如何运用情感化游戏设计" class="headerlink" title="光遇如何运用情感化游戏设计"></a>光遇如何运用情感化游戏设计</h4><p>我最开始看的是 [[thatgamecompany]] 在 GDC 上的那次有关于 Art of Sky Children of the Light 的演讲，但貌似 YouTube 上还没有放出对应视频，倒是找到了另一个视频，甚至是更详细的版本，放在这里。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/FwcNVlpymNk?si=BnF6m0Fj3s6O534b" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>简言之， [[thatgamecompany]] 参考了各种叙事结构之后，提出了 [[emotional curve]] 的概念，并利用以下维度来基于人类共识来创造跨越个体化认知的情感体验：</p><ul><li>基于视觉和听觉的通用语言</li><li>基于玩家动作的传达方式</li><li>基于空间的环境叙事</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141656568.PNG"></p><p>[[thatgamecompany]] 利用 time of day，即一天的变化进程，作为 颜色、氛围和光照的基调：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141658481.PNG"></p><p>利用 human life，即人类的生命进程，来作为角色状态和玩家行为的参考：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141659003.PNG"></p><p>利用 progression of civilization，即文明的发展进程，作为视觉结构的参考：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141700798.PNG"></p><p>利用 [[The Collective Journey 集体之旅 - Jeff Gomez 2017]] 作为叙事结构（具体可以参考上一篇文章 <a href="https://medill-east.github.io/2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/">情感化游戏设计系统 - 0 - 从叙事结构出发</a> 中光遇如何利用集体叙事的部分）。</p><p>最终构建了这样一套自洽而完整的情绪化设计方法：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141702238.PNG"></p><h4 id="情感化游戏设计系统-Emotional-Game-Design-System"><a href="#情感化游戏设计系统-Emotional-Game-Design-System" class="headerlink" title="情感化游戏设计系统 - Emotional Game Design System"></a>情感化游戏设计系统 - Emotional Game Design System</h4><p>受到 [[游戏设计艺术 the art of game design]] 中的设计四元素：机制、美学、叙事、技术的启发，我尝试构建了一个基于情绪体验（Emotional Experiences）感觉（Feelings）、玩法/机制（Gameplay/Mechanics）和叙事（Narrative）的情感化游戏设计系统：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141830869.png"></p><p>基于此，需要解决以下问题：</p><ul><li>确定情绪范围</li><li>构建初步框架</li><li>对框架进行迭代</li></ul><h5 id="确定情绪范围"><a href="#确定情绪范围" class="headerlink" title="确定情绪范围"></a>确定情绪范围</h5><p>借助 AI，让其推荐了目前学术界广为接受的情绪理论，得到了这几个：</p><blockquote><ol><li><p>Paul Ekman 的六种基本情绪：在 1970 年代，心理学家 Paul Ekman 通过跨文化研究提出了六种基本情绪，分别是快乐、悲伤、惊讶、恐惧、厌恶和愤怒 anger。这一理论被广泛接受，并在多个研究中被引用。<br> 出处：Ekman, P. (1992). “An argument for basic emotions.” Cognition &amp; Emotion, 6(3-4), 169-200.</p><pre><code> 愤怒 anger 蔑视 contempt 厌恶 disgust 享受 enjoyment 恐惧 fear 悲伤 sadness 惊讶 surprise</code></pre></li><li><p>Robert Plutchik 的情绪轮：Robert Plutchik 提出了一种情绪轮模型，其中包括八个基本情绪：快乐、悲伤、信任、厌恶、恐惧、愤怒、期待和惊讶。这些情绪可以结合形成更复杂的情感。<br> 出处：Plutchik, R. (1980). “A general psychoevolutionary theory of emotion.” In R. Plutchik &amp; H. Kellerman (Eds.), Emotion: Theory, research, and experience: Vol. 1. Theories of emotion (pp. 3-33). New York: Academic.</p><p> <a href="https://www.6seconds.org/2022/03/13/plutchik-wheel-emotions/">https://www.6seconds.org/2022/03/13/plutchik-wheel-emotions/</a><br> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403091550148.png"></p></li><li><p>Carroll Izard 的十种基本情绪：Izard 提出了十种基本情绪，包括兴趣/激动、快乐/欣喜、惊讶、悲伤/痛苦、愤怒、厌恶、轻蔑、恐惧、羞耻/羞愧和罪恶感/内疚。<br> 出处：Izard, C. E. (1977). “Human emotions.” New York: Plenum Press.</p></li><li><p>Jonathan Turner 的七种基本情绪：Turner 提出了七种基本情绪，包括快乐、悲伤、恐惧、愤怒、厌恶、兴趣和惊讶。<br> 出处：Turner, J. H. (2000). “On the origins of human emotions: A sociological inquiry into the evolution of human affect.” Stanford University Press.</p></li></ol></blockquote><p>最终出于以下原因选择了 Robert Plutchik 的情绪理论：</p><ul><li>其可视化的情绪轮易于理解</li><li>并且情绪之间由于不同的生理唤醒程度（arousal level）具有清晰的关系，不同情绪之间的关系也较为清楚</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141710752.PNG"></p><p>在此基础之上，为了得到更加良好的可视化模型，我构建了一个横轴为情绪效价（emotional valence, -5 - +5），纵轴为生理唤醒程度（arousal level, 0 - 10）的情绪地图：</p><blockquote><blockquote><ul><li>各情绪最终的情绪效价及生理唤醒程度经由多个 LLM 模型（Claude Sonnet, ChatGPT 4，Kimi）以相同标准打分，取均值得到<ul><li>最终结果基本符合认知</li></ul></li><li>图中颜色采用了双轴过度<ul><li>取情绪效价 -5 为蓝色，取情绪效价 +5 为红色</li><li>在此基础上叠加生理唤醒透明度，以生理唤醒为 0 为完全透明，以生理唤醒为 1 为不透明</li><li>由此得到的结果可以当做对各情绪的颜色象征，基本符合认知</li></ul></li></ul></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141712583.png"></p><p>如果我们考虑电影工业中常常提到的四象限电影（four-quadrant movie），即超越年龄和性别的电影：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141717206.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141717397.png"></p><p>那么我们可以在所创建的情绪地图上找到对应的区域，即对应四象限电影，我们期望创建的可能是三角形游戏（triangle game，图中右方黄色三角区域），其能够触发人们中等唤醒程度的正面效价情绪：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141719878.PNG"></p><h5 id="构建基础系统"><a href="#构建基础系统" class="headerlink" title="构建基础系统"></a>构建基础系统</h5><p>如前所说，受到 [[游戏设计艺术 the art of game design]] 中的设计四元素：机制、美学、叙事、技术的启发，我尝试构建了一个基于情绪体验（Emotional Experiences）感觉（Feelings）、玩法/机制（Gameplay/Mechanics）和叙事（Narrative）的情感化游戏设计系统，这将作为今后迭代的基础：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141722114.PNG"></p><h5 id="对系统进行迭代"><a href="#对系统进行迭代" class="headerlink" title="对系统进行迭代"></a>对系统进行迭代</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141726444.PNG"></p><p>目前而言，对系统进行展开之后可以得到下面这些部分：</p><ul><li>Emotional Experiences<ul><li>Emotional Curve</li><li>Emotion map</li></ul></li></ul><p>即刚刚所创建的情绪地图，这将作为系统的最终设计目标，即其他所有部分的实现都是为了达到情绪地图中的期望情绪，最终构建情绪曲线。</p><ul><li>Feeling<ul><li>Intrinsic Feeling – trigger by imagination &amp; emotion<ul><li>(freedom/control/impact/mysterious/…)</li></ul></li><li>Extrinsic Feeling – trigger by perception &amp; analyzation<ul><li>Atmosphere</li><li>Collective Consensus<ul><li>Time of day</li><li>Human life</li><li>Progression of civilization</li><li>Seasonal cycle</li></ul></li></ul></li></ul></li></ul><p>这里我将感受（feelings）分为了感性感受（intrinsic feeling）和理性感受（extrinsic feeling）。<br>其中感性感受其实是由想象和情绪直接触发的，比如自由感、控制感、打击感、神秘感等等。</p><ul><li>感性感受的构想受到了 [[丹尼尔 卡尼曼 Daniel Kahneman]] 的 [[思考快与慢 Thinking, Fast and Slow]] 一书中的 [[系统 1 system 1]] 的启发<br>理性感受其实是由感知和分析得到的，比如氛围，或者是那些人类共识（包括之前提到的一天的变化，人类生命进程，文明进程，四季循环等等）</li><li>理性感受的构想受到了 [[丹尼尔 卡尼曼 Daniel Kahneman]] 的 [[思考快与慢 Thinking, Fast and Slow]] 一书中的 [[系统 2 system 2]] 的启发</li></ul><ul><li>Gameplay/Mechanics<ul><li>Control (Action)</li></ul></li></ul><p>即我们常讲的玩法和机制。<br>其中又包括了角色控制（以及前面提到过的角色行为）。</p><ul><li>Narrative<ul><li>Narrative Content</li><li>Narrative Structure<ul><li>Linear<ul><li>[[Five-Act Structure 五幕结构 - Gustav Freytag]] </li><li>[[Three-Act Structure 三幕结构 - Syd Field]] </li><li>[[The Hero’s Journey 英雄之旅 - Joseph Campbell]] </li><li>[[The Writer’s Journey 作家之旅 - Christopher Vogler]] </li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]]</li></ul></li><li>Non-Linear<ul><li>[[The Collective Journey 集体之旅 - Jeff Gomez 2017]]</li></ul></li></ul></li></ul></li></ul><p>这部分在上一篇文章 <a href="https://medill-east.github.io/2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/">情感化游戏设计系统 - 0 - 从叙事结构出发</a> 中进行了讨论，即故事的内容和结构。</p><ul><li>Storytelling (Presenting) – Collective Consensus<ul><li>Visual -视觉<ul><li>Camera - 相机镜头</li><li>Light &amp; Shadow - 光影</li><li>Color - 色彩</li><li>Space/Structure - 空间和结构</li><li>Environment (Prop/Architecture) - 环境（物品和建筑）</li><li>UI - 界面</li><li>VFX -视觉特效</li><li>Character - 角色</li></ul></li><li>Audio - 听觉<ul><li>Music - 音乐</li><li>Effects -音效<ul><li>[[BG - background 背景音/环境音]]</li><li>[[VO - dialogue/voice-over 对白/旁白]]</li><li>[[foley 与动作匹配的音效]]</li><li>[[SFX - sound effect 特殊音效]]</li><li>[[walla 模仿人群低语]]</li></ul></li></ul></li><li>Haptic - 触觉</li></ul></li></ul><p>这部分即故事的呈现方式，也需要使用基于人类共识的方式来呈现。<br>这部分的很多内容（除了 haptic 触觉）其实都可以在电影工业中找到参照，剩下的需要时间来逐渐补全。<br>值得一提的是关于 Audio Effects 的相关内容是学习自该视频，感谢分享：<a href="https://www.bilibili.com/video/BV17D4y167tQ/?share_source=copy_web&vd_source=ae6360fc02a06275c80f3c44e417c599">新手也能学会的音效设计！一秒变大片【干货】</a></p><p>理论上讲，这是一个自顶向下的系统：</p><ol><li>于整体而言，确定情绪曲线</li><li>于局部而言，确定该部分想要触发的情绪体验</li><li>情绪体验应该与多种感觉相关</li><li>感觉由玩法/机制，或者由内容的呈现方式所触发</li><li>玩法/机制，以及内容的呈现方式共同对故事本身进行表达</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141743608.PNG"></p><h5 id="关于命名的小插曲"><a href="#关于命名的小插曲" class="headerlink" title="关于命名的小插曲"></a>关于命名的小插曲</h5><p>其实最开始在 architecture/ framework/ methodology 之间纠结，最后遇事不决问 AI：</p><blockquote><p>基于您提供的详细信息，您的创作涉及了游戏设计的多个方面，包括感觉、游戏机制、叙事以及如何通过各种媒介（视觉、音频、触觉）呈现故事。这个创作不仅仅是一套理论或概念，它更像是一个全面的系统，用于指导游戏设计过程，以创造深刻的情感体验。</p><ul><li>如果您强调的是这个系统的结构和组成部分，那么 “architecture” 是合适的，因为它通常用来描述系统的构建和组织方式。</li><li>如果您强调的是这个系统的应用和实践，那么 “framework” 是合适的，因为它指的是提供一套工具和概念，用于解决特定问题或执行任务。</li><li>如果您强调的是这个系统的步骤、方法和原则，那么 “methodology” 是合适的，因为它涉及研究方法、技术和策略。</li></ul><p>根据您的描述，我倾向于推荐使用 “framework”，因为它通常用于描述一个包含指导原则和工具的系统，可以用来开发和评估游戏设计。因此，您可以将其称为 “Emotional Game Design Framework”。</p><p>然而，如果您感觉 “framework” 还不足以全面覆盖您系统的复杂性和深度，您也可以考虑使用 “system”，因为它强调了各个部分之间的相互作用和整体性。在这种情况下，可以称之为 “Emotional Game Design System”。这个名称强调了这是一个全面的、可操作的系统，包含了从理论到实践的各个方面。</p></blockquote><p>最后选择了选项之外的 system，是因为 system 比起其他的叫法给我了一种相互之间互相联系的感觉，整个系统虽然在低耦合情况下也能运行，但是只有耦合程度足够高，效果才能够好。</p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul><li>最终的目标是创建跨越限制的，能够吸引，并且被所有人所享受的游戏</li><li>尽管单一部分可能也能创建令人难忘的情绪体验，但整个系统配合起来能够带来最好的效果</li><li>系统目前仍处于初期构建状态，应该随着各方面知识的增长而不断完善</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141748469.PNG"></p><p>感谢观看，欢迎批评指正！</p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><p>想知道更多和情感化游戏设计系统相关的内容，可以看 <a href="https://medill-east.github.io/2022/04/28/index-thinking/">这个页面</a> 中的 Emotional Game Design System 部分。</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240414 - Games and Eye Strain</title>
      <link href="2024/04/14/20240414-m11/"/>
      <url>2024/04/14/20240414-m11/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解他与眼睛干涩的抗争！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M11-Games-and-Eye-Strain"><a href="#M11-Games-and-Eye-Strain" class="headerlink" title="M11 - Games and Eye Strain"></a>M11 - Games and Eye Strain</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141019685.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/0VaLAZeMJnE?si=vfFkckmJsQKjtJaA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>[[樱井政博]] 通常不会玩太长时间的手游，或者说，没办法玩</p><p>并不是说游戏有什么问题，只是他玩久之后眼睛会很累，对于任天堂 [[switch]] 的手持游玩也是一样的，所以樱井也只在电视上玩 NS。他会尽力避免长时间在手持设备上玩游戏。</p><p>不久之前，工位发生了一些改变，使得屏幕和眼睛的距离少于了 60cm，这使得眼睛疲劳得很快，可能只是老了（岁月不饶人啊）</p><p>樱井也有些远视，近些年来，近处的东西越来越难看清了，但他觉得远视还不错，所以也不想抱怨太多。</p><p>在开发完 [[Kid Icarus - Uprising]] 之后，樱井觉得视力变得更差了，所以去看了医生，测量结果是 20/10（意思是在 20 单位距离能看到正常人在 10 单位距离能看到的东西，即甚至比平均视力更敏锐），可以说视力好得不能再好了。虽然近来可能没有那么好了，只有 20/15 了。</p><p>因为屏幕距离远些比较好，所以樱井决定在工作时让屏幕至少离自己 1m 远。这稍微缓解了一些眼睛干涩的问题。但同时也意味着需要更大的显示器。虽然这稍微限制了可选择的显示器范围，但整体而言，工作环境更舒适了。</p><p>在 [[Smash Bros. Ultimate]] 开发期间，眼睛干涩变得严重，但开发结束后缓解了很多。</p><p>有许多缓解眼睛干涩的办法：</p><ul><li>可以降低屏幕亮度</li><li>佩戴防蓝光眼镜</li><li>使用眼药水</li><li>使用保健品</li></ul><p>虽然有很多办法，但樱井觉得最好还是能够改善工作环境。<br>樱井自己也经常在床上做睡前阅读，将一个 iPad 挂起来，然后用一个蓝牙控制器来翻页，困了立马就能睡。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141043635.png"></p><p>每个人都有自己的方法，这是适合樱井的办法！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240413 - 情感化游戏设计系统 - 0 - 从叙事结构出发</title>
      <link href="2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/"/>
      <url>2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>前段时间再次听了一遍机核在多年前对陈星汉的专访，有了一个想法——“电影工业中，对于观众的情绪塑造和引发有着相对成熟的方法论，但游戏工业中目前好像还没有这样的方法论，能否构建？”</p><blockquote><p><a href="https://www.gcores.com/radios/14599">专访陈星汉 I （游戏之路） - Jenova Chen</a><br><a href="https://www.gcores.com/radios/14601">专访陈星汉 II - 《Journey》 - Jenova Chen</a></p></blockquote><p>由此出发，大致翻看了 [[thatgamecompany]] 往年在 GDC 上和情绪设计相关的演讲。在看 <a href="https://youtu.be/wQP9spsb_IQ?si=JUIVeslXzYZyvOuS">Evolving Emotional Storytelling In thatgamecompany’s SKY</a> 这期时，[[Jennie Kong]] 在其中提到了 [[旅 Journey]] 的叙事节奏更偏向于 [[The Hero’s Journey 英雄之旅 - Joseph Campbell]]，而 [[光遇 Sky]] 作为后续游戏，希望能超越前作，并且因为要构建更大群体之间的联系，所以光遇的叙事更偏向于 [[The Collective Journey 集体之旅 - Jeff Gomez 2017]]。</p><p>又因为最近正好在看 [[故事策略 剧作必备的23个故事段落]] 一书，借此机会，对一些常见的叙事结构进行了学习，将其纳入了所要构建的情感化游戏设计框架中，在此稍作记录。</p><p>需要指出的是文中很多内容都是和大语言模型（ChatGPT/Claude/Kimi）讨论后得到，尽管我极力避免，但仍有可能会受到 AI 幻觉的影响。如有错误，欢迎批评指正！</p><h3 id="内容概览"><a href="#内容概览" class="headerlink" title="内容概览"></a>内容概览</h3><ul><li>叙事结构<ul><li>何为叙事结构</li><li>为何关心叙事结构</li><li>常见叙事结构列举及特定结构比较（英雄之旅 vs. 集体之旅）</li><li>光遇如何运用集体之旅叙事结构</li><li>小结</li></ul></li><li>相关链接</li></ul><h3 id="叙事结构（Narrative-Structure）"><a href="#叙事结构（Narrative-Structure）" class="headerlink" title="叙事结构（Narrative Structure）"></a>叙事结构（Narrative Structure）</h3><h4 id="何为叙事结构"><a href="#何为叙事结构" class="headerlink" title="何为叙事结构"></a>何为叙事结构</h4><p>这里引入三个概念：</p><ul><li>故事 story</li><li>叙事 narrative</li><li>故事呈现 storytelling</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404130110109.PNG"></p><p>在中文语境中，narrative 和 [[storytelling]] 的常见翻译都是叙事，但在询问 GPT 和 Claude 之后，发现二者其实略有不同。 Narrative 指代的是故事的内容和结构，而 [[storytelling]] 指的是故事的呈现方式。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404131418715.PNG"></p><p>如果说，一部好的戏剧/文学作品/电影的标准是 “A good story, well told”（被娓娓道来的好故事），其中的 good story 指代的就是 narrative 的部分，而 well told 指代的就是 storytelling 的部分。对于好游戏的评判标准，也可从此借鉴。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141321443.PNG"></p><p>综上，叙事结构（narrative structure）指的是故事内容的组织方式。</p><h4 id="为何关心叙事结构"><a href="#为何关心叙事结构" class="headerlink" title="为何关心叙事结构"></a>为何关心叙事结构</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141322286.PNG"></p><ul><li>稳定下限，提高效率<ul><li>古往今来，许多为人传颂的故事其实有着相似的叙事结构。了解叙事结构可以帮助创作者有的放矢，也能更快、更好地创建叙事内容</li></ul></li><li>达成共识，方便沟通<ul><li>叙事内容，叙事结构，呈现方式，玩法机制，这些模块之间是相互联系的，了解叙事结构，可以为设计师及团队提供相同的沟通语境，从而达到更好的沟通效果</li></ul></li><li>构建框架，总览全局<ul><li>叙事框架应该是游戏生产框架中的重要一部分，任何碎片的缺失都会使得游戏开发陷入困境。了解叙事结构可以让开发团队更好地定位问题以及把控全局</li></ul></li></ul><h4 id="常见叙事结构列举及特定结构比较（英雄之旅-vs-集体之旅）"><a href="#常见叙事结构列举及特定结构比较（英雄之旅-vs-集体之旅）" class="headerlink" title="常见叙事结构列举及特定结构比较（英雄之旅 vs. 集体之旅）"></a>常见叙事结构列举及特定结构比较（英雄之旅 vs. 集体之旅）</h4><p>这里一共会提到六种常见叙事结构，其应用场景横跨戏剧、文学、影视、游戏、跨媒介领域：</p><ol><li>[[Five-Act Structure 五幕结构 - Gustav Freytag]] </li><li>[[Three-Act Structure 三幕结构 - Syd Field]] </li><li>[[The Hero’s Journey 英雄之旅 - Joseph Campbell]] </li><li>[[The Writer’s Journey 作家之旅 - Christopher Vogler]] </li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] </li><li>[[The Collective Journey 集体之旅 - Jeff Gomez 2017]] </li></ol><p>以下是一个简要的对比图：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141322148.PNG"></p><p>可以看到这些叙事结构的应用场景横跨了戏剧、文学、影视、游戏、跨媒体等多种领域，后文会对各结构进行一些介绍。</p><h5 id="五幕结构-Five-Act-Structure"><a href="#五幕结构-Five-Act-Structure" class="headerlink" title="五幕结构 Five-Act Structure"></a>五幕结构 Five-Act Structure</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404131621042.PNG"></p><p>[[Five-Act Structure 五幕结构 - Gustav Freytag]] 是 [[Gustav Freytag]] 在 [[Die Technik des Dramas 1863]] 一书中提出的一种主要用于戏剧分析的框架。</p><p>关注到五幕结构其实是因为在查阅过往资料的时候，看到 [[游戏设计原型与开发]] 一书中在介绍叙事方法的时候提到了，所以一并纳入讨论中。</p><p>具体而言，五幕指的是：</p><ol><li>序幕（Exposition）：介绍背景信息，设置故事情境，包括角色、环境和初步冲突。</li><li>上升（Rising Action）：通过一系列事件和冲突，逐渐建立故事的紧张和复杂性。</li><li>高潮（Climax）：故事达到最紧张的时刻，主要冲突达到顶点。</li><li>下降（Falling Action）：从高潮后的事件和冲突逐渐解决，导向故事的结局。</li><li>灾难（Catastrophe）/结局（Denouement）：冲突得到最终解决，通常是悲剧性的结局，但在现代用法中也可能是任何形式的解决。</li></ol><p>应用：</p><ul><li>戏剧：[[哈姆雷特 Hamlet]] / [[麦克白 Macbeth]] / [[奥赛罗 Othello]]</li><li>文学：[[罗密欧与朱丽叶 Romeo and Juliet]]</li><li>电影：[[教父 The God Father]] / [[泰坦尼克号 Titanic]]</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404131657977.PNG"></p><p>以 [[罗密欧与朱丽叶 Romeo and Juliet]] 为例：</p><table><thead><tr><th>Acts</th><th>Content</th></tr></thead><tbody><tr><td>1. 序幕（Exposition）：介绍背景信息，设置故事情境，包括角色、环境和初步冲突。</td><td>介绍 Montage 和 Capulet 之间的冲突</td></tr><tr><td>2. 上升（Rising Action）：通过一系列事件和冲突，逐渐建立故事的紧张和复杂性。</td><td>罗密欧与朱丽叶相爱</td></tr><tr><td>3. 高潮（Climax）：故事达到最紧张的时刻，主要冲突达到顶点。</td><td>罗密欧与朱丽叶结婚<br>但罗密欧杀了 Tybalt</td></tr><tr><td>4. 下降（Falling Action）：从高潮后的事件和冲突逐渐解决，导向故事的结局。</td><td>天下大乱</td></tr><tr><td>5. 灾难（Catastrophe）/结局（Denouement）：冲突得到最终解决，通常是悲剧性的结局，但在现代用法中也可能是任何形式的解决。</td><td>罗密欧与朱丽叶认为对方死了，分别自杀</td></tr></tbody></table><h5 id="三幕结构-Three-Act-Structure"><a href="#三幕结构-Three-Act-Structure" class="headerlink" title="三幕结构 Three-Act Structure"></a>三幕结构 Three-Act Structure</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404131708946.PNG"></p><p>[[Three-Act Structure 三幕结构 - Syd Field]] 是 [[Syd Field]] 在 [[Screenplay - The Foundations of Screenwriting 1979]] 一书中提出的一种主要用于电影剧本写作的框架。</p><p>其提出最早可以追溯到 [[亚里士多德 Aristotle]] 的 [[诗学 Poetics]]。</p><p>具体而言，三幕指的是：</p><ol><li>第一幕 铺垫（Setup）：引入故事的主角、设置和基本冲突。第一幕结束于一个转折点，这通常是故事的召唤或催化剂。<ul><li>钩子<ul><li>迅速勾起观众的注意</li><li>前几分钟决定了观众会不会看下去，所以一定要够刺激，哪怕跟电影内容无关也不怕（如 007 片头哈哈哈哈）</li></ul></li><li>引发事件<ul><li>事件进入主角的生活，让他启程冒险</li></ul></li><li>第一戏剧点<ul><li>第一戏剧点随着第一幕结束，推进玩家向第二个出发 </li></ul></li></ul></li><li>第二幕 对抗（Confrontation）：故事的中心部分，主角面临一系列的挑战和冲突，这些挑战推动他们的成长和变化。第二幕中间有一个关键的中点，可能会改变故事的方向或增加紧张感。<ul><li>第二戏剧点<ul><li>第二戏剧点结束后推进主角作出决定，进入第三幕</li></ul></li></ul></li><li>第三幕 解决（Resolution）：冲突升级到最终的高潮，然后迅速解决。故事以解决或完成主角的旅程结束。<ul><li>不论成败，这些经历让他重新认识自己</li><li>高潮<ul><li>所有冲突的汇集，悬念落下</li></ul></li></ul></li></ol><p>应用：</p><ul><li>文学：[[了不起的盖茨比 The Great Gatsby]]</li><li>电影：[[泰坦尼克号 Titanic]] / [[星球大战 Star Wars]]</li><li>电视剧：[[绝命毒师 Breaking Bad]]</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404131719892.PNG"></p><p>以 [[星球大战 新希望 - Star Wars IV - A New Hope]] 为例：</p><table><thead><tr><th>Acts</th><th>Content</th></tr></thead><tbody><tr><td>1. 第一幕 铺垫（Setup）：引入故事的主角、设置和基本冲突。第一幕结束于一个转折点，这通常是故事的召唤或催化剂。<br><br>- 钩子<br>    - 迅速勾起观众的注意<br>    - 前几分钟决定了观众会不会看下去，所以一定要够刺激，哪怕跟电影内容无关也不怕（如 007 片头哈哈哈哈）<br><br>- 引发事件<br>    - 事件进入主角的生活，让他启程冒险<br><br>- 第一戏剧点<br>    - 第一戏剧点随着第一幕结束，推进玩家向第二个出发</td><td>- 钩子<br>公主莱亚飞船被攻击<br><br>- 引发事件<br>卢克找到公主信息<br><br>- 第一戏剧点<br>卢克的叔叔和婶婶被帝国杀死</td></tr><tr><td>2. 第二幕 对抗（Confrontation）：故事的中心部分，主角面临一系列的挑战和冲突，这些挑战推动他们的成长和变化。第二幕中间有一个关键的中点，可能会改变故事的方向或增加紧张感。<br><br>- 第二戏剧点<br>    - 第二戏剧点结束后推进主角作出决定，进入第三幕</td><td>卢克和朋友们逃出死星<br>后有帝国追兵</td></tr><tr><td>3. 第三幕 解决（Resolution）：冲突升级到最终的高潮，然后迅速解决。故事以解决或完成主角的旅程结束。<br><br>- 不论成败，这些经历让他重新认识自己<br>- 高潮<br>    - 所有冲突的汇集，悬念落下</td><td>卢克摧毁死星<br>授勋仪式</td></tr></tbody></table><h5 id="英雄之旅-The-Hero’s-Journey"><a href="#英雄之旅-The-Hero’s-Journey" class="headerlink" title="英雄之旅 The Hero’s Journey"></a>英雄之旅 The Hero’s Journey</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404131819316.PNG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404132242164.png"></p><p>[[The Hero’s Journey 英雄之旅 - Joseph Campbell]] 是 [[Joseph Campbell]] 在 [[The Hero With a Thousand Faces 1949]] 一书中提出的一种叙事结构，该结构是对多种文化中的英雄故事的一种共性总结。</p><p>具体而言，英雄之旅包含下列阶段：</p><ul><li>[[Departure 启程]]  </li></ul><ol start="0"><li>The ordinary world - 日常状态</li><li>The call to adventure - 冒险号召</li><li>Refusal of the call - 拒绝召唤</li><li>Supernatural aid - 导师/帮助者出现，提供帮助或知识</li><li>Crossing first threshold - 英雄离开熟悉世界，进入未知领域</li><li>Belly of the whale - 英雄完全脱离熟悉的世界，面临试炼</li></ol><ul><li>[[Initiation 启蒙]] </li></ul><ol start="6"><li>Road of trials - 英雄历经考验，学习如何在新世界生存</li><li>Meeting with the goddess - 体验爱或收到重大礼物</li><li>(Woman as the) Temptation - 面临内在或外在诱惑，可能会偏离使命</li><li>Atonement with the father - 面对权威，或与内在的“最高权力”和解</li><li>Spiritual death/Apotheosis - 遇到巨大危机，内心发生深刻变化</li><li>The ultimate boon - 获得追求已久的成就或知识</li></ol><ul><li>[[Return 回归]] </li></ul><ol start="12"><li>Refusal of return - 拥有新力量后，不愿意回归日常生活</li><li>Magic flight - 返乡途中，可能需要逃离或迅速离开</li><li>Rescue from without - 需要外在力量的帮助才能完成归乡之路</li><li>Crossing the return threshold - 回到普通世界，需要找到将冒险的成果带回的办法</li><li>Master of two worlds - 融合内在变化与外在的现实，成为两个世界的大师</li><li>Freedom to live - 获得最终解放，不再畏惧死亡，享受现在而活</li></ol><p>应用：</p><ul><li>神话：[[赫拉克勒斯 Hercules]] / [[奥德赛 Odyssey]] / [[罗摩衍那 Ramayana]] / [[齐格菲 Sigurd]] / [[奥西里斯 Osiris]]</li><li>文学：[[指环王 The Lord of the Rings]] / [[哈利波特 Harry Potter]] / [[美国众神 American Gods]] / [[西游记]] / [[封神演义]] / [[哪吒]]</li><li>电影：[[黑暗骑士 The Dark Knight]] / [[星球大战 Star Wars]] / [[黑客帝国 Matrix]] / [[千与千寻 Spirited Away]]</li><li>电视剧：[[权力的游戏 Game of Thrones]]</li><li>游戏：[[最终幻想 Final Fantasy]] / [[塞尔达传说系列 Zelda]] / [[荒野大镖客 Red Dead Redemption]]</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404132243804.PNG"></p><p>以 [[星球大战 Star Wars]] 为例：</p><table><thead><tr><th>Acts</th><th>Content</th></tr></thead><tbody><tr><td>- [[Departure 启程]]</td><td></td></tr><tr><td>0. The ordinary world - 日常状态</td><td>卢克在农场生活</td></tr><tr><td>1. The call to adventure - 冒险号召</td><td>卢克发现莱娅公主的求救信息</td></tr><tr><td>2. Refusal of the call - 拒绝召唤</td><td>卢克最初拒绝邀请</td></tr><tr><td>3. Supernatural aid - 导师/帮助者出现，提供帮助或知识</td><td>奥比旺成为了导师 提供光剑和原力知识</td></tr><tr><td>4. Crossing first threshold - 英雄离开熟悉世界，进入未知领域</td><td>卢克离开农场 出发拯救公主</td></tr><tr><td>5. Belly of the whale - 英雄完全脱离熟悉的世界，面临试炼</td><td>潜入死星</td></tr><tr><td></td><td></td></tr><tr><td>- [[Initiation 启蒙]]</td><td></td></tr><tr><td>6. Road of trials - 英雄历经考验，学习如何在新世界生存</td><td>卢克面临挑战和冲突</td></tr><tr><td>7. Meeting with the goddess - 体验爱或收到重大礼物</td><td>卢克与莱娅公主相遇</td></tr><tr><td>8. (Woman as the) Temptation - 面临内在或外在诱惑，可能会偏离使命</td><td>卢克面临试探 包括怀疑能否成功逃离死星</td></tr><tr><td>9. Atonement with the father - 面对权威，或与内在的“最高权力”和解</td><td>卢克面对达斯维达 敌人和父亲的象征</td></tr><tr><td>10. Spiritual death/Apotheosis - 遇到巨大危机，内心发生深刻变化</td><td>卢克导师奥比旺死亡</td></tr><tr><td>11. The ultimate boon - 获得追求已久的成就或知识</td><td>卢克学会使用原力 摧毁死星</td></tr><tr><td></td><td></td></tr><tr><td>- [[Return 回归]]</td><td></td></tr><tr><td>12. Refusal of return - 拥有新力量后，不愿意回归日常生活</td><td>卢克成为英雄 但对未来迷茫</td></tr><tr><td>13. Magic flight - 返乡途中，可能需要逃离或迅速离开</td><td>卢克和同伴在帝国追击下逃离</td></tr><tr><td>14. Rescue from without - 需要外在力量的帮助才能完成归乡之路</td><td>卢克得到舰队帮助</td></tr><tr><td>15. Crossing the return threshold - 回到普通世界，需要找到将冒险的成果带回的办法</td><td>卢克回到义军基地 需要寻找方法帮助反抗军</td></tr><tr><td>16. Master of two worlds - 融合内在变化与外在的现实，成为两个世界的大师</td><td>卢克既是战斗机飞行员 也是原力使用者</td></tr><tr><td>17. Freedom to live - 获得最终解放，不再畏惧死亡，享受现在而活</td><td>卢克获得自由 不被过去拘束</td></tr></tbody></table><h5 id="作家之旅-The-Writer’s-Journey"><a href="#作家之旅-The-Writer’s-Journey" class="headerlink" title="作家之旅 The Writer’s Journey"></a>作家之旅 The Writer’s Journey</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404132258347.PNG"></p><p>[[The Writer’s Journey 作家之旅 - Christopher Vogler]] 是 [[Christopher Vogler]] 在 [[The Writer’s Journey - Mythic Structure for Writers 1992]] 一书中提出的，英雄之旅的一种变体，他将英雄之旅公开引入了电影工业中。</p><p>虽然这一包含 12 阶段的叙事结构也被人称之为英雄之旅，但为了避免混淆，这里我将其成为作家之旅。</p><p>具体而言，作家之旅包括下列阶段：</p><ul><li>[[Departure 启程]]</li></ul><ol><li>日常世界（Ordinary World） - 展示英雄的正常生活和起始状态，为后续的对比提供基础。</li><li>召唤（Call to Adventure） - 英雄面临冒险的邀请，这可能是一个问题、一个挑战或者一个更高的使命。</li><li>拒绝召唤（Refusal of the Call） - 出于恐惧、不确定性或任何其它原因，英雄初步拒绝踏上旅程。</li><li>遇见导师（Meeting with the Mentor）- 英雄遇到一个老师或者导师，帮助他们获得冒险的勇气和所需的知识。 </li><li>跨越门槛（Crossing the Threshold） - 英雄最终离开日常世界，步入未知。</li></ol><ul><li>[[Initiation 启蒙]]</li></ul><ol start="6"><li>试炼、盟友、敌人（Tests, Allies, Enemies） - 英雄面临一系列试炼，交到朋友，也会发现敌人或挑战。</li><li>接近最深处（Approach to the Inmost Cave） - 英雄接近冒险的中心或最大的危机之地，准备面对最大的挑战。</li><li>至暗时刻（Ordeal） - 英雄经历最大的挑战，这通常是他们成长或转换的转折点。</li><li>获得奖赏（Reward） - 英雄在经历至暗时刻后获得了一些形式的奖赏或宝藏。</li></ol><ul><li>[[Return 回归]]</li></ul><ol start="10"><li>归途（The Road Back） - 英雄开始返回日常世界，并将在这个过程中受到测试。</li><li>重生或最后净化（Resurrection） - 英雄在返回或接近日常世界时面临最后的试炼，最终的净化发生，并且学到了最后的教训。</li><li>带着魔力回家（Return with the Elixir） - 英雄返回家园，带回有治愈力量的“魔力”，可能是一种物理的物品或知识、自由、爱或经验。</li></ol><p>应用：</p><ul><li>文学：[[哈利波特 Harry Potter]]</li><li>电影：[[狮子王 The Lion King]] / [[美女与野兽 Beauty and the Beast]]</li><li>电视剧：[[权力的游戏 Game of Thrones]]</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404132305314.PNG"></p><p>以 [[狮子王 The Lion King]] 为例：</p><table><thead><tr><th>Acts</th><th>Content</th></tr></thead><tbody><tr><td>- [[Departure 启程]]</td><td></td></tr><tr><td>1. 日常世界（Ordinary World） - 展示英雄的正常生活和起始状态，为后续的对比提供基础。</td><td>辛巴是狮子王木法沙之子，过着无忧童年</td></tr><tr><td>2. 召唤（Call to Adventure） - 英雄面临冒险的邀请，这可能是一个问题、一个挑战或者一个更高的使命。</td><td>辛巴在朋友鼓励下探索禁地</td></tr><tr><td>3. 拒绝召唤（Refusal of the Call） - 出于恐惧、不确定性或任何其它原因，英雄初步拒绝踏上旅程。</td><td>木法沙拒绝了辛巴的探索请求<br>教导其作为未来国王的责任</td></tr><tr><td>4. 遇见导师（Meeting with the Mentor）- 英雄遇到一个老师或者导师，帮助他们获得冒险的勇气和所需的知识。</td><td>木法沙向辛巴展示星空，讲述已逝国王的守护<br>这里木法沙承担了导师角色</td></tr><tr><td>5. 跨越门槛（Crossing the Threshold） - 英雄最终离开日常世界，步入未知。</td><td>辛巴在叔叔刀疤的阴谋下，误以为自己导致了父亲的死亡，逃离了王国</td></tr><tr><td></td><td></td></tr><tr><td>- [[Initiation 启蒙]]</td><td></td></tr><tr><td>6. 试炼、盟友、敌人（Tests, Allies, Enemies） - 英雄面临一系列试炼，交到朋友，也会发现敌人或挑战。</td><td>辛巴在流浪途中结识了狐獴丁满和疣猪彭彭，他们是朋友和盟友</td></tr><tr><td>7. 接近最深处（Approach to the Inmost Cave） - 英雄接近冒险的中心或最大的危机之地，准备面对最大的挑战。</td><td>辛巴在远方有了新的生活，但无法忘记过去和责任</td></tr><tr><td>8. 至暗时刻（Ordeal） - 英雄经历最大的挑战，这通常是他们成长或转换的转折点。</td><td>辛巴得知王国遭受刀疤的暴政，面临内心的挣扎和试炼</td></tr><tr><td>9. 获得奖赏（Reward） - 英雄在经历至暗时刻后获得了一些形式的奖赏或宝藏。</td><td>辛巴决定重返王国，面对过去<br>这是重要的成长转折点</td></tr><tr><td></td><td></td></tr><tr><td>- [[Return 回归]]</td><td></td></tr><tr><td>10. 归途（The Road Back） - 英雄开始返回日常世界，并将在这个过程中受到测试。</td><td>辛巴在归乡途中，遭遇刀疤的追兵和困难</td></tr><tr><td>11. 重生或最后净化（Resurrection） - 英雄在返回或接近日常世界时面临最后的试炼，最终的净化发生，并且学到了最后的教训。</td><td>辛巴和刀疤决战，克服了恐惧和内疚，最终获胜</td></tr><tr><td>12. 带着魔力回家（Return with the Elixir） - 英雄返回家园，带回有治愈力量的“魔力”，可能是一种物理的物品或知识、自由、爱或经验。</td><td>辛巴成为新狮子王，恢复王国和平</td></tr></tbody></table><h5 id="英雄目标序列-Hero-Goal-Sequences"><a href="#英雄目标序列-Hero-Goal-Sequences" class="headerlink" title="英雄目标序列 Hero Goal Sequences"></a>英雄目标序列 Hero Goal Sequences</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404132339191.PNG"></p><p>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 是 [[Eric Edson]] 在 [[The Story Solution - 23 Actions All Great Heroes Must Take 2011]] 一书中提出的，一种可用于商业电影分析和剧本写作的叙事结构。</p><p>具体而言，英雄目标序列包括下列阶段：</p><ol><li><p>第一幕 act one 故事建置段落 1-6 </p><ul><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 1 应该包括<ul><li>呈现一小段主人公当前的日常生活</li><li>给观众迅速喜欢主人公的理由，即便是非传统英雄</li><li>初次使用主人公的个人情感保护壳</li><li>当主人公追求某个积极目标时，某种危险或不公平的伤害出现</li><li>建立主人公对日常世界的现状的不满情绪</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 2<ul><li>故事总体冲突开始</li><li>引发事件出现</li><li>第一次呈现由过往创伤引起的主人公内心的情感痛楚</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 3<ul><li>主人公面临历险召唤</li><li>丰富情节的新人物登场</li><li>故事节奏加快</li><li>爱恋对象人物第一次出现，或已有人物显露担起挑战主人公情感的爱情功能</li><li>针对主人公的陷阱已经就位</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 4<ul><li>新人物和关系得到发展</li><li>导师、爱恋对象或伙伴第一次出现</li><li>当主人公在追求总体目标时，故事节奏加快</li><li>主人公被迫冒险一搏</li><li>主人公踏入陷阱</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 5<ul><li>主人公的渴望得到揭示，为实现目标提供个人情感动机</li><li>向主人公直接展现对手的力量或对手本身</li><li>主人公对历险召唤感到迟疑，或直接拒绝</li><li>主人公踏入之前布下的陷阱（如果在 4 中没有踏入）</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 6<ul><li>陷阱机关触发，困住主人公</li><li>惊人意外 1 出现</li><li>电影主要情节线和主人公追求的特定目标都变得清晰</li></ul></li></ul></li><li><p>第二幕 act two 冲突递增的发展段落 7-12 13-18</p><ul><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 7<ul><li>主人公绞尽脑汁寻觅良策，独立应对或与他人合作</li><li>主人公担起电影特定的情节目标，这需要相当的挣扎和努力</li><li>主人公的内心冲突显现</li><li>揭示电影主题</li><li>新人物走进主人公的挣扎，他必须开始辨别敌友</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 8<ul><li>对手力量得到展现</li><li>风险增高</li><li>主人公经受训练或得到教导来掌握前路斗争所需的特定技能</li><li>盟友和敌人进一步确立</li><li>当主人公或亲近之人言语间表达出他内心的情感问题时，人物成长第一步时常出现<ul><li>人物成长第一步可以出现在英雄目标段落 7-10 任意地方 最常出现在 8</li></ul></li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 9<ul><li>推高紧张度和提升节奏或故事力量的行动迸发或情感强烈的时刻出现</li><li>主人公展现出身体能力</li><li>主人公冒险一搏，事与愿违</li><li>主人公考虑放弃</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 10<ul><li>主人公受挫倍遭打击</li><li>主人公咨询新导师</li><li>一个出人意料的行动障碍突然出现</li><li>主人公没有出现的次要情节的旁切场景展开</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 11<ul><li>主人公接近对手虎穴/权力中心</li><li>冲突越发激烈</li><li>主人公和对手代理人战斗爆发</li><li>风险和紧迫性猛烈飙升</li><li>由导师提供培训、指导或咨询的最后机会</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 12 - 中间点段落<ul><li>主人公到达无路可退的十字路口，一旦跨过再无回头可能</li><li>人物成长重要的第二步出现，此时主人公直接对抗阻碍他实现自我目标的内心冲突</li><li>恋人第一次事实上或隐喻上的亲吻或发生关系——或是同伙伴的搭档关系正式确立，加深了彼此的承诺</li><li>基调和叙事风格不同于电影中任何其他部分</li><li>倒计时开始</li><li>事实上或象征性卸下伪装，内在真心得以揭示</li><li>以事实上或象征性死亡和重生的出现来代表主人公幼稚的结束或成熟的开始</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 13<ul><li>主人公带着重拾的勇气向前挺进</li><li>一个新的难题突然出现</li><li>主人公再一次拿起他那破损的自我保护和鼓励的内心情感的保护壳</li><li>主人公和对手之间的冲突已经变成极为私人的额外证据出现</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 14<ul><li>节奏略微放缓，并为主人公提供了一个沉思时刻</li><li>爱恋对象或伙伴，甚至是主人公自己带出他此刻尚不愿意面对的内心冲突问题</li><li>一个挑战主人公的重要新想法出现</li><li>重要的新想法为在英雄目标段落 15 中即将出现的第二个行动迸发做好了铺垫</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 15<ul><li>行动迸发中的行动或能量，抑或是戏剧冲突让事件骤然激烈起来</li><li>主人公体验到胜利的假象，或至少相信他能与对手平分秋色，所以他的终极目标看起来也不是遥不可及</li><li>主人公短暂的安全感转瞬即逝</li><li>牢固的感情关系可以激励主人公闯过行动迸发</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 16<ul><li>目标段落 15 释放的戏剧能量持续抬升，不是作为更多的动作冲突，而是作为冲突的强度持续上升</li><li>主人公对自己的能力和判断感到信心满满，并重新投身到终极的现实目标</li><li>主人公对核心的故事冲突发现了一些新的视角</li><li>人物成长的第三步可以发生在此（或在 17），主人公战胜了内心冲突</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 17<ul><li>为与对手或对手的代理人在第二幕的高潮中摊牌决战做好了最后的准备</li><li>对手的力量以主人公最为个人的方式得以再次证明</li><li>倒计时接近零点，或致命危险步步逼近</li><li>当主人公证明他为何与众不同时，他的勇气的力量得以展现——通常通过战胜他的内心冲突的人物成长的第三步（如果没有发生在 16）</li></ul></li><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 18<ul><li>一个比常规更长的段落——有时候长达 10 分钟或以上</li><li>第二幕高潮到达了冲突和行动的顶点——但这没有彻底解决故事的核心问题</li><li>主人公展现成长的新自我</li><li>主人公相信自己已经战胜了内心冲突</li><li>惊人意外 2 带给主人公整个故事中最大的反转——通常是消极的</li><li>在浪漫喜剧中，感情中核心的谎言或欺骗常在惊人意外 2 中得到揭露，背叛的痛苦让恋人看似彻底分手</li></ul></li></ul></li><li><p>第三幕 act three 情节解决段落 19-23</p><ul><li>第三幕戏剧需要<ul><li>主人公必须自己带来结局</li><li>主人公在整个第二幕中不断追求的求胜计划因为惊人意外 2 而被摧毁或证明行不通，所以在第三幕中必须用即兴方式解决问题</li><li>必须场景不可或缺</li><li>每个关键次要情节必须解决</li><li>结局总结必须结束剧本</li></ul></li><li>第三幕包含 2-5 个英雄目标段落，常见是 3 个</li><li>当第三幕只有两个目标段落<ul><li>[[Hero Goal Sequences 英雄目标序列 - Eric Edson]] 19 必须包含必须场景，20 必须包含结局</li><li>对主人公而言，在惊人意外 2 最有可能出现一个积极反转，这情况在动作电影中最为常见</li></ul></li><li>第三幕 - 三个段落<ul><li>如果惊人意外 2 是残酷的消极反转，主人公在 19 中需要理清思路和重整旗鼓，这一切应该在英雄目标段落 20 中的必须场景之前完成</li><li>主人公在目标段落 19 中想要再次退回到自我保护的情感保护壳之后，但他会发现这已经不再起作用，事实上他现在已经为目标段落 20 的决战做好了充足准备</li><li>在进入 20 的必须场景之前，英雄目标段落 19 中需要额外段落来结束某些次要情节</li></ul></li><li>第三幕 - 四个段落<ul><li>一些重要次要情节必须在必须场景之前结束</li><li>全新场地元素或环境必须在故事解决之前得以建立</li></ul></li><li>第三幕 - 五个段落<ul><li>少见</li><li>必须有独一无二的冲突的碰撞和出乎意外的结局</li></ul></li></ul></li></ol><p>应用：</p><ul><li>电影：主流商业电影都可以运用该叙事结构进行分析，书中提到的有 [[黑客帝国 Matrix]] / [[重返未来 Back to the Future]] 等等</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404132347193.PNG"></p><p>以 [[飞屋环游记 Up]] 为例：</p><table><thead><tr><th>Acts</th><th>Content</th></tr></thead><tbody><tr><td>1. 第一幕 act one 故事建置段落 1-6</td><td></td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 1 应该包括<br>    - 呈现一小段主人公当前的日常生活<br>    - 给观众迅速喜欢主人公的理由，即便是非传统英雄<br>    - 初次使用主人公的个人情感保护壳<br>    - 当主人公追求某个积极目标时，某种危险或不公平的伤害出现<br>    - 建立主人公对日常世界的现状的不满情绪</td><td>和艾莉玩耍的小卡尔怀揣冒险梦想<br>小卡尔发誓要带艾莉去天堂瀑布</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 2<br>    - 故事总体冲突开始<br>    - 引发事件出现<br>    - 第一次呈现由过往创伤引起的主人公内心的情感痛楚</td><td>卡尔和艾莉打造美好生活<br>但艾莉早早病逝</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 3<br>    - 主人公面临历险召唤<br>    - 丰富情节的新人物登场<br>    - 故事节奏加快<br>    - 爱恋对象人物第一次出现，或已有人物显露担起挑战主人公情感的爱情功能<br>    - 针对主人公的陷阱已经就位</td><td>卡尔对开发商寸步不让 保卫房子<br>法官宣判 卡尔即将被迫离开</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 4<br>    - 新人物和关系得到发展<br>    - 导师、爱恋对象或伙伴第一次出现<br>    - 当主人公在追求总体目标时，故事节奏加快<br>    - 主人公被迫冒险一搏<br>    - 主人公踏入陷阱</td><td>卡尔升起气球 屋子起飞</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 5<br>    - 主人公的渴望得到揭示，为实现目标提供个人情感动机<br>    - 向主人公直接展现对手的力量或对手本身<br>    - 主人公对历险召唤感到迟疑，或直接拒绝<br>    - 主人公踏入之前布下的陷阱（如果在 4 中没有踏入）</td><td>熟悉屋子的飞行<br>不速之客男孩罗素打乱计划</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 6<br>    - 陷阱机关触发，困住主人公<br>    - 惊人意外 1 出现<br>    - 电影主要情节线和主人公追求的特定目标都变得清晰</td><td>试图摆脱男孩 飞往天堂瀑布<br>云雾散去 突然发现瀑布近在咫尺</td></tr><tr><td>2. 第二幕 act two 冲突递增的发展段落 7-12 13-18<br><br></td><td></td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 7<br>    - 主人公绞尽脑汁寻觅良策，独立应对或与他人合作<br>    - 主人公担起电影特定的情节目标，这需要相当的挣扎和努力<br>    - 主人公的内心冲突显现<br>    - 揭示电影主题<br>    - 新人物走进主人公的挣扎，他必须开始辨别敌友</td><td>卡尔想将屋子带往瀑布<br>但怪鸟凯文出现 旅途更加复杂</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 8<br>    - 对手力量得到展现<br>    - 风险增高<br>    - 主人公经受训练或得到教导来掌握前路斗争所需的特定技能<br>    - 盟友和敌人进一步确立<br>    - 当主人公或亲近之人言语间表达出他内心的情感问题时，人物成长第一步时常出现<br>    - 人物成长第一步可以出现在英雄目标段落 7-10 任意地方 最常出现在 8</td><td>卡尔想摆脱凯文<br>会说话的狗道格加入 问题增加</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 9<br>    - 推高紧张度和提升节奏或故事力量的行动迸发或情感强烈的时刻出现<br>    - 主人公展现出身体能力<br>    - 主人公冒险一搏，事与愿违<br>    - 主人公考虑放弃</td><td>卡尔想摆脱凯文和道格 但失败了</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 10<br>    - 主人公受挫倍遭打击<br>    - 主人公咨询新导师<br>    - 一个出人意料的行动障碍突然出现<br>    - 主人公没有出现的次要情节的旁切场景展开</td><td>夜间穿越暴雨<br>卡尔和罗素被恶狗挟持</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 11<br>    - 主人公接近对手虎穴/权力中心<br>    - 冲突越发激烈<br>    - 主人公和对手代理人战斗爆发<br>    - 风险和紧迫性猛烈飙升<br>    - 由导师提供培训、指导或咨询的最后机会</td><td>卡尔被迫去见恶狗主人蒙兹<br>蒙兹邀请卡尔和罗素共进晚餐</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 12 - 中间点段落<br>    - 主人公到达无路可退的十字路口，一旦跨过再无回头可能<br>    - 人物成长重要的第二步出现，此时主人公直接对抗阻碍他实现自我目标的内心冲突<br>    - 恋人第一次事实上或隐喻上的亲吻或发生关系——或是同伙伴的搭档关系正式确立，加深了彼此的承诺<br>    - 基调和叙事风格不同于电影中任何其他部分<br>    - 倒计时开始<br>    - 事实上或象征性卸下伪装，内在真心得以揭示<br>    - 以事实上或象征性死亡和重生的出现来代表主人公幼稚的结束或成熟的开始</td><td>卡尔想和蒙兹交友<br>但蒙兹其实是危险恶人 想要追捕凯文</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 13<br>    - 主人公带着重拾的勇气向前挺进<br>    - 一个新的难题突然出现<br>    - 主人公再一次拿起他那破损的自我保护和鼓励的内心情感的保护壳<br>    - 主人公和对手之间的冲突已经变成极为私人的额外证据出现</td><td>逃出狗群攻击 把房子带到安全地方<br>当务之急是帮助凯文</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 14<br>    - 节奏略微放缓，并为主人公提供了一个沉思时刻<br>    - 爱恋对象或伙伴，甚至是主人公自己带出他此刻尚不愿意面对的内心冲突问题<br>    - 一个挑战主人公的重要新想法出现<br>    - 重要的新想法为在英雄目标段落 15 中即将出现的第二个行动迸发做好了铺垫</td><td>帮受伤的凯文回家 卡尔倾听罗素回忆<br>蒙兹让屋子被点燃</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 15<br>    - 行动迸发中的行动或能量，抑或是戏剧冲突让事件骤然激烈起来<br>    - 主人公体验到胜利的假象，或至少相信他能与对手平分秋色，所以他的终极目标看起来也不是遥不可及<br>    - 主人公短暂的安全感转瞬即逝<br>    - 牢固的感情关系可以激励主人公闯过行动迸发</td><td>卡尔忙于灭火 不顾一切保护房子<br>但蒙兹抓住了凯文</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 16<br>    - 目标段落 15 释放的戏剧能量持续抬升，不是作为更多的动作冲突，而是作为冲突的强度持续上升<br>    - 主人公对自己的能力和判断感到信心满满，并重新投身到终极的现实目标<br>    - 主人公对核心的故事冲突发现了一些新的视角<br>    - 人物成长的第三步可以发生在此（或在 17），主人公战胜了内心冲突</td><td>卡尔将房子带到瀑布山顶 但很空虚</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 17<br>    - 为与对手或对手的代理人在第二幕的高潮中摊牌决战做好了最后的准备<br>    - 对手的力量以主人公最为个人的方式得以再次证明<br>    - 倒计时接近零点，或致命危险步步逼近<br>    - 当主人公证明他为何与众不同时，他的勇气的力量得以展现——通常通过战胜他的内心冲突的人物成长的第三步（如果没有发生在 16）</td><td>卡尔在房子里告别过去<br>屋子再度起飞 准备营救凯文</td></tr><tr><td>- [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 18<br>    - 一个比常规更长的段落——有时候长达 10 分钟或以上<br>    - 第二幕高潮到达了冲突和行动的顶点——但这没有彻底解决故事的核心问题<br>    - 主人公展现成长的新自我<br>    - 主人公相信自己已经战胜了内心冲突<br>    - 惊人意外 2 带给主人公整个故事中最大的反转——通常是消极的<br>    - 在浪漫喜剧中，感情中核心的谎言或欺骗常在惊人意外 2 中得到揭露，背叛的痛苦让恋人看似彻底分手</td><td>卡尔追上罗素<br>突然发现罗素在掉落</td></tr><tr><td>3. 第三幕 act three 情节解决段落 19-23<br><br>- 第三幕戏剧需要<br>    - 主人公必须自己带来结局<br>    - 主人公在整个第二幕中不断追求的求胜计划因为惊人意外 2 而被摧毁或证明行不通，所以在第三幕中必须用即兴方式解决问题<br>    - 必须场景不可或缺<br>    - 每个关键次要情节必须解决<br>    - 结局总结必须结束剧本<br>- 第三幕包含 2-5 个英雄目标段落，常见是 3 个</td><td></td></tr><tr><td><br>- 当第三幕只有两个目标段落<br>    - [[Hero Goal Sequences 英雄目标段落 - Eric Edson]] 19 必须包含必须场景，20 必须包含结局<br>    - 对主人公而言，在惊人意外 2 最有可能出现一个积极反转，这情况在动作电影中最为常见<br></td><td></td></tr><tr><td>- 第三幕 - 三个段落<br>    - 如果惊人意外 2 是残酷的消极反转，主人公在 19 中需要理清思路和重整旗鼓，这一切应该在英雄目标段落 20 中的必须场景之前完成<br>    - 主人公在目标段落 19 中想要再次退回到自我保护的情感保护壳之后，但他会发现这已经不再起作用，事实上他现在已经为目标段落 20 的决战做好了充足准备<br>    - 在进入 20 的必须场景之前，英雄目标段落 19 中需要额外段落来结束某些次要情节</td><td>-19<br>卡尔救出罗素和凯文<br>但突然蒙兹出现<br><br>-20<br>卡尔和蒙兹决战<br>卡尔赢得胜利 救下了罗素 道格和凯文<br><br>-21<br>卡尔把凯文送回家<br>带着罗素和道格回家 展开新生活</td></tr><tr><td>- 第三幕 - 四个段落<br>    - 一些重要次要情节必须在必须场景之前结束<br>    - 全新场地元素或环境必须在故事解决之前得以建立</td><td></td></tr><tr><td>- 第三幕 - 五个段落<br>    - 少见<br>    - 必须有独一无二的冲突的碰撞和出乎意外的结局</td><td></td></tr></tbody></table><h5 id="集体之旅-The-Collective-Journey"><a href="#集体之旅-The-Collective-Journey" class="headerlink" title="集体之旅 The Collective Journey"></a>集体之旅 The Collective Journey</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404140001805.PNG"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141323687.png"></p><p>[[The Collective Journey 集体之旅 - Jeff Gomez 2017]] 是 [[Jeff Gomez]] 在其<a href="https://blog.collectivejourney.com/why-is-this-happening-d1287d5ee4ee">博客</a>中提出的，互联网时代之后出现的，新的跨媒介叙事结构。</p><p>具体而言，集体之旅包括下列阶段：</p><ul><li>觉醒与团结 awakening and unification</li></ul><ol><li>The Old World (旧世界)：描述故事开始时的状态，通常是传统的、已建立的社会秩序或旧有的思维方式</li><li>The Shift (转变)：某个事件或一系列事件打破了旧世界的平衡，促使群体或社会开始变革的过程</li><li>Tapping the Digital Oracle (利用数字神谕)：在现代社会中，人们通过互联网和社交媒体获取信息和知识，这些工具像是现代的神谕，指引着群体前进的方向</li><li>Adapt or Succumb (适应或屈服)：群体面临必须适应新情况或被其淹没的抉择</li></ol><ul><li>探索与挑战 Exploration and Challenge</li></ul><ol start="5"><li>Different Paths (不同的道路)：群体中的不同成员可能会选择不同的方式来应对变革</li><li>Signs &amp; Images (标志与图像)：在集体旅程中，标志和图像成为传递信息、激发行动和表达身份的重要工具</li><li>Multiple Solutions (多种解决方案)：面对复杂的挑战时，可能会出现多种潜在的解决方案</li><li>Paths Will Cross (道路将交汇)：不同群体或个体的旅程会相交，产生冲突或合作</li><li>Anyone Can Die (任何人都可能死去)：表明在集体旅程中，即使是看似重要的角色也可能会牺牲，强调了故事的不可预测性和现实的残酷性</li></ol><ul><li>整合与变革 integration and transformation</li></ul><ol start="10"><li>Deconstruction (解构)：旧有的结构和信仰系统被拆解和质疑</li><li>Embracing the Reversal (拥抱逆转)：群体开始接受和利用之前的逆境作为前进的动力</li><li>Reaching Plurality (达到多元性)：群体认识到多样性和包容性的价值，并将其作为力量</li><li>Superpositioning (超级定位)：群体或个体在多个不同的层面上同时存在和操作</li><li>Endless Universe (无尽宇宙)：认识到故事和可能性是无限的</li><li>Collective Movement (集体运动)：群体共同行动，推动社会或文化的变革</li><li>Momentum (动力)：集体运动积聚动力，变得不可阻挡</li><li>Change-making (变革制造)：群体的行动开始产生实际和积极的变化</li><li>The New World (新世界)：经历了集体旅程后，群体进入了一个新的状态，这个新世界反映了他们的努力和变革</li></ol><p>应用：</p><ul><li><p>电视剧：[[西部世界 Westworld]] / [[真爱如血 True Blood]] / [[行尸走肉 The Walking Dead]] / [[权力的游戏 Game of Thrones]]</p><ul><li><p>[[权力的游戏 Game of Thrones]] 第一季结尾 Ned Stark 的死亡让观众意识到这个最接近英雄的人其实不是（传统意义上的）英雄，没有人来拯救他</p><ul><li>虽然后面他被复活了，但当时确实非常震撼</li><li>剧中庞大的关系网也让整个系统得以被观众了解，各方角色的声音都能被听到，没有简单的善恶，复杂的系统使得每个角色有其行动的理由</li><li>任何人都可能死</li><li>导师可能犯错</li><li>女性也在其中承担关键角色</li><li>故事并非线性展开，并且很复杂</li><li>暴力不被鼓吹，并且并不光彩</li></ul></li><li><p>[[行尸走肉 The Walking Dead]]</p><ul><li><p>[[Rick Grimes]] 是最接近传统英雄的那个角色，但他也经常从传统英雄之旅偏移</p><ul><li>他有时会在很多集中消失（传统英雄之旅中，只有英雄才能作为故事的真正推动者）</li><li>他常常迷失方向，痛苦得几近神志不清</li><li>他救人失败的次数几乎和他救同胞的次数一样多</li><li>他消失在了故事结束之前<blockquote><blockquote><p>我没直接看过行尸走肉，但传统英雄之旅中也有这种英雄死于结局之前的例外情况，在那种情况下，他的伙伴会活下来传颂他的故事。</p></blockquote></blockquote></li></ul></li><li><p>行尸走肉中活下来的人们总是与一个破碎的系统作斗争，系统会生成很多不同的“反派”，但他们总是被描绘为为自己的群体负责任的人，只是必须做一些痛苦的抉择来牺牲人性以存活下去</p><ul><li>行尸走肉中的善恶并不绝对，所以展现了道德相对主义</li><li>男性和女性力量都很重要</li><li>暴力不被称赞，而是被描绘成令人反胃和揪心的情绪</li></ul></li></ul></li><li><p>[[Orange is the New Black]] 也展现了不同的故事</p><ul><li>我们以为将看到的是一部讲述一个金发碧眼的天真少女如何在充满可怕罪犯的监狱中穿梭的轻喜剧<ul><li>结果却是一个由囚犯、狱警和官僚组成的社区</li><li>他们都在努力应对一个日益危险、功能失调的系统</li></ul></li><li>早在第二季，Piper（应该是剧中的一位黑人拉丁裔女性）回归到了集体当中<ul><li>在这个多元化的社区中，任何一个角色的行为都可能波及整个监狱，影响到其他任何一个人</li><li>这意味着这个剧集不再假装自己是一个 “英雄之旅 “，而开始像一个 “集体之旅 “</li></ul></li></ul></li></ul></li><li><p>动画：[[宇宙小子 Steven Universe]]</p></li><li><p>游戏：带有 MMO/UGC 属性的游戏（[[质量效应 Mass Effect]] / [[死亡搁浅 Death Stranding]] / [[动物森友会 Animal Crossing]]）</p></li><li><p>跨媒介：星战宇宙/漫威宇宙</p></li></ul><p>虽然上面列出了一些例子，但我个人认为其中很多例子其实只是部分符合集体之旅的一些特征，目前好像还没有契合集体之旅每一个阶段并且如此发展的例子？</p><p>集体叙事 vs. 群像叙事</p><ul><li>虽然星战宇宙和漫威宇宙被列为跨媒介作品中符合集体叙事的例子，但个人认为它们应该是群像叙事的例子</li><li>个人所理解的群像叙事与集体叙事的核心差异<ul><li>主角并非每一个普通个体，而是多个被挑选的个体（multiple chosen one）</li><li>其所面对的目标并非无形系统本身，而是有形邪恶化身</li><li>改变的驱力并非群体中的个体交互，而是英雄的个人成长</li></ul></li></ul><h5 id="英雄之旅-vs-集体之旅"><a href="#英雄之旅-vs-集体之旅" class="headerlink" title="英雄之旅 vs. 集体之旅"></a>英雄之旅 vs. 集体之旅</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404140112977.PNG"></p><p>[[Jeff Gomez]] 在一些演讲中也提到了 [[The Hero’s Journey 英雄之旅 - Joseph Campbell]] 以及 [[The Collective Journey 集体之旅 - Jeff Gomez 2017]] 的一些特征：</p><ul><li>[[The Hero’s Journey 英雄之旅 - Joseph Campbell]] 在快速变化的时代可能有些过时，它所强调的是个人英雄主义（个人叙事），而在现在的时代，我们每个人都成为了参与者，而不仅仅只是旁观者，即集体叙事的时代已经到来。<ul><li>它的本质是对于原始部落时期的“正确性 rightness”的强调，遵循，则活，即是一种对于生存的承诺（commitment）<blockquote><blockquote><p>让我联想到的其实是 [[老子]] 所讲的是悟道的统治者，而 [[庄子]] 所讲的是悟道的个人</p></blockquote></blockquote></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141325299.PNG"></p><ul><li><p>[[The Hero’s Journey 英雄之旅 - Joseph Campbell]] 的特征</p><ol><li><p>Driven by conflict</p><ul><li>总是蕴含（最终引向暴力的）冲突，但是在当前的时代中，冲突的内核已经发生了改变</li></ul></li><li><p>Weighted on masculine impulse</p><ul><li>冲突的来源、回应、解决，通常都是男性化的</li></ul></li><li><p>Linear Narrative</p><ul><li>线性叙事</li></ul></li><li><p>Singular villain</p><ul><li>一般都是一个单一的恶人而不是系统型的变化作为最大的对手</li></ul></li><li><p>Good vs Evil binary</p><ul><li>好与坏是极端的</li></ul></li><li><p>Limited feminine representation</p><ul><li>女性总是诱惑、无辜、圣母的象征性代表</li><li>如果有以女性为主角的，那她所走的也是男性的英雄之旅</li></ul></li><li><p>Not conducive to communications technology</p><ul><li>想想过去十年你看过的几乎所有当代电影或电视剧。编剧为了让情节复杂化，需要摆脱什么？事实上，我们经常看到编剧为了让冲突升级，让主人公摆脱手机、社交媒体和其他大多数信息资源，这实在是太愚蠢了<blockquote><blockquote><p>个人对这点的理解是“英雄与群体力量是割裂开的”</p></blockquote></blockquote></li></ul></li><li><p>Knowledge scarcity</p><ul><li>对知识的隐瞒或对某些信息的追寻仍然是我们许多故事的驱动因素</li></ul></li><li><p>Mentors are rarefied elders</p><ul><li>Mentor 通常是老者</li><li>没有导师英雄通常会迷失方向</li></ul></li><li><p>Heroic power and glory</p><ul><li>在英雄之旅中，一个人因拯救了许多人而脱颖而出并受到赞颂。他取得胜利的手段等同于权力和影响力。因为他的伟大事迹，我们将英雄凌驾于自己之上。（不会将自己代入其中）</li></ul></li><li><p>The Hero loses</p><ul><li>英雄改变了，他经历了人所未经历，变得与众不同</li><li>有时为了胜利他付出了巨大牺牲，总而言之，他也再也不是原来的他</li></ul></li><li><p>The Community loses</p><ul><li>英雄就是 game changer，没有英雄，就没有希望</li><li>英雄缺位时，会有德不配位的人上台</li><li>即使英雄归来，社会重拾希望，但社会自身却并未从中成长，当黑暗卷土重来，对于英雄的需要便再次出现</li></ul></li></ol></li><li><p>[[The Collective Journey 集体之旅 - Jeff Gomez 2017]] 的特征</p><ul><li>Protagonist is one of a collective<ul><li>主角是集体中的一员</li></ul></li><li>Narrative can be driven by a cause<ul><li>不再是冲突驱动的叙事</li></ul></li><li>Narrative is weighted toward a non-gendered impulse<ul><li>叙事不再是男性化的</li></ul></li><li>The challenge can be huge or pervasive<ul><li>真正的敌人是系统，而不是敌人的化身</li></ul></li><li>Narrative may be nonlinear<ul><li>非线性叙事 - [[superpositioning]] 强调个体的多身份多观点，在跨媒介中多点共振</li></ul></li><li>Multiple perspectives and shifting viewpoints<ul><li>多观点 多视角</li></ul></li><li>Omni-directional (games, social media, online worlds)<ul><li>多种媒介共同发生</li></ul></li><li>Subject to extraordinary scrutiny (and wild misinterpretation)<ul><li>很容易被挑出毛病（因为有太多人同时在看）</li><li>也很容易被误解</li></ul></li><li>Capable of multiple simultaneous variations<ul><li>很多变化可能同时发生</li></ul></li><li>Inclusive of diverse characters and perspectives<ul><li>包容不同的角色和观点</li></ul></li><li>Dialog-based - interactive<ul><li>可能是有来有回，迭代式的发展（而不仅仅只由某一方驱动）</li><li>[[再生式倾听 regenerative listening]] - 听众也成为讲述者</li></ul></li><li>Alterable<ul><li>集体叙事是可以被参与者改变和重塑的</li><li>参与者可以通过自己的选择、行为和创意,对叙事的发展产生影响和改变</li><li>这种可变性让集体叙事具有更强的动态性和不确定性</li></ul></li><li>Porous<ul><li>集体叙事具有较强的开放性和渗透性</li><li>参与者可以进入叙事世界，并与其中的元素进行互动和融合</li><li>叙事中的角色、事件、时间和空间边界也较为模糊和流动</li><li>这种渗透性让参与者可以更深入地介入和塑造叙事</li></ul></li></ul></li></ul><h4 id="光遇如何运用集体之旅叙事结构"><a href="#光遇如何运用集体之旅叙事结构" class="headerlink" title="光遇如何运用集体之旅叙事结构"></a>光遇如何运用集体之旅叙事结构</h4><p>这个便是开头所讲到的，在看 <a href="https://youtu.be/wQP9spsb_IQ?si=JUIVeslXzYZyvOuS">Evolving Emotional Storytelling In thatgamecompany’s SKY</a> 这期时，[[Jennie Kong]] 在其中提到了 [[旅 Journey]] 的叙事节奏更偏向于 [[The Hero’s Journey 英雄之旅 - Joseph Campbell]]，而 [[光遇 Sky]] 作为后续游戏，希望能超越前作，并且因为要构建更大群体之间的联系，所以光遇的叙事更偏向于 [[The Collective Journey 集体之旅 - Jeff Gomez 2017]]。</p><p>这是 thatgamecompany 对英雄之旅和集体之旅的特征对比：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141326426.PNG"></p><p>[[thatgamecompany]] 构建了所谓的情绪引擎（emotional engine）来让玩家们联系在一起：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141326547.PNG"></p><p>并且和玩家社区紧密联系，不断迭代测试。设计方向从最开始关注于友谊的构建转向了 [[利他主义 altruism]]，让玩家们不再“被迫交友”，而是为玩家们提供更多接触的契机，从而让关系自发建立，也为玩家们提供了 UGC 的机会，让玩家故事自然生长。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141326394.PNG"></p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>叙事结构作为叙事内容的组织方式，其实算是不太（被玩家）可见，但很重要的一环。<br>通过对这些常见的叙事结构的梳理，以及对英雄之旅和集体之旅的比较，可以帮助我们更好地进行设计，也帮助我更好地完善了接下来要提到的情感化游戏设计系统。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404141327063.PNG"></p><p>感谢观看，欢迎批评指正！</p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><p>想知道更多和情感化游戏设计系统相关的内容，可以看 <a href="https://medill-east.github.io/2022/04/28/index-thinking/">这个页面</a> 中的 Emotional Game Design System 部分。</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240407 - Marketing is Multiplicative</title>
      <link href="2024/04/07/20240407-l01/"/>
      <url>2024/04/07/20240407-l01/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解市场营销！ </p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="L01-Marketing-is-Multiplicative"><a href="#L01-Marketing-is-Multiplicative" class="headerlink" title="L01 - Marketing is Multiplicative"></a>L01 - Marketing is Multiplicative</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071032251.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/iwOgFiJNCoU?si=llrXwCZY3l3xaLev" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li>在这个系列中，不会直接谈论游戏本身<ul><li>而是会谈论如何让你的游戏广为人知</li><li>[[樱井政博]] 自己在这方面有很多经验<ul><li>[[Mr. Sakurai Presents]] 系列视频也是一种宣传手段<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071035932.png"></li></ul></li></ul></li><li>游戏本身当然需要足够游戏和具有吸引力，但让游戏被人知道也是同等重要的<ul><li>一个不为人知的游戏相当于不存在（an unknown game may as well not exist）</li><li>为了不辜负你的努力，第一步是让别人知道你的游戏的存在，做这个事情的方式就被称为市场营销（marketing），也是销售（sales）下列的一个部分</li><li>可以说，开发和营销是互不可分的（spin on the same axle）<ul><li>任何一方出现问题，都难以继续下去</li><li>这也是为什么樱井想出自己的方式来让自己的游戏为人所知<ul><li>Fighter reveal movie 斗士的揭幕视频<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071042719.png"></li><li>[[Smash Bros. DOJO!!]] 网站<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071043489.png"></li><li>当创建斗士的艺术作品时，总是要记住这可能会在之后被用在别的地方<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071045915.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071045919.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071046711.png"></li></ul></li></ul></li></ul></li><li>即使是现在，樱井也总是确保发行商需要给他提供详尽的市场营销和运营细节，所以这样他才能在必要时做出建设性建议<ul><li>樱井自己不会直接撰写发表在官方推特或网站上的文字内容，但他总会对其检查并提出反馈</li></ul></li><li>人们可能总是混淆， [[樱井政博]] 是游戏导演（Game Director）而不是游戏制作人 Game Producer<ul><li>即使如此，除开金钱方面的考量，也可以说樱井承担了一大堆制作人相关的职责</li><li>这体现出他对于市场营销的重视（他自我吐槽，也许只是因为自己好用？哈哈哈）<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404071052596.png"></li></ul></li><li>开发和营销是乘法效应<ul><li>一方的成功对于另一方的增益是成比例的</li><li>现如今，市场上有无数作品出现<ul><li>单是 2021 年，steam 上就有大约 10000+ 游戏开始销售</li><li>如果包括主机和移动游戏，这个数量会更加夸张</li><li>谁又能注意到每一款作品呢？</li></ul></li><li>换句话说，如果想让游戏为人所知，是需要付出努力的<ul><li>但樱井自己的例子中，任天堂的宣发部门（promotional department）帮了很大的忙，他也对此表示感激</li><li>樱井自己尽量不在个人推特账户发太多宣传，不然可能会给玩家们带来不必要的过载信息</li></ul></li><li>樱井觉得斗士的揭幕视频最终都产生了比较好的市场宣传效果</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>吸引眼球并不总是有趣的，但有时候稍微“用力”一些，可能是恰到好处的</li><li>即使你是开发人员，想想如何帮助你的游戏为人所知也是一件好事</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240331 - Visual Effects in Slow Motion</title>
      <link href="2024/03/31/20240331-h04/"/>
      <url>2024/03/31/20240331-h04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，仔细观察 Smash Bros. Ultimate 中的特效！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="H04-Visual-Effects-in-Slow-Motion"><a href="#H04-Visual-Effects-in-Slow-Motion" class="headerlink" title="H04 - Visual Effects in Slow Motion"></a>H04 - Visual Effects in Slow Motion</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403311201784.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/353K_6kPqeE?si=klR_WhWgyXctnYpw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li><p>VFX (visual effects) 在一瞬间就可以传达大量信息，如果想立马理解（其传达的意思）不是一件容易的事</p></li><li><p>这期视频中， [[樱井政博]] 录制了很多来自 [[Smash Bros. Ultimate]] 中的特效，并且开启了慢动作，关掉了背景</p><ul><li><strong>无论做什么，仔细观察是成功的捷径</strong></li><li>樱井希望这能够成为宝贵的资源</li><li>借此机会，也可以好好观察动画，建议也好好观察~</li></ul></li><li><p>建议去原视频观看，实在太多了哈哈…</p></li><li><p>VFX 在游戏中发生得很快，所以有时候你不一定关注到了它们</p><ul><li>但如果一去掉就会非常明显，游戏一下子就会失色不少<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403311240857.gif"></li></ul></li><li><p>同样的游戏如果采用了不同的 VFX，感受上也可能会区别很大</p></li><li><p>如果想让游戏活灵活现，就大量使用令人兴奋的 VFX 吧！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240324 - Loading Screens</title>
      <link href="2024/03/24/20240324-j04/"/>
      <url>2024/03/24/20240324-j04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏的加载画面！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="J04-Loading-Screens"><a href="#J04-Loading-Screens" class="headerlink" title="J04 - Loading Screens"></a>J04 - Loading Screens</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403241031702.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/JKV-30FD6NY?si=nNVPIDDLtCdxaG5X" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><ul><li><p>游戏中的数据存取是无可避免的</p></li><li><p>但很多人并不喜欢在屏幕上出现 “loading” 时的单纯等待</p></li><li><p>一些游戏中应用画面来代替 loading 字样</p><ul><li>如初代 [[Resident Evil]] 中在不同房间中通行时会看到一扇逐渐打开的门<ul><li>这其实是数据在后台加载<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403241035165.png"></li><li>门打开的速度其实也能帮助玩家预测哪个房间背后藏有丧尸（但这不是这里要讨论的重点）</li><li>这是一个游戏很好地利用了具有沉浸感的展示方式来替代相应的等待画面<ul><li>如果采用一个不断转圈的等待 icon 会完全破坏这种感觉</li></ul></li><li>在数据存取做得好的情况下，游戏中没有任何等待提示物甚至更好</li></ul></li><li>然而那是好多年前的情况了</li></ul></li><li><p>现如今的游戏所期望的是一种更快的感觉</p><ul><li>一部分原因是现在的硬件支持快速存储</li><li>但其实也是因为现在的玩家没什么兴趣进行单纯地等待<ul><li>至少也需要告诉他们加载的情况</li></ul></li><li>一些游戏也很聪明地将加载藏进了画面演示当中，但如果没办法实现的话，至少也需要明确告诉玩家你正在加载</li></ul></li><li><p>发售时的加载时间一般已经做过优化，比开发期间会短不少</p><ul><li>因为这样，可能也不总是想将加载等待时间转化为演示画面<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403241047380.png"></li></ul></li><li><p>加载指示物应该尽可能简单优雅，在需要时随时可以进行显示</p></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>现如今的游戏中，“Loading”的字样已不是那么常见<br>如果要用等待指示物，尝试让它们融入游戏所营造的氛围和感觉中！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240317 - Follow-Throughs Make the Impact</title>
      <link href="2024/03/17/20240317-g06/"/>
      <url>2024/03/17/20240317-g06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解攻击后摇（Follow-Throughs）！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G06-Follow-Throughs-Make-the-Impact"><a href="#G06-Follow-Throughs-Make-the-Impact" class="headerlink" title="G06 - Follow-Throughs Make the Impact"></a>G06 - Follow-Throughs Make the Impact</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171116221.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/cIB0BUe6Ihk?si=pX951ALLscydHxHR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>Follow-throughs (收招/后摇) 是一个攻击完成之后的动作，此时角色暂时处于脆弱（可被攻击 无法还手）的状态</p><ul><li>有时候也将其成为 recovery period<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171121524.gif"></li></ul></li><li><p>你可能会想“攻击之后的部分不会很重要”</p><ul><li>但其实，这部分是占据屏幕时间最多的部分</li></ul></li><li><p>以一个具有竞技性的动作游戏为例，比如 [[Super Smash Bros.]]</p><ul><li>一个攻击的响应速度越快越好，这也意味着会迅速进入攻击动作</li><li>但假设这里需要考虑 [[push and pull]]<ul><li>更强力的攻击就应该有更相对更长的后摇</li><li>否则游戏会感觉平衡性不好</li></ul></li><li>举例而言<ul><li>Standard attacks<ul><li>通常在一秒内结束</li></ul></li><li>Smash attack<ul><li>拥有更长的后摇窗口期，但也不会超过一秒</li></ul></li><li>攻击通常在动画开始之后一点点就开始生效<ul><li>大概在四分之一到三分之一左右</li><li>也有更快的攻击在五分之一左右就生效</li><li>也就是说，剩下的所有时间都是后摇！</li></ul></li><li>攻击生效前的时间越短，之后的后摇就越长</li></ul></li></ul></li><li><p>下面会展示一些 [[Smash Bros.]] 里面攻击的生效窗口和结束时机<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171314679.gif"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171314588.gif"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171315152.gif"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171315381.gif"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171316791.gif"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171316968.gif"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171317240.gif"></p></li><li><p>因为也有取消帧的缘故，所以标记了 recovery 阶段结束的时机</p></li><li><p>有一些攻击会持续几帧，但通过上面的标记，大概应该可以了解普通攻击的后摇期一般持续多长</p><ul><li>因为后摇期会持续一段时间，所以在游戏中会有大量时间看到它</li><li>换言之，攻击其实一瞬间就结束了，只占了一秒钟的很少一部分<ul><li>这也是为什么，后摇动画需要精确传达角色在之前干了什么</li></ul></li></ul></li><li><p>后摇动画确实会将角色恢复到标准动作，但不要直接插帧（don’t just interpolate back to it）</p><ul><li>使用这段时间来清晰地阐释攻击动作的分量</li><li>让动画持续尽可能长，也让动作尽可能大</li><li>这能帮助你更好地展示之前所发生的攻击动作</li></ul></li><li><p>你可能也想分配一些让角色回到标准动作的取消帧</p><ul><li>这可以帮助玩家更早重新获取控制权</li><li>取消帧的设置应该符合玩家觉得“差不多就是现在可以拿回控制”的期望，这个平衡也很重要<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403171328849.gif"></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>攻击的后摇决定了攻击本身的分量</li><li>不要错过这些机会，抓住机会让每一个动作都能完美地表现！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240310 - Learn to Count Frames!</title>
      <link href="2024/03/10/20240310-c09/"/>
      <url>2024/03/10/20240310-c09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何培养对于帧的感知！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C09-Learn-to-Count-Frames"><a href="#C09-Learn-to-Count-Frames" class="headerlink" title="C09 - Learn to Count Frames!"></a>C09 - Learn to Count Frames!</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101040662.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/JZ1Jd0u3b6U?si=DLKeksuH-YBql1v5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>Frame （帧）是游戏中用于计算时间的单位，如果开发者对此不够敏感，可能会陷入麻烦</p></li><li><p>比如，30 帧是多长</p><ul><li>[[樱井政博]] 用拍手正好拍出了 30 帧的长度哈哈哈太牛了<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101059214.gif"></li><li>然后又用手拍出了 15 帧…</li></ul></li><li><p>只要你可以测量时间，你就可以估计速度，移动的距离等</p><ul><li>毕竟 speed = distance / time</li></ul></li><li><p>帧是游戏中几乎所有移动的基础</p><ul><li>所以一定要培养对于帧的敏感度！</li><li>可惜的是，没有一个像秒表一样可以用于计量帧的东西</li><li>但看了这期视频，你至少会有个大概的感觉了！</li></ul></li><li><p>之后的例子都假设每秒是 60 帧，即 1s = 60f</p><ul><li>数 1 2 3 其实不太好计算，所以最好在其中加入节拍比如 “1 and 2 and 3 and…”<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101107385.gif"><ul><li>这样就可以将一秒划分为两个 30 帧</li><li>再细分就是四个 15 帧<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101114314.png"></li></ul></li></ul></li><li><p>15 帧</p><ul><li>在 [[Smash Bros. Ultimate]] 中就是一个 smash 攻击输入到完成释放的时长<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101116921.gif"></li><li>在 [[Tekken]] 中就是一个标准踢腿的启动时长<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101119220.gif"></li><li>[[Street Figher II]] 中的一个重拳时长比其一半稍短，当然了 这和角色和招式也有关系，但基本如此</li></ul></li><li><p>20 帧比 15 帧稍长，也就是比 0 到 30 帧的一半稍长</p><ul><li>基于参考点 可以不断划分出更细的帧长度<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101122898.png"></li><li>在赛车游戏中，无论测量的颗粒度如何，你可以通过这样的时间间隔计算出精确的目标时间<ul><li>只需要测量帧与帧之间的距离就可以<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101127596.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101125367.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101126854.png"></li></ul></li></ul></li><li><p>在任何情况下，当需要拍掌来获得秒数，尝试 1 and 2 and 3 and … 这样的方式——在其中加入节拍，长此以往，你就会获得对于帧的感知</p><ul><li>一个例子是樱井以前和其他导演讨论过如何帮助团队将创意可视化——使用一个可能的图形以及精确的帧数表</li><li>如果不熟悉帧数的话，是没办法估计这些数据的<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101129631.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101130154.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403101131185.png"><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3></li></ul></li><li><p>即使你成功设置了对应帧数，有时候因为程序/数据上的错误可能还是无法得到期望的结果，如果这样的事情发生了，将其当做训练自己对于帧数敏感度的机会吧！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240303 - Consider Rewards First</title>
      <link href="2024/03/03/20240303-b09/"/>
      <url>2024/03/03/20240303-b09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，考虑游戏中的奖励！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B09-Consider-Rewards-First"><a href="#B09-Consider-Rewards-First" class="headerlink" title="B09 - Consider Rewards First"></a>B09 - Consider Rewards First</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403031129189.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/SpwQkNzNsXk?si=lSUxwa_kpMkocWQw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>为打败敌人和完成任务提供奖励是很重要的</p><ul><li>即使是老游戏里也会给予玩家分数奖励<ul><li>这显然是不够的，所以我们现在才为玩家提供能力提升、资源、经验值、技能点等等奖励</li></ul></li></ul></li><li><p>即使没有这些奖励，你的游戏依然还是一个游戏，毕竟你可以说进度推进本身也是一种奖励</p><ul><li>但这一要素在现代游戏中不足以成为玩家的驱动力</li><li>奖励是玩家愿意不断投入的动力源之一，所以一定要好好设计</li><li>虽然这取决于品类，但一旦游戏已经具备了框架，就应该开始思考游戏 的奖励</li></ul></li><li><p>随时间积累的数值类奖励</p><ul><li>你所积累的资源或者点数，应该在后面的游戏中可以有消耗的渠道<ul><li>如果玩家可以买到的东西不是很吸引人或者不是很稳定，可能效果不会很好（玩家可能不太愿意花费精力来积累这些资源）</li></ul></li><li>材料也是一种可量化的资源<ul><li>玩家可以收集素材，并以之创造新的东西</li><li>重要的是让玩家觉得“花得值”，最终的产品“让人很想拥有”<ul><li>这是一种很有效的手段（来激励玩家积累资源，不断游玩）</li></ul></li></ul></li></ul></li><li><p>可收集物品（是否要让玩家花费资源来获取取决于目的）</p><ul><li>可玩角色</li><li>新的装备</li></ul></li><li><p>虽然只是 [[樱井政博]] 自己作为玩家的印象，但是他觉得专注于收集奖励的玩法也可以很有趣，虽然有时候感觉是个苦差事</p><ul><li>想象你在一个游戏中收集材料和奖励——甚至让你感觉收集是你唯一做的事情<ul><li>这可能会感觉有些令人不快<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403031252849.png"></li></ul></li><li>但奖励不管怎样都是一个重要的部分<ul><li>在 [[Smash Bros. Ultimate]] 中，如果我们不将 Spirits 作为奖励，而是在最开始就全部解锁，这个系统就失去乐趣了</li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>奖励是让玩家持续参与的关键</li><li>所以正如樱井之前提到的，应该将其作为首先要考虑的事项！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240301 - 为什么玩游戏时“根本停不下来” - 从可重玩性出发的思考</title>
      <link href="2024/03/01/20240301-thinking-on-game-replayability/"/>
      <url>2024/03/01/20240301-thinking-on-game-replayability/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是可重玩性"><a href="#什么是可重玩性" class="headerlink" title="什么是可重玩性"></a>什么是可重玩性</h2><p>狭义地说，[[可重玩性 Replayability]]，指的是游戏具有被<strong>反复</strong>游玩的价值和乐趣。</p><p>宽泛地讲，当我们说一个游戏具备可重玩性，也可以当做对“为什么玩家愿意<strong>一次又一次</strong>打开这个游戏？”这一问题的一种回答，换言之，指的是游戏具有被<strong>持续</strong>游玩的价值和乐趣。</p><h2 id="为什么讨论可重玩性"><a href="#为什么讨论可重玩性" class="headerlink" title="为什么讨论可重玩性"></a>为什么讨论可重玩性</h2><ul><li>更好地理解“什么是好游戏”/“游戏的乐趣从哪里来”</li></ul><p>如果玩家乐意重复/持续游玩一个游戏，一定程度上可以视作玩家觉得这款游戏好玩/有乐趣，认可游玩所获得的体验价值。通过对可重玩性讨论，也许可以帮助我们更好地理解游戏乐趣的来源。</p><ul><li>提供设计工具集</li></ul><p>“在资源有限/有限制的情况下，如何设计更加‘耐玩’的内容？”<br>“能否在不堆砌内容量的前提下实现可重玩性？”<br>希望对可重玩性的实现方式进行讨论，从而为未来的设计提供思路。</p><h2 id="如何实现可重玩性-可重玩性的来源（变化的来源）"><a href="#如何实现可重玩性-可重玩性的来源（变化的来源）" class="headerlink" title="如何实现可重玩性/可重玩性的来源（变化的来源）"></a>如何实现可重玩性/可重玩性的来源（变化的来源）</h2><p>讨论的思路是 “为什么玩家愿意一次又一次打开这个游戏？” - “因为玩家在每次重新游玩时都有新体验” - “为什么会有新体验？” - “因为有变化” - “变化从哪里来？”</p><p>下面是讨论的结果，即如何实现可重玩性/可重玩性的来源（变化的来源）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202403021658999.png"></p><h3 id="玩家自身"><a href="#玩家自身" class="headerlink" title="玩家自身"></a>玩家自身</h3><ul><li><p>自身条件的改变（不同的心情/主观经验/经历/共情/代入感）<br>  即因为自身条件的改变，使得原本玩不下去的游戏能继续玩下去了。<br>  例子之一是刺客信条奥德赛，一个朋友原本对其无感，但在去了一趟希腊之后，回来再看原本的一些设定，代入感极强，从此一发不可收拾。</p></li><li><p>情感/体验需求的满足（帮助别人/社交满足/身份认同/刺激/猎奇/期待感）<br>  以死亡搁浅为例，一个朋友的描述是因为在其中体会到了“帮助他人的快乐”，从而愿意不断玩下去。</p></li></ul><h3 id="其他玩家"><a href="#其他玩家" class="headerlink" title="其他玩家"></a>其他玩家</h3><ul><li><p>增加可消耗内容 - UGC - User Generated Content<br>  以 Roblex 为代表的这类为玩家开放了编辑器功能的游戏，其可重玩性的来源是玩家创造的内容成为了新的可消耗内容。<br>  Mod 是另一类 UGC 的代表，使得原本的游戏“焕然一新”，让人能持续/反复游玩。</p></li><li><p>引入社交关系（考验 Player Skill - Physical/Mental/Social）<br>  社交关系在这里被简单分类为竞争和合作关系。<br>  其实任何偏重 PvP 元素的游戏都可以被纳入该分类下。即其都是在有其他玩家参与语境下，对玩家自身的 Physical（比如反应）、Mental（比如策略）、Social（比如沟通）能力的考验。</p></li><li><p>引入（人的）不可预测性<br>  讨论时提到有一类玩家对“共同创作型游戏”乐此不疲，比如弹幕回复型游戏。私以为玩家们“停不下来”的原因是对（人的）不可预测性的期待。</p></li></ul><h3 id="游戏本身的内容（设计师引入）"><a href="#游戏本身的内容（设计师引入）" class="headerlink" title="游戏本身的内容（设计师引入）"></a>游戏本身的内容（设计师引入）</h3><ul><li><p>增加广度</p><ul><li>增加可消耗内容 - DGC - Developer Generated Content<ul><li>增加装备/Build/职业的种类<br>  以马里奥赛车/无主之地/Risk of Rain 等游戏为例，新的装备/角色/职业就是新的可消耗内容，这些新内容就可以成为“重开”的契机。</li><li>增加地图/事件的数量<br>  以 RimWorld 为例，只要没见过的地图/事件的数量足够多，就意味着游戏还有着能够被继续游玩的潜力。</li><li>增加叙事分支的数量<br>  每一种没见过的叙事分支，对于特定类型的玩家而言都是重开的动力。</li><li>增加可收集物/成就<br>  对于“仓鼠症”玩家而言，只有达成了完全收集，一款游戏才算是“玩完了”，在此之前，游戏不会结束。</li><li>增加（系统间低耦合的）Gameplay<br>  以潜水员戴夫为例，游戏中的各系统玩法其实可以独立运行。对于一部分玩家而言，“还有很多没玩过”本身已经可以成为游戏能够被反复/持续游玩的理由。</li></ul></li><li>Emergent Game 涌现型游戏 - 规则简单但可能性空间巨大<ul><li>本身的可能性空间巨大<br>  以围棋为例，“把对方围起来吃掉”其实并不能算得上非常复杂的规则，但 19X19 的棋盘空间具有足够的“可行动范围”，使得可能性空间巨大且难以被人预测，使得每次重开都有新体验。</li><li>机制之间互相影响从而创建了巨大的可能性空间<br>  以塞尔达传说旷野之息的三角法则（物理 X 化学 X 环境）、塞尔达传说王国之泪的生成法则（材料 X 组合方式）或是元胞自动机为例。这些例子中，本身的规则足够简单，但因为各机制之间存在相互影响，使得可能性空间巨大。</li></ul></li><li>引入（非人的）随机性 - AIGC - AI Generated Content<br>  其实算法引入的随机性应该也属于此类，但是在 LLM 大火的今天，AIGC 本身更多更多指的是和类似 ChatGPT 等大语言模型对话的“无限”可能性。</li></ul></li><li><p>增加深度/复杂度（维度）</p><ul><li>增加规则深度<br>  以宝可梦对战为例，在对战时需要考虑属性、种族、优先度等多种概念，组合之下使得规则深度带来了非常多的变化，从而让每一局都有新体验。</li><li>增加变化深度<br>  以仁王的战斗系统为例，对战时需要考虑资源（精力/妖力）、动作（攻击/闪避/防御/弹反）、武技（攻击/防御/消耗）等多种变化和应对方式，使得玩家选择足够丰富，有足够的理由反复/持续游玩。</li><li>增加系统耦合度（系统之间会互相影响）<br>  以 P 社游戏为例，“蝴蝶效应”会使得单一系统的变化影响被放大，与该系统相关的系统也会产生联动影响，这使得玩家在进行决策时需要考虑的因素和维度变多。每个变化都足够“有意义”，使得每一局的体验都不相同。</li></ul></li><li><p>增加难度（增加对 Player Skill 的考验难度 - 主要指的是对 Physical/Mental Skill 的考验）<br>  合理的难度产生的不仅是挫败感，也会激起玩家的挑战欲，从而让玩家“打过之前根本停不下来”。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人生意义模拟器</title>
      <link href="2024/02/25/20240225-simulator-of-the-meaning-of-life/"/>
      <url>2024/02/25/20240225-simulator-of-the-meaning-of-life/</url>
      
        <content type="html"><![CDATA[<h2 id="《人生意义模拟器》-Demo-展示及制作复盘分析"><a href="#《人生意义模拟器》-Demo-展示及制作复盘分析" class="headerlink" title="《人生意义模拟器》 Demo 展示及制作复盘分析"></a>《人生意义模拟器》 Demo 展示及制作复盘分析</h2><h3 id="项目信息"><a href="#项目信息" class="headerlink" title="项目信息"></a>项目信息</h3><h4 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h4><p>这个想法自 2022 年 11 月就已经萌生，当时是为了给 WH 回答“人生的意义是什么”这一问题。我自己的回答是“没有意义就是意义”，但 WH 不满意，几经辗转，寻找了很多种答案。在 2024 年新年期间与 CC 讨论时有了一些进展，借助 <a href="https://www.coze.com/">Coze</a> 平台所提供的 GPT4-128K 模型，由此实现了这个想法。</p><h4 id="试玩页面"><a href="#试玩页面" class="headerlink" title="试玩页面"></a>试玩页面</h4><ul><li><p>（可访问 gpt）人生意义模拟器-chatgpt</p><ul><li><a href="https://chatgpt.com/g/g-676f9dc749b48191a21c87cf859a6bc5-simulator-of-the-meaning-of-life">https://chatgpt.com/g/g-676f9dc749b48191a21c87cf859a6bc5-simulator-of-the-meaning-of-life</a></li></ul></li><li><p>（不能访问 gpt 但能科学上网）人生意义模拟器-coze (o1-preview)</p><ul><li><a href="https://www.coze.com/s/Zs8DYUVbe/">https://www.coze.com/s/Zs8DYUVbe/</a></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402260010746.png"></p><h4 id="迭代过程"><a href="#迭代过程" class="headerlink" title="迭代过程"></a>迭代过程</h4><h5 id="期间收集的不同答案"><a href="#期间收集的不同答案" class="headerlink" title="期间收集的不同答案"></a>期间收集的不同答案</h5><p>对于“人生的意义是什么”这一问题</p><ul><li>我的回答<ul><li>没有意义就是意义</li></ul></li><li>荣格的回答<ul><li>探寻、发现、接受、内化阴影</li><li>并帮助别人内化阴影</li></ul></li><li>[[《人生的意义》]]的回答<ul><li>人们都是爵士乐队的乐手，最终都是为了做出最好的即兴演奏</li></ul></li><li>GP 的回答<ul><li>有没有意义不重要</li><li>不会被揭示也没关系</li></ul></li><li>WCZ 的回答<ul><li>存在主义——人生来自由</li></ul></li><li>YYZ 的回答<ul><li>鸵鸟但也不一定</li><li>酒神</li></ul></li><li>WH 的回答<ul><li>尽量减少自己的痛苦<ul><li>痛苦来自于事实无法按照预想的情况进展</li><li>想象我和实在我的割裂</li></ul></li></ul></li><li>[[《四月的谎言》]]<ul><li>为人生涂色<ul><li>自己或他人</li></ul></li><li>更详细的理解可以参考<a href="https://medill-east.github.io/2024/01/31/20240131-after-watching-your-lie-in-april/">这一篇 blog</a></li></ul></li><li>[[《为什么世界不存在》]]<ul><li>人生的意义乃是与我们能够幸运地参与其中的无限的意义的互动</li></ul></li></ul><h5 id="思考迭代"><a href="#思考迭代" class="headerlink" title="思考迭代"></a>思考迭代</h5><p>因为 2024 年和很多朋友玩了沙漠立方体测试，所以受到这个游戏的启发，想要将这个游戏扩展为与之类似的形式，即通过许多容易回答的子问题来对一个难以回答的问题进行揭示。</p><p>也受到人生重开模拟器（ <a href="https://rest.latiao.online/">https://rest.latiao.online/</a> ）这一游戏，以及卡尔荣格的阴影理论的启发，最终想要制作一款基于用户选择和答案的“人生意义模拟器”游戏，来帮助他人“发现自身的阴影”。</p><p>因为立方体测试的一个精髓就在于高自由度，任凭玩家想象，但本身考虑到一些问题可能不太好回答，还是希望能够为问题提供一些选项，每一个选项都应该具有相应的哲学理论作为支撑。在此基础之上，利用 ChatGPT 的文本分析能力，开放给玩家自由回答的权利。</p><p>问题的选择逻辑是人生中“无可回避”的问题，被我分为了以下类别（主要是基于人的成长过程可能面临的问题）：</p><ul><li>血缘关系</li><li>社会关系</li><li>自我认知</li><li>亲密关系</li><li>财富与价值</li><li>兴趣爱好</li><li>美</li><li>生死观</li></ul><p>在 AI 的帮助和完善下，最终的问题分类如下：</p><ul><li>出生与血缘关系</li><li>对于知识与学习的态度</li><li>自我认知</li><li>亲密关系</li><li>职业选择与使命</li><li>社会关系</li><li>财富与价值观念</li><li>对兴趣爱好、艺术与美的追求</li><li>身体与健康</li><li>精神与心理健康</li><li>生死观</li></ul><p>最终希望能够基于这些问题分类，并结合人一生的成长来提出问题，最终帮助玩家更好地认识自己，回答“对于现在的你而言，人生的意义可能是什么”这一问题。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="当前版本（主要）存在的问题"><a href="#当前版本（主要）存在的问题" class="headerlink" title="当前版本（主要）存在的问题"></a>当前版本（主要）存在的问题</h4><ul><li>没能做到基于玩家的回答来对下一个问题的情景化叙述进行有针对性地改变<ul><li>感觉还是只是在简单地对玩家选择进行复述，没能产生“决定性影响”</li></ul></li></ul><h4 id="未来版本的可能迭代方向"><a href="#未来版本的可能迭代方向" class="headerlink" title="未来版本的可能迭代方向"></a>未来版本的可能迭代方向</h4><p>其实感觉当前版本已经有点那个意思，感觉上面提到的主要存在的问题也可以期待 GPT5 出现时被解决。</p><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>跨度一年半，构思了很久，没想到最后一天晚上就利用 AI 把 Demo 做完了（其实也只是创建了一个 Bot 而已，但核心确实就是问答）。希望能一定程度上实现帮助他人“发现自身的阴影”这一目标吧。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240225 - Meteos</title>
      <link href="2024/02/25/20240225-n07/"/>
      <url>2024/02/25/20240225-n07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Meteos 诞生的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N07-Meteos"><a href="#N07-Meteos" class="headerlink" title="N07 - Meteos"></a>N07 - Meteos</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251040391.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/snHecpmPeJs?si=SFYIqyeS6qrnb-qV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li>在离开老东家，变为自由职业者之后，[[樱井政博]] 开始思考自己如何能为游戏行业做出最好的贡献——这就引出了 2005 年的作品 [[Meteos]] </li><li>如果将自己投入到一个项目中，就需要花费很多年才能完成，这些时间本可以用于生产更多的游戏，这样想来，时间的利用率好像不是很好<ul><li>基于这样的想法，樱井花费了一段时间专注于监制和咨询工作<ul><li>这段时间樱井参与的作品并没有署名，所以是未公开信息</li><li>如果署名了，会看起来有一种“是樱井创造了这些游戏”的感觉，但其实这对辛苦付出工作的团队而言是不公平的</li></ul></li><li>在这期间，原来在 [[Sega]] 的 [[Tetsuya Mizuguchi 水口哲也]] 向樱井提了一个请求，希望能制作一款“掉落的方块的谜题游戏”<ul><li>樱井也不清楚为什么水口哲也需要如此特别的一个品类的游戏</li><li>即使在当时，掉落方块的谜题游戏也被视为有些过时</li><li>但樱井觉得这是个有趣的挑战，毕竟是一个休闲品类</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251052573.png"></p><ul><li><p>樱井自己先承认，他不擅长这一类型的游戏，特别是 [[puyo puyo]]</p><ul><li>看着那么多颜色会让自己晕头转向        <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251053719.png"></li><li>一个题外话是，当时也在北美发行了一个以卡比为主角的 [[puyo puyo]] game，即 [[Kirby’s Avalanche]]，樱井也监制了这款游戏<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251056997.png"></li><li>言归正传，即使不擅长这个品类，樱井知道只要自己能搞清楚游戏的 [[game essence]]，就能想出提案。毕竟一直以来都是这样的</li></ul></li><li><p>由此，樱井提出了 [[Meteos]] 的设想</p><ul><li>在经典的方块掉落谜题游戏中，方块本身就是风险<ul><li>堆得越高，风险越大</li><li>但如果你仔细谋划，你也有机会将巨大的风险一次转化为巨大的收益</li><li>这个 [[risk and reward]] 之间的联系倒是很容易在这个品类的游戏中看到，毕竟其相对简单<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251059121.png"></li></ul></li><li>之后，樱井开始思考玩家是否真的需要消除方块，也许有其他规避风险的方式？<ul><li>已经有很多游戏中可以看到用炸弹摧毁东西的例子<ul><li>无论是蒸发了（vaporized）还是拆解了（demolished），这不是重点</li><li>樱井想要改变这个核心概念</li></ul></li></ul></li><li>樱井想到的是让匹配的方块被戏剧化地“发射”到空中<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251105162.png"><ul><li>樱井觉得这是个很棒的点子，横向或者纵向的格子都可以被发射<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251108988.png"></li><li>甚至可以设想二次点火，空中组合等等技巧…</li><li>但最重要的是，它荒谬得恰到好处</li></ul></li><li>在提案中，樱井用了 PPT 动画来更好地解释这个概念，下面是当时是提案呈现（推荐去看<a href="https://youtu.be/snHecpmPeJs?si=aSqhbitghV7bBm_z&t=199">原视频 0317 开始的部分</a>，有声效~）<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251117942.gif"></li></ul></li><li><p>方块们其实是飞向家园的流星，你需要用火箭将其重新发射，这是行星战争的手段——这就是 [[Meteos]]</p><ul><li>游戏也有着完整的背景故事</li></ul></li><li><p>游戏最终的目标平台是 [[Nintendo DS]] 其实是个偶然</p><ul><li>游戏被设计为推荐使用方向键进行控制，但通过使用触摸屏也使得操作感更加便捷迅速了</li><li>所以樱井觉得 DS 其实是个很适合的平台</li></ul></li><li><p>一个使得 [[Meteos]] 从该品类游戏中脱颖而出的特性是每颗星球都是独特的，其游玩空间和方块也都是特殊的<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251123657.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251126911.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251128069.png"></p><ul><li>在大多数方块掉落游戏中，即使你能够选择不同角色，游戏玩法没有改变，只是可能在操作和技能上有些许不同<ul><li>但在 [[Meteos]] 中，不只是敌人、背景美术，每个星球都是特殊的</li><li>方块形状、游戏区域宽度、发射器的参数、音乐、音效等等都不一样</li></ul></li><li>游戏玩法整体感觉是轻松惬意的<ul><li>使用 Boggob 每次点火都能跳得更高<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251131250.png"></li><li>对于 Megadom， 流星会悬停更长的时间<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251131198.png"></li><li>对于 Mekks，方块会以固定速度直接升降<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251132530.png"></li><li>Forte 的垂直点火非常强大<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251133490.png"></li><li>Hevendor 会使得方块在 match 时就消除<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251134643.png"></li><li>Jeljel 的最大火力只有重复点火才能触发<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251135819.png"></li><li>Brabbit 的所有东西都动得很慢<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251136055.png"></li><li>…</li></ul></li><li>当在不同行星之间切换星球时，操控感非常不同，樱井也相信玩家们会有他们最喜爱的行星</li><li>即使是个谜题游戏，其实也包含了相当一部分角色属性<ul><li>不同的流星种类在不同星球中以不同几率出现<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402251139145.png"></li><li>通过收集流星，可以使用它们来解锁新的可玩星球</li><li>正如每个星球都有其食物和文化一样，它们也很自然地有着不同的玩法</li></ul></li></ul></li><li><p>完成一个游戏有一种特别的感觉，让人难以释怀，樱井觉得获得了很多乐趣</p></li><li><p>但樱井也有遗憾，希望能做得更好的地方</p><ul><li>因为处理负荷的问题，游戏的平衡没有能够达到樱井所期望的程度<ul><li>樱井自己为每个星球都单独调试过平衡性，但因为后期更改过处理负载，所以游戏最终变得比预期更难了</li></ul></li><li>游戏发售时 bug 也不少</li></ul></li><li><p>如果这个游戏是在现在发售的话，樱井猜想也许它可以在智能手机市场成为一个热点</p></li><li><p>除了原本的 [[Meteos]]，后来也有了 Xbox Live 的版本，Disney 版本，翻盖手机的版本…</p><ul><li>但樱井都没有再参与其中了</li><li>樱井也是和其他人一样，在游戏杂志上看到的时候才知道有了这些游戏，完全蒙在鼓里，也算是个遗憾</li></ul></li><li><p>考虑到大多方块掉落游戏都有的很多限制规则，樱井认为可以很客观地说 [[Meteos]] 拥有它特殊的闪光点</p><ul><li>虽然这是个相对而言比较小的项目，但它也值得所花费的时间</li></ul></li></ul><hr><ul><li>下一次的 Game Concepts 视频会讨论可能大多海外用户不太清楚的一个项目 [[Sodatete: Kouchuu Ouja Mushiking]]</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240218 - Say No to Slow!</title>
      <link href="2024/02/18/20240218-d06/"/>
      <url>2024/02/18/20240218-d06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习摄像机的锚点设置技巧！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="D06-Say-No-to-Slow"><a href="#D06-Say-No-to-Slow" class="headerlink" title="D06 - Say No to Slow!"></a>D06 - Say No to Slow!</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202402181152957.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/3qEKNxp_-Qs?si=N8sAQI6cJPG2tkGn" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>大量的游戏提供了独特的特性</p><ul><li>取决于你所询问的对象，对于“什么是好游戏/游戏中什么部分好玩”的问题，你会得到非常不同的答案</li><li>所以即使你试着玩了一个游戏，但并没有“玩进去”，樱井觉得直接就说这个游戏不行是不太公平的</li></ul></li><li><p>一个人的废弃物可能是另一个人的宝藏</p><ul><li>人们的感受是因人而异的</li><li>我们应该试着接受“不同人有着不同的价值和观点”</li></ul></li><li><p>但我们应该试着避免一个陷阱——一些事情使得不会有人喜欢上你的游戏——太慢（making it slow）</p><ul><li>这其中确实也包含了比如角色的移动太慢</li><li>但樱井想强调的是“事情花费了太长时间/有很长时间无事可做”这一更重要的点<ul><li>樱井在这里指代的是玩家在“真正的游玩时间”之外的时间<ul><li>比如 loading</li></ul></li></ul></li></ul></li><li><p>游戏充满了乐趣以及有趣的体验</p><ul><li>樱井想要强调“让玩家花了很久才能够真正开始享受有趣的部分”这件事情真的很不好<ul><li>有时候确实可以使用这样的“缓慢”作为一种制造悬念的方式</li><li>但它可能不会以期望的方式进行</li><li>总之，不该让你的游戏太过“拖沓”</li></ul></li><li>实际情况中，也有一些时候我们没有选择<ul><li>比如，无论如何优化加载时间，它们总是无法以你期望的时间完成<ul><li>如果这段等待时间感觉像是一个错误——比如你的等待是因为有人在开发过程中掉以轻心了——就会变得恼人</li></ul></li></ul></li></ul></li><li><p>总而言之，开发者们应该尽可能减少玩家的等待时间</p><ul><li>将其视作“去除事物以给予玩家更密集的游玩体验”</li><li>电影和剪辑镜头可以发挥它们作为“调味剂”的作用<ul><li>如果有必要的话，就应该尝试引入它们，而不是让玩家总是疲于奔命</li><li>但如果它们只是不必要的倒计时，尝试让其变得更加紧凑</li><li>更加简洁有力的电影转场更适合现如今的游戏</li></ul></li></ul></li><li><p>[[樱井政博]] 自己在制作游戏时会关注实际的游玩时间——即玩家拥有实际控制权的时间</p><ul><li>在全部的游玩时间中<ul><li>玩家有多少时间可以进行控制</li><li>有多少时间无法进行控制</li><li>有多少时间仅仅只是无事可做</li></ul></li><li>每一秒无法让玩家享受游戏或感到有趣的时间都会让樱井感觉难受</li></ul></li></ul><hr><ul><li>虽然可能听起来比较夸张，但樱井还是想说——让玩家等待是一种罪！<ul><li>考虑到现如今游戏的体量，一些等待时间可能是必要的，但若是能更加精简，会感觉更好</li><li>尽量让每一秒都感觉有趣！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240131 - 向死而生，生之回响</title>
      <link href="2024/01/31/20240131-after-watching-your-lie-in-april/"/>
      <url>2024/01/31/20240131-after-watching-your-lie-in-april/</url>
      
        <content type="html"><![CDATA[<h2 id="向死而生，生之回响"><a href="#向死而生，生之回响" class="headerlink" title="向死而生，生之回响"></a>向死而生，生之回响</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401312124060.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eleusis Express</title>
      <link href="2024/01/28/20240128-cfgd-chap3-challenge5-eleusis-express/"/>
      <url>2024/01/28/20240128-cfgd-chap3-challenge5-eleusis-express/</url>
      
        <content type="html"><![CDATA[<h2 id="《Eleusis-Express》"><a href="#《Eleusis-Express》" class="headerlink" title="《Eleusis Express》"></a>《Eleusis Express》</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>过往设计:</p><ul><li><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">CFGD-CHAP2-Challenge1-Path A to B-《生克之路》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">CFGD-CHAP2-Challenge2-Territorial Acquisition-《海内十洲》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">CFGD-CHAP2-Challenge3-Exploration-《灵宅救孩》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/10/08/20231008-cfgd-chap2-challenge4-collection/">CFGD-CHAP2-Challenge4-Pick it Up - 以 Collection 为核心的机制拆解</a></li><li><a href="https://medill-east.github.io/2023/11/05/20231105-cfgd-chap3-challenge1-bomb/">CFGD-CHAP3-Challenge1-Bomb-对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</a></li><li><a href="https://medill-east.github.io/2023/11/26/20231126-cfgd-chap3-challenge2-maze">CFGD-CHAP3-Challenge2-Maze-《卦象迷宫》One-Page Design</a></li><li><a href="https://medill-east.github.io/2024/01/07/20240107-cfgd-chap3-challenge3-password/">CFGD-CHAP3-Challenge3-Password-密码谜题</a></li><li><a href="https://medill-east.github.io/2024/01/21/20240121-cfgd-chap3-challenge4-electricity">CFGD-CHAP3-Challenge4-Electricity-《Pull the Trigger》 One-Page Design</a></li></ul><p>该篇是《Challenges for Game Designers》第三章的第 5 个挑战—— New Eleusis。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>原文中提到的是 [[New Eleusis]]，后来稍微了解了一下这个游戏的历史：</p><ul><li>1956，[[Robert Abbott]] 发明了这个全新的纸牌游戏 [[Eleusis]]，[[Martin Gardner]] 在 1959 年的 [[Scientific American]] 中介绍了 [[Eleusis]]</li><li>1973 年，[[Robert Abbott]] 在原游戏基础上对其进行了改进，称其为 [[New Eleusis]]（虽然他后来将“New”废除了，因为该游戏成为了后续时间的标准版本，但这里还是沿用这个说法以便区分）。[[Martin Gardner]] 在 1977 年 10 月的 [[Scientific American]] 中刊登了 [[New Eleusis]]</li><li>2006 年，[[John Golden]] 继续对游戏进行了改进，[[Robert Abbott]] 将这个版本称为 [[Eleusis Express]]，这也是接下来会介绍的版本</li></ul><p>接下来是对 <a href="https://www.logicmazes.com/games/eleusis/express.html">Eleusis Express</a> 页面的翻译：</p><blockquote><ul><li>概述<ul><li>一个玩家需要设计一条关于牌应该如何被打出的秘密规则<ul><li>一个非常简单的例子：下一张打出的牌的颜色应该和上一张的不同</li></ul></li><li>其他玩家推测规则，并打出自己认为符合规则的牌</li><li>如果一个玩家成功打出一张牌，他可以试着猜出秘密规则是什么</li></ul></li><li>玩家数量<ul><li>3-8</li><li>推荐数量 4-5</li></ul></li><li>牌堆<ul><li>两副标准扑克牌</li><li>如果牌堆用尽，可以再洗一副牌，或者宣布游戏结束</li></ul></li><li>目标<ul><li>一局游戏由一轮或多轮组成</li><li>每一轮中，玩家轮流担任庄家（决定秘密规则），庄家在其轮次中除了指定规则之外，只负责发牌，不参与出牌；庄家轮次的得分由其他玩家的分数来决定</li><li>出牌以主线（mainline）和支线（sideline）方式摆放<ul><li>符合秘密规则的牌可以沿着主线放置，否则需要放在支线<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401281800055.png" alt="Eleusis Express 页面中的牌堆摆放示例"></li></ul></li></ul></li><li>秘密规则<ul><li>如果第一次玩，建议从简单秘密规则示例中挑选一条</li><li>一些关于制定秘密规则的提示<ul><li>规则应该允许在任何给定时间都能打出多张牌（但不能太多）<ul><li>即应该让至少一个玩家能够出牌，但最好无法让所有玩家都能出牌<ul><li>下一张牌必须大 1 —— 可能太难了</li><li>下一张牌必须是不同花色 —— 可能太简单</li></ul></li></ul></li><li>避免例外或者通用牌的出现<ul><li>比如人头牌总是对的</li><li>Ace 既可以是大牌也可以是小牌</li></ul></li><li>记住：无论是什么规则，它总比你想象中更难（被猜出）</li></ul></li></ul></li><li>局前准备<ul><li>庄家写下秘密规则</li><li>向每位玩家发 12 张牌</li><li>把牌堆中的最上一张牌翻出作为主线的第一张牌</li><li>游戏开始前，庄家可以选择是否提示规则，并决定出牌顺序</li></ul></li><li>局中<ul><li>出牌<ul><li>轮到玩家出一张牌</li><li>庄家判定结果正确与否<ul><li>如果正确，放入主线</li><li>如果错误，放入支线</li></ul></li><li>打错牌的玩家需要从牌堆中重新抽牌，使得手牌数量不变</li><li>打对牌的玩家不用抓牌，手牌数量 - 1</li></ul></li><li>宣布不出牌<ul><li>玩家可以选择无牌可出</li><li>由此，该玩家需要向所有玩家展示手牌</li><li>庄家需要判定该玩家是否真的无牌可出<ul><li>如果玩家错了——有牌可出，那么庄家会从正确牌中选出一张放入主线，玩家保留手牌，然后从牌堆中抽一张</li><li>如果玩家是对的——无牌可出<ul><li>如果玩家手中只有一张牌，该牌被放入牌堆，该轮结束</li><li>如果玩家手中不止一张牌，所有牌被放入牌堆底部，庄家为其重新发牌（但总数少一张）</li></ul></li></ul></li></ul></li><li>猜测规则<ul><li>每当玩家成功出牌（放入主线）或是成功不出牌（确实无牌可出），就可以猜测规则</li><li>猜测是公开进行的</li><li>庄家会判断玩家的猜测是否正确<ul><li>如果正确，回合结束</li><li>如果错误，游戏继续</li></ul></li></ul></li></ul></li><li>计分<ul><li>如果玩家正确猜出规则或一名玩家出完所有手牌，该回合结束</li><li>玩家初始分数是 12 分<ul><li>正确猜出规则 +6 分</li><li>出完所有手牌的玩家 +3 分</li><li>手中每剩下一张牌 -1 分</li></ul></li><li>庄家得分与该轮场上得分最高的玩家分数相同</li><li>然而<ul><li>如果不是要参加比赛，不用太在意得分</li><li>重要的是享受有趣的游戏，让玩家能够猜出规则<ul><li>比如，如果玩到一半，庄家意识到可能规则太难了猜不出，他可以开始给出提示<ul><li>理论上讲这是犯规的，并且会增加庄家得分</li><li>但没关系，这将使得游戏更有趣</li></ul></li><li>玩家应该可以随意讨论规则</li></ul></li></ul></li></ul></li><li>结束游戏<ul><li>游戏应该持续到每个玩家都成为过一次庄家为止</li><li>也可以提前结束，那么就直接统计累加得分（在 [[New Eleusis]] 的规则中，如果没有当过庄家的人可以 +10 分）</li></ul></li><li>简单秘密规则示例（以下规则都指的是主线牌）<ul><li>下一张牌的颜色需要相反（即上一张是黑色，下一张就需要是红色）</li><li>需要以黑红梅方的顺序出牌</li><li>需要遵循三红、三黑、三红、三黑…的循环模式出牌</li><li>如果当前是偶数，下一张需要是奇数；如果当前是奇数，下一张需要是偶数（J 是 11，Q 是 12，K 是 13）</li><li>如果最后一张牌属于 1-7，需要出 8-K 中的牌；如果最后一张是 8-K 中的牌，需要出 1-7 中的牌</li><li>下一张需要比上一张大 1/2/3（比如比 K-13 大 1 的牌是 1）</li></ul></li><li>困难秘密规则示例<ul><li>如果最后一张是奇数，则需要出红牌；如果最后一张是偶数，则需要出黑牌</li><li>下一张牌必须与上一张的花色/数字相同</li><li>如果当前是黑色，打出一张数字 &lt;= 当前牌的牌；如果当前是红色，打出一张数字 &gt;= 当前牌的牌</li></ul></li></ul></blockquote><h4 id="Components-required"><a href="#Components-required" class="headerlink" title="Components required"></a>Components required</h4><ul><li>两副标准扑克牌</li><li>游戏规则</li></ul><h4 id="Deliverable"><a href="#Deliverable" class="headerlink" title="Deliverable"></a>Deliverable</h4><ul><li>None</li></ul><h4 id="Suggested-Process"><a href="#Suggested-Process" class="headerlink" title="Suggested Process"></a>Suggested Process</h4><ol><li>玩游戏<ul><li>玩完后讨论每条规则，分析为什么规则太难/太简单/难度正好</li></ul></li><li>写下学到的东西<ul><li>如果在玩的过程中学到了什么，写下来并与没有玩的人分享</li></ul></li></ol><h5 id="References"><a href="#References" class="headerlink" title="References"></a>References</h5><ul><li><a href="http://www.logicmazes.com/games/eleusis/index.html">Eleusis and Eleusis Express</a></li><li><a href="http://www.matrix67.com/blog/archives/344">Eleusis Express：非常有创意的多人纸牌游戏</a></li><li><a href="https://www.logicmazes.com/games/eleusis/express.html">Eleusis Express</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240128 - Competing with the Past</title>
      <link href="2024/01/28/20240128-m10/"/>
      <url>2024/01/28/20240128-m10/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解现如今的市场环境中过去与现在的竞争！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M10-Competing-with-the-Past"><a href="#M10-Competing-with-the-Past" class="headerlink" title="M10 - Competing with the Past"></a>M10 - Competing with the Past</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401281206779.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/EhcitspNMuI?si=de2rRa8X3MgZEp_O" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>[[樱井政博]] 觉得电影制作行业可能比起游戏行业更加艰难</p><ul><li>现如今，各种订阅制服务出现的情况下，从业者们需要不断和以前的经典剧目竞争</li></ul></li><li><p>一个“什么都能看”的服务现如今可以算是梦境成真了</p><ul><li>数以千万计的电影、电视节目只需要调整遥控器就能看到</li><li>方便、简单、相对便宜</li><li>这也意味着任何一个新上映的剧集都需要对抗所有已经在市场上出现过的剧目<ul><li>市场上已经有的剧目已经远远超过一个人可以观看的数量</li><li>这其中也包括了许多几年前，甚至几十年前的剧目</li></ul></li><li>对于观看者而言，观看新剧集的时长可能和观看老剧集的时长差不多<ul><li>这使得竞争异常激烈</li><li>无论是是以电影、电视剧，还是动画的形式，并不缺少想要制作视频内容的人<ul><li>新人不断出现，也意味着新的剧集也会不断出现</li><li>这也创造了一个非常艰难的局面</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401281211562.png"></p><ul><li>当和过去的作品相比时，比起电影而言，游戏多少还是有一些优势<ul><li>好在，即使有那么多经典游戏的移植版，它们通常不会与新游戏直接竞争<ul><li>一方面而言，游戏技术不断革新，玩家们可能不会再满足于更加老式的图形和控制方式<ul><li>当然了，一些随着这些游戏时代更替一起长大的玩家会把过去的游戏经验视为珍宝</li></ul></li><li>另一方面，游戏的规模也发生了变化<ul><li>上世纪 80 年代左右的游戏更加小巧，偏重于“上手就玩”的体验，所以你也无法将其和花费数小时观看的电影一同比较</li><li>现如今，随着免费游戏和移动游戏的发展，娱乐活动在屏幕使用时间上的竞争异常激烈，这些暂且不论</li><li>有许多创作者参与到娱乐媒介，比如电影、电视、动画、游戏等中，使得市场茁壮成长<ul><li>如果真的想脱颖而出，就需要提供足够新颖，别人无法提供的东西<ul><li>这是一件做起来比说起来难得多的事情</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401281216022.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>清楚认识到过去于现在存在竞争是件好事，拥有更广阔的视野或多或少总能助你一臂之力</li><li>这个 YouTube 频道也是一样，樱井会尽力让这个频道蓬勃发展！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Pull the Trigger》 One-Page Design</title>
      <link href="2024/01/21/20240121-cfgd-chap3-challenge4-electricity/"/>
      <url>2024/01/21/20240121-cfgd-chap3-challenge4-electricity/</url>
      
        <content type="html"><![CDATA[<h2 id="《Pull-the-Trigger》-One-Page-Design"><a href="#《Pull-the-Trigger》-One-Page-Design" class="headerlink" title="《Pull the Trigger》 One-Page Design"></a>《Pull the Trigger》 One-Page Design</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401212236610.png"></p><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>过往设计:</p><ul><li><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">CFGD-CHAP2-Challenge1-Path A to B-《生克之路》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">CFGD-CHAP2-Challenge2-Territorial Acquisition-《海内十洲》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">CFGD-CHAP2-Challenge3-Exploration-《灵宅救孩》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/10/08/20231008-cfgd-chap2-challenge4-collection/">CFGD-CHAP2-Challenge4-Pick it Up - 以 Collection 为核心的机制拆解</a></li><li><a href="https://medill-east.github.io/2023/11/05/20231105-cfgd-chap3-challenge1-bomb/">CFGD-CHAP3-Challenge1-Bomb-对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</a></li><li><a href="https://medill-east.github.io/2023/11/26/20231126-cfgd-chap3-challenge2-maze">CFGD-CHAP3-Challenge2-Maze-《卦象迷宫》One-Page Design</a></li><li><a href="https://medill-east.github.io/2024/01/07/20240107-cfgd-chap3-challenge3-password/">CFGD-CHAP3-Challenge3-Password-密码谜题</a></li></ul><p>该篇是《Challenges for Game Designers》第三章的第 4 个挑战——以电力（Electricity）为主题的谜题。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>游戏中有很多和电流有关的出色谜题，将电流从一个地方正确传到另一个地方从逻辑上让人很容易联想到“有事情会发生”。</p><ul><li>目标 - 设计一个纸面原型 [[paper prototype]] <ul><li>将电流从屏幕一端传递到另一端</li><li>可以使用任何界面</li><li>需要玩家使用 [[spatial reasoning]] 进行解谜</li></ul></li></ul><h4 id="Components-required"><a href="#Components-required" class="headerlink" title="Components required"></a>Components required</h4><ul><li>Materials to create prototype </li></ul><h4 id="Deliverable"><a href="#Deliverable" class="headerlink" title="Deliverable"></a>Deliverable</h4><ul><li>原型，以及包含了下列元素的规则说明<ul><li>开始状态</li><li>目标</li><li>玩家可以进行的操作</li></ul></li></ul><h4 id="Suggested-Process"><a href="#Suggested-Process" class="headerlink" title="Suggested Process"></a>Suggested Process</h4><ol><li>头脑风暴<ul><li>怎样把电流从屏幕一端传到另一端</li><li>“传递成功”看起来是怎样的</li><li>玩家是一直尝试到成功，还是可能失败？</li></ul></li><li>创建机制<ul><li>定义玩家可以进行的操作</li><li>玩家的操作会对游戏状态产生怎样的影响</li></ul></li><li>创建一个谜题样例<ul><li>使用规则创建一个谜题</li><li>确保写下自己的解谜办法</li><li>如果有时间就做两个谜题：一个简单的教学谜题，一个复杂的可以显示机制深度的谜题</li></ul></li><li>Playtest &amp; 迭代<ul><li>和朋友测试，根据需要调整规则和难度</li></ul></li><li>Create deliverable</li></ol><h3 id="构思过程"><a href="#构思过程" class="headerlink" title="构思过程"></a>构思过程</h3><h4 id="题目拆解"><a href="#题目拆解" class="headerlink" title="题目拆解"></a>题目拆解</h4><p>基于之前的 puzzle 框架，利用 [[spatial reasoning]] X puzzle type 得到了以下可能性：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401141829527.png"></p><h4 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h4><p>这次的灵感来源比较杂，最开始因为考虑到需要涉及 [[spatial reasoning]] 相关的谜题，所以最先想到的参考是 [[Patrick’s Parabox]] X [[Cocoon]] X [[Witness]]。</p><p>因为空间想象力比较差，所以看完了脑子里也没有非常契合的玩法画面出现…</p><p>又过了一周后，回到体验思考，从电力最开始的联想其实是触电/死亡，这也可以作为最终想要传递的体验。由此想到了 [[不死不幸 UndeadUnluck]] 和 [[Jump Off The Bridge]] —— 总是死不了，千辛万苦拉下电闸眼前一黑后一切又从头开始 —— 预期体验又更清晰了。</p><p>至于游玩方式，最开始在第一和第三人称之间纠结，最终决定结合两者——拉闸时采用第一人称，平时采用第三人称。这也是受到了 [[双人成行 It takes two]] 和 [[人类一败涂地 Human Fall Flat]] 的启发。</p><ul><li><p>第一视角 vs. 第三人称</p><ul><li>第一人称 - 拉闸<ul><li>更好地表现“触电后眼前一黑”</li><li>沉浸感更强</li></ul></li><li>第三人称 - 平时<ul><li>易于理解环境</li><li>易于观察动作</li><li>可以随时看到自己+队友的状态<h4 id="具体构思细节"><a href="#具体构思细节" class="headerlink" title="具体构思细节"></a>具体构思细节</h4></li></ul></li></ul></li><li><p>灵感</p><ul><li>[[Patrick’s Parabox]] X [[Cocoon]] X [[Witness]] X [[双人成行 It Takes Two]] X [[不死不幸 UndeadUnluck]] X [[Jump Off The Bridge]] X [[人类一败涂地 Human Fall Flat]]</li><li>体验<ul><li>Shock to death</li></ul></li><li>角色可以在场中交互以改变关卡构造</li><li>目标是构建电流通路然后打开开关以触电 - pull the trigger</li></ul></li></ul><ul><li>头脑风暴<ul><li>怎样把电流从屏幕一端传到另一端<ul><li>在关卡中构建电流通路</li><li>之后找到并拉下电闸<ul><li>这里倒是不完全算是“从屏幕一端传到另一端”了，毕竟最终算是“传到了自己身上”</li><li>[[spatial reasoning]] 需要通过关卡构造来实现</li></ul></li></ul></li><li>“传递成功”看起来是怎样的<ul><li>关卡中的灯可以作为通电的信号</li></ul></li><li>玩家是一直尝试到成功，还是可能失败？<ul><li>玩家可以一直尝试直到成功</li><li>也可以选择直接重置当前关卡</li><li>并不排除具有限时关卡的可能性</li></ul></li></ul></li><li>创建机制<ul><li>定义玩家可以进行的操作<ul><li>移动</li><li>和物品交互（参考 [[人类一败涂地 Human Fall Flat]] ）</li></ul></li><li>玩家的操作会对游戏状态产生怎样的影响<ul><li>改变关卡构造从而改变通路情况</li></ul></li><li>RLD<ul><li>电器元件<ul><li>开关<ul><li>开 - 可以通过</li><li>关 - 无法通过</li></ul></li><li>传感器<ul><li>基于特定条件触发</li></ul></li><li>电容<ul><li>开关<ul><li>打开 - 放电</li><li>关闭 - 充电</li></ul></li><li>电阻 &amp; 电容大小<ul><li>电阻小/电容大 - 放电慢</li><li>电阻大/电容小 - 放电快</li></ul></li></ul></li><li>电阻<ul><li>电阻小 - 可以通过</li><li>电阻大 - 无法通过</li></ul></li><li>磁铁<ul><li>同斥异吸</li><li>[[锁-钥匙 lock and key]] </li><li>磁场障碍</li><li>移动的磁铁可以在电线周围生成电流</li><li>与磁铁互动可以改变场景中磁力分布，影响周围元素</li></ul></li><li>发电机<ul><li>运行 - 有电</li><li>停止 - 无电</li></ul></li><li>导线<ul><li>有导线 - 可以通过</li><li>无导线 - 无法通过</li></ul></li><li>放大器<ul><li>信号增强</li><li>范围扩大</li></ul></li></ul></li><li>其他电气元素<ul><li>电压</li><li>功率</li><li>电感</li><li>交直流（电流方向和周期变化）</li></ul></li></ul></li></ul></li></ul><ol start="3"><li>创建一个谜题样例<ul><li>参见 one-page design 中右半部分</li></ul></li></ol><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li><p>最开始还是基于原来对禁锢机制的拆解进行了思考</p></li><li><p>即使找到了参考也没有那么容易想象出最终想要的画面，最终还是基于体验出发有了新的联想</p></li><li><p>最近看的 [[不死不幸 UndeadUnluck]] 和原来看的 [[Jump Off The Bridge]] 都对此次设计有很大启发，保持多看多玩哈哈</p></li><li><p>后面看能不能找时间和朋友做做 Playtest？不过可能会变成关卡构思讨论？</p></li></ul><hr><h3 id="Playtest"><a href="#Playtest" class="headerlink" title="Playtest"></a>Playtest</h3><p>- </p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240121 - Do We Really Need Enemies?</title>
      <link href="2024/01/21/20240121-b08/"/>
      <url>2024/01/21/20240121-b08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习游戏中的 Stress-Relief-Growth-Progress 循环！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B08-Do-We-Really-Need-Enemies"><a href="#B08-Do-We-Really-Need-Enemies" class="headerlink" title="B08 - Do We Really Need Enemies?"></a>B08 - Do We Really Need Enemies?</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401211239807.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/atqS7SImuBc?si=P4Y8QNM8k1eRxuLT" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>关于打怪升级的一种理解</p><blockquote><ul><li>为什么要打怪呢？<ul><li>为了升级呀</li></ul></li><li>为什么要升级呢<ul><li>为了能够打败更强更坏的敌人呀</li></ul></li></ul></blockquote></li><li><p>大多数游戏——除了故事驱动/解谜游戏——都需要打败敌人</p><ul><li>[[樱井政博]] 相信一些没有玩过游戏的人可能在第一次看到游戏中的射击、撞击、斩击等行为时有些疑惑，我们确定这些是必要的吗？</li></ul></li><li><p>我们习以为常的事情都有其存在的理由，但对这些概念保持质疑是好事，就让我们稍微进行一些延伸挖掘</p></li><li><p>抛开例外不谈，通常来讲，游戏提供乐趣的方式是“施加压力——释放压力” </p><ul><li>即障碍的设置都可视为压力的施加—— stress</li><li>障碍的解除，都可视为压力的释放—— relief<ul><li>这是你会“长舒一口气”的时刻</li></ul></li></ul></li><li><p>之后会获得（物品/经验值）奖励来帮助你变得更强，这就是成长—— growth</p><ul><li>这会使得你对接下来会发生的事情有所期待，并且给予你更强的满足感</li></ul></li><li><p>结果就是，接下来的障碍变得更容易被移除，这就是游戏进程的推进—— progress</p><ul><li>由此就可以继续在游戏世界中冒险</li></ul></li><li><p>Stress - Relief - Growth - Progress</p><ul><li>后三个部分使得游戏“有趣”，但只有先有 stress，后三个部分才能成立</li><li>由此看来，游戏似乎确实需要障碍 obstacles</li></ul></li><li><p>以 [[Undertale]] 为例<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401211255744.png"></p><ul><li>游戏中存在可以不打败任何人就通关（和平主义）的可能性，但这非常难</li><li>实际上，和平主义需要以间接方法“打败”敌人<ul><li>这实际上比起运用普通方法来打败敌人更加困难而令人感到有压力 —— stress</li><li>但若能成功释放压力，会让人感觉更有成就感和回报感 —— relief &amp; reward/growth</li><li>由此之后会期待游戏（比普通情况下）推进更多 —— expect greater progress</li></ul></li></ul></li><li><p>压力有各种形式，不仅仅可以通过敌人和游戏机制来传达</p><ul><li>在冒险游戏中，主人公和朋友们可能身处绝境，这也是压力<ul><li>找到办法来释放这种压力从而推进会带来独特的乐趣</li></ul></li><li>需要为买东西付钱是另一种形式的 stress &amp; relief<ul><li>要买一个昂贵的东西意味着需要为此储蓄，并且期待拥有它的那一天</li><li>如果可以在一个挖矿游戏中获取无限资源，花钱也会变得没意思，对吧</li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>总结而言，如果需要的话，确实可以将敌人从游戏中去除，但游戏中仍需要与之对应的压力的施加和释放方式</li><li>在设计游戏时，也不要忘了尽可能地包括 成长 growth 以及 推进 progress 的相关要素！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240114 -  Directors Need to Be Unique</title>
      <link href="2024/01/14/20240114-a08/"/>
      <url>2024/01/14/20240114-a08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解成为游戏导演的关键特质是与众不同！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A08-Directors-Need-to-Be-Unique"><a href="#A08-Directors-Need-to-Be-Unique" class="headerlink" title="A08 - Directors Need to Be Unique"></a>A08 - Directors Need to Be Unique</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401141246979.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/WXBS7hk0B7k?si=upzRWna-8aNOiq2A" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>有许多人可能都想要成为游戏导演或者设计师</p></li><li><p>所以 [[樱井政博]] 经常被问到的一个问题是“如何成为一个游戏导演”</p></li><li><p>抛开樱井自己不谈，他觉得不同游戏类型的游戏导演所需的技能可能也并不那么一致</p><ul><li>樱井所碰到过的一些导演做事的方式完全不同，都非常特别</li><li>但这里，樱井还是列出了一个他们的相同点，即下面提到的</li></ul></li><li><p>Keen sensibility to see things differently，即能够以不同视角来看待事物的敏锐洞察力</p><ul><li>当樱井和他们交流时 ，发现很多导演都提出了樱井未曾考虑过的角度和洞见</li><li>当给他们呈现一个事物时，他们是那种会关注到非常微小的细节，然后以大多数人都会忽略或错过的视角来解读这一事物的人</li><li>这个特质对于一个游戏导演而言，可能比你想象中的要更加重要<ul><li>Visuals/ [[game essence]] / animation/ story/ …</li><li>他们可能甚至会以不同的方式来感知他人</li></ul></li><li>游戏导演某种程度上可能确实显得有些怪异，但樱井觉得这是好事</li></ul></li><li><p>为了避免任何的误解，樱井也补充说他们需要有很好的平衡感</p></li><li><p>他们也需要很擅长于将脑中的创意想法传达给他人</p><ul><li>虽然可能也有，但不太容易想到不太擅长表达的导演</li></ul></li><li><p>导演们将自己脑中的想法和感觉转化为游戏，这也是他们的游戏与其他游戏不同的关键</p></li><li><p>导演的职责，和游戏本身一样，需要一种专属于个人的，个性化的独特感触</p></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>虽然有程度上的不同，但樱井当前的感觉是：A director needs to be unique!<ul><li>即一个导演需要与众不同！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning </tag>
            
            <tag> Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码谜题</title>
      <link href="2024/01/07/20240107-cfgd-chap3-challenge3-password/"/>
      <url>2024/01/07/20240107-cfgd-chap3-challenge3-password/</url>
      
        <content type="html"><![CDATA[<h2 id="密码谜题"><a href="#密码谜题" class="headerlink" title="密码谜题"></a>密码谜题</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>过往设计:</p><ul><li><p><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">CFGD-CHAP2-Challenge1-Path A to B-《生克之路》One-Page Design</a></p></li><li><p><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">CFGD-CHAP2-Challenge2-Territorial Acquisition-《海内十洲》One-Page Design</a></p></li><li><p><a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">CFGD-CHAP2-Challenge3-Exploration-《灵宅救孩》One-Page Design</a></p></li><li><p><a href="https://medill-east.github.io/2023/10/08/20231008-cfgd-chap2-challenge4-collection/">CFGD-CHAP2-Challenge4-Pick it Up - 以 Collection 为核心的机制拆解</a></p></li><li><p><a href="https://medill-east.github.io/2023/11/05/20231105-cfgd-chap3-challenge1-bomb/">CFGD-CHAP3-Challenge1-Bomb-对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</a></p></li><li><p><a href="https://medill-east.github.io/2023/11/26/20231126-cfgd-chap3-challenge2-maze">CFGD-CHAP3-Challenge2-Maze-《卦象迷宫》One-Page Design</a></p></li></ul><p>该篇是《Challenges for Game Designers》第三章的第 3 个挑战——以密码为主题的谜题。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>第三章中的 Challenge 2 - Password：</p><ul><li>目标 - 设计三种不同的密码谜题，且需要包含<ul><li>密码，但不一定需要是数字</li><li>输入方式</li><li>获取密码的方式</li></ul></li><li>简单的例子<ul><li>有四个代表着四个数字的动物，需要按顺序击杀它们</li></ul></li><li>尝试设计玩家不曾预料过的东西，比如和关卡中的东西进行实体交互，以输入某种密码，或是找到具有特定模式的物品来解谜（研究中世纪时的各种独特的“钥匙”）</li></ul><h4 id="Components-required"><a href="#Components-required" class="headerlink" title="Components required"></a>Components required</h4><ul><li>None</li></ul><h4 id="Deliverable"><a href="#Deliverable" class="headerlink" title="Deliverable"></a>Deliverable</h4><ul><li>Mockups of the individual puzzles</li><li>Description of how the puzzle works</li><li>Level design on graph paper, if applicable</li></ul><h4 id="Suggested-Process"><a href="#Suggested-Process" class="headerlink" title="Suggested Process"></a>Suggested Process</h4><ol><li>调查<ul><li>看看古往今来人们是怎么把贵重的物品藏起来的</li><li>他们用了什么方式来让别人能够进入其中</li><li>“保险箱”的设置应该近乎是现实可行的</li></ul></li><li>头脑风暴<ul><li>所有见过的设密方式中，哪些是适合转化为游戏的</li><li>设想他们能够成为一个更大的游戏中的一部分</li></ul></li><li>敲定细节<ul><li>试着创造几个谜题，不必设计一个完整游戏，只需要设计一套谜题的规则</li></ul></li><li>交付结果</li></ol><h3 id="构思过程"><a href="#构思过程" class="headerlink" title="构思过程"></a>构思过程</h3><h4 id="题目拆解"><a href="#题目拆解" class="headerlink" title="题目拆解"></a>题目拆解</h4><p>在 <a href="https://medill-east.github.io/2023/11/05/20231105-cfgd-chap3-challenge1-bomb/">CFGD-CHAP3-Challenge1-Bobm-对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</a> 一文中已经完成了对“禁锢”机制的解构。</p><p>这次的主题是 Password，即密码，又因为需要是“近乎现实能够实现”的，所以选定“实体-机关”作为谜题类别。</p><h4 id="谜题类型（实体-机关）-x-谜题解法-密码谜题的玩法可能性"><a href="#谜题类型（实体-机关）-x-谜题解法-密码谜题的玩法可能性" class="headerlink" title="谜题类型（实体-机关） x 谜题解法 = 密码谜题的玩法可能性"></a>谜题类型（实体-机关） x 谜题解法 = 密码谜题的玩法可能性</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401072143065.png"></p><ul><li>最开始浮现脑中的是希望能制作能够动态变化的密码</li><li>之后结合三种解谜方式得到了下面的三种 IDEA</li></ul><h5 id="密码谜题-1-Riddles-卦象锁-负阴而抱阳"><a href="#密码谜题-1-Riddles-卦象锁-负阴而抱阳" class="headerlink" title="密码谜题 1 - Riddles - 卦象锁 - 负阴而抱阳"></a>密码谜题 1 - Riddles - 卦象锁 - 负阴而抱阳</h5><ul><li>Riddles - 人因时而动<ul><li>谜面<ul><li>人因时而动</li></ul></li><li>密码<ul><li>阴时 - 丑、卯、已、未、酉、亥<ul><li>艮 ☶</li></ul></li><li>阳时 - 子、寅、辰、午、申、戍<ul><li>巽 ☴</li></ul></li></ul></li><li>输入方式<ul><li>按下则为阴，凸起则为阳</li></ul></li><li>获取密码的方式<ul><li>需要根据下列内容进行推测<ul><li>三爻以上爻为天（阳爻），下爻为地（阴爻），中爻为人</li><li>人因时而动，所以根据时辰所对应的阴阳来判定中爻的答案</li></ul></li></ul></li></ul></li></ul><h5 id="密码谜题-2-Pattern-Recognition-3-x-3-四象锁"><a href="#密码谜题-2-Pattern-Recognition-3-x-3-四象锁" class="headerlink" title="密码谜题 2 - Pattern Recognition - 3 x 3 四象锁"></a>密码谜题 2 - Pattern Recognition - 3 x 3 四象锁</h5><ul><li><p>这个谜题其实受到了上次做的<a href="https://medill-east.github.io/2023/11/26/20231126-cfgd-chap3-challenge2-maze">卦象迷宫</a> demo 的启发</p></li><li><p>Pattern Recognition - 3 x 3 四象锁</p><ul><li>Experience pillar<ul><li>密码会动态变化</li></ul></li><li>密码<ul><li>因为是 3 x 3 所以其实最多只需要进行 3 次输入</li><li>以当前时辰为当前回合<ul><li>如 2300-0059 为子时 - 1 - 奇数回合</li><li>0100 - 0259 为丑时 - 2 - 偶数回合</li><li>0300 - 0459 为寅时 - 3 - 奇数回合</li><li>0500 - 0659 为卯时 - 4 - 偶数回合</li><li>…</li></ul></li><li>密码为使得当前四象图变化到下一阶段<ul><li>太阴</li><li>少阳</li><li>太阳</li><li>少阴</li></ul></li></ul></li><li>输入方式<ul><li>按下则为阴 0，凸起则为阳 1</li><li>按下第一个按键之后开始计时，一分钟内若是没有输入完成，则当前状态成为新的锁</li><li>完成输入后，锁打开，下次合上时的初始状态为新的锁</li></ul></li><li>获取密码的方式<ul><li>玩家需要结合下列元素进行解锁<ul><li>四象变化关系</li><li>当前时辰所对应的奇数/偶数行为底行</li></ul></li></ul></li></ul></li></ul><h5 id="密码谜题-3-Item-Use-穿针引线"><a href="#密码谜题-3-Item-Use-穿针引线" class="headerlink" title="密码谜题 3 - Item Use - 穿针引线"></a>密码谜题 3 - Item Use - 穿针引线</h5><ul><li><p>这个谜题是在半梦半醒之间想到的哈哈</p></li><li><p>Item Use - 穿针引线</p><ul><li>体验<ul><li>不完全受控</li><li>紧张地等待</li></ul></li><li>密码<ul><li>让线穿入孔中</li></ul></li><li>输入方式<ul><li>孔的位置会随着注视的时间长短而产生旋转着的向心/离心变化</li><li>随着注视孔的时间越长，孔的位置距离中心越远，声音频率变低，听起来变得厚重</li><li>一旦视线移开，孔就会旋转着向心变化，半径逐渐缩小，声音频率变高，听起来变得尖锐</li></ul></li><li>获取密码的方式<ul><li>/</li></ul></li></ul></li></ul><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li><p>原来对禁锢机制的拆解再次排上了用场！</p></li><li><p>这次的设计构思相较而言花的时间要稍短一些，但因为需要对三种锁进行构想，所以可能都不是比较大体量的玩法</p></li><li><p>一看就觉得会有意思的玩法其实是半梦半醒之间想到的穿针引线</p><ul><li>出发点是做体验设计，而不只是局限于机制设计，感觉要是实现了应该玩起来会有趣</li></ul></li><li><p>体验设计和原本进行的机制拆解并不完全冲突，但是两者该如何更好地结合起来需要再思考</p><ul><li>最终的目的是创建“体验构建方法论/工具集”，从而能够更好地为玩家带来预期体验</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240107 - Game Music and Ambient Sounds</title>
      <link href="2024/01/07/20240107-i04/"/>
      <url>2024/01/07/20240107-i04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解现代游戏的音乐和环境音！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="I04-Game-Music-and-Ambient-Sounds"><a href="#I04-Game-Music-and-Ambient-Sounds" class="headerlink" title="I04 - Game Music and Ambient Sounds"></a>I04 - Game Music and Ambient Sounds</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401071105364.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/t_tRnBj9tqc?si=Fkp8Ulc_sFRkYd3x" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>[[樱井政博]] 近年来经常听到一种说法</p><ul><li>过去的游戏音乐总是令人印象深刻并且有一起哼唱的乐趣，但近年来的音轨听起来都是好莱坞出品的一样，几乎不会注意到音乐，也不再觉得它们有趣</li></ul></li><li><p>那么，就让我们试着在现代游戏中的音效听起来像是 NES 时代的音乐吧（这里建议大家直接去看原视频，无法转述哈哈哈）</p><ul><li>听起来很吵闹对吧！</li><li>虽然确实一定程度上很有趣，但是…</li></ul></li><li><p>随着图形技术的发展，有越来越多的图像信息被处理，会让过于“突出”的音乐有些“喧宾夺主”</p><ul><li>贴近现实的图形会需要更加接近现实的环境声<ul><li>风吹过空洞</li><li>走过不同材质的脚步声</li><li>金属碰撞的锐鸣</li></ul></li><li>音场中包含着许多元素，每一个都需要有其合适的存在感</li></ul></li><li><p>说起来，樱井自己觉得确实最终为了一个游戏会创作太多的音乐</p><ul><li>比如 [[Smash Bros. Ultimate]] 中有超过 800 个音轨</li><li>即使 [[Smash Bros. Ultimate]] 不一定是最好的例子，但是通常来讲，比起以前，确实更难记住大段的音乐或者是为其感到兴奋了</li><li>所以，樱井认为也许克制地使用音乐，或是采用更好的方法来更高效地利用少量音乐也许是更好的做法</li></ul></li><li><p>樱井经常做的是设想一个主题，之后根据情况来在整个游戏中来创建其不同的编排方式</p><ul><li>无论怎么做，如果人们能够记住音乐的旋律，那它就是会有更强的影响力</li></ul></li><li><p>当然了，这和你所制作的游戏类型息息相关</p><ul><li>但在任何情况下，樱井觉得最好能制作能够补全玩家感受的音乐</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20240102 - Put Parameters in Brackets</title>
      <link href="2024/01/02/20240102-k03/"/>
      <url>2024/01/02/20240102-k03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解针对特定角色的游戏微调（Fine Tuning）！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="K03-Put-Parameters-in-Brackets"><a href="#K03-Put-Parameters-in-Brackets" class="headerlink" title="K03 - Put Parameters in Brackets"></a>K03 - Put Parameters in Brackets</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401021132959.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/v6ozfbqNa54?si=USnIykqQogZI_jOF" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>\\<ul><li><p>视频开始之前， [[樱井政博]] 再次强调了一个该系列视频之前已经提过的点——游戏的代码和其参数是两回事</p><ul><li>代码 code<ul><li>控制的是逻辑</li><li>是游戏中不同命令的指令手册</li></ul></li><li>参数 parameters<ul><li>控制的是逻辑的表现</li><li>是让游戏中的命令鲜活起来的数字<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401021134784.png"></li></ul></li></ul></li><li><p>上次提到了一些被所有角色共用的参数</p><ul><li>General attack power</li></ul></li><li><p>这期视频中会关注更加具体的话题，比如与特定角色有关的移动和特殊动作等参数，即基于每个角色的特性的那些独特参数</p></li><li><p>下面会先介绍樱井他们自己的团队在制作游戏时的工作流</p><ul><li>游戏导演（Director）/设计师（Designer）的想法会由策划（Planner）转化为参数表（可以将其想象成蓝图）</li><li>之后由程序员（Programmer）将参数进行功能实现，使得角色能够运行</li><li>之后会交还给策划对参数进行微调（fine-tuning）<ul><li>如果没有 bug，那么程序的工作就到此结束了</li><li>但策划会出于平衡性的需要一直调整参数直到游戏完成</li></ul></li></ul></li><li><p>虽然可以直接将参数（如下方的例子）写进程序中，游戏依然能够顺利运行，但这就意味着每一次调整都需要经由程序完成，这样不利于开发效率，所以最好还是将其暴露为参数</p><ul><li>步行速度</li><li>跑步速度</li><li>特殊招式的移动速度</li></ul></li><li><p>也就是说，从程序中建立了一个引用表，让策划能在任何时间方便地调整</p></li><li><p>那么，接下来讨论参数表</p><ul><li>为了能够不出错，需要明确列出程序中的哪些部分需要被列为参数，并且确保程序团队对此知情</li><li>此外，每个参数的命名和意义应该无歧义，无论谁看到这个参数都不该感到疑惑并且能够理解其含义<ul><li>毕竟，通常情况下会有很多人来进行调整</li><li>根据项目的不同，有不同的办法来处理这样的情况，下面是樱井自己归纳出的三条规则<ul><li>用直白的语言命名</li><li>将参数用括号括起来</li><li>用“O”来标记数值型变量<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401021204446.png"></li></ul></li><li>例子<ul><li>初始移动的参数 [X 轴方向的出发速度为 O]</li><li>与此同时，以下列参数减速 [X 轴方向的负加速度为 O/frame]<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401021209261.gif"></li><li>除了参数表，也会制作一个包含了所有参数的文件<ul><li>其中同时列出了参数和其对应的值</li><li>[[fine-tuning]] 的时候只需要调整这些值就可以了<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202401021215401.png"></li></ul></li></ul></li></ul></li></ul></li><li><p>如果你从未使用过参数，你可能会不知道这样做的意义在哪里</p><ul><li>很多人可能只会写“X-velocity”或者是“X-deceleration”，然后这样的命名这就是对参数的全部说明了， [[樱井政博]] 原来也是这样哈哈</li><li>然而，通过使用直白的语言对参数进行描述，能够在 [[fine-tuning]] 的时候清晰地知道到底在更改的是什么值</li><li>最终可能可以实现 <strong>通过看到参数列表就知道对应的 spec 是什么</strong></li><li>值得一提的是，这样的标注方式最有效率的场景是你需要写 unique specs 的时候<ul><li>如果是整个游戏通用的参数可能不太需要这样的标注方式</li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>[[樱井政博]] 不太确定其他项目是如何处理类似场景的，但他认为这样的办法可以在没有歧义的情况下对参数进行调整<ul><li>正如 spec sheet 一样，如果没有办法清晰地解释其中的内容，那你也没有办法很好地进行 [[fine-tuning]] </li></ul></li><li>也许还有甚至更好的办法呢</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231224 -  You&#39;ll Forget the Hardship, But the Game Will Endure!</title>
      <link href="2023/12/24/20231224-a07/"/>
      <url>2023/12/24/20231224-a07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学着忘记困难，记得为玩家服务！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A07-You’ll-Forget-the-Hardship-But-the-Game-Will-Endure"><a href="#A07-You’ll-Forget-the-Hardship-But-the-Game-Will-Endure" class="headerlink" title="A07 - You’ll Forget the Hardship, But the Game Will Endure!"></a>A07 - You’ll Forget the Hardship, But the Game Will Endure!</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312241300627.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/MPSFfqxpVJk?si=GGuTgcS-ygGXpcGw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>总的来讲，游戏开发是一项艰难的工作</p><ul><li>你也可以想象到，制作游戏和在电脑上工作并不总是一帆风顺和符合预期的</li><li>需要付出非常多的努力，几乎就像是不断在一个小石头上垒砌新的小石头<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312241204968.png"></li><li>但如果这意味着有更多的人能玩自己的游戏，那么我们在所不辞</li></ul></li><li><p>[[樱井政博]] 说自己做了这么多年游戏开发学到了一件事——如果有很多人玩你的游戏，你的勤苦付出最终都会得到回报！</p><ul><li>这不仅仅关乎销量</li><li>即使以最简单的情况，你所做的游戏可能会有至少数十甚至数百的潜在玩家，如果有一千人玩了你的游戏，如此所产生的影响比就千倍于你的困难</li><li>不仅是游戏，世界上的许多事物都是创作者基于这样的理念制作出的</li><li>制作一个完成的产品或者持续提供服务可能会面对不可计数的挑战</li><li>但其实在我们身边，每天都有很多人在各行各业做着这样的工作，我们彼此扶持</li><li>如果你总是想要走捷径，做妥协，你最终会感到后悔</li></ul></li><li><p>樱井觉得——你终将忘记你所经历的困难，但你的游戏会永远存续！（You’ll Forget the Hardship, But the Game Will Endure!）</p><ul><li>随着时间的推移，樱井说自己对于开发各个项目时碰到的种种困难都记不真切了，但他似乎永远忘不了在游戏中做得不够好的部分</li><li>下面是 [[Kirby’s Adventure]] 结尾部分的一小段，但其实这不是他所预期的<ul><li>屏幕发生震动的地方应该呈现的是闪白效果，而不是震动<ul><li>即使过了这么多年，樱井依然难以忘记<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312241243039.gif"></li></ul></li></ul></li></ul></li><li><p>虽然很不好意思这么说，但是樱井的游戏卖得比他想象中要好</p><ul><li>[[Smash Bros. Ultimate]] 卖出了超过 2900 万份（2022 年 9 月的数据）<ul><li>樱井大概查了一下，这约等于澳大利亚的总人口数</li><li>如果将所有 [[Smash Bros.]] 系列的销量加起来，大概等于英国的人口数量</li></ul></li><li>于他而言，这些数字将工作中遇到的辛苦一扫而空，樱井也非常感谢玩过他游戏的玩家们</li></ul></li><li><p>需要澄清的是，樱井并不是说工作者们应该经历不必要的困难，但一旦我们能够高效工作，就应该尽可能做好工作以服务玩家</p><ul><li>游戏，或是任何其他的产品，是在被活生生的人购买——记住这一点，并且记住自己是为了他们而做，量力而行吧！</li></ul></li><li><p>樱井再次强调了——一旦一个项目结束，你就会开始淡忘你所经历过的困难，但游戏本身会在那之后依然长久存在</p><ul><li>现在就尽己所能，以免将来后悔吧！</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>当你投入工作的时候，试着想想所有那些最终能享受最终产品的玩家们！让我们加油吧！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231217 - Sora&#39;s Work-From-Home Strategies</title>
      <link href="2023/12/17/20231217-m09/"/>
      <url>2023/12/17/20231217-m09/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解樱井的公司 Sora 如何支持远程办公！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M09-Sora’s-Work-From-Home-Strategies"><a href="#M09-Sora’s-Work-From-Home-Strategies" class="headerlink" title="M09 - Sora’s Work-From-Home Strategies"></a>M09 - Sora’s Work-From-Home Strategies</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312171022431.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/YXudgEHF78M?si=6Hd8TJ2VnJTI2E5R" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>由于 COVID-19 的影响，几乎所有正在进行的 [[Smash Bros. Ultimate]] 开发都转换为了远程进行，这一期将讲一讲这是如何进行的</p></li><li><p>将一个秘密进行的项目进行这样的转换是很难的，但这是一项必要的举措，所以在 2020 年四月就立马开始转换</p></li><li><p>在之后的一小段时间就开始了远程工作</p><ul><li>[[樱井政博]] 给团队中的每个人都发送了调查问卷，询问大家对此感受如何<ul><li>好的方面<ul><li>不再需要交通</li><li>更好的室温条件和饮食习惯（better eating habits 说的应该是平时需要和大家一起吃饭之类的？）</li><li>不需要排队上厕所</li></ul></li><li>然而许多人最后在回复中也提出了相同的问题<ul><li>没办法找到合适的办公桌椅<ul><li>一些成员坐在底板上，在很低的围炉桌上办公</li></ul></li><li>缺少合适的显示器<ul><li>也就是说，它们没有标准电视用于参考</li><li>樱井意识到公司需要为团队成员提供一台合适的设备</li></ul></li><li>网络不稳或缓慢<ul><li>一些团队成员所住公寓网速不太好</li><li>另一些团队成员反应公司所用的加密手段让一切都变得很慢</li></ul></li><li>无法测试<ul><li>[[Playtest]] 团队无法当面测试战斗，所以过得很辛苦</li><li>樱井自己在午餐时进行的比赛测试（lunchtime test matches）也需要在网上进行</li></ul></li><li>缺乏足够的社交<ul><li>这个无法避免</li></ul></li></ul></li></ul></li></ul></li><li><p>这是团队第一次进行这样的尝试，所以有各种各样的问题需要解决</p><ul><li>上面提到了一些普遍的问题，好在一些问题可以通过购买合适的设备来解决</li><li>缺少合适的办公桌椅确实会导致一些健康问题</li><li>所以樱井单独批准了一批特殊的经费来支持远程办公<ul><li>任何在 [[Smash Bros. Ultimate]] 团队工作的成员可以申请可以帮助他们进行远程工作的设备，公司会为他们下单，并且他们可以保留，无需返还公司</li><li>他们所需要做的就是给公司发送商品页面，然后公司会下单后送到他们的地址</li><li>成员们订购的设备包括但不限于<ul><li>办公桌椅</li><li>显示器</li><li>显示器支架</li><li>房间格挡</li><li>摄像头</li><li>耳机</li><li>HDMI 等转换头</li><li>圆桌</li><li>隔音材料</li></ul></li></ul></li></ul></li><li><p>[[Smash Bros. Ultimate]] 是和 [[万代南梦宫 Bandai Namco Studios]] 以及一些其他受雇的开发者和临时职员一起开发的</p><ul><li>理论上讲， [[樱井政博]] 自己也是临时受雇，因为他是通过 [[Sora Ltd.]] 签订的合约</li><li>在远程工作时，什么东西是自己的，什么是公司的就会变得有些模糊，而申请，采购，批准等等肯定会占用时间</li><li>为了尽可能快速的解决问题， [[樱井政博]] 让公司为大家买单，最终的效果也很不错，每个人最后都很开心</li></ul></li><li><p>与此同时，混乱并没有结束</p><ul><li>公司继续以远程模式进行 [[Smash Bros. Ultimate]] 的开发</li><li>这是一段新鲜的体验，但樱井觉得这肯定会对后续项目的开发也造成巨大影响</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>游戏开发被各种各样的困难和混乱延误是很常见的情况<ul><li>幸运的是，当时公司已经开始着手制作 [[Smash Bros. Ultimate]] 的 DLC 内容，否则想必会很痛苦</li></ul></li><li>切换到远程工作时，各种各样的问题都冒了出来，虽然仅仅只是 [[樱井政博]] 自己的估计，但他觉得开发效率至少降低了 30%</li><li>但和面对每种情况一样，需要尽可能地灵活应对，并且想出新的解决方案</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231210 - Falling Sells the Feeling of Flight</title>
      <link href="2023/12/10/20231210-b07/"/>
      <url>2023/12/10/20231210-b07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习在引入机制时也要考虑对立机制！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B07-Falling-Sells-the-Feeling-of-Flight"><a href="#B07-Falling-Sells-the-Feeling-of-Flight" class="headerlink" title="B07 - Falling Sells the Feeling of Flight"></a>B07 - Falling Sells the Feeling of Flight</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312101422286.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/j45EIuChfqs?si=kCxma3Ecbzp7F5F1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>当设计一个游戏，并想要创造一种在天空中自由飞行的感觉时，可以试着先添加一种坠落机制或是其他的惩罚机制 - 添加相反的元素</p><ul><li>如果不想添加惩罚机制，也可以试着添加飞行的前置条件 - 玩家只有满足后才能够飞行</li></ul></li><li><p>在可以飞行的游戏中，设计师希望玩家们的飞行控制感觉良好</p><ul><li>然而，如果不引入相反的元素，玩家只会对飞行感到无动于衷<ul><li>在飞行游戏中，就是坠落</li><li>在高速移动的游戏中，就是让玩家慢下来</li></ul></li></ul></li><li><p>在初代 [[《Ace Combat》]]中，当你沿着长长的大桥飞行时，你正在跨越海洋，这不会让你正好有一种想在大桥下方穿梭的感觉吗？</p><ul><li>如果能成功，就会感觉很好</li><li>这种良好的感觉来自其中的风险，以及你正好“擦肩而过”的惊险<ul><li>如果撞上了，就结束了</li><li>真正的快乐来自于“走钢丝”的时刻<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312101440779.gif"></li></ul></li></ul></li><li><p>想象一个只有天空，但没有可以地面可以撞击的游戏，这样的游戏不会带来任何的紧张感</p><ul><li>正因如此，可以料想背景设置在外太空的飞行游戏比起在地球大气层内的飞行游戏更难制作</li><li>相似的，在高海拔进行的 [[狗斗 dogfight]] 比起贴近有很多障碍物的地面，少了很多紧张感</li><li>至于制作类似超级英雄那样的飞行机制，并且为了让玩家感觉良好， [[樱井政博]] 的建议是让玩家能够和周围的环境产生交互</li></ul></li><li><p>在 [[Kirby Air Ride]] 中，载具在冲出悬崖等地方的时候会飞起来</p><ul><li>有趣的不仅仅只是寻找这些能够飞起来的地方<ul><li>游戏中也混合了能够飞起来和飞不起来的载具</li><li>每一种都是为了让飞行本身变得更有趣味</li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>当要为游戏添加一个机制时，想想如何添加“对立”机制<ul><li>就好比玩家如何攻击，以及敌人的攻击如何到来是一个整体一样</li><li>[[risk and reward]] 是一体两面的！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231203 - Good Errands and Bad Errands</title>
      <link href="2023/12/03/20231203-c08/"/>
      <url>2023/12/03/20231203-c08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何设计好的跑腿事件！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C08-Good-Errands-and-Bad-Errands"><a href="#C08-Good-Errands-and-Bad-Errands" class="headerlink" title="C08 - Good Errands and Bad Errands"></a>C08 - Good Errands and Bad Errands</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312031006682.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/IM9P9NIKo10?si=-1Q0_5jEv_13x1vd" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>你喜欢游戏中的 [[跑腿任务 errands]] 吗</p><ul><li>也就是故事让你在世界中来回奔走</li><li>大多玩家可能并不喜欢老游戏中的这种设定</li><li>但近年来的游戏却不尽然</li><li>这当然要归功于目前的游戏变得更好也更多元化了<ul><li>在任务中引入战斗、生活等元素可以让你在旅途中也“有事可做”</li></ul></li></ul></li><li><p>今天的主题也在 [[樱井政博|樱井政博]] 自己的书 [[《Thoughts on Playing Games 2》 - 樱井政博]] 其中的 102 页进行了讨论</p><ul><li>只有日文版的<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202312031017380.png"></li></ul></li><li><p>Bad [[跑腿任务 errands|跑腿任务 errands]] 例子</p><ul><li>女儿生病了，能为她取一些草药吗<ul><li>接下来我们需要研钵和研杵，你可以在相邻小镇中买回来吗</li><li>这样的 [[跑腿任务 errands|跑腿任务 errands]] 实在难以说得上令人兴奋<ul><li>即使是相同的任务，也有更好的呈现方式</li></ul></li></ul></li></ul></li><li><p>接下来， [[樱井政博|樱井政博]] 将提出五个 [[跑腿任务 errands|跑腿任务 errands]] 的关键点</p><ol><li>Fitting Rewards and Returns<ul><li>简单来说，给予游戏中有用的东西是很重要的</li><li>看到一个有趣的故事的展开本身也可以被视作一种奖励</li></ul></li><li>Frequent Moments of Joy<ul><li>即使对于单一跑腿任务，也应该试图在整段体验中引入多个令人开心的时刻<ul><li>为战斗或者搜寻（foraging）提供足够的奖励可能已经足够了</li><li>但是一个预料之外的惊喜也很有帮助</li></ul></li></ul></li><li>The Freedom to Strategize<ul><li>安全的远路 vs. 危险的近路 可能是一种过于简化的说法</li><li>但为玩家提供选择空间以让他们自己选择战略是很好的一件事</li><li>他们会为自己的选择感到满足</li></ul></li><li>A Speedy Exit Once the Deed is Done<ul><li>比如允许玩家快速返回交任务点<ul><li>就和旅行一样，回家的路肯定没有出行的路那么令人兴奋</li></ul></li><li>让玩家专注于有趣的部分是更好的选择</li></ul></li><li>A Sense of Future Developments<ul><li>想象一个要求玩家在城镇中进行短途旅行的跑腿任务<ul><li>不要给玩家派“给我买点东西回来”这样的无趣任务</li><li>需要提供一些与世界和设定相关的谜（mystery）</li><li>你可以让玩家跑相同的路程，但让他们去寻找一个最近失踪的小朋友，而这一时期恰好有好多小朋友都不见了。派玩家去调查一个人们老是听到有奇怪动静的房子</li></ul></li></ul></li></ol></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>从机制层面讲，这只不过是多加了几个程序标志位的跑腿事件，但如果想驱动玩家四处奔走，最好用更好的方式来包装！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《卦象迷宫》One-Page Design</title>
      <link href="2023/11/26/20231126-cfgd-chap3-challenge2-maze/"/>
      <url>2023/11/26/20231126-cfgd-chap3-challenge2-maze/</url>
      
        <content type="html"><![CDATA[<h2 id="《卦象迷宫》One-Page-Design"><a href="#《卦象迷宫》One-Page-Design" class="headerlink" title="《卦象迷宫》One-Page Design"></a>《卦象迷宫》One-Page Design</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>过往设计:</p><ul><li><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">CFGD-CHAP2-Challenge1-Path A to B-《生克之路》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">CFGD-CHAP2-Challenge2-Territorial Acquisition-《海内十洲》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">CFGD-CHAP2-Challenge3-Exploration-《灵宅救孩》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/10/08/20231008-cfgd-chap2-challenge4-collection/">CFGD-CHAP2-Challenge4-Pick it Up - 以 Collection 为核心的机制拆解</a></li><li><a href="https://medill-east.github.io/2023/11/05/20231105-cfgd-chap3-challenge1-bomb/">CFGD-CHAP3-Challenge1-Bomb-对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</a></li></ul><p>该篇是《Challenges for Game Designers》第三章的第 2 个挑战——以迷宫为主题的谜题。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>该构想是为了解决第三章中的 Challenge 2 - Maze：</p><h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><ul><li><p>将迷宫考虑为一种探索型谜题</p></li><li><p>仅仅只是拥有随机路线的迷宫对于已经见多识广的玩家而言算不上有吸引力</p></li><li><p>以前的老式 RPG 要求玩家自行绘制迷宫路线</p><ul><li>但近年来玩家觉得这样的事情太过麻烦，希望游戏提供自动化的路径功能</li></ul></li><li><p>这个挑战希望给玩家一个自制路径的理由</p></li><li><p>以“能给一个简单迷宫添加的机制种类”为主题进行头脑风暴，使得绘制地图的本身就成为了一个谜题</p><ul><li>提出至少三个想法</li></ul></li><li><p>例子</p><ul><li>[[Adventure (Atari 2600)]]<ul><li>从左边过去会从右边出现</li></ul></li></ul></li></ul><h4 id="Components-Required"><a href="#Components-Required" class="headerlink" title="Components Required"></a>Components Required</h4><ul><li>Graph Paper</li></ul><h4 id="Deliverable"><a href="#Deliverable" class="headerlink" title="Deliverable"></a>Deliverable</h4><ul><li>A short sentence up to a paragraph describing each mechanic that you can think of</li><li>A sample hand-drawn maze illustrating the mechanics described</li></ul><h4 id="Suggested-Process"><a href="#Suggested-Process" class="headerlink" title="Suggested Process"></a>Suggested Process</h4><ol><li>Brainstorm</li></ol><ul><li>从已有游戏中寻找参考很诱人，但可能会限制你的创造力</li><li>尝试先自己构想，想不出来了再考虑参考</li></ul><ol start="2"><li>Create deliverable</li></ol><h3 id="构思过程"><a href="#构思过程" class="headerlink" title="构思过程"></a>构思过程</h3><h4 id="谜题类型-x-谜题解法（Exploration）-迷宫谜题的玩法可能性"><a href="#谜题类型-x-谜题解法（Exploration）-迷宫谜题的玩法可能性" class="headerlink" title="谜题类型 x 谜题解法（Exploration） = 迷宫谜题的玩法可能性"></a>谜题类型 x 谜题解法（Exploration） = 迷宫谜题的玩法可能性</h4><p>在 <a href="https://medill-east.github.io/2023/11/05/20231105-cfgd-chap3-challenge1-bomb/">CFGD-CHAP3-Challenge1-Bobm-对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</a> 一文中已经完成了对“禁锢”机制的解构，此次需要构建的是以迷宫为主题的谜题，即解法为 Exploration。</p><p>通过将谜题类型与解法结合，可以得到迷宫谜题的玩法可能性参考：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261911456.png"></p><p>基于此，对迷宫谜题的玩法进行进一步的可能性思考：</p><ul><li><p>实体-机关 X Exploration</p><ul><li>角色被困奇门遁甲中，需要找到出去的路</li></ul></li><li><p>非实体-外部封印 X Exploration</p><ul><li>逃出百慕大（强磁场）</li></ul></li><li><p>非实体-内部扰乱 X Exploration</p><ul><li>角色处于特殊的状态（如酒醉），需要通过探索找到回家的路。</li><li>因为特殊状态所以会使得所看到的景象有特殊的变化（如重影的东西会真的变成两个；平时的普通物品变为了怪物）</li><li>因为特殊状态，所以身体不听使唤，需要用不同的按键控制身体的不同部分（头/平衡、左手、右手、左脚、右脚）- 这里是受到 [[Manual Samuel]] 的启发</li></ul></li><li><p>特殊-时间 X Exploration</p><ul><li>这里可以对时间要素进行一下拆解<ul><li>时间的可能变换形式<ul><li>速率<ul><li>加速</li><li>减速</li><li>静止</li></ul></li><li>方向<ul><li>向前</li><li>向后</li></ul></li><li>连续性<ul><li>连续</li><li>非连续（点状间隔/扭曲）</li></ul></li></ul></li></ul></li><li>Reference<ul><li>咒术回战-以 24 帧的漫画格子为单位，设想 24 帧后发生的事情</li><li>[[蝴蝶效应 butterfly effect|蝴蝶效应 butterfly effect]] - 过去发生的事情对未来造成了影响</li><li>[[泰坦陷落 2 Titan Fall 2]] 过去与未来</li><li>[[堕落之主 Lords of Fallen]] 冥界与现世</li><li>[[龙腾世纪 审判]] 可随时暂停的“即时回合制”机制</li></ul></li><li>赛车游戏，“捷径”赛道上有特殊的时间扭曲区域（比如时间加速）<ul><li>玩家需要适应加速后的操作方式才能够以更高地效率通过这段赛道<ul><li>比如一个岔路口前方有两条赛道，一条是普通时间速率的赛道，一条是加速时间速率的赛道<ul><li>没有失误的情况下<ul><li>通过普通时间速率赛道的时间是一分钟</li><li>通过加速时间速率赛道的时间是 50s（具体数值不定，但总小于通过普通时间速率赛道的时间）</li></ul></li><li>加速时间速率赛道更长，且因为其内时间是加速过的，所以操作难度也更高</li></ul></li></ul></li><li>因为考虑了 [[push and pull]] 所以应该在保证有趣的同时也确保了公平性</li></ul></li></ul></li><li><p>特殊-空间 X Exploration</p><ul><li>密室逃脱</li></ul></li><li><p>特殊-事件 X Exploration</p><ul><li>命理与运势<ul><li>事件以碎片形式出现</li><li>以不同的顺序排列事件会产生不同的结果</li></ul></li></ul></li></ul><h3 id="卦象迷宫"><a href="#卦象迷宫" class="headerlink" title="卦象迷宫"></a>卦象迷宫</h3><p>一开始其实是想构建基于奇门遁甲的迷宫的，但出于以下原因最终放弃：</p><ul><li>奇门遁甲学习成本较高，短时间内难以基于此进行谜题构建</li><li>玩家的理解成本较高</li></ul><p>但沿着这个方向做简化，最终提出了基于爻象的迷宫谜题：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261940653.png"></p><ol><li>游戏目标</li></ol><ul><li>玩家需要以最短路径（九步）从入口前进到出口<ul><li>玩家所走过的格子当时的状态会被收集起来</li><li>被收集的状态由下向上排列<ul><li>前六爻构成六十四卦中的一卦</li><li>后三爻排除三阴爻和三阳爻情况后，根据二进制转换得到 1-6 中的一个数字作为爻位</li></ul></li></ul></li><li>最终能够得到所想问题的卦象及爻位结果</li></ul><ol start="2"><li><p>游戏流程</p><ul><li><p>局前准备</p><ul><li>构想问题</li><li>决定初始爻（阴爻/阳爻）</li><li>5x5 方形迷宫初始化（从入口任意一笔画到出口）</li></ul></li><li><p>局中流程</p><ul><li>局内爻象变化</li><li>玩家移动，所经位置爻象锁定，记录爻象</li></ul></li><li><p>局后结算</p><ul><li>根据玩家所经路径的前六爻自下向上构建卦象<ul><li>如所经路径的前六爻为阴阴阴阴阴阴，则所得卦象为坤卦</li></ul></li><li>根据玩家所经路径的后三爻构建爻位<ul><li>三阴爻（000）和三阳爻（111）算作无变爻</li><li>其他情况根据二进制进行转换，最终结果在数字 1-6 之间，算作一爻至六爻</li><li>如所经路径后三爻为阴爻，阳爻，阳爻，则构建二进制数字为（110），转换后得到 6，即最终爻位为 6</li></ul></li><li>最终得到卦象和爻位</li></ul></li></ul></li><li><p>具体规则</p><ul><li>所问问题<ul><li>不要问是否</li><li>而是问“xxx 会怎么样”</li></ul></li><li>格子有两种状态<ul><li>阴爻 - 0</li><li>阳爻 - 1</li></ul></li><li>5x5 方形迷宫初始化<ul><li>入口和出口需要是对角关系，路径为无重叠的一笔画</li><li>玩家可选定初始爻为阴爻或是阳爻</li><li>初始化时，每经过一个格子所画爻相反转一次（如入口为阳爻，所画下一格子的爻相为阴爻，以此类推）</li></ul></li><li>爻象变化<ul><li>局前初始化<ul><li>一个（未被玩家一笔画经过的）未定义格子的上方格子有爻象，则当前格子爻象与其相反 - 反者道之动<ul><li>如上方格子为阳爻，则该格子为阴爻 </li><li>如上方格子为阴爻，则该格子为阳爻 </li></ul></li><li>一个（未被玩家一笔画经过的）未定义格子的上方格子无爻象，则两者都算作阴爻 - 负阴抱阳/有生于无</li></ul></li><li>局内爻象变化（类元胞自动机）<ul><li>根据当前格子上方格子的爻象对这两个格子进行变化<ul><li>少阴 -&gt; 老阴<ul><li>即下阴上阳变为下阴上阴</li></ul></li><li>老阴 -&gt; 少阳<ul><li>即下阴上阴变为下阳上阴</li></ul></li><li>少阳 -&gt; 老阳<ul><li>即下阳上阴变为下阳上阳</li></ul></li><li>老阳 -&gt; 少阴<ul><li>即下阳上阳变为下阴上阳</li></ul></li></ul></li></ul></li></ul></li></ul></li></ol><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li><p>原来对禁锢机制的拆解果然排上了用场！</p></li><li><p>这次的设计构思也花了很长时间，因为开始从奇门遁甲方向入手，后觉过于繁复，最终转向爻象的变化。</p></li><li><p>游戏玩法和可玩性其实还欠打磨，可能会有“不好玩”的感觉。</p><ul><li>这次谜题相当于将算卦游戏化了，爻象变化中试着融入了“反者道之动”、“万物负阴而抱阳”等思想，也参考了傅佩荣先生所提的数字卦占法，但作为游戏而言，可能局内的操控感不足（虽然也算是“无可奈何”的预期体验的一部分），若无求问之心，可能也会使得朝向结果迈进的驱动力不足。</li><li>最开始也有想过是否需要将局做大，从而可以构建更多爻象和卦象，并基于卦象与五行的映射关系做文章，但短时间内没有想到比较好的游戏目标，遂作罢。</li><li>有可能的话，其实也可以将卦象迷宫作为 minigame 来融入更大的游戏系统中。</li></ul></li><li><p>其实单是爻象变化与元胞自动机的组合应该就很有意思了哈哈</p></li><li><p>后面要是有时间能将这个小 demo 做出来试试看就好了！</p></li></ul><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p><a href="https://haodongliao.itch.io/yinyang-maze">https://haodongliao.itch.io/yinyang-maze</a></p><p>花了些时间做了个小的 demo，模拟了阴阳变化，但结算之类的功能都没做，主要是感受爻象的变化~</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>202301126 - Get the Sense of Scale Right</title>
      <link href="2023/11/26/20231126-f04/"/>
      <url>2023/11/26/20231126-f04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解通过区分元素的主次进行优化的方法！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="F04-Get-the-Sense-of-Scale-Right"><a href="#F04-Get-the-Sense-of-Scale-Right" class="headerlink" title="F04 - Get the Sense of Scale Right"></a>F04 - Get the Sense of Scale Right</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261124972.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/A6Rbb5sK4nI?si=uaOdpqTdXfix3fXg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>在监督一个游戏的图形时， [[樱井政博|樱井政博]] 经常会提出的一个改动建议是“get the sense of scale right” —— 把尺寸调对</p><ul><li>比如说，一个很大的物体被放到场景中时会看起来很小<ul><li>只需要想象一个被等比例缩小的模型就好了<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261127850.png"></li><li>在大多数情况下，这将表现为大的东西看起来比想象的要小 <ul><li>你不太经常见到小东西看起来很大的情况</li></ul></li><li>这个问题也和游戏中的最终视觉效果有很大关系<ul><li>包括但不仅限于以下的各个方面都有明显影响<ul><li>鸟瞰视角（aerial perspective）</li><li>环境光</li><li>光线追踪</li><li>Toy camera effect</li><li>渲染中的微型伪造（Miniature faking in the rendering）<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261136726.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261136838.png"></li></ul></li></ul></li><li>但暂时先不管提到的这些，先考虑一个单一模型怎样有不同的尺寸感<ul><li>Textures<ul><li>在构建好游戏的整体氛围（atmosphere）之后<ul><li>试着让饱和度、色彩有变化<ul><li>试着增大尺寸然后从远处观察</li></ul></li><li>如果物品饱和度太高，其受到环境光影响会减弱，从而使得它看起来不够真实<ul><li>如果想做真实感，就不要使得饱和度太高<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261139104.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261140296.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261142384.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261143920.png"></li></ul></li></ul></li><li>[[樱井政博|樱井政博]] 觉得 specularity/glossy look —— 镜面感/高亮很难做好<ul><li>太亮会让东西看起来像玩具<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261145215.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261146335.png"></li><li>有一些大型物体并不需要太亮，但是在物体的局部区域添加高亮会让结果有很大提升<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261147024.png"></li><li>基于此可以讨论一下[[法线贴图 normal maps]]<ul><li>[[法线贴图 normal maps|法线贴图 normal maps]] 可以让我们为纹理添加额外信息，从而让光能够正确反射<ul><li>[[法线贴图 normal maps|法线贴图 normal maps]] 和 [[凹凸映射 bump mapping]] 是类似的，只不过法线贴图是平的（flat）</li></ul></li><li>如果法线贴图的尺寸和物品尺寸不匹配，最终效果会很差<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261149089.png"></li></ul></li><li>更大型的机械类物体，也需要类似 dirt 之类的细节<ul><li>即使一个物体需要实现灰度效果（grayscale）或者其他类似的单一色调（monotone），最好也能让 [[色相 hue]] 产生变化<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261210844.png"></li></ul></li></ul></li></ul></li><li>其实还有很多细节，但你可能已经注意到了， [[樱井政博|樱井政博]] 并没有提到模型的形状，并不是说形状没有需要考虑的细节，但他觉得前面提到的那些比起形状而言优先级更高<ul><li>毕竟如前所示，塑料模型其实和真实模型的形状是一样的</li></ul></li></ul></li></ul></li></ul></li><li><p>再次对模型和真实物体进行比较</p><ul><li>模型<ul><li>饱和度更高</li><li>镜面效果更强、范围更大<ul><li>不太受环境光影响</li></ul></li></ul></li><li>真实模型<ul><li>看起来更加扁平，色调更单一</li></ul></li><li>通常而言，CG 中的物品会看起来更像一个等比所放的模型，所以需要想办法来弥补这些区别<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261214774.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311261215554.png"><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3></li></ul></li><li><p>一如既往，根据游戏需求来选定合适的风格是很重要的</p></li><li><p>不要把素材制作仅仅当做模型制作，将整体风格考虑在内，尽力做好吧！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231119 - Attack Poses</title>
      <link href="2023/11/19/20231119-g05/"/>
      <url>2023/11/19/20231119-g05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Attack Poses！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G05-Attack-Poses"><a href="#G05-Attack-Poses" class="headerlink" title="G05 - Attack Poses"></a>G05 - Attack Poses</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191308687.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/99gdMDF7V2E?si=sOB8POmqfVQfTQwr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li>在以“打击交换”（trading blows）为核心的游戏中，打击动画的重要性不言而喻<ul><li>这些动画的感觉是否正确会对游戏给人的感觉产生巨大影响</li><li>在游戏中的所有动画中，也是这些动画对游戏乐趣的影响最为明显</li><li>今天会着重讲讲攻击成功（attack lands）时的 hit poses</li></ul></li></ul><ul><li>在 [[Smash Bros.]] 中，在攻击接触目标的瞬间加入了 [[hit stop]]，这个瞬间的动作是最令人印象深刻的，所以让其看起来正确是很重要的 <ul><li>所以 [[樱井政博|樱井政博]] 总是在制作相关动画时附上对应的参考图</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191319477.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191321625.png"></p><ul><li><p>这里其实希望能介绍更多关于打击交换的技巧，但这里会先带大家过一遍一些关键点</p><ul><li>通用规则——希望动作感觉夸张（exaggerate）<ul><li>这可以帮助你即使在摄像机较远时也能清楚读懂动作<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191326795.gif"></li></ul></li><li>使得攻击是居中的<ul><li>如果攻击偏离屏幕，可能无法正确注册受击事件<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191328081.gif"></li></ul></li><li>不要使得动作完全对称<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191331438.gif"><ul><li>除非是故意为之（比如为了喜剧效果）<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191335034.gif"></li></ul></li><li>避免简单地将躯干向一边弯曲<ul><li>带有一定的扭转会使得动作有趣得多<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191337729.gif"></li></ul></li><li>对于挥剑动作，如果可能的话，等剑稍微挥过头一些再播放 [[hit stop]] <ul><li>如果剑还没有完全挥完就添加了 [[hit stop|hit stop]] ，可能会丢失一部分的打击感<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191352136.png"></li></ul></li><li>确保角色 pose 在各个角度看起来都没问题<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191355765.png"></li><li>（很重要）让你的动作有漂亮、独特的轮廓线<ul><li>四肢的移动应该清晰可见</li><li>同时应该让每个动作的轮廓都非常亮眼<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191357906.gif"></li></ul></li><li>还有很多细节，但这些都应该具体情况具体分析，所以这里先这样简单介绍一下</li></ul></li><li><p>[[Smash Bros.]] 的玩法采用的是侧面镜头的视角，所以在制作过程中很看重不同的轮廓表现——这可能比其他任何东西都重要！</p><ul><li>以 Pyra 的动作为例<ul><li>一个简单的更改（稍微扭转了人物）使得轮廓发生了很大的改变<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191402141.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191402625.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311191403633.png"></li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>如果能用实体的物品来把玩，能更好地抓住这种感觉<br>尝试学会这一点，创造美妙的动作吧！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231112 - Don&#39;t Anchor Your Center Point</title>
      <link href="2023/11/12/20231112-d05/"/>
      <url>2023/11/12/20231112-d05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习摄像机的锚点设置技巧！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="D05-Don’t-Anchor-Your-Center-Point"><a href="#D05-Don’t-Anchor-Your-Center-Point" class="headerlink" title="D05 - Don’t Anchor Your Center Point"></a>D05 - Don’t Anchor Your Center Point</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121051427.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/kLmd2F8LaLk?si=30vTLM36q18xXifV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>3D 游戏中的摄像机有其所聚焦的 center point</p><ul><li>这个 center point 通常不可见，但任何有摄像机的游戏都会有这样的中心点</li></ul></li><li><p>游戏中的摄像头能环绕移动，就是因为中心点通常聚焦于角色，即中心点锚定在角色上</p><ul><li>但 [[樱井政博|樱井政博]] 说 Don’t anchor your center point to the character 的时候请相信他！<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121059557.png"></li></ul></li><li><p>以 [[Super Mario 64]] 为例</p><ul><li>角色水平方向移动时锚点几乎都在角色身上</li><li>但当角色跳跃时，锚点就与角色分离了</li><li>这在平时玩的时候可能不太感觉得出来，但仔细一看就能很明显地发现 </li><li>这是为了让玩家能够更好地感知到角色跳跃的高度<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121101973.png"></li></ul></li><li><p>[[Smash Bros. Ultimate]]<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121147981.png"></p></li><li><p>让摄像机正确地跟随能很好地提升表现力，不要浪费了这个好机会！</p></li><li><p>[[Amored Core]]</p><ul><li>移动后装甲会稍微与屏幕中心偏移，如此可以让玩家更好地看清弹道轨迹<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121153303.gif"></li></ul></li><li><p>[[Forza Horizon 5]]</p><ul><li>锚定中心点对于赛车游戏提升真实感体验很有帮助<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121157841.gif"></li></ul></li><li><p>[[Kirby Air Ride]]</p><ul><li>并没有遵循第三人称赛车游戏的惯例</li><li>在漂移时让载具与锚点轻微偏移<ul><li>如此让玩家真切感受到输入</li><li>并且使得漂移以后的冲刺让人感觉更加强烈<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121200823.gif"></li></ul></li></ul></li><li><p>卷轴类动作游戏 - [[Dead Cells]]</p><ul><li>为了给玩家提供更广阔的视野，锚点会移动到角色身前<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311121204309.gif"></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>不要假设摄像机应该总是跟随角色<ul><li>确保其符合游戏的玩法和表现</li><li>应该将此谨记于心！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PKM 在 Obsidian 上的卡片盒笔记法实践</title>
      <link href="2023/11/05/20231105-pkm-my-workflow/"/>
      <url>2023/11/05/20231105-pkm-my-workflow/</url>
      
        <content type="html"><![CDATA[<h2 id="PKM-在-Obsidian-上的卡片盒笔记法实践"><a href="#PKM-在-Obsidian-上的卡片盒笔记法实践" class="headerlink" title="PKM 在 Obsidian 上的卡片盒笔记法实践"></a>PKM 在 Obsidian 上的卡片盒笔记法实践</h2><h3 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h3><p>最近正好有机会做一次有关介绍 PKM 和个人在 Obsidian 上使用卡片盒笔记法的实践，就此做了一个相关 PPT。</p><h3 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h3><p><a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311051740873.pdf">如果下方 PDF 无法显示，可以点击此处跳转查看PDF文件</a></p><iframe src="http://docs.google.com/gview?url=https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311051740873.pdf&embedded=true" style="width:100%; height:1000px;" frameborder="0"></iframe><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>我也在 PKMer 上发布了相应文章，在 <a href="https://forum.pkmer.net/t/topic/88">与 PKM/Zettelkasten/Obsidian 的相遇相识</a> 中介绍了我如何了解到 PKM、卡片笔记法以及 Obsidian。</p><p>本文是对个人所做的 “Personal Knowledge Management - My Workflow of Zettelkasten With Obsidian” PPT 的文字转录，对我如何使用 Obsidian 践行卡片笔记法进行了介绍。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011113548.PNG"></p><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011116568.PNG"></p><p>涵盖以下内容：</p><ul><li>什么是 PKM</li><li>为什么使用 PKM</li><li>如何践行 PKM - 我如何使用 Obsidian 践行卡片笔记法</li><li>一些心得</li><li>总结</li></ul><h4 id="什么是-PKM"><a href="#什么是-PKM" class="headerlink" title="什么是 PKM"></a>什么是 PKM</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011118216.PNG"></p><p>PKM 是 Personal Knowledge Management 的缩写，即个人知识管理</p><p>这是一种将脑内分散知识结构化的方法</p><p>一些常见的方法有：</p><ul><li>文件夹系统（比如 Windows 系统的文件夹）</li><li>标签系统（比如 Mac 系统原生的标签系统）</li><li>笔记（无论是实体或是电子化笔记）</li><li>脑图（无论是实体或是电子化脑图）</li></ul><p>个人的理解是，即使你可能对 PKM 这个概念并不熟悉，但其实日常生活中你对脑中知识进行结构化的每一次尝试，都可以被视作在践行 PKM</p><h4 id="为什么关心-PKM"><a href="#为什么关心-PKM" class="headerlink" title="为什么关心 PKM"></a>为什么关心 PKM</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011123150.PNG"></p><p>总的来说，PKM 可以在下列方面有所帮助：</p><ul><li>帮助你让生活更有条理</li><li>优化你的学习效率</li><li>帮助你迸发灵感</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011143349.PNG"></p><p>与个人而言，PKM 在以下方面帮助了我：</p><ul><li><p>学术（本科阶段）</p><ul><li>Folder (with <a href="https://github.com/LearnShare/Learning-Markdown/blob/master/article/tools/cmd-markdown.md">CmdMarkdown</a>)<ul><li>最开始使用的是基于文件夹结构的 Markdown 工具 CmdMarkdown<ul><li>但是文件夹结构需要面临多份拷贝问题，即一次更改可能无法立马同步到其副本中</li></ul></li></ul></li><li>Mindmap (with <a href="https://xmind.app/">XMind</a>)<ul><li>并且辅以 XMind 来制作脑图<ul><li>但 XMind 文件过大之后使用不易</li><li>不便于建立联系（搜索、获取、引用）</li></ul></li></ul></li><li>由此便需要寻找新的工具</li></ul></li><li><p>不止于学术（硕士-至今）</p><ul><li>Zettelkasten (with <a href="https://roamresearch.com/">Roam Research</a>)<ul><li>本科毕业后那段时间开始寻找新的笔记工具，也希望不只是学术产出，希望也能对生活的方方面面进行记录<ul><li>感觉双链笔记+卡片笔记法在那时（2020 年夏天）从 Roam Research 火了起来</li><li>但因为 Roam Research 的以下原因，让我开始寻找别的工具<ul><li>付费比较高</li><li>完全摒弃了文件夹结构，不太适应</li><li>迁移不够方便</li><li>基本都是网页编辑，编辑体验不够好（可能受到网速影响）</li></ul></li></ul></li></ul></li><li>Zettelkasten (with <a href="https://obsidian.md/">Obsidian</a>)<ul><li>也是在那段时间接触到了卢曼的卡片笔记法</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011147053.PNG"></p><p>使用 Obsidian 践行卢曼卡片法的好处有：</p><ul><li>易于输入<ul><li>因为支持 markdown 语法，所以很方便</li></ul></li><li>易于存储和迁移<ul><li>文件都是本地存储，可以自选云存储方案</li></ul></li><li>容易获取<ul><li>有方便和强大的搜索插件</li></ul></li><li>体验友好<ul><li>可以使用插件和主题来进行自定义</li><li>好的心情能够更好地进行产出，《设计心理学》中对此进行过阐述</li></ul></li></ul><h4 id="如何践行-PKM-以卡片笔记法为例"><a href="#如何践行-PKM-以卡片笔记法为例" class="headerlink" title="如何践行 PKM - 以卡片笔记法为例"></a>如何践行 PKM - 以卡片笔记法为例</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011159409.PNG"></p><p>Zettelkasten 是德文的“卡片盒”</p><ul><li>是什么<ul><li>这是 Niklas Luhmann 所创建的一种 PKM 方法</li><li>他一生创建了 90000+ 卡片，发表了 58 本书，以及上百篇论文</li></ul></li><li>他的卡片盒笔记法中采用了双向链接对知识进行链接<ul><li>只有一份拷贝，所以不再担心需要同步更改的问题</li><li>并且对相关的知识进行了链接（用线将相关卡片串在一起，并且将相关卡片放在相同盒子中）</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011203441.PNG"></p><ul><li>如何使用卡片笔记法<ul><li>我是从《[[How to take smart notes]]》（中文版 《卡片笔记写作法》）学习的</li><li>其中包含了<ul><li>[[fleeting notes]] </li><li>[[literature notes]] </li><li>[[permanent notes]] </li><li>[[SlipBox]] </li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011205126.png"></p><p>一个笔记在建立的时候只需要根据这样的流程：</p><ul><li>是否有特殊的目的<ul><li>是<ul><li>插入独特标识（如时间戳 2024-0501-1206）</li><li>插入模板</li></ul></li><li>否<ul><li>直接使用 unique note creator 插件创建</li></ul></li></ul></li><li>是否是凭空得到的灵感<ul><li>是<ul><li>创建为 [[fleeting notes]] </li></ul></li><li>否<ul><li>那么应该是受到了材料的启发<ul><li>创建为 [[literature notes]] </li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011208396.PNG"></p><ul><li>使用 PKM 进行输入<ul><li>结构<ul><li>获取灵感</li><li>立马记录<ul><li>创建 [[fleeting notes]] </li></ul></li><li>逐步转化<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011216116.png"><ul><li>[[fleeting notes]] -&gt; [[literature notes]] <ul><li>添加来源</li><li>添加引用格式（比如 zotero 的标识）</li></ul></li><li>[[literature notes]] -&gt; [[permanent notes]]<ul><li>让其能够自圆其说（每个笔记都可以视为一张卡片，那么每张卡片上的内容应该能顺畅地被理解，并且语意通顺，这样就可以在撰写文章时直接引用多张卡片内容，只需进行排列及书写连接词）</li><li>添加相关的引用链接（父子关系/支持关系/反对关系等）</li></ul></li><li>[[permanent notes]] -&gt; [[SlipBox]]<ul><li>将永久笔记放入卡片盒中，方便索引</li></ul></li><li>以下是我目前所使用的模板：<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011218701.png" alt="个人目前所使用的模板"></li></ul></li><li>日常实践<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011220776.PNG"><ul><li>对于新的笔记，都加上 “ToBeArchived” 的标签</li><li>这样就可以通过 Dataview 将这些笔记都筛选出来</li><li>尝试着每天都处理一些<ul><li>但因为输入速度总是要快于输出的，所以要做到这点确实非常不容易</li></ul></li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011222630.PNG"></p><ul><li>使用 PKM 进行输出<ul><li>构建联系<ul><li>使用双链 [[]] 来链接页面</li><li>使用预览语法来链接内容 <code>![[title#section^paragraph]]</code></li></ul></li><li>输出文章<ul><li>从 slipbox 出发<ul><li>关注于 [[permanent notes]] </li></ul></li><li>不再是从零开始，而是从高质量的永久笔记开始输出</li></ul></li></ul></li></ul><h4 id="一些心得"><a href="#一些心得" class="headerlink" title="一些心得"></a>一些心得</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011225113.PNG"></p><p>让工作流顺畅起来！</p><ul><li>在 Obsidian 内<ul><li>善用插件！<ul><li>创建笔记<ul><li>可以使用 templates &amp; Unique note creator</li></ul></li><li>创建双链<ul><li>最开始可以使用个人写的 Content Linker 来快速为笔记中的内容创建双链</li><li>后期建议使用 Various Complements 来实现快速补全以提高输入效率</li></ul></li><li>搜索<ul><li>Ominisearch 插件可以快速搜索库中所有内容</li></ul></li><li>其他有用插件<ul><li>Dataview - 基于条件筛选内容</li><li>Easy Typing - 输入补全和增强（比如数字后面自动添加空格）</li><li>Enhancing Mindmap - 在 Ob 中可以快速创建脑图</li><li>Floating toc - 浮动目录</li></ul></li></ul></li><li>（使用主题和插件）让工作环境变得舒心！<ul><li>个人用的是 Blue Topaz 主题和 Style Settings 插件</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011406500.PNG"></p><ul><li>在 Ob 之外<ul><li>云端存储方案<ul><li>个人使用的是 Onedrive</li></ul></li><li>文献管理<ul><li>使用 Zotero（它也有方便的浏览器插件可以一键存入文献库中）</li></ul></li><li>图床（可以将图片以链接形式存储，减小库的大小，也便于博客使用）<ul><li>PicGo（一键上传截图） + Github（图床）</li></ul></li></ul></li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202405011409852.PNG"></p><ul><li>保持思考！</li><li>保持写作（输入+输出）！</li><li>保持迭代（工作流）！</li><li>所有的这些都只是工具，重要的是输出！</li></ul><p>感谢您的阅读，欢迎大家批评指正！ </p>]]></content>
      
      
      <categories>
          
          <category> PKM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PKM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</title>
      <link href="2023/11/05/20231105-cfgd-chap3-challenge1-bomb/"/>
      <url>2023/11/05/20231105-cfgd-chap3-challenge1-bomb/</url>
      
        <content type="html"><![CDATA[<h2 id="对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题"><a href="#对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题" class="headerlink" title="对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题"></a>对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>过往设计:</p><ul><li><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">CFGD-CHAP2-Challenge1-Path A to B-《生克之路》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">CFGD-CHAP2-Challenge2-Territorial Acquisition-《海内十洲》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">CFGD-CHAP2-Challenge3-Exploration-《灵宅救孩》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/10/08/20231008-cfgd-chap2-challenge4-collection/">CFGD-CHAP2-Challenge4-Pick it Up - 以 Collection 为核心的机制拆解</a></li></ul><p>该篇是《Challenges for Game Designers》第三章的第 1 个挑战——为百战天龙剧集设置一个和炸弹有关的谜题。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>该构想是为了解决第三章中的 Challenge 1 - It’s Da Bomb：</p><h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><ul><li>设计基于老 TV SHOW MacGyver 的游戏<ul><li>游戏中的部分故事线涉及主要角色拆弹的事件</li><li>需要设计为限时谜题<ul><li>时间太长或错误答案都会失败</li></ul></li><li>选择至少三种提到过的适合这个主题的谜题类型</li><li>选择其中最喜欢的来创作一个 prototype</li></ul></li></ul><h4 id="Components-Required"><a href="#Components-Required" class="headerlink" title="Components Required"></a>Components Required</h4><ul><li>Materials to create prototype</li><li>Kitchen timer to count down the time remaining for the player</li></ul><h4 id="Deliverable"><a href="#Deliverable" class="headerlink" title="Deliverable"></a>Deliverable</h4><ul><li>3 paragraphs and accompanying sketch, 1 per puzzle type, describing the basic mechanics of the puzzle</li><li>Playable prototype of one of the three puzzles</li></ul><h4 id="Suggested-Process"><a href="#Suggested-Process" class="headerlink" title="Suggested Process"></a>Suggested Process</h4><ol><li>Brainstorm</li></ol><ul><li>思考玩家可能的拆弹方式，寻找契合主题的谜题<ul><li>Riddles</li><li>Lateral thinking</li><li>Spatial </li><li>Logic</li><li>Exploration</li><li>Item use</li></ul></li></ul><ol start="2"><li>Choose one puzzle</li></ol><ul><li>为三种可能的谜题定义目标、机制</li><li>选择其中一个，定义<ul><li>开始状态</li><li>目标状态</li><li>正确/错误解答</li></ul></li></ul><ol start="3"><li>Playtest and iterate</li></ol><ul><li>能被解开吗</li><li>花了多久</li><li>和预期的解谜方式一样吗</li><li>根据结果进行迭代</li></ul><ol start="4"><li><p>Create deliverable</p></li><li><p>Add difficulty levels (optional)</p></li></ol><ul><li>寻找三种改变难度的方式<ul><li>除了改变时长之外的方式</li></ul></li></ul><h3 id="构思过程"><a href="#构思过程" class="headerlink" title="构思过程"></a>构思过程</h3><h4 id="对禁锢的解构"><a href="#对禁锢的解构" class="headerlink" title="对禁锢的解构"></a>对禁锢的解构</h4><p>依然贯彻先对问题进行解构的方法，先对拆弹这一行为进行抽象，其实就是对某种禁锢/桎梏的解除/破除（另一种具象表现是拆锁）。禁锢指的是某物/人被<strong>某种方式</strong>限制住了，从而无法顺利地获得该物/让该人自由行动。</p><p>由此，可以提出几个问题：1）禁锢的目标是什么；2）禁锢的种类有哪些；3）禁锢解除的方法有哪些。</p><ul><li><p>禁锢的目标</p><ul><li>实体<ul><li>角色（玩家/NPC/…）</li><li>物品（特殊物品/…）</li><li>环境（特殊地图/…）</li></ul></li><li>非实体<ul><li>能力<ul><li>数值</li><li>技能</li></ul></li><li>记忆</li><li>身份</li></ul></li></ul></li><li><p>禁锢的方式</p><ul><li>实体禁锢<ul><li>可交互的机关（炸弹/锁/门/…）</li><li>不可交互的屏障（墙/门/河/…）</li></ul></li><li>非实体禁锢<ul><li>外部封印（魔法/符咒/磁场/…）</li><li>内部扰乱（酒醉/中毒/异常精神状态/…）</li></ul></li><li>特殊禁锢<ul><li>时间（限时/时间循环/…）</li><li>空间（限定区域/鬼打墙/…）</li><li>事件（if…Then…Else…）</li></ul></li></ul></li><li><p>解除禁锢的方式</p><ul><li>常规破解<ul><li>Riddles</li><li>Lateral Thinking</li><li>Spatial Reasoning</li><li>Pattern Recognition</li><li>Logic</li><li>Exploration</li><li>Item Use</li></ul></li><li>非常规破解<ul><li>破坏</li><li>BUG</li></ul></li></ul></li></ul><p>通过组合禁锢的方式以及解除禁锢的方式，可以大致得到对应的特定类型谜题：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311051619273.png" alt="禁锢方式 X 解除禁锢的方式 = 特定谜题"></p><h4 id="对百战天龙炸弹谜题的构思"><a href="#对百战天龙炸弹谜题的构思" class="headerlink" title="对百战天龙炸弹谜题的构思"></a>对百战天龙炸弹谜题的构思</h4><p>基于前面的解构，结合了 Riddles + Pattern Recognition + Item Use 构建了一个综合谜题。</p><ul><li><p>情节背景</p><ul><li>在游戏中，玩家需要解决一个危机，一颗巨大的炸弹威胁着一个重要地点，而唯一的方法是找到并拆除它。这颗炸弹被封存在一个房间的水箱内，水箱上盖被一字母型锁锁住。</li></ul></li><li><p>谜题设置</p><ul><li>玩家进入房间后会接到敌人打来的电话，电话最后敌人会说“enjoy”</li><li>房间中一直在播放《欢乐颂》（Ode to Joy）</li><li>顶上有可打开的盖子的水箱，盖子被一个特殊锁锁住（谜底为 joy）</li><li>炸弹有两套计时器，一套为 24 小时倒数，一套为 60 秒倒数。第一套一直在运转，当玩家进入水箱中，水箱中的特殊液体溢出导致水箱中压力发生改变时，第二套计时器会开始运转。当任一计时器归零，炸弹爆炸。</li><li>炸弹一旦离开水箱中的特殊液体，倒计时会加速。停止计时的方式是以特定方式敲击（近战攻击）箱体内部，以传递“enjoy”对应的摩斯电码信息。<ul><li>水箱以特定材质制成，在外部的震动无法传入内部，但在内部通过敲击箱体可以产生震动，侧面箱体（其上画有摩斯电码的点的符号）被敲击（近战攻击）会传出高频短音（作为摩斯电码的点），箱体底部（其上画有摩斯电码的划的符号）被敲击会传出低频长音（作为摩斯电码的划）</li></ul></li></ul></li><li><p>难度调整设置</p><ul><li>元素<ul><li>房间中的音乐</li><li>房间中的陈设</li><li>水箱上盖锁的类型</li><li>水箱设置</li><li>炸弹倒计时时长</li><li>炸弹是否能被带离水箱</li><li>炸弹离开水箱后倒计时的加速程度</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311051607208.png"></p><ul><li>谜底的设置原因<ul><li>因为房间中所放音乐为欢乐颂（Ode to Joy），并且字符型锁只需要三个字符，所以谜题为 joy。 </li><li>而炸弹谜底为 enjoy 的原因有两条：<ul><li>1）en 在词源中具有“在…中”的意思，炸弹处于水箱中，而水箱的锁为 joy，即玩家处于水箱中便是 enjoy；</li><li>2）这个炸弹是敌人为了考验马盖先所设置的，谜底为 enjoy 包含了对马盖先这一对手的戏谑意味，并且在马盖先进入房间时的通话结尾，敌人其实已经透露了谜底为 “enjoy”，充满了自负。</li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>这次的设计构思花了很长时间，原因有两点：1）对禁锢机制的解构非常花时间，特别是为其寻找特定类型的现有玩法（GPT 帮了很大的忙哈哈）；2）因为是为现实题材的剧集设计谜题，所以需要考虑到特定的背景，自由度没有那么大。</p><p>总的而言，此次对于禁锢机制的拆解应该在以后也能对设计有所帮助，并且也构思出了相较而言合理的谜题，继续加油！</p><h2 id="2024-新年期间获得的反馈"><a href="#2024-新年期间获得的反馈" class="headerlink" title="2024 新年期间获得的反馈"></a>2024 新年期间获得的反馈</h2><p>今年过年回去时和朋友讲了游戏的点子，得到了一些反馈</p><ul><li>适合做小品级解密游戏，或者电影化叙事<ul><li>确实如此</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231105 - Don&#39;t Wait to Speak Your Mind</title>
      <link href="2023/11/05/20231105-e03/"/>
      <url>2023/11/05/20231105-e03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解勇敢发声的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="E03-Don’t-Wait-to-Speak-Your-Mind"><a href="#E03-Don’t-Wait-to-Speak-Your-Mind" class="headerlink" title="E03 - Don’t Wait to Speak Your Mind"></a>E03 - Don’t Wait to Speak Your Mind</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202311051331474.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/f3UjN6cCBYY?si=k-aYkMKXnxyxfDEA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>游戏开发过程中，团队成员对同一事情可能因为不同的角色背景会有不同的看法</p></li><li><p>当你对某件事情感到不快时，所该做的不应该是隐藏自己的感受，等到一切都完了的时候才说“我一直都有这个感觉”</p></li><li><p>不管你的观点是否会对事情产生影响，但如果你等到最后才说，肯定已经晚了，这样除了自我满足之外，毫无益处，既不能在开发过程中帮助到团队，也无法为项目带来价值</p></li><li><p>当你想到什么的时候，应该与团队分享</p><ul><li>玩家感到不满，他们只能抱怨，但无法决定如何修复</li><li>但作为开发组成员，你却有机会让事情变得更好<ul><li>应该让自己的想法清晰地传达给对此有话语权的团队成员</li><li>说出事情不好很简单，更好的做法是说出能让事情变得更好的解决方案</li><li>即“存在的问题-如何解决问题”应该同时被清晰表达出来</li><li>即使最终决定保留原来的设计，也应该是有保留的充分理由，而不是“大家对此都没有意见”的情况下的选择</li><li>在自己思考的过程中可能也能理解到事情为什么被如此设计</li><li>这样的设计思考能很好地提升玩家们的最终体验</li></ul></li><li>有些人可能确实不喜欢公开谈论，但至少应该让团队成员知道你的感受<ul><li>这样可能最终能使游戏变得更好</li></ul></li></ul></li><li><p>[[樱井政博]] 自己的开发过程中会设立意见板，让团队成员自由在其上发表意见</p><ul><li>樱井自己也会在上面回应，或者直接和对应的团队交流</li><li>有时候这样的流程可能会错过一些事项，但重要的是听到大家的心声</li></ul></li><li><p>如果你是作为倾听意见的一方，尽量宽容，不要太局限</p><ul><li>更广阔的视野和更深的理解能帮助你更快地找到解决方案</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231029 - Kirby Air Ride</title>
      <link href="2023/10/29/20231029-n06/"/>
      <url>2023/10/29/20231029-n06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Kirby Air Ride 诞生的故事！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N06-Kirby-Air-Ride"><a href="#N06-Kirby-Air-Ride" class="headerlink" title="N06 - Kirby Air Ride"></a>N06 - Kirby Air Ride</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291243818.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/bRDAYgRns4E?si=68TSC1pwOBxB02Y9" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>2001 年 10 月，在 [[Smash Bros. Melee]] 发售前，卡比的动画在日本上映<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291246537.png"></p></li><li><p>在当时，[[樱井政博]] 正担任卡比系列的首席导演，这也意味着当时的樱井身兼多职，也包括动画的监督</p><ul><li>此时同时也是 [[Smash Bros. Melee]] 的开发关键期，所以可以说是很严苛的要求<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291248539.png"></li><li>当时同时有好几项卡比相关的项目在进行，其中一个就是 [[Kirby Air Ride]]<ul><li>提案也是 [[樱井政博|樱井政博]] 亲自执笔的</li></ul></li></ul></li><li><p>Game’s Cocept</p><ul><li>你可能会好奇为什么将卡比变为赛车游戏<ul><li>当时其实已经有好几部相关作品在排期当中<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291258293.png"></li><li>当时需要一个与动画更加相匹配的卡比作品，[[樱井政博]] 当时觉得赛车游戏比起传统动作游戏的制作周期更短，所以就此决定制作卡比的赛车游戏<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291254295.png"></li></ul></li><li>之前其实已经讲过 [[Kirby Air Ride]] 的 [[game essence]] 了，这里会再讲一遍<ul><li>即 <a href="https://medill-east.github.io/2023/10/15/20231015-c07">C07 - Desconstruct, Analyze, and Rebuild</a> 一期中对赛车作品中的漂移元素的拆解<ul><li>当考虑赛车游戏时，我们假设漂移是有趣的<ul><li>在实际驾驶中，抓地过弯是比漂移过弯更加快速的转向方法，但漂移过弯有一种独特的乐趣——因为其提供了 [[risk and reward]]<ul><li>如果控制不好，那么就会落得撞墙的下场</li><li>但如果能成功漂移过弯，就会很爽快</li></ul></li></ul></li><li>如何让漂移变得更加有趣？<ul><li>单纯地提升漂移速度没法达到很好的效果</li><li>但在漂移时蓄积冲刺的能量，会让玩家有一种 squeeze and release 的感觉，这在 [[樱井政博|樱井政博]] 看来会让漂移的乐趣大大提升</li><li>樱井也觉得这不应变成一个追求完美的游戏——即追求将体验时长缩短<ul><li>但樱井想让设计变得更加易于享受，玩家们不会只局限于某种特定的游玩方式<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291311842.gif"></li></ul></li><li>在 City Trial 的玩法中更是如此<ul><li>玩家可以在一片广阔的沙盒区域中任意驰骋，每次都能遇到不同的加速道具和场地，使得每次体验都是独特的</li></ul></li><li>比起追求完美，游戏的一个主要设计理念是让扩展玩家的游玩方式</li></ul></li><li>[[樱井政博|樱井政博]] 也首次在游戏中引入了 checklist 的机制<ul><li>这先于 PS3 和 Xbox 引入的奖杯和成就机制</li><li>通过完成目标，玩家可以看到相邻区域的点亮条件</li><li>樱井希望通过这种方式，让玩家只是随意游玩也能获得成就感<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291341047.png"></li></ul></li></ul></li></ul></li></ul></li><li><p>需要说明的是，[[Kirby Air Ride]] 和被取消的 N64 版本的 Air Ride 没有关系，它们的 [[game essence|game essence]] 也并不相同</p><ul><li>虽然游戏之间迸发了有关什么可行什么不可行的相同的思维火花也是可能的</li><li>N64 版本的 [[game essence|game essence]] 更加契合滑雪游戏</li></ul></li><li><p>在 [[樱井政博|樱井政博]] 担任整个卡比系列的首席导演期间，他对许多作品都进行了监制</p><ul><li>但樱井尽可能地让相关的负责人来主导对应的工作</li><li>但樱井几乎参与了 [[Kirby Air Ride]] 的每一方面的设计<ul><li>特别是有关图形和音效，投入了很多让其符合“卡比”的感觉</li></ul></li></ul></li><li><p>但很可惜的是，最重要的玩法迟迟无法实现，经历了一年的委托开发后，连  Warp Star 的表现都不太好</p><ul><li>在首席程序员的直接要求之下，樱井以导演的身份回归，一起从头重构了整个游戏</li><li>他们制定了新的 specifications，仅用了三个半月就完成了 [[Kirby Air Ride]] 的开发<ul><li>听起来非常快，但要知道在当时，courses / machines 等素材都已经接近完成了</li><li>重要的是，开发团队最终和樱井一起坚持到了最后</li><li>他们当时因为之前的不顺利已经非常疲惫了，但是他们一直以来的努力才使得大家最终将作品呈现出来</li></ul></li></ul></li><li><p>值得一提的是，最终版本中，每一个 air ride 的载具都是独特的</p><ul><li>不仅仅是加速度的不同，或是过弯难度的不同</li><li>其驾驶体验也是完全不同的<ul><li>但其实大家的底层行为都是一样的<ul><li>虽然 star 和 bike 不太相同，但其他的变种都是通过参数来进行调节的</li></ul></li></ul></li><li>多亏了重构后的游戏代码，使得设计师能够通过调节参数就能带来完全不同的载具特性<ul><li>和以往一样，樱井独自设计了所有的 specs ，之后构建了所有的调节参数</li></ul></li></ul></li><li><p>即使到了现在， [[Kirby Air Ride]] 也还是一款很流行的游戏</p><ul><li>它之中有其他游戏无法找到的 [[game essence|game essence]] </li><li>即使将个人情感抛开，樱井也认为这款作品的特性是很难成功构建的</li></ul></li><li><p>如此一来，卡比的动画和 [[Kirby Air Ride]] 最终完成了<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310291407166.png"></p><ul><li>樱井的工作完成了，也从 [[HAL Laboratory]] 离开，选择开始独立创作</li></ul></li><li><p>因为樱井设计和指导了游戏开发，樱井也将 [[Kirby Air Ride]] 视为自己的创意作品之一</p><ul><li>但同时期的 [[Kirby Nightmare In Dream Land]] 和 [[Kirby Amazing Mirror]] 则不然<ul><li>特别是 [[Kirby Amazing Mirror]] ，如果没有 [[Flagship]] 的工作的话是不可能问世的</li><li>当然了，樱井还是有帮忙监制这两部作品</li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>下一次的 Game Concepts 视频会讲述和 Meteos 相关的作品</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231022 - Team Digital or Team Physical?</title>
      <link href="2023/10/22/20231022-m08/"/>
      <url>2023/10/22/20231022-m08/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解樱井偏好实体版还是数字版！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M08-Team-Digital-or-Team-Physical"><a href="#M08-Team-Digital-or-Team-Physical" class="headerlink" title="M08 - Team Digital or Team Physical?"></a>M08 - Team Digital or Team Physical?</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310221455515.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ynBcgPh8xV4?si=sj2wBRG8k9OKYlL-" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>当你购买主机游戏时，你是会买实体的还是数字版呢</p></li><li><p>实体版</p><ul><li>Pros<ul><li>永久拥有</li><li>需要更少的空间来安装</li><li>收藏价值</li><li>从评论区补充的其他好处<ul><li>借用</li><li>出售</li></ul></li></ul></li><li>Cons</li></ul></li><li><p>数字版</p><ul><li>Pros<ul><li>立即购买</li><li>永远在库中</li><li>无需去商店</li></ul></li><li>Cons</li></ul></li><li><p>樱井是数字版的坚定拥泵</p><ul><li>人们有时候会送他实体版的</li><li>但他自己购买都是数字版的<ul><li>他虽然买很多游戏，但并没有对于实体版的执念，也不会称自己是收集爱好者</li></ul></li></ul></li><li><p>在以前的公司里，樱井有一个专属的储物空间<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310221503492.png"></p></li><li><p>但自从樱井自己开公司后，想要找到一个地方来放这些东西就变得很困难了</p><ul><li>由此，樱井会尽量试着紧凑地储存这些游戏<ul><li>比如不再使用外包装而是放在一起</li><li>并且没有按照特定顺序来放置，而是按照游玩的顺序（expereince I had playing the game）<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310221505426.png"></li></ul></li></ul></li><li><p>即使如此，主机游戏的数字版仍然是很贵的</p><ul><li>实体版提供了存储介质</li><li>但即使是没有实体存储介质的数字版，价格和实体版近乎一样<ul><li>其中当然有原因，但樱井在这里不会展开详述<ul><li>可能和市场/营销原因有关</li></ul></li></ul></li><li>其实有得选还是很幸运的</li></ul></li><li><p>对于有很多游戏的玩家</p><ul><li>樱井总是想要一种方法能把这些游戏归类到文件夹中<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310221513510.png"></li></ul></li><li><p>顺带一提，书籍樱井也总是买电子版的</p><ul><li>考虑到他自己有超过 6000 本书，想想要怎么存储就很头疼</li><li>如你所见，空间很重要！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231015 - Desconstruct, Analyze, and Rebuild</title>
      <link href="2023/10/15/20231015-c07/"/>
      <url>2023/10/15/20231015-c07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何进行原创设计！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C07-Desconstruct-Analyze-and-Rebuild"><a href="#C07-Desconstruct-Analyze-and-Rebuild" class="headerlink" title="C07 - Desconstruct, Analyze, and Rebuild"></a>C07 - Desconstruct, Analyze, and Rebuild</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310151248329.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/7VD0K1Sr5u0?si=sOrU0rOi0g-LzNEp" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li>加深我们对于事物的了解是一个非常重要的过程 </li><li>如果想让你的创作变得具有原创性，仅仅拷贝别的有趣的东西是做不到的</li><li>樱井建议对“为什么一个游戏有趣”进行解构，然后将这些使其有趣的元素再创作为新的独特作品</li></ul><hr><ul><li>比如想做一个赛车竞速游戏<ul><li>追求尽可能真实的驾驶体验会使得创意空间受限</li><li>所以可以假设我们要创造更加不一样的体验（more fanciful）</li></ul></li><li>由解构（deconstructing）开始<ul><li>竞速游戏中的哪一部分使其有趣 - WHAT IS FUN<ul><li>比如，漂移<ul><li>漂移是一种特殊的过弯驾驶技术，需要让轮子逆向划过弯道</li><li>在现实中，漂移明显没有抓地行驶的速度快</li><li>但如果想要把游戏变得有趣，那么一个好的办法就是使得漂移本身变得有趣<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310151253979.png"></li></ul></li></ul></li></ul></li><li>之后对其进行分析 - analyze<ul><li>为什么玩家会觉得漂移有趣 - WHY FUN<ul><li>因为这个操作兼具风险和回报 [[push and pull]]<ul><li>如果玩家失去掌控，前方就是墙，是非常危险的情况</li><li>但如果他们很好地掌握了刹车，漂移出了漂亮的曲线，他们可以以优势进入另一边</li></ul></li></ul></li><li>怎样使得漂移更加有趣 - HOW TO MAKE IT MORE FUN<ul><li>Boost score - 仅仅只是为玩家的漂移增加分数并不是一种很直观的奖励</li><li>Boost power - 如果把永久的能力提升作为奖励，经验丰富的漂移玩家很容易就拿到了这个奖励</li><li>Boost speed - 为一次成功的漂移奖励速度，也许可行</li><li>至少需要让玩家所承担的风险感到有所回报</li></ul></li></ul></li><li>最后进行重构 - rebuild<ul><li>不是通过漂移来增加速度，而是在玩家过弯后再为玩家加速<ul><li>即不是在中途，而是在结尾进行加速<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310151346016.png"></li></ul></li><li>如何将漂移和充能结合起来呢<ul><li>即在玩家进行漂移过程中积累能量，当能量积累满之后就可以进行释放——玩家可以利用这样的机制进行快速过弯<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310151347328.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310151348336.png"></li></ul></li></ul></li><li>以上其实就是 [[Kirby Air Ride]] 机制的构思过程，这是一个你可以只用一个键就能玩的游戏<ul><li>创造的时候不仅仅只是为了让其能够脱瘾而出</li><li>而是经历了解构，分析，和重构<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310151350713.png"></li></ul></li><li>樱井个人的兴趣其实是驾驶，而不是游戏<ul><li>但其实他不会说他从驾驶的经历中得到了非常多的启发</li><li>最终，他设计的是以游戏视角来看的有趣内容</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>如果想要成功，你需要能能够在游戏中感受和实验乐趣，也需要能对一个想法进行思考和迭代<ul><li>你对这个过程练习得越多，你的理解就会越深刻</li></ul></li><li>记得！解构，分析，重构，为你的游戏带来原创性吧！</li></ul><blockquote><p>这期的确实是干货，也是目前在不断练习的一种方法，加油！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>以 Collection 为核心的机制拆解</title>
      <link href="2023/10/08/20231008-cfgd-chap2-challenge4-collection/"/>
      <url>2023/10/08/20231008-cfgd-chap2-challenge4-collection/</url>
      
        <content type="html"><![CDATA[<h2 id="以-Collection-为核心的机制拆解"><a href="#以-Collection-为核心的机制拆解" class="headerlink" title="以 Collection 为核心的机制拆解"></a>以 Collection 为核心的机制拆解</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>过往 One-page design:</p><ul><li><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">CFGD-CHAP2-Challenge1-Path A to B-《生克之路》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">CFGD-CHAP2-Challenge2-Territorial Acquisition-《海内十洲》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">CFGD-CHAP2-Challenge3-Exploration-《灵宅救孩》One-Page Design</a></li></ul><p>该篇是《Challenges for Game Designers》第二章的第 4 个挑战——以收集（Pick It Up/ Collection）为主题的游戏设计。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>既然是 Pick it up/Collection 为机制的游戏，那么首先要考虑是自然是什么是收集（Collection）。</p><p>可能需要先区分收集与获得（Obtain）。<br>收集给人的感觉是一种主动行为，而获得既可以是主动的，也可以是被动的。不严谨地讲，可以认为收集≈主动获得/获取，即将一些目标据为己有的行为。</p><p>A. 而这里提到的目标又可以被分为实体的或非实体的。</p><ul><li>可被收集的实体的目标，比如<ul><li>物品</li><li>角色</li></ul></li><li>可被收集的非实体的目标，比如<ul><li>信息</li><li>能量/经验值</li><li>情感/好感度</li><li>成就</li></ul></li></ul><p>B. 而根据目标是否具有所属性，可将收集目标的操作进行区分：</p><ul><li>如果是收集有主的目标，可能的操作形式有<ul><li>交换</li><li>借用</li><li>偷取</li><li>抢夺</li><li>掠夺（击杀后获取）</li></ul></li><li>如果是收集无主的目标，可能的操作形式有<ul><li>采集（非生物）</li><li>捕获（生物）<ul><li>无意</li><li>有意</li></ul></li></ul></li></ul><p>通过将 A X B 进行组合，便可大致得到基于收集机制的可能的游戏形态/机制（灰色涉及被动获取，橙色为没有明确想到对应的机制/例子）：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081301896.png"></p><hr><p>几番挣扎之后，没有什么非常想做的点，这里只略微叙述一下思考。</p><p>感觉比较有意思的是那些想不到现成玩法的形态（即橙色部分）。</p><p>值得一提的是，采集情感的例子也是最后才想到，其实比较适合作为破冰/喝酒游戏来构建。比如将感兴趣的问题（如 [[Arthur Aron]] 的 <a href="https://amorebeautifulquestion.com/36-questions/">36 个问题</a>、<a href="https://owlcation.com/social-sciences/quick-personality-test">立方体测试</a>等）作为路径，采用当前时间作为骰子的模数，对备选问题进行取模运算，从而得出当前需要回答的问题。参与者通过回答问题来“采集情感”——即通过互相了解来产生原本可能不存在的情感。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081216393.png" alt="Arthur Aron 的 36 个问题"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081221697.png" alt="立方体测试"></p><ul><li>借用情感和偷取情感虽然想到了类似的形式，但在游戏中貌似没有直接体会过相关的玩法（还是玩得不够多呀哈哈）</li><li>至于抢夺信息，抢夺情感，采集角色，以及成就相关的很多玩法甚至连相应的例子也想不起来了<ul><li>有一些分类可能本身不够合理，比如采集角色</li></ul></li></ul><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>总体而言，这次没有进行直接的玩法构建，但是对 Collection 相关的机制和玩法进行了拆解和思考，也不算毫无收获。</p><p>接下来进入下一章，谜题构建吧！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231008 - Flash, Blast, and Smoke</title>
      <link href="2023/10/08/20231008-h03/"/>
      <url>2023/10/08/20231008-h03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏中的爆炸特效！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="H03-Flash-Blast-and-Smoke"><a href="#H03-Flash-Blast-and-Smoke" class="headerlink" title="H03 - Flash, Blast, and Smoke"></a>H03 - Flash, Blast, and Smoke</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310080956811.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/ZDopYzDX-Jg?si=KqiVGnI7MDTNX2LK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>当创造爆炸特效时，很容易就仅仅只是让一团火焰分开而已就结束了，但真的是这样吗</p></li><li><p>1984 年有一款名为 [[Star Force (1984)]] 的街机游戏，这款游戏属于 Tecmo，它们当时的名字是 Tehkan。</p><ul><li>游戏就是不断地射击同时前进，非常累人也非常有趣，十分推荐！</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081000298.gif" alt="Star Force (1984)"></p><ul><li>游戏中的爆炸由 5 帧组成：爆炸由闪光开始，之后变为一团烟雾，而后消失<ul><li>在当时的时代，这个爆炸可谓是制作精良</li><li>你会为一个射击游戏花费如此精力在这么细节的地方感到惊讶<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081006985.gif"></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081008274.png"></p><ul><li>这是 [[Smash Bros. Ultimate|Smash Bros. Ultimate]] 里面的爆炸<ul><li>其实有很多种爆炸的变种，但它们都遵循相同的设计规则</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081011127.gif"></p><ul><li>最开始有瞬时的闪光 - flash<ul><li>快速出现的光线束立马告诉玩家有激烈的事情马上要发生了<ul><li>可以看到光线束比起爆炸范围其实要大很多</li></ul></li><li>单纯的白光可能在白色背景中很难被看出，所以要小心使用<ul><li>可以看到在这个爆炸中，还混合了一些黑色元素<ul><li>即爆炸由 shock wave 和 flare 一起组成</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081014965.png"></p><ul><li>之后是爆炸本身 - blast<ul><li>耀眼的火焰咆哮从中心跃闪而出</li><li>Blast 是爆炸的关键，所以把这部分做好很关键<ul><li>可以从图中看出其美妙和干脆利落</li><li>在边缘部分也留有余焰来保持势头</li></ul></li><li>攻击持续的时间（how long the hit registers）会根据游戏情境有所不同<ul><li>但并不会让其在整个 blast 期间都持续存在</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081022877.png"></p><ul><li>接下里是黑烟 - smoke<ul><li>虽然这个阶段还有余焰</li><li>但烟开始占据主体部分<ul><li>火焰也开始减弱</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081026432.png"></p><ul><li>最后是结束 - conclusion<ul><li>从游戏性的角度而言，其实烟立马消失会比较好，但一个较短的爆炸会看起来没有冲击力<ul><li>让爆炸自然结束，并向玩家展示其发生的过程是很重要的</li><li>樱井他们并不想把这部分直接切除以缩短这个爆炸</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081028768.png"></p><ul><li>在之前所展示的爆炸中其实还有一部分 - sparkle<ul><li>即接连闪耀的星光特效<ul><li>也可以尝试在爆炸发生时让整个屏幕都闪耀，并且为其添加一些画面震动<ul><li>画面震动会让整个爆炸的感觉都大不相同<ul><li>所以一定要使用合适的效果！</li></ul></li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081031117.png"></p><ul><li>取决于爆炸的类型，樱井他们也为地面 vs 空中的爆炸分别创作了特效<ul><li>下面展示的是来自 Young Link 的炸弹在地面和空中爆炸的效果<ul><li>当爆炸发生在地面，blast 向上冲击，shockwave 沿着地表来释放</li><li>当爆炸发生在空中，则是向四周发散</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081034259.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>爆炸有不同的类型<ul><li>比如从一个精巧炸弹中慢速，不断扩散的爆炸<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310081040581.gif"></li><li>每种爆炸都有其独特的表现形式</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20231001 - Thinking after the watching of 《Neon Genesis Evangelion》</title>
      <link href="2023/10/01/20231001-after-watching-eva/"/>
      <url>2023/10/01/20231001-after-watching-eva/</url>
      
        <content type="html"><![CDATA[<h2 id="写在看完-TV-版之后"><a href="#写在看完-TV-版之后" class="headerlink" title="写在看完 TV 版之后"></a>写在看完 TV 版之后</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309302304393.png"></p><p>借着国庆放假，两天看完了 TV 版的 EVA。</p><p>看到倒数几集的时候突然有了想写些什么的想法。</p><p>人类补完计划吗，什么是人类，补什么，怎么补，为什么补，补完之后呢… 说实话挺喜欢这种不断渐进的诘问的方式的。</p><p>好像探讨了，或者说传递了许多不同的话题。记性不好，挑些想得起来的胡言乱语一通。</p><p>对了，最开始好像是从渚薰所说的话开始有了想写的想法。有关死生一体之事。看到之后感觉各种媒介，或者说通过各种媒介传递信息的背后的人们，或多或少都会殊途同归，多多少少有所交集。对错什么的，没什么讨论的意义，但美里说的“应该让有生存意志的人活下来”，倒是有些意思。<br>于无所谓复归于无的存在而言，确实没有所谓需要，或渴望生存的欲念。那让想活的活下来，自然是未尝不可之事。</p><p>造神一事也是，哦，虽然并不算是想要造神吧，《深渊上的火》中如是。永生吗，全知全能的无上存在吗，于祇而言应该都是无可无不可？虽然人并非这么想。</p><p>其实花了不少篇幅来讲所谓“人”的存在。是符号，是关系，需要依附，需要参照，被时间、他人、变化所定义。</p><p>自由。空无一物的状态下，没有实感，束缚与实感相伴相生。</p><p>逃避。怎样都好，只做喜欢的，拒绝直面，没什么不好，但也算不得好。</p><p>孤独。不被需要。</p><hr><p>什么是人类。<br>是群聚之物，是渴望活下去的生命，是利用，是依附，是残忍，是忍。</p><p>补什么。<br>补可能性，补未知，补残缺，补阴影。<br>想起了多年前一起玩魔兽 RPG 的一个网友的网名就是“不完美的完美”。</p><p>怎么补。<br>假想，创造，混淆虚幻，无谓真实，不谓现实。</p><p>为什么补。<br>因为残缺。</p><p>补完之后呢。<br>真嗣的答案是不用补，就这样挺好。</p><hr><p>人类补完，矩阵，无限月读，多元宇宙…<br>但最终都成为了真正的勇士，仍然热爱生活吗。炽热而耀眼的希望之色。现实恐怕很难如此，但也因此被称之为奇迹。</p><hr><h2 id="写在看完剧场版之后"><a href="#写在看完剧场版之后" class="headerlink" title="写在看完剧场版之后"></a>写在看完剧场版之后</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202310012340859.png"></p><p>在看的时候有了一种感觉，剧场版不再“传递”（我愿意将其称之为“表达”，可能更加贴切），而是在“讲述”。</p><p>所谓 A.T. Field，即是心之壁，即是隔绝、分离、自我、痛苦、欢乐、世界、一切的来源。</p><p>人类补全，莫不如称之为人类还原，回到最初，回到一体，回到无所分隔。</p><p>所以其实一切的背后，还是因为那个不可名状的“爱”啊。</p><p>一切都没有意义，但一切都是意义本身的构成。时间的另一种叫法是变化，这互相离散的瞬间相连本身就是一切的源头。</p><p>存在，意义，救赎，解放，虚幻，真实… 最终都是，真切地生活。</p><hr>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230930 - Modern Quality of Life Features</title>
      <link href="2023/09/30/20230930-j03/"/>
      <url>2023/09/30/20230930-j03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏的 accessibility！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="J03-Modern-Quality-of-Life-Features"><a href="#J03-Modern-Quality-of-Life-Features" class="headerlink" title="J03 - Modern Quality of Life Features"></a>J03 - Modern Quality of Life Features</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301636663.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/j2BX4yw8Z4Y?si=lFERAvKNwgf2BNzy" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>对于比较知名的作品，尽可能地实现更好的用户体验是很重要的</p><ul><li>樱井这里专门提了 [[The Last of Us Part 1]] 中丰富的选择，确实是非常用心制作过的<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301638807.png"></li></ul></li><li><p>今天会以 [[The Last of Us Part 1|The Last of Us Part 1]] 的 PS5 版本中的选项为例</p><ul><li>该系列中繁多的可用性特性（[[accessibility]] features）真是令人大开眼界<ul><li>[[accessibility|accessibility]] 所指代的是使得游戏更加方便可玩的那些设定<ul><li>它也指代那些能够帮助身体不健全的玩家进行游玩的选项</li><li>这个游戏是一个很好的示例，所以这一集会好好一起从中学习</li></ul></li></ul></li></ul></li><li><p>首先是其详尽的子菜单</p><ul><li>这里面也涵盖了一些其他菜单中的选项，所以会有重叠的情况，但即使如此也非常令人印象深刻了<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301644497.png"></li></ul></li><li><p>接下来看一下其 magnification and visual aids 子菜单</p><ul><li>这些设定可以改变和视觉效果相关的设定（比如 [[HUD]] 的尺寸）<ul><li>[[HUD (heads-up display)]] 是会出现在游戏画面层级之上的 UI 信息<ul><li>这一选项的设定会与个人偏好以及显示器大小有关系</li><li>右方的预览窗口很好地显示了不同设定的区别，这是非常直观的<ul><li>属于精益求精的制作（quality-of-life feature within the quality-of-life features）<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301646052.png"></li></ul></li></ul></li><li>HUD 的背景亮度<ul><li>不太能看清</li><li>但可以在游戏中进行调整</li></ul></li><li>HUD 的颜色</li><li>HUD 色盲模式<ul><li>对于需要的玩家而言是很有用的</li></ul></li><li>High Contrast Display <ul><li>通过滑动 PS5 触摸板，玩家可以让环境中的友军、敌人、物品、可交互物以更显眼的颜色进行显示</li><li>这看起来非常厉害！<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301655610.png"></li></ul></li><li>Screen Magnifier<ul><li>如果将来能上架手持型设备（比如 steamdeck）会很有用<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301656918.png"></li></ul></li></ul></li></ul></li><li><p>[[motion sickness|motion sickness]] </p><ul><li>许多人应该在玩 3D 游戏的时候都经历过晕动症</li><li>通过调整这些选项，可以弱化屏幕“在移动”的感觉，从而缓解晕动症（虽然可能会让画面表现受些许影响）</li><li>永久显示一个屏幕的中心点也有助于帮助减缓晕动症</li><li>虽然可能不适用于每一个玩家，但其实也可以考虑服用晕动症相关的药物<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301657835.png"></li></ul></li><li><p>Navigation and traversal<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301703845.png"></p><ul><li>这些选项可以提供一些关于游戏进程的提示<ul><li>玩家只会观察游戏世界的一小部分，游戏越真实，就越难以读懂环境，所以这是很有帮助的</li><li>比如指向目标方向的箭头<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301701557.png"></li><li>也有“如果快要从高处摔落手柄就会震动”这样的选项</li><li>也提供了“听觉强化模式”，从而帮助你更好地定位目标<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301706967.gif"></li><li>甚至可以跳过谜题</li></ul></li><li>如你所见，这些选项对于难度会产生巨大影响</li></ul></li><li><p>Screen reader and audio cues<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301708871.png"></p><ul><li>它能帮助你用语音读出屏幕上的文字<ul><li>这也使得游戏中不仅是语音，包括其他的可见文字也能够被朗读，是很厉害的特性</li><li>虽然语音可能是 AI 生成的，但要确保所有的语音提示都是正确的也并不容易</li></ul></li><li>Cinematic Description <ul><li>会在电影镜头中用描述性的文字来描述声音（比如“雷声隆隆”？）</li></ul></li><li>Traversal Audio Cues <ul><li>即当你在游戏中靠近特定区域（可跳跃/可交互/…）时会有特殊的声音提示</li></ul></li><li>Speech to Vibrations <ul><li>将震动和音频同步呈现</li></ul></li><li>Audio Cue Glossary<ul><li>其中列出了各式各样的提示音频<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301716819.png"></li></ul></li></ul></li><li><p>Combat [[accessibility|accessibility]]<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301723393.png"></p><ul><li>所有的选项都是锁住的，它们估计都会以某种方式降低游戏难度<ul><li>一步额外的解锁能够防止玩家误操作从而使得游戏难度不小心降低</li></ul></li><li>Hostages Don’t Escape <ul><li>抓住的敌人无法逃跑</li></ul></li><li>Invisibility Toggle <ul><li>即变得隐身，如果设置为无限，几乎就是无敌的了</li><li>但游戏中有除了战斗之外的游玩风格，所以还好</li><li>这是个非常贴心的功能</li></ul></li><li>[[slow motion|slow motion]] <ul><li>也对游戏会产生很大的影响</li></ul></li></ul></li><li><p>Presets </p><ul><li>也有根据不同的侧重点而提前设置好的预设合集<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301728994.png"></li></ul></li><li><p>上面讲了那么多，但其实只是 [[accessibility|accessibility]] 菜单中的一个子菜单而已…</p></li><li><p>Controller<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301730053.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301730544.png"></p><ul><li>这是 DualSense 手柄的设置菜单</li><li>通过选择自定义，可以对其进行各种各样的调整，也可以对不同的调整进行命名和保存</li><li>甚至可以选择你的握持方式（可以反着握哈哈）<ul><li>如果不小心设置错了可能会被搞得晕头转向哦</li></ul></li><li>也可以交换左右摇杆的功能<ul><li>应该有不少玩家会喜欢这个设定</li></ul></li><li>重新设定按键的时候需要长按<ul><li>这样就可以利用短按来退出设定</li></ul></li><li>也会显示未绑定的按键<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301734458.png"></li><li>里面有各种各样的设定<ul><li>要想把这些都整合起来一定费了不少功夫</li></ul></li></ul></li><li><p>也有专属于 DualSense 的设定<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301736212.png"></p><ul><li>其中也有电影镜头时的震动选项<ul><li>如果游戏中有比较长的电影镜头，震动特性的开关是很有用的<ul><li>你可能也经历过把手柄放在桌子上，但它突然在电影镜头播放时震动起来的情况吧</li></ul></li></ul></li></ul></li><li><p>也可以对 [[HUD|HUD]] 进行许多专门的调整<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301739077.png"></p><ul><li>比如准星形状等</li></ul></li><li><p>Subtitles<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301741622.png"></p><ul><li>即字幕选项</li><li>开启人名其实可以很好地帮助玩家记住谁是谁，但可能会让其变得更难以阅读</li><li>也可以显示声音的来源方向</li></ul></li><li><p>Display<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301743897.png"></p><ul><li>渲染模式可以选择不同的图形性能<ul><li>许多人可能都会选择质量模式</li></ul></li></ul></li><li><p>Audio<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309301746212.png"></p><ul><li>通常而言最上面的四个就是最常见的音频选项了</li><li>由于有各种各样的 [[accessibility|accessibility]] 选项，所以也有许多相关的音频选项出现在这里</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>早期的任天堂产品坚持使用无法重新映射的固定控制方案还是有一定价值的</li><li>但如今的控制器不再如早期那么简单，玩家群体也更加丰富多样，所以让他们来决定想要如何游玩还是很有必要的</li><li>[[The Last of Us Part 1|The Last of Us Part 1]] 将这个问题处理得非常好<ul><li>樱井也相信在未来可以看到更多这样的作品出现</li></ul></li><li>即使你只选出那些对你有用的特性，这部游戏也肯定能提供宝贵的经验让你借鉴！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《灵宅救孩》One-Page Design</title>
      <link href="2023/09/24/20230924-cfgd-chap2-challenge3-exploration/"/>
      <url>2023/09/24/20230924-cfgd-chap2-challenge3-exploration/</url>
      
        <content type="html"><![CDATA[<h2 id="《灵宅救孩》One-Page-Design"><a href="#《灵宅救孩》One-Page-Design" class="headerlink" title="《灵宅救孩》One-Page Design"></a>《灵宅救孩》One-Page Design</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309241628894.png"></p><h2 id="《灵宅救孩》构思复盘"><a href="#《灵宅救孩》构思复盘" class="headerlink" title="《灵宅救孩》构思复盘"></a>《灵宅救孩》构思复盘</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>过往 One-page design:</p><ul><li><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">CFGD-CHAP2-Challenge1-Path A to B-《生克之路》One-Page Design</a></li><li><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">CFGD-CHAP2-Challenge2-Territorial Acquisition-《海内十洲》One-Page Design</a></li></ul><p>该篇是《Challenges for Game Designers》第二章的第 3 个挑战——以探索（Exploration）为主题的游戏设计。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>该构想是为了解决第二章中的 Challenge 3 - Exploration：</p><ul><li>玩家人数<ul><li>2-4</li></ul></li><li>Gameplay dynamic<ul><li>Exploration</li><li>即探索</li></ul></li><li>需要决定的<ul><li>Theme</li><li>Game bits</li><li>Mechanics</li></ul></li><li>Deliverable<ul><li>Board-game prototype</li><li>Card-game prototype</li><li>Tile-based-game prototype</li></ul></li><li>Suggested process<ul><li>Determine a theme and a goal</li><li>Identify mechanics</li><li>Identify the conflict between players</li><li>Playtest</li><li>Create deliverable</li></ul></li></ul><h3 id="构思过程"><a href="#构思过程" class="headerlink" title="构思过程"></a>构思过程</h3><p>这次的构思过程和前两次稍有区别。第一个主题是 Path A to B，第二个主题是 Territorial Acquisition，相较这次的主题 Exploration 而言，前两次的主题都更加直观和易于理解。</p><p>最开始在寻找以探索为核心的游戏过程中受到朋友提醒，去看了看火人（firewatch）和见证者（witness）的通关视频（见最后部分的 reference），然后有了以下思考：</p><p>设计以探索（exploration）作为核心玩法的游戏，需要考虑探索（Exploration）和下面两个概念之间的关系：移动（move）和尝试（attempt）。</p><ul><li><p>探索 vs. 移动<br>移动是一种操作，可以视为玩家能够探索的前提；而探索是移动之后的行为，可以看做移动的后续结果。<br>是否存在不依赖于移动操作的探索行为？<br>存在，即解密/探案游戏，如《Clue》、《Her Story》等。</p></li><li><p>探索 vs. 尝试<br>二者都是对未知结果的某种所求。探索可能没有很强的结果预设性，但尝试可能有。</p></li></ul><p>基于以上思考，对以探索元素为主或和探索相关的游戏大概可以分为下面这些类别：</p><ul><li>对于非实体答案的逼近探索<ul><li>故事的揭示（发生过什么）<ul><li>叙事推进<ul><li>MMO/AVG/RPG/走路模拟器</li><li>密室逃脱（其实也可以视为一种 RPG/AVG）</li><li>谜题游戏<ul><li>如海龟汤（不断逼近答案的一种边界条件探索）</li><li>如侦探游戏（不断接近真相）</li></ul></li></ul></li></ul></li><li>可能性的揭示（行为有什么结果）<ul><li>不同配装思路的结果<ul><li>MMO/RPG</li></ul></li><li>PUZZLE<ul><li>即解开谜题的结果</li></ul></li></ul></li></ul></li><li>对于实体内容的揭示<ul><li>元素/内容的揭示（一个地方有什么东西）<ul><li>如恐怖游戏转角处的内容</li><li>可交互物的内容</li></ul></li></ul></li><li>对于实体空间的揭示探索<ul><li>地图探索（有什么地方/前方是什么）<ul><li>密室逃脱/MAZE</li><li>MMO/AVG/RPG</li><li>战争迷雾的驱散（RTS）</li></ul></li></ul></li></ul><p>后面就是常规的构思过程，即先确定主题/目标，而后确定机制，之后定义玩家冲突…</p><h5 id="Theme-and-Goal"><a href="#Theme-and-Goal" class="headerlink" title="Theme and Goal"></a>Theme and Goal</h5><ul><li>思考过程<ul><li>最开始是从偏向实体空间的解释探索角度开始思考的，即战争迷雾的不是总是可见的感觉</li><li>由此延伸出了对手电筒打光感觉的联想</li><li>最终联想到阴宅救孩这一主题（环境未知+战争迷雾）</li></ul></li><li>最终主题<ul><li>阴宅救孩</li></ul></li><li>目标<ul><li>六回合后看当前孩的情况<ul><li>未被救出，则灵获胜</li><li>被救出，则人获胜<ul><li>按理来说应该所有人+孩都一起逃离才算人获胜<h5 id="Mechanics"><a href="#Mechanics" class="headerlink" title="Mechanics"></a>Mechanics</h5></li></ul></li></ul></li></ul></li></ul><p>见图。</p><h5 id="Conflicts-between-players"><a href="#Conflicts-between-players" class="headerlink" title="Conflicts between players"></a>Conflicts between players</h5><ul><li>获胜目标冲突<ul><li>仅有一方可取胜</li></ul></li></ul><h3 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h3><p>因为采用 One-Page Design 的目的就是为了让尽可能多地信息能够不言自明地包含在图中，这里只从体验、目标、路径、挑战四个方面对游戏进行简要说明：</p><h4 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h4><p>即期望玩家在游玩时获得的情感体验</p><ul><li>灵<ul><li>力量增强时（戌亥）带人远离的博弈</li><li>凶时（子丑）主动出击的刺激</li><li>力量减弱时（寅卯）阻挠人的博弈</li><li>人不知道位置时的窃喜</li></ul></li><li>人<ul><li>探索未知的紧张</li><li>分离的不安</li><li>灵的位置和操作未知的迷茫感</li><li>突然发现灵暴露了位置信息的惊喜感</li><li>携带人质想要逃离的急切</li></ul></li><li>双方<ul><li>力量随时间的变化感<h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4>即游戏的结束条件</li></ul></li><li>目标<ul><li>六回合后看当前孩的情况<ul><li>未被救出，则灵获胜</li><li>被救出，则人获胜<ul><li>按理来说应该所有人+孩都一起逃离才算人获胜<h4 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h4>即玩家达到目标的手段<br>见图中“玩家每轮操作”。<h4 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h4>即玩家在实现目标的路径中可能碰到的障碍</li></ul></li></ul></li></ul></li><li>灵<ul><li>玩家干扰<ul><li>需要理解人所要采取的策略，才能制定更加具有针对性的防守策略</li></ul></li></ul></li><li>人<ul><li>未知性干扰<ul><li>环境（局部）未知</li><li>孩的位置未知</li></ul></li><li>玩家干扰<ul><li>即灵的位置和操作未知</li></ul></li></ul></li></ul><h3 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h3><p>在构建中途想到了结合天黑请闭眼的玩法，使得人的操作明牌，而灵的操作对人不可见，符合叙事的同时增强了“未知感”。</p><h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>此外在回看最开始想要达成的预期体验时，发现最终的设计中对原本预期体验中人“单独面对敌人的无助、一起面对敌人的策略感”被替换为了“灵的位置未知的迷茫感、突然发现灵暴露了位置信息的惊喜感”。现在来看是一种更好地实现探索感的方式。</p><p>本来还想实现的预期体验还有“时与位契合则能够增强力量”，有点担心玩家同时要考虑的因素过多了（也因为懒了哈哈…），最终没有加入。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>抛开设计产出不谈，此次练习中更有意义的可能是对于探索（exploration）这一元素本身在游戏中的运用方式的思考，在后续练习中应该继续进行这样的思考！</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://www.youtube.com/watch?v=wD2VahDfRbQ">看火人 Firewatch 全流程攻略 地图中文 麋鹿草场 鲁比河 探索山洞洞穴深处 钥匙</a></li><li><a href="https://www.youtube.com/watch?v=nXqBLYuvFyk">100% Game Walkthrough - The Witness All 523 Puzzles + 135 Environmental Puzzles + 49 Audio Logs</a></li></ul><h2 id="2024-新年期间获得的反馈"><a href="#2024-新年期间获得的反馈" class="headerlink" title="2024 新年期间获得的反馈"></a>2024 新年期间获得的反馈</h2><p>今年过年回去时和朋友讲了游戏的点子，得到了一些反馈</p><ul><li>有一种[[桌游《箱女》]]的感觉<ul><li>虽然在设计的时候没有想到，但被点出来之后确实如此，确实是旁观者清…</li></ul></li><li>可以增强策略性、对抗性，引入更多的变化<ul><li>比如人类信息只能条件共享（比如处于同一房间）</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-OnePageDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230924 - Listen in Various Environments</title>
      <link href="2023/09/24/20230924-i03/"/>
      <url>2023/09/24/20230924-i03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解在不同环境中验证声音的重要性！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="I03-Listen-in-Various-Environments"><a href="#I03-Listen-in-Various-Environments" class="headerlink" title="I03 - Listen in Various Environments"></a>I03 - Listen in Various Environments</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309241055360.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/WUy4lTUhj80?si=MxzWVp5u0lr_XtYI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>在进行声音检查时，樱井总是确保在不同的环境中聆听和比较它们</p><ul><li>首先是耳机</li><li>然后 PC 扬声器</li><li>还有可能是最重要的 便宜电视</li></ul></li><li><p>电视扬声器一般更小，导致更低频的声调可能会丢失，导致音效没有那么好的表现力</p><ul><li>但实际上这可能是大多数玩家最多采用的设备</li></ul></li><li><p>使用具有很好隔音效果的 studio 和扬声器系统来使得声音被做得恰到好处是很重要的</p><ul><li>但如果你过于关注，或是只在这个最佳环境中来听音效，可能会有“音效在大多数玩家的日常扬声器设备上不可听”的风险</li></ul></li><li><p>设置不同的声音设备，针对每种设备来解决特定问题——是一个艰巨的过程，但确是不得不做的</p><ul><li>这可能让你不得不从特定的专业设备环境中抽离出来——这确实令人沮丧——但思考玩家们实际的游玩场景下的音效表现是非常重要的</li></ul></li><li><p>顺便一提，一旦开始像这样检查声音，购买新的耳机就是一个困难了</p><ul><li>一旦设备改变，就会很难和以前已经检查过的声音保持同样的听觉感受</li><li>当然了，考虑 NS 内置的扬声器也有必要，但它们的检查优先级没有那么高<ul><li>NS 的扬声器会发出清脆、清晰的声音，但遗憾的是，有好多玩家在手持模式下游玩时会不开声音</li></ul></li></ul></li><li><p>如果太过关注 sound tuning，可能会偏离 creative vision</p><ul><li>所以在不同设备环境中找到一个平衡是很重要的</li></ul></li><li><p>另外，樱井推荐不要仅使用大型 studio 的扬声器来做最终的声音确认</p></li><li><p>还有一个题外话</p><ul><li>Smash Bros. 中什么声音给制作带来了最大的困难呢？<ul><li>是 Ryu 的打击音效<ul><li>有人可能会说模拟他在原本游戏中的音效就好了</li><li>但樱井他们也想捕捉这些声音在人们游玩街机时所听到的感觉<ul><li>这是一个需要很多精心实验和试错的过程</li></ul></li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230917 - Sora Ltd</title>
      <link href="2023/09/17/20230917-m07/"/>
      <url>2023/09/17/20230917-m07/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解樱井的公司 Sora Ltd.！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M07-Sora-Ltd"><a href="#M07-Sora-Ltd" class="headerlink" title="M07 - Sora Ltd."></a>M07 - Sora Ltd.</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309171044930.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/VVhGCtCNGHg?si=xNicwmuxfK7-aTd7" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li>这一集会谈一谈樱井自己的公司 Sora</li><li>由于 2006 年日本引入了有限公司的相关法律，原有公司需要发生变化<ul><li>但樱井出于有趣的考虑，倾向于维持原样（opted to remain one anyway），反正也没有打算要出售股票什么的</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309171046108.png"></p><ul><li>所以樱井就创建了 Sora Ltd. 来帮助他更好地与其他公司进行交涉合作<ul><li>公司基本没有雇用任何游戏开发的相关职员（也没有要招人的打算！）</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309171050391.png"></p><ul><li><p>通常，独立制作者们会创建公司，并且雇用一些雇员来进行游戏开发、</p><ul><li>但之后，创作者可能就会被公司管理/薪水管理/…的事物缠身，从而没有精力再做最重要的事情——创作游戏</li></ul></li><li><p>樱井自己觉得成为某种游离的导演（wandering director）会比较有趣，他也确实是这么做的</p><ul><li>樱井在作为独立制作人时，通常是与多家公司进行合作<ul><li>也就是说是以特定时间出现在某公司工作，就像真的在该公司上班一样</li><li>当开始某个项目的指导工作后，一般就会专注于该项目的生产<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309171056304.png"></li></ul></li></ul></li><li><p>至于重要的收入问题</p><ul><li>和公司的合同中通常规定了在开发过程中樱井不会收到薪水<ul><li>樱井直到游戏完成，发售，获得收入之前都不会获得报酬</li><li>然后收入是基于游戏销量来定的</li><li>公司其实在游戏实际发售盈利前是没有任何利润的，樱井通过这种方式来与公司分摊风险</li><li>虽然不知道会不会一直采用这种方式，也许应该具体情况具体分析，但从目前的情况而言，还是能顺利赚到钱的！</li></ul></li><li>如果游戏失败了，樱井会落得颗粒无收的下场<ul><li>虽然樱井可能无法为其失败负责</li><li>是一个高风险的工作</li></ul></li><li>外部的合同工（不用一直在内部工作），通常是每月获得一定的开发费用<ul><li>这从税收角度而言是有利的</li><li>并且也有利于让公司留住员工</li></ul></li></ul></li><li><p>樱井创建 Sora 来处理合同事宜，也不雇佣/接受咨询</p><ul><li>所以，请不要给我们发送简历了~</li><li>确实有一段时间想过要不要有更多的雇员，但樱井倾向于用别的方法来处理对应的问题</li></ul></li><li><p>樱井也想过要不要扩大规模，做成全规格的工作室，但樱井还是更喜欢这种小而精，尽在掌握的感觉！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《海内十洲》One-Page Design</title>
      <link href="2023/09/03/20230903-ten-continents-in-the-sea/"/>
      <url>2023/09/03/20230903-ten-continents-in-the-sea/</url>
      
        <content type="html"><![CDATA[<h2 id="《海内十洲》One-Page-Design"><a href="#《海内十洲》One-Page-Design" class="headerlink" title="《海内十洲》One-Page Design"></a>《海内十洲》One-Page Design</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031513973.png"></p><h2 id="《海内十洲》构思复盘"><a href="#《海内十洲》构思复盘" class="headerlink" title="《海内十洲》构思复盘"></a>《海内十洲》构思复盘</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>上接<a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">《生克之路》One-Page Design</a>。<br>该篇是《Challenges for Game Designers》第二章的第二个挑战——以地块占领为主题的游戏设计。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>该构想是为了解决第二章中的 Challenge 2 - Territorial acquisition：</p><ul><li>玩家人数<ul><li>2-4</li></ul></li><li>Gameplay dynamic<ul><li>Territorial acquisition</li><li>即地块占领</li></ul></li><li>需要决定的<ul><li>Theme</li><li>Game bits</li><li>Mechanics</li></ul></li><li>Deliverable<ul><li>Board-game prototype</li><li>Card-game prototype</li><li>Tile-based-game prototype</li></ul></li><li>Suggested process<ul><li>Determine a theme and a goal</li><li>Identify mechanics</li><li>Identify the conflict between players</li><li>Playtest</li><li>Create deliverable</li></ul></li></ul><h3 id="构思过程"><a href="#构思过程" class="headerlink" title="构思过程"></a>构思过程</h3><p>构思过程大致遵循了书中所给出的建议，即先确定主题/目标，而后确定机制，之后定义玩家冲突…</p><p>下面是当时的构思过程：</p><h5 id="Theme-and-Goal"><a href="#Theme-and-Goal" class="headerlink" title="Theme and Goal"></a>Theme and Goal</h5><ul><li>思考过程<ul><li>既然是地块占领，那么主题就决定了这个“地”是什么</li><li>最开始想的其实是从山海经取材，但一番搜寻后略感庞杂</li><li>之后又着眼于洞天福地，最终选定了《海内十洲记》作为主题背景，原因如下<ul><li>地块数量不那么多，可以让玩家有更多的交互机会</li><li>各个地块上本就有一定的背景故事，易于机制建立</li><li>受到了徐福东渡日本寻求丹药相关内容的启发</li></ul></li></ul></li><li>最终主题<ul><li>基于海内十洲记背景的地块占领</li></ul></li><li>目标<ul><li>六回合后比较 1）玩家占领的地块数量；2）若是地块数量相同，则比较手中的资源总数<h5 id="Mechanics"><a href="#Mechanics" class="headerlink" title="Mechanics"></a>Mechanics</h5></li></ul></li><li>游玩机制<ul><li>开局随机决定顺序、季节</li><li>玩家行动</li><li>资源结算</li><li>季节更替，所处位置对应资源+1</li><li>风水轮流转</li><li>循环</li></ul></li><li>资源机制<ul><li>每位玩家开局资源固定（五行各 3个）</li><li>木火土金水生克关系<ul><li>木生火，火生土，土生金，金生水，水生木</li></ul></li><li>岛上存在五行守护灵，需根据克制关系来压制，之后能根据克制关系每回合产出对应资源<ul><li>共存在五种生克关系，即“被生、被克、克、生、同”，根据生克表规划出资源生灭表<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031458592.png"></li><li>在不探的情况下若成功克制，则当局可获资源加倍</li></ul></li><li>若同一岛上有多方势力，则派出数量多的具有结算权，原因如下<ul><li>易于结算</li><li>其他的思路比如后来者具有后置结算权<ul><li>但这会导致后来者具有优势，不利于玩家针对同一地块进行争抢</li></ul></li></ul></li></ul></li><li>玩家行动<ul><li>免费<ul><li>观<ul><li>可投骰子决定当前风向（先天八卦）<ul><li>随风向走，则可移动距离翻倍</li><li>逆风向走，则可移动距离减半</li></ul></li></ul></li></ul></li><li>2/3<ul><li>行<ul><li>可投骰子决定移动步数上限</li></ul></li><li>探<ul><li>可查看当前地块情况</li></ul></li><li>令<ul><li>可对资源进行部署<h5 id="Conflicts-between-players"><a href="#Conflicts-between-players" class="headerlink" title="Conflicts between players"></a>Conflicts between players</h5></li></ul></li></ul></li></ul></li><li>地块总量有限</li><li>手中资源有限<ul><li>所以需要制定占领策略</li></ul></li><li>回合数量有限<ul><li>所以需要抓住机会</li></ul></li></ul><h3 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h3><p>因为采用 One-Page Design 的目的就是为了让尽可能多地信息能够不言自明地包含在图中，这里只从目标、路径、挑战、体验四个方面对游戏进行简要说明：</p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>即游戏的结束条件<br>六回合后比较 1）玩家占领的地块数量；2）若是地块数量相同，则比较手中的资源总数 </p><h4 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h4><p>即玩家达到目标的手段<br>玩家可进行的操作有：</p><ul><li>免费<ul><li>观<ul><li>即投骰子决定该局的风向<ul><li>若是顺风，则可移动上限加倍</li><li>若是逆风，则可移动上限减半</li><li>其他方向不受影响</li></ul></li></ul></li></ul></li><li>三选二<ul><li>行<ul><li>投骰子决定可移动上限，并在上限范围内选定方向进行移动</li></ul></li><li>探<ul><li>可获取当前地块的情况</li></ul></li><li>令<ul><li>可基于手中资源进行部署<h4 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h4>即玩家在实现目标的路径中可能碰到的障碍</li></ul></li></ul></li><li>随机性干扰（即骰子结果）<ul><li>每局的风向由骰子决定</li><li>每局可移动上限由骰子决定</li></ul></li><li>玩家干扰<ul><li>若是有玩家后手到达并进行了更多数量的部署，则需要返回此地才有机会夺回<h4 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h4>即期望玩家在游玩时获得的情感体验</li></ul></li><li>Positive<ul><li>领会生克关系的乐趣</li><li>探索和前进的掌控感</li><li>不进行探索，直接放手一搏的惊险</li><li>根据探索结果进行布局的策略感</li><li>发现炎洲不仅近，而且资源多的惊喜</li><li>不想让已经占领的地块信息泄露（特别是炎洲）的担心</li><li>获胜的快乐</li></ul></li><li>Negative<ul><li>被随机性打乱的恼人</li><li>被其他玩家后手登岛布局的无可奈何和急切</li></ul></li><li>Non-Binary<ul><li>与玩家交互博弈的复杂情绪</li><li>对待骰子决定随机风向的无可奈何，但仍能自己决定该前往何处的主动性</li></ul></li></ul><h3 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h3><p>有关资源分布和游戏中的距离的设定：</p><ul><li>大致参考了《海内十洲记》中各岛相对陆地的距离</li><li>再以瀛洲作为标准（因为其最远，参考距离为 70 万里，所以设定其游戏距离为 12，即需要两个 6 才能到达）</li><li>再结合 <a href="https://medill-east.github.io/2022/09/17/20220917-risk-and-rewards/">Risk and Rewards</a> 中提到的 Push and Pull，给予瀛洲最多的守护灵（即潜在最丰富的奖励）</li><li>守护灵的设定参考了《海内十洲记》中对于各岛特点的描述，但最终基于数量平衡做了调整</li><li>炎洲算是个例外，其距离很近，但是资源数量很多<ul><li>其一是因为从《海内十洲记》中的描述而言，炎洲确实是最合适分配火属性守护灵的岛</li><li>其二是因为没有其他岛合适分配火属性守护灵了</li><li>其三是这样的设定使得此处变为必争之地</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031536269.png"></p><p>游戏的创意还受到了最近另两位 GD 关于地块占领游戏的影响和启发：</p><ul><li>“探”的设定为整体基调蒙上了一层不确定性，而且因为加入了“不探则有机会收益加倍”的设定，增强了“获取本地情况”这一操作 Push and Pull 的感觉</li></ul><p>游玩时需要配合规则记录表，方便进行每局的资源结算<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031538552.png"></p><h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>如今的版本中虽然仍不存在道具/效果卡，但经过对生克之路的几次迭代后，感觉其实加入道具/效果卡是一种“偷懒”的做法，其目的是在核心循环不够坚实的情况下引入随机性/对抗随机性的手段。</p><p>并不是说道具/效果卡不重要，但是在思考过程中，更应该注重的是创造更加坚实（solid）的核心循环，这才是进行设计训练的重点。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>这次的生克机制直接复用了 <a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">《生克之路》One-Page Design</a> 中的五行生克，算是偷懒，但是也确实提高了设计效率。</p><p>且在设计过程中感叹传统文化中可供解构运用的元素实然丰富，要善加运用！</p><h2 id="2024-新年期间获得的反馈"><a href="#2024-新年期间获得的反馈" class="headerlink" title="2024 新年期间获得的反馈"></a>2024 新年期间获得的反馈</h2><p>今年过年回去时和朋友讲了游戏的点子，得到了一些反馈</p><ul><li>有点像是带战斗/对抗元素的大富翁<ul><li>虽然在设计的时候没有太往这个方向想，但被提出来之后确实如此</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-OnePageDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230903 -  Prep Your Proposals Hot and Fast</title>
      <link href="2023/09/03/20230903-a06/"/>
      <url>2023/09/03/20230903-a06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习撰写游戏提案的要点！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A06-Prep-Your-Proposals-Hot-and-Fast"><a href="#A06-Prep-Your-Proposals-Hot-and-Fast" class="headerlink" title="A06 - Prep Your Proposals Hot and Fast"></a>A06 - Prep Your Proposals Hot and Fast</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031230370.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/1cFrEoiziDA?si=UCBPT7TOf_7tDWPo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li><p>在上一期 Work Ethic 视频中，樱井介绍了自己用来做提案的格式</p></li><li><p>这一期，樱井想对如何完成提案的一个重要的点进行讨论</p></li><li><p>即—— When Writing Proposals, Don’t Drag Things Out!</p><ul><li>写提案时，不要拖泥带水！<ul><li>好东西是不需要絮絮叨叨进行论述的</li><li>一旦做好提纲，并且分点列述了重点后，直接把它们放到 pre 中<ul><li>当然了，要想做好这一点，需要提前准备</li></ul></li></ul></li></ul></li><li><p>如何提前准备？</p><ul><li>要谨慎地将想法分为主题和次级主题<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031236591.png"></li></ul></li><li>无论写什么，都要让其保持简洁，用标题和图像帮助读者快速理解内容<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031237847.png"></li><li>没有必要一直执着于强调对于游戏的宏大愿景，毕竟你也不会有这样的机会为玩家们进行详尽解释</li><li>关键在于所讲的内容应该一直是有趣的！<ul><li>去除不必要的图像/研究/Plan B</li><li>只包括所需要的内容，尽你所能地用简单的方式把它讲清楚</li><li>这不意味着页数少就是好的，重要的是每一页中只包含恰当的信息量</li></ul></li></ul></li><li>在你还有很强的动力的时候就应该立马着手写提案，不要低估了这份热情所带来的动量！<ul><li>The longer you let it sit, the less fresh it’ll be<ul><li>其实也就是一鼓作气，再而衰，三而竭的道理</li></ul></li><li>这是樱井建议在做提案时应该有的态度</li></ul></li></ul></li><li><p>撰写提案是一个艰难的工作，因为这需要展示一个游戏为何有趣</p><ul><li>然而，总会出现提案中没有包含游戏最终的核心元素的情况<ul><li>比如，如果设想一下 Monster Hunter 的提案阶段<ul><li>这是一个有关猎捕怪物，并且用它们的材料来制作装备的游戏<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031246314.png"></li></ul></li><li>在这个阶段，这个想法听起来没什么新颖的</li><li>在樱井的想象中，这份提案中只出现了几个游戏中最好的亮点</li></ul></li></ul></li><li>也就是说，打磨游戏让其变得有趣也是很重要的</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>只有现有了提案，才有可能制作一个游戏</li><li>为了让提供资源（人力、财力）的对方有“我们一定要做这个”的想法，尝试让提案变得简洁、易于理解、充满能量！</li><li>如果提案被拒绝了，不要自我安慰说是对方没有品味，毕竟，展示你的游戏的样貌是你作为演讲者的责任</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230827 - The Potential of One Button</title>
      <link href="2023/08/27/20230827-c06/"/>
      <url>2023/08/27/20230827-c06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解一个按键可以做什么玩法！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C06-The-Potential-of-One-Button"><a href="#C06-The-Potential-of-One-Button" class="headerlink" title="C06 - The Potential of One Button"></a>C06 - The Potential of One Button</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271053122.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/tafG03n89MY?si=pQholyIe5VQlxwRv" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li>制作只使用一个按键来游玩的游戏也是可能的<ul><li>实际上，樱井在 [[Kirby’s Adventure]] 和 [[Kirby Super Star]] 中都制作了只需要使用一个按键的 minigame</li></ul></li><li>只需要使用一个按键的游戏大致可以分为以下四类<ul><li>Rapid tapping</li><li>Timing-based</li><li>Reaction-based</li><li>Alternating</li></ul></li></ul><h3 id="Rapid-Tapping"><a href="#Rapid-Tapping" class="headerlink" title="Rapid Tapping"></a>Rapid Tapping</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271056779.png"></p><ul><li>这类游戏测试玩家在短时间内能以多高的频率进行按键<ul><li>自然地，玩家会很擅长这类游戏</li><li>并且因为很容易感到累，这类游戏已经逐渐不再流行</li></ul></li></ul><h3 id="Timing-Based"><a href="#Timing-Based" class="headerlink" title="Timing-Based"></a>Timing-Based</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271101292.png"></p><ul><li>这类游戏需要你在特定时机进行按键<ul><li>比如 Crane Fever（抓娃娃机）<ul><li>你需要在抓手在特定位置时再放开按键，使其能够抓住目标</li></ul></li><li>比如 Megaton Punch<ul><li>虽然视觉提示不太一样，但其实机制类似</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271101648.png" alt="Crane Fever"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271105000.gif" alt="Megaton Punch"></p><h3 id="Reaction-based"><a href="#Reaction-based" class="headerlink" title="Reaction-based"></a>Reaction-based</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271106128.png"></p><ul><li>一旦收到信号，就需要尽可能快地按下按键<ul><li>比如 Quick Draw 就是此类游戏</li><li>这类游戏是对反射神经（reflexes）的考察，但其实也允许 [[push and pull]]，因为玩家们有可能会用假动作来迷惑对方或是假戏真做<ul><li>比如用嘴发出 “Kah!” 的声音来吓对方提前按键之类的</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271128534.gif" alt="Quick Draw"></p><h3 id="Alternating"><a href="#Alternating" class="headerlink" title="Alternating"></a>Alternating</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271133109.png"></p><ul><li>这类游戏围绕何时长按/何时释放来进行<ul><li>比如 Egg Catcher<ul><li>需要在蛋过来时长按以张开嘴巴接住</li><li>需要在炸弹过来时放开按键以躲避炸弹</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308271141472.gif" alt="Egg Catcher"></p><ul><li>如果只是需要长按的游戏可能也能做，但那样可能不太好找到 [[game essence]]<ul><li>近来，越来越多的游戏采用了“长按以进行交互”的方式来进行按键确认</li></ul></li><li>如你所见，一个按键也可以做很多事情！<ul><li>想象一下如果可以将那个按键与其他控制配合使用的场景！</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>无论设计了什么，重要的是让操作与玩法契合。<br>不要仅仅只是因为可以添加，就无端添加更多的特性！而是更多考虑这个添加会被玩家如何感知！<br>最简单的办法通常是玩起来最舒服的那个。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220826 - Obsidian Content Linker 插件开发回顾</title>
      <link href="2023/08/26/20230826-obsidian-content-linker-plugin-development-review/"/>
      <url>2023/08/26/20230826-obsidian-content-linker-plugin-development-review/</url>
      
        <content type="html"><![CDATA[<h2 id="开发-Content-Linker-插件"><a href="#开发-Content-Linker-插件" class="headerlink" title="开发 Content-Linker 插件"></a>开发 Content-Linker 插件</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>在结合 Obsidian 使用卡片笔记法过程中其实存在一个痛点——需要手动添加双链。这个看似简单的操作在面对以往的大量笔记时变得异常困难。</p><p>当然了，这里提到的并非严格遵循随记 -&gt; 文献笔记 -&gt; 永久笔记（详见 <a href="https://medill-east.github.io/2023/08/26/20230826-how-i-know-and-practice-pkm/">与 PKM 的相识和实践</a>中 <code>双链和卢曼卡片法</code> 部分）这样的转化过程中的双链添加场景，而是面对以往很多未添加过双链的笔记时感到头疼的情况。</p><p>在尝试搜寻目前的插件市场后发现了以下插件：</p><ul><li><a href="https://github.com/AlexW00/obsidian-note-linker">Note Linker</a><ul><li>该插件按理来说和我的需求已经很接近了，但在使用过程中发现其好像无法处理太大量的数据<ul><li>搜索一次库中内容差不多要 5 分钟</li><li>而且在尝试勾选相关内容时出现了无法忍受的卡顿（估计也是数据量太大导致的）</li></ul></li></ul></li><li><a href="https://github.com/tadashi-aikawa/obsidian-various-complements-plugin">Various Complements</a><ul><li>该插件可以基于库中已有内容进行快速补全，但前提是已经构建过相关双链</li></ul></li><li><a href="https://github.com/hadynz/obsidian-sidekick">Sidekick</a> <ul><li>该插件还未上线插件商店</li><li>该插件可用于在输入过程中很快发现已输入内容中潜在的双链，但前提是已经构建过相关双链</li></ul></li><li>官方的 Outgoing links 功能<ul><li>这个是官方提供的核心功能之一，可以发现其他笔记中与该页面同名的，还未添加双链的内容</li></ul></li></ul><p>如上所说，Note Linker 不适用于大量笔记的场景，而 Various Complements 和 Sidekick 虽然可以配合使用来在写作过程中快速构建双链，但前提是相关双链已经存在。而 Outgoing links 针对的是编写完之后的场景，而且只能寻找与当前页面标题同名的内容，场景有限。</p><p>没办法，那就只能自己动手，丰衣足食了。</p><h3 id="强大的-CodeGPT"><a href="#强大的-CodeGPT" class="headerlink" title="强大的 CodeGPT"></a>强大的 CodeGPT</h3><p>其实为过往库中的大量文件添加潜在双链的需求早就存在，为什么现在终于被提上日程了呢？——一是因为抽出时间学 Typescript 然后从头构建感觉太花时间；二是得益于强大的 CodeGPT。</p><p>近来，以 ChatGPT 领衔的一众 AI 工具已经在各个领域展现了不俗的能力。又因为我的需求是非常明确的，所以就动起了“能不能让 AI 来写这个插件”的心。没想到还真就做成了。</p><h3 id="AI-炼丹"><a href="#AI-炼丹" class="headerlink" title="AI 炼丹"></a>AI 炼丹</h3><p>一开始当然还是得过一遍插件开发教程。这里也感谢 @luhaifeng666 大佬翻译的<a href="https://luhaifeng666.github.io/obsidian-plugin-docs-zh/">中文版开发教程</a> 。</p><p>过完之后就正式开始“炼丹了”。</p><p>工具是 <a href="https://code.visualstudio.com/">Visual Studio Code</a> + <a href="https://marketplace.visualstudio.com/items?itemName=DanielSanMedium.dscodegpt">CodeGPT</a>。</p><p>在 <a href="https://medill-east.github.io/2023/07/09/20230709-chatgpt-prompt-engineering-for-developers/">20220709 - ChatGPT Prompt Engineering for Developers</a> 一文中，已经提过了应该为 AI 预设身份，使其做出更有针对性的回答的办法。</p><p>所以最开始的 prompt 其实是这样的：</p><pre class="line-numbers language-none"><code class="language-none">你是一位出色的 obsidian 插件开发者。现在想为 Obsidian 开发一款新的插件 Content Linker，以便能让用户能够为库中的已有内容添加双链。需要实现的功能如下： 1. 需要能够索引库中的所有内容 2. 需要根据索引结果筛选出可能被新建的“双链”列表 3. 可以让用户从 2. 的结果中的列表中选择想要新建的双链关键词 4. 根据 3. 中用户所选结果为对应内容建立双链 请问我该怎么做<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后来经过多轮迭代，最终是类似下面的形式：</p><pre class="line-numbers language-none"><code class="language-none">你是一位出色的 obsidian 插件开发者。现在想为 Obsidian 开发一款新的插件 Content Linker，以便能让用户能够为库中的已有内容添加双链。请逐条分析所选代码是否能实现以下功能，如果不能，请分析原因并给出修正后的完整代码：1. 该插件应该可以通过在编辑窗口中调用函数，或是在设置页面中点击“Search Possible Bi-Directional Link in Vault” 按钮来搜索库中已有的所有内容； 2. 该插件应该有一个单独的设置页面；3. 基于 1. 的搜索结果，存储库中所有重复出现过的内容，并且这些内容不双链形式，那么就将这些内容作为潜在的双链关键字。完成后给出弹窗提示“Search Finished!”；4. 将 2. 中存储的结果中重复次数从高到低的前 n 个结果以列表形式呈现在该插件的设置页面中。在设置页面中添加一个名为&quot;Option Count&quot;的只能输入数字的输入框和名为“Update”的按钮，根据用户在输入框所输入的数字作为列表中可显示的选项数量（即 n 的数量）；5. 基于前面的回答，将 4.的结果以一个四列的列表形式呈现在该插件的设置页面中。每一个潜在的双链关键字即列表中的一个选项。第一列为序号，第二列为该潜在双链关键字在库中重复出现的次数，第三列为该潜在双链关键字，第四列为当前该选项的选择情况。6. 当用户点击设置页面中的 “Update Bi-Link For Selected Options” 按钮后，遍历 5. 中用户所选择的所有选项，并将其所选内容在原文位置中替换为双链形式； 7. 该插件的设置页面中应该有一个单独的名为“Ignored Content List”的列表。该列表有四列，第一列为序号，第二列为该潜在双链关键字在库中重复出现的次数，第三列为该潜在双链关键字，第四列为当前该选项的选择情况。8. 当用户点击设置页面中的“Ignore Selected Option(s)”按钮后，遍历 5. 中用户所选择的所有选项，将这些选项从潜在双链关键字列表中排除，并将这些选项加入 Ignored Content List，并在 Ignored Content List 中显示。对 Ignored Content List 中的内容根据其第二列的 Count 数量进行倒序排列。9. 当用户点击设置页面中的“Remove From Ignored Content List”按钮时，遍历 7. 中所选的所有选项，并将这些选项重新加入潜在双链关键字列表。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="一些炼丹体悟"><a href="#一些炼丹体悟" class="headerlink" title="一些炼丹体悟"></a>一些炼丹体悟</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308262031879.png"></p><ul><li><p>记得调整 Model</p><ul><li><code>gpt-3.5-turbo-16k</code> 是比较好的，既因为其表现稳定，也因为其上下文长度足够长</li></ul></li><li><p>一定要记得调整 Max Tokens</p><ul><li>不然就会出现回答到一半停下来的情况</li></ul></li><li><p>Query Language</p><ul><li>最好还是设成和 Prompt 相同的语言</li></ul></li><li><p>Temperature</p><ul><li>可以理解为 0 是异常严格，近乎死板地执行要求，1 为具有创意地理解需求并提出解决方案</li><li>从实验结果来看 0.1~0.2 之间能够提供最好的回答</li></ul></li><li><p>若是一次性给出的需求过多，那么它的回答就只会给出框架</p><ul><li>所以一开始可以先构建一个功能，在确认实现之后再构建下一个</li></ul></li><li><p>给出太具体的实现方案有时候反而效果不好</p><ul><li>即有时候如果给它列举了对应的技术框架，最终它的回答会过于局限于框架本身，而忽略插件整体的实现，最终导致结果不太理想</li></ul></li><li><p>为了多给 AI 一些思考时间，尝试让其逐条分析功能是否已经实现</p><ul><li>但有时候这样它也无法很精确地分析到有 bug 的情况，这种时候可能只能人工调试 bug 了</li></ul></li><li><p>也可以让其对代码进行整体分析</p><ul><li>这样有时 AI 能给出一些原本可能没有注意到的优化方案</li></ul></li><li><p>在得到可运行版本后记得及时存档哈哈</p></li><li><p>有时候会出现无法解决的 bug</p><ul><li>比如同时存在 bugA 和 bugB，让其一起解决，它可能会解决了 bugA 然后忽略 bugB，或者反过来。有时候甚至还会继续引入新的 bug…</li><li>这种时候一般只能人工调试了</li><li>还有一个办法是去 ChatGPT 那里单开一个窗口，针对这个具体问题进行询问，有时候也能解决</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>插件的代码加完注释共有 545 行，可以说 95%，甚至 99%以上的代码都是由 CodeGPT 自己完成的。我在其中发挥的功能主要是针对它错误给出的方案进行人工调试，并对结果进行测试，然后根据测试结果进行迭代。</p><p>整体而言，非常震撼。要知道我之前是没有接触过 Typescript 的，虽然是 JavaScript 的某种变体，可读性上来说很不错，但是我也就是能看懂，但具体要以什么语法调用什么 API 是毫无头绪的。CodeGPT 的能力可见一斑。</p><p>当然了，并不是毫无问题。除了上面炼丹体悟中提到的一些问题之外，目前的 CodeGPT 因为受制于 <code>gpt-3.5-turbo-16k</code>，应该无法联网，且上下文长度有限。估计大概 700 行左右就是能输出的极限长度了。但这些问题，都可以随着模型的更新而被解决。</p><p>未来可期。</p><h3 id="插件页面"><a href="#插件页面" class="headerlink" title="插件页面"></a>插件页面</h3><p>目前 <a href="https://github.com/Medill-East/obsidian-content-linker">Content Linker 插件的 Github 页面</a> 已经算是更新完了，也已经提了 Pull request，不知能否顺利加入官方插件库哈哈。</p><h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>已经上架官方插件库。</p><hr><h2 id="指令小记"><a href="#指令小记" class="headerlink" title="指令小记"></a>指令小记</h2><p><a href="https://luhaifeng666.github.io/obsidian-plugin-docs-zh/zh2.0/publishing/release-your-plugin-with-github-actions.html">使用 GitHub Actions 发布您的插件</a></p><h5 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h5><ul><li>进入插件文件夹后<pre class="line-numbers language-none"><code class="language-none">npm run dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h5 id="插件发布"><a href="#插件发布" class="headerlink" title="插件发布"></a>插件发布</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202404041134759.png"></p><ul><li>提交更改<pre class="line-numbers language-none"><code class="language-none">git commit -m &quot;feat: Add settings&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置更新版本<pre class="line-numbers language-none"><code class="language-none">npm run release# Release as minornpm run release -- --release-as minor# Release as majornpm run release -- --release-as major# Release as patchnpm run release -- --release-as patch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>发布<pre class="line-numbers language-none"><code class="language-none">git push --follow-tags origin master &amp;&amp; npm publish<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> PKM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PKM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220826 - 与 PKM 的相识和实践</title>
      <link href="2023/08/26/20230826-how-i-know-and-practice-pkm/"/>
      <url>2023/08/26/20230826-how-i-know-and-practice-pkm/</url>
      
        <content type="html"><![CDATA[<h2 id="WHY"><a href="#WHY" class="headerlink" title="WHY"></a>WHY</h2><p>虽然起因是想回顾一下为 Obsidian 开发 Content Linker 插件的过程，但一想也可以顺便回顾一下和 Obsidian 结缘的过程，以及这些年来和 PKM 有关的思考。</p><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><h3 id="如何方便快捷地进行记录并统一留存管理？"><a href="#如何方便快捷地进行记录并统一留存管理？" class="headerlink" title="如何方便快捷地进行记录并统一留存管理？"></a>如何方便快捷地进行记录并统一留存管理？</h3><p>16~17 年左右刚上大学时有了想把记过的东西留下来的想法，所以开始寻求电子化方案。<br>那时学生会的前辈正好让我们了解到了 markdown（MD） 这一标记语言，遂喜而用之。</p><p>新的问题在于如何统一管理。<br>MD 的编辑器多种多样，当时几番挑选后选择了 Cmd Markdown（即作业部落）。看中的就是可以以文件夹结构统一管理，及其实时渲染的功能。</p><p>至此，问题暂时解决了。</p><blockquote><p>题外话</p><p>当时为了能够方便地实现云存储，当时还为 Cmd Markdown 充过两年的会员。后来发现相关 repository 上所提的问题越来越多，但作者貌似已经久不更新了。如今一看好像已经打不开了？几年前记得还看过作者发的一些声明说好像忙于其他项目去了…<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308261155830.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308261156882.png"></p></blockquote><h3 id="如何对已经看过的文献（及要点）进行统一管理？"><a href="#如何对已经看过的文献（及要点）进行统一管理？" class="headerlink" title="如何对已经看过的文献（及要点）进行统一管理？"></a>如何对已经看过的文献（及要点）进行统一管理？</h3><p>18 年后开始接触科研，新的需求出现了：看过的文献/要点该如何方便地管理？</p><p>这里面涉及几方面的需求：</p><ol><li>方便地存储</li><li>可快速查询记录的要点</li><li>可与文献关联查找</li></ol><p>为什么仅靠 markdown 不够用了呢？<br>因为无法方便地与文献 PDF 关联，也无法直观感受不同文献之间的联系。即大纲结构或是文件夹结构没有办法很好地如网状结构般展现关联性。（但当时还不太清楚网状结构的构建方法）</p><p>基于这样的需求，当时采用了 XMind 作为文献管理工具。</p><p>刚开始文献数量较低的时候还行，可以很清楚地看到各文献之间的联系（基本可以算作三类关系 Support/Against/Related），但随着文献增多之后，新的问题出现了：</p><ul><li>表的结构太大导致软件运行卡顿<ul><li>包括了新增内容、搜索内容、查看内容等各方面</li><li>卡顿会导致用户体验极差</li></ul></li><li>同一文献可能在多处出现，此时可能需要在多个地方进行拷贝（后来知道了其实这是文件夹结构的通病）</li><li>由于数据量增大，导致搜索变得愈加困难（需要回忆相关的关键字/词来搜索）</li></ul><p>问题存在，但无空解决，直至本科毕业。</p><p>当时由于一些私事需要长时间待在医院，那时动起了打磨工具流的心思，直至现在。</p><p>当时也想到，除了文献之外，值得记录的事情还有很多。不仅是文献有被联系的需求，其实生活也是。</p><h3 id="如何让过往的经历（阅读-观影-体验…）有意义地留存并联系起来？"><a href="#如何让过往的经历（阅读-观影-体验…）有意义地留存并联系起来？" class="headerlink" title="如何让过往的经历（阅读/观影/体验…）有意义地留存并联系起来？"></a>如何让过往的经历（阅读/观影/体验…）有意义地留存并联系起来？</h3><p>看过的书、看过的电影、各种资料、各种体验，这些几乎涵盖了生活中所谓“有意义”的大部分时间，但很多都成了过眼云烟，埋藏在记忆深处，好像从未存在过。</p><p>当时就在想，经历过的时间除了留下切身的体会之外，还有没有别的形式能够被留存、甚至被联系起来呢?</p><p>学术+生活两方面的留存+联系需求最终导向了 PKM（Personal Knowledge Management ）。</p><h2 id="PKM"><a href="#PKM" class="headerlink" title="PKM"></a>PKM</h2><p>在我的理解中，PKM 是一种将个人知识结构化、体系化的方式。即将个人的所知、所思、所感都外化为文字进行统一管理。其实更常见的一种形式是企业知识库，让员工能不断取之用之壮大之。</p><p>另一个相关的说法是第二大脑，即一个人的个人知识库，理论上可视为这个人的某种化身。目前的 <a href="https://github.com/brianpetro/obsidian-smart-connections">smart connection</a> 插件有这个潜力，即结合 AI 来对库中内容进行分析。但这是题外话了，先按下不表。</p><h3 id="双链与卢曼卡片法"><a href="#双链与卢曼卡片法" class="headerlink" title="双链与卢曼卡片法"></a>双链与卢曼卡片法</h3><p>2020 年的夏天，由 <a href="https://roamresearch.com/">Roam Research</a> 领衔，在笔记圈刮起了“双链”之风。恰逢当时需要为 PKM 选择合适的软件，算是正当其时。</p><p>双链（bi-directional link）这一概念起源于一位德国的社会学家尼古拉斯·卢曼（Niklas Luhmann）。卢曼依靠其卡片笔记法（Zettelkasten），一生著作等身（50 本专著、600 篇论文和 150 份未完成的手稿），甚至在其去世后，后人还能根据其遗留的手稿继续成书。以下内容引用自 <a href="https://zettelkasten.de/introduction/zh/#%E8%BD%AF%E4%BB%B6%E9%80%89%E6%8B%A9">Zettelkasten</a> ：</p><blockquote><p>尼克拉斯-卢曼是一位高产的社会学家，他出版了50本专著和600篇论文。他的生产力不是已发表的作品能够体现的，他的遗产中还有150份未完成的手稿，其中一份稿件的长度甚至超过1000页。当然，这些成就不是他一个人的取得的，他还有一位得力的伙伴——Zettelkasten。</p><p>卢曼曾说，他的生产力源自于他与卡片盒笔记系统的合作。践行卡片盒笔记法 的人对此一定很有共鸣。卢曼的卡片盒笔记系统是记有笔记的纸质小卡片的集合，但是这些卡片被做了一点点改变：它们是<strong>超文本</strong>。利用超文本的笔记，卢曼能够以合理的时间和精力浏览抽屉柜中的所有存放笔记卡片。但是，“合理”二字仅对卢曼而言，他痴迷于社会学理论，是一个精力十足的工作狂。</p><blockquote><p>译者注：超文本中的文字包含有可以连接到其他字段或者文档的超链接，允许从当前阅读位置直接切换到超链接所指向的文字。—— <a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC">超文本 - 维基百科，自由的百科全书</a></p></blockquote><p>超文本的内在属性要求它可以通过链接从一段文字跳转到链接所指向的另一段文字。在维基百科上的某个页面下，你只需点击页面中的一个链接，就可以进入新的页面。如果超文本不是网页而是纸质的卡片，则需要付出更多的精力来跟随(follow)一个链接进入新的卡片。另外，你还需要一个入口，这个入口类似于维基百科的搜索框。卢曼创造了他的 Zettelkasten，并设计了进入卡片盒笔记系统的入口和一整套方法论，这让它他能够以一种高效的方式从一条笔记冲浪到另一条笔记。</p></blockquote><p>何为卡片笔记法？以下是我的个人理解：</p><p>简言之，即将笔记大致分为四类：<br>1）随记（Fleeting Notes）；<br>2）文献笔记（Literatuer Notes）；<br>3）永久笔记（Permenant Notes）；<br>4）结构笔记（Structure Notes）。</p><p>笔记需要经历迭代以从随记最终变为永久笔记。</p><ul><li>随记<ul><li>其要点是需要用自己的话来描述所思的内容</li><li>除此之外便没有任何所谓格式上/形式上的要求，只要能记下来，记在哪里都可以</li></ul></li><li>文献笔记<ul><li>在随记的基础之上，需要为其添加出处/来源，即该随记是如何产生的/受到了什么启发？</li><li>被转化为文献笔记的随记便可以被废弃</li></ul></li><li>永久笔记<ul><li>在文献笔记的基础上，需要做以下几件事<ul><li>每一条永久笔记应该有唯一的标识符<ul><li>便于寻找</li><li>这样可以观察到思路/想法的迭代过程</li></ul></li><li>需要将其中的内容进行整理，使得该永久笔记的内容是不言自明（self-explanatory）的<ul><li>即不需要借助任何其他外部材料，单独看一条永久笔记，要能够理解内容的表意</li></ul></li><li>需要为其构建与其他永久笔记的联系<ul><li>比如支持该观点的有哪些，反对该观点的有哪些，与之平行相关的又有哪些</li><li>卢曼基于其唯一标识符的迭代+在物理空间摆放到同一位置（即卡片盒中）来实现这一过程<ul><li>在电子化介质中，双链的作用就是实现内容之间的链接</li></ul></li></ul></li></ul></li><li>每一条完成的永久笔记即是一张卡片盒中的卡片</li></ul></li><li>结构笔记<ul><li>若将卡片盒视为一本书，可将结构笔记视为书的目录</li><li>结构笔记作为卡片盒的索引存在，通过结构笔记可以快速找到与一个话题相关的笔记簇</li></ul></li></ul><p>由此完成了内容的积累。</p><p>要进行内容的输出时，你就不再是从头开始，而是基于你根据相关概念建立的一系列卡片。你所做的便是对这一堆卡片中的内容进行排列组合，并在不同的卡片内容间添加适合的连接词。</p><hr><p>卡片法舍弃了传统的文件夹结构，基于更细的粒度——知识/观点来构建思维之网（web of thoughts），从而以网状结构来实现 PKM。</p><h3 id="Obsidian"><a href="#Obsidian" class="headerlink" title="Obsidian"></a>Obsidian</h3><p>既然已经有了道（构建思维之网）和术（卡片笔记法），那么便需要合适的器来实践。</p><p>如前所说，双链之风由  <a href="https://roamresearch.com/">Roam Research</a> （RR）带起，但在实践过程中发现了一些不适应的点：</p><ul><li>RR 的界面是基于大纲格式的，并且可以说完全摒弃了文件夹形式<ul><li>在日常使用中其实文件夹存储方式仍有可取之处，比如 <a href="https://fortelabs.com/blog/para/">PARA</a> 方法</li></ul></li><li>其收费不菲</li></ul><p>所以在想是否存在另一款软件可以更好地满足需求呢？——这便是和 Obsidian 结缘的契机。</p><p><a href="https://obsidian.md/">Obsidian</a> 是一款支持 markdown 编辑的笔记软件。一些特点如下：</p><ul><li>它既支持传统文件夹结构，也可以方便地通过 [[]] 来建立双链</li><li>Obsidian 的插件生态非常好，有很多开发者为其开发各式各样的插件</li><li>个人使用免费</li></ul><p>看起来是非常完美的器，遂用之至今。</p><h3 id="工具流的建立"><a href="#工具流的建立" class="headerlink" title="工具流的建立"></a>工具流的建立</h3><p>PKM 的实践中其实包含了很多细节，以下是一些个人工作流，仅供参考：</p><ul><li>内容存储<ul><li>Obsidian</li></ul></li><li>文献库<ul><li>Zotero</li></ul></li><li>图床<ul><li>Github</li></ul></li><li>图床工具<ul><li>PicGo</li></ul></li><li>同步方案<ul><li>Onedrive</li></ul></li></ul><p>日常使用过程中，通过 Obsidian 进行内容积累，转化过程中将相关文献存储到 Zotero 中，基于 Zotero 的 Citation Key 来构建笔记库与文献库的联系。</p><p>在记录过程中若是有添加图片/附件等需求，借助 PicGo 将文件一键上传到 Github 上，在库中只保存对应文件的超链接形式。因为 Obsidian 实现了 Markdown 的实时渲染，所以图片在库中是可以直接预览的。</p><p>需要的话，也可以结合 iPad + Zotero 来方便地进行阅读和同步。但近来论文型的材料看得比较少，这个方法最近使用频率较低。</p><h2 id="开发-Content-Linker-插件"><a href="#开发-Content-Linker-插件" class="headerlink" title="开发 Content-Linker 插件"></a>开发 Content-Linker 插件</h2><p>这个其实才是最开始想写这篇文章的原因，但写到这里感觉可以分篇来写了哈哈。</p><p>详见</p><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><ul><li>卡片笔记法相关<ul><li><a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&__biz=MzI1NTA4Nzk5Mw==&scene=1&album_id=1464601583634939905&from=groupmessage%23wechat_redirect&uin=&key=&devicetype=Windows+10+x64&version=63090621&lang=zh_CN&ascene=0">《会记笔记就会写作》完全版</a></li><li><a href="https://zettelkasten.de/introduction/zh/#%E8%BD%AF%E4%BB%B6%E9%80%89%E6%8B%A9">卢曼卡片盒笔记法介绍 (Introduction to the Zettelkasten Method)</a></li><li><a href="https://blog.jimmylv.info/2020-06-03-zettelkasten-in-action/">基于 Obsidian 的 Zettelkasten 卡片盒笔记法实践</a></li></ul></li><li>Zotero 相关<ul><li>Zotfile + onedrive - 同步方案<ul><li><a href="https://www.shiyanjia.com/knowledge/articleinfo-2926.html">https://www.shiyanjia.com/knowledge/articleinfo-2926.html</a></li></ul></li><li>Zotfile - 同步插件<ul><li><a href="https://github.com/jlegewie/zotfile/releases">https://github.com/jlegewie/zotfile/releases</a></li></ul></li><li>Zotero scihub - 下载文献<ul><li><a href="https://github.com/ethanwillis/zotero-scihub/releases">https://github.com/ethanwillis/zotero-scihub/releases</a></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> PKM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PKM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230820 - Jobs in Game Development</title>
      <link href="2023/08/20/20230820-e02/"/>
      <url>2023/08/20/20230820-e02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏业界中的不同岗位！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="E02-Jobs-in-Game-Development"><a href="#E02-Jobs-in-Game-Development" class="headerlink" title="E02 - Jobs in Game Development"></a>E02 - Jobs in Game Development</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201340333.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/Hk2npGxEQRo?si=tezNs7WVTtiqp2pk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li>游戏开发团队中有些什么样的工作岗位呢？<ul><li>对于已经身在业内的从业者而言，这是很基础的日常话题，但其实这并不是每个人都知道的事</li><li>并且不同的游戏品类和内容会有很大的岗位差异</li><li>樱井会在这里和大家分享一下以往他制作的游戏中所涉及到的岗位</li></ul></li></ul><h3 id="Director"><a href="#Director" class="headerlink" title="Director"></a>Director</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201344575.png"></p><ul><li>即游戏导演<ul><li>即樱井本人的工作岗位</li><li>别的组织不太好讲，但一般而言一个团队中就只有一个游戏导演</li><li>游戏导演提出和强化（consolidates）关于游戏的想法，并且几乎为所有事情拍板</li><li>它们监督游戏的方方面面，并且在必要的时候做出调整</li><li>如果导演也同时构想游戏的愿景，他们也会被成为游戏设计师（game designer）</li></ul></li></ul><h3 id="Planner-Game-Designers"><a href="#Planner-Game-Designers" class="headerlink" title="Planner / Game Designers"></a>Planner / Game Designers</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201349118.png"></p><ul><li>即策划/游戏设计师<ul><li>简言之，他们会将导演的想法转化为设计文档，并交付给团队</li><li>这些文档也会被称为 spec sheets （参数表）<ul><li>包含了游戏该如何被编程/制作的详细信息</li></ul></li><li>策划拥有不同的职责，并且几乎会参与到游戏的所有环节<ul><li>管理团队</li><li>平衡玩法</li><li>监管测试</li><li>有时也会在 code 之外的地方编写程序脚本</li></ul></li></ul></li></ul><h3 id="Programmer"><a href="#Programmer" class="headerlink" title="Programmer"></a>Programmer</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201353419.png"></p><ul><li>即程序<ul><li>程序们编写让游戏得以运行的代码</li><li>他们的工作是将 spec sheets 转化为计算机可以理解的指令</li><li>可以说是程序们将其他团队成员做的游戏的方方面面整合到了一起</li><li>电脑并不总是如我们所期望地那般进行<ul><li>所以这份工作需要耐心和灵活性</li></ul></li></ul></li></ul><h3 id="Modeler"><a href="#Modeler" class="headerlink" title="Modeler"></a>Modeler</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201356697.png"></p><ul><li>即模型师<ul><li>更具体地说应该是 3D 模型艺术家，但这个视频中采用了概括性的说法</li><li>模型师们采用图形工具中的多边形来创造物体</li><li>Model 可以有很多指代<ul><li>角色</li><li>舞台和场景</li><li>敌人</li><li>物件</li><li>…</li></ul></li><li>团队中会有很多模型师，但每个人的工作内容可能千差万别</li></ul></li></ul><h3 id="Artist"><a href="#Artist" class="headerlink" title="Artist"></a>Artist</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201358678.png"></p><ul><li>即概念原画<ul><li>艺术家们创造 2D 艺术作品<ul><li>比如斗士的示意图</li></ul></li><li>2D 艺术家们和 3D 模型艺术家们的技能集不太一样<ul><li>有一些人也能够同时具有两个岗位所要求的技能</li><li>所以这两个岗位之间的分界有些模糊</li></ul></li></ul></li></ul><h3 id="Animator"><a href="#Animator" class="headerlink" title="Animator"></a>Animator</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201401220.png"></p><ul><li>即动画师<ul><li>动画师们创作能让模型动起来的动画</li><li>这份工作不仅仅只是创造“真实”的移动<ul><li>动画也需要夸张、多样化、潇洒的造型等</li><li>以及服务于游戏目标的移动风格</li><li>这取决于品类，但是动画团队通常非常大</li><li>同时也有角色绑骨师来为动画创造骨骼</li></ul></li></ul></li></ul><h3 id="Effect-Designer"><a href="#Effect-Designer" class="headerlink" title="Effect Designer"></a>Effect Designer</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201405679.png"></p><ul><li>即视觉艺术家 VFX<ul><li>效果设计师负责屏幕上的视觉效果<ul><li>冲刺云、极大效果、刀刃轨迹、火焰、光效以及其他屏幕上出现的效果</li></ul></li><li>所有的效果都需要被设计得具有冲击力和可信度</li><li>这个职业要求的动画敏感度和其他艺术家职位略微不同</li></ul></li></ul><h3 id="Sound-Designer"><a href="#Sound-Designer" class="headerlink" title="Sound Designer"></a>Sound Designer</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201408059.png"></p><ul><li>即声音艺术家<ul><li>这个工种大概可以分为三类<ul><li>音乐<ul><li>负责为游玩时听到的音乐编曲</li></ul></li><li>音效<ul><li>创造效果音、脚步声、环境音等</li></ul></li><li>语音 voice<ul><li>监制管理声优们的配音工作</li><li>之后为录音片段进行剪辑以及后处理</li></ul></li></ul></li></ul></li></ul><h3 id="UI-Designer"><a href="#UI-Designer" class="headerlink" title="UI Designer"></a>UI Designer</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201412266.png"></p><ul><li>即 UI - user interface<ul><li>他们负责创造游戏中的界面</li><li>这个团队中包含了策划、艺术家、程序等人员<ul><li>但他们各自的目标和在其他团队中的同等岗位的人员很不一样</li></ul></li></ul></li></ul><h3 id="Technical-Operations"><a href="#Technical-Operations" class="headerlink" title="Technical Operations"></a>Technical Operations</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201416801.png"></p><ul><li>技术运营（应该也算是 QA 团队）<ul><li>他们管理服务器，维护开发环境，也会帮其他团队成员解决遇到的技术问题 </li><li>虽然玩家不能直接感受到他们对于游戏的贡献，但他们是不可或缺的！</li></ul></li></ul><h3 id="Manager"><a href="#Manager" class="headerlink" title="Manager"></a>Manager</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201435861.png"></p><ul><li>管理员团队（类似 PM+HR 团队）<ul><li>任何与“让团队顺利运行”相关的工作都和他们有关</li><li>工作包括<ul><li>排期</li><li>发现并解决开发停滞问题</li><li>人员分配</li><li>确认成员们遵守公司章程</li><li>其他支援工作<ul><li>办公室维护保养</li><li>硬件采购等</li></ul></li></ul></li></ul></li></ul><h3 id="Play-Tester"><a href="#Play-Tester" class="headerlink" title="Play Tester"></a>Play Tester</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201439887.png"></p><ul><li>即测试人员<ul><li>他们会大量测试游戏，并指出其中的问题或需要调整的地方</li><li>他们所提出的问题会被策划团队仔细考虑</li><li>特别是对于有对抗性的游戏，play testers 需要相应的游玩水平以及毅力来持续游玩</li></ul></li></ul><h3 id="Bug-Tester"><a href="#Bug-Tester" class="headerlink" title="Bug Tester"></a>Bug Tester</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201442815.png"></p><ul><li>即传统 QC<ul><li>他们也需要和 playtester 一样进行大量游玩，但他们的重点是寻找 bug</li><li>他们会产出如何重现一个 bug 的报告，然后由管理团队来将 bug 交给合适的团队以解决 bug</li></ul></li></ul><h3 id="Footage-Specialist"><a href="#Footage-Specialist" class="headerlink" title="Footage Specialist"></a>Footage Specialist</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308201444481.png"></p><ul><li><p>即脚本专员</p><ul><li>独立于测试团队，樱井团队中也有专门负责为斗士的登场等情境录制视频的人员</li><li>因为引擎内的脚本是由团队成员来完成的，樱井也希望能够为 [[Smash Bros. Ultimate]] 来创作一些非常高质量的电影镜头<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3></li></ul></li><li><p>业界中也包括 PR，销售，以及其他的生产岗位，但一些不会被视为开发团队的一员，所以这里就先按下不表</p></li><li><p>许多生产团队也会被分为更小的团队，比如角色、场景等，但这里更多地阐述了这个工种本身的工作职责</p><ul><li>每个子团队都包含了上面提到的职业的各种组合</li><li>比如斗士团队<ul><li>包含了策划、程序、模型师、艺术家、动画师、效果设计师、音效设计师等</li><li>许多不同的工种都一起合作</li></ul></li></ul></li><li><p>当然了 导演几乎是每个子团队的一部分</p><ul><li>导演需要监制游戏的方方面面</li><li>也需要不断地调整以让游戏达到可发行的质量</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>所有的工种都需要一起合作，没有互相理解是无法成事的</li><li>目标和愿景应该与团队中的每位成员共享，这样整个团队才能够携手向前</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《生克之路》One-Page Design</title>
      <link href="2023/08/13/20230813-the-way-of-create-and-destory/"/>
      <url>2023/08/13/20230813-the-way-of-create-and-destory/</url>
      
        <content type="html"><![CDATA[<h2 id="《生克之路》One-Page-Design"><a href="#《生克之路》One-Page-Design" class="headerlink" title="《生克之路》One-Page Design"></a>《生克之路》One-Page Design</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131726863.png"></p><h2 id="《生克之路》构思复盘"><a href="#《生克之路》构思复盘" class="headerlink" title="《生克之路》构思复盘"></a>《生克之路》构思复盘</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>起因是在看《Challenges for Game Designers》，然后就有了动手实现一下其中挑战的想法。<br>而后正好文中也提到了 One-Page Design 的交付方式，受到 Stone Librande 的 <a href="https://gdcvault.com/play/1012356/One-Page">One-Page Design</a> 方法的启发，所以也打算借此机会来练习一下。</p><h3 id="挑战介绍"><a href="#挑战介绍" class="headerlink" title="挑战介绍"></a>挑战介绍</h3><p>该构想是为了解决第二章中的 Challenge 1 - The Path：</p><ul><li>玩家人数<ul><li>2-4</li></ul></li><li>Gameplay dynamic<ul><li>Race to the end</li><li>即需要从 A 点到达 B 点，先到先赢</li></ul></li><li>需要决定的<ul><li>Theme</li><li>Game bits</li><li>Mechanics</li></ul></li><li>Deliverable<ul><li>Board-game prototype</li><li>Card-game prototype</li><li>Tile-based-game prototype</li><li>One-page write-up of detailing a potential game design</li></ul></li><li>Suggested process<ul><li>Determine a theme and a goal</li><li>Identify mechanics</li><li>Identify the conflict between players</li><li>Playtest</li><li>Create deliverable</li></ul></li></ul><h3 id="构思过程"><a href="#构思过程" class="headerlink" title="构思过程"></a>构思过程</h3><p>构思过程大致遵循了书中所给出的建议，即先确定主题/目标，而后确定机制，之后定义玩家冲突…<br>不得不说构思时受到了《Root》这一最近玩过的桌游的影响 (￣▽￣)／<br>下面是当时的构思过程：</p><h5 id="Theme-and-Goal"><a href="#Theme-and-Goal" class="headerlink" title="Theme and Goal"></a>Theme and Goal</h5><ul><li>玩家需要寻找生命的真相，寻求进入新世界的机会</li><li>目标是通过获取资源来升级”科技树”，最先升级到最高“科技等级”的玩家获得胜利<h5 id="Mechanics"><a href="#Mechanics" class="headerlink" title="Mechanics"></a>Mechanics</h5></li><li>共有三种阵营：修仙、魔法、或者科技</li><li>游戏以回合制进行</li><li>玩家每轮可以从以下几种行为中任选两种进行<ul><li>获取资源<ul><li>木</li><li>火</li><li>土</li><li>金</li><li>水</li></ul></li><li>移动</li><li>提升资源获取效率（构建设施）</li><li>与环境进行交互</li><li>使用道具</li><li>尝试“科技”升级</li></ul></li><li>一共需要进行两次成功的“科技升级”才能获胜<h5 id="Conflicts-between-players"><a href="#Conflicts-between-players" class="headerlink" title="Conflicts between players"></a>Conflicts between players</h5></li><li>资源总量是有限的，总的而言，若是获胜所需资源为 100，场上的资源总量可能在 150 左右</li><li>资源获取是冲突的，比如修仙阵营需要灵力充沛的森林以进行修炼，但是科技阵营需要砍伐木材</li></ul><h3 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h3><p>因为采用 One-Page Design 的目的就是为了让尽可能多地信息能够不言自明地包含在图中，这里只从目标、路径、挑战、体验四个方面对游戏进行简要说明：</p><h4 id="目标（左上角）"><a href="#目标（左上角）" class="headerlink" title="目标（左上角）"></a>目标（左上角）</h4><p>即游戏的结束条件<br>任一玩家成功进行第二次升级便可获胜</p><h4 id="路径（左下角）"><a href="#路径（左下角）" class="headerlink" title="路径（左下角）"></a>路径（左下角）</h4><p>即玩家达到目标的手段<br>玩家可进行的操作有：</p><ul><li>本地资源（自动）获取<ul><li>即每次轮到自己时可自动获取 1 所在地的资源</li></ul></li><li>移动<ul><li>即可移动到其他领地</li></ul></li><li>使用一次能力<ul><li>能力（右方）即随角色框一同标注的能力，目前而言每种角色有两种能力</li></ul></li><li>玩家交互<ul><li>交好<ul><li>即为对方送出 1 资源<ul><li>送出后，己方根据生成关系得到 1 对应资源</li><li>对方直接得到所送出资源</li></ul></li></ul></li><li>交恶<ul><li>即直接使用自己的 1 资源根据克制关系直接破坏 1 对方资源</li></ul></li></ul></li><li>使用道具（缺失）</li><li>尝试升级（左方中部有标注）<ul><li>即角色需要花费资源进行升级</li><li>升级成功，则亲和能力 + 1，即对应资源的获取能力 + 1</li><li>升级失败，则根据生克关系直接重置手中的所有资源<h4 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h4>即玩家在实现目标的路径中可能碰到的障碍</li></ul></li><li>玩家干扰<ul><li>可能受到其他玩家的克制元素干扰</li></ul></li><li>随机性干扰（即骰子结果）<ul><li>能力使用过程中，可能会受到随机性干扰导致无法获得预期资源</li><li>升级过程中，可能会受到随机性干扰，导致无法成功升级<h4 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h4>即期望玩家在游玩时获得的情感体验</li></ul></li><li>Positive<ul><li>资源获取时的兴奋</li><li>领会生克关系的乐趣</li><li>对抗随机性的成就（需要通过引入道具/效果卡才能实现）</li><li>成功升级的快乐</li><li>获胜的快乐</li></ul></li><li>Negative<ul><li>被随机性打乱的恼人</li></ul></li><li>Non-Binary<ul><li>与玩家交互博弈的复杂情绪<h3 id="（设计）迭代方向"><a href="#（设计）迭代方向" class="headerlink" title="（设计）迭代方向"></a>（设计）迭代方向</h3></li></ul></li></ul><p>目前版本的道具/效果卡设计是缺失的，需要引入它们来作为玩家对抗彼此以及对抗随机性的手段。</p><h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>可以看到最终的 One-Page Design 上呈现的结果和最初的构想略有不同，发生变化的原因现在反观是为了统一资源体系。在引入五行元素作为资源后原本的“修仙/魔法/科技”的三条进化路线变成了“仙/魔/人”的体系，可以说都被纳入了修仙体系之内。</p><p>这一变化过程在设计过程中其实有些难以察觉，是根据最终设计结果来对比最初设计意图时才能明显感觉到不同。虽然设计方向的迭代很常见，但这次练习是一个直观教训，设计方向在不知不觉中逐渐发生了偏移，虽然最终结果暂时而言看来是自洽的，但这一变化过程值得警醒。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>设计构思大致在周中有了雏形，最终在周六花费了大概 6 小时来绘制上面所看到的结果图。在最终产出的 One-Page Design 中缺失了道具/效果卡的部分，其余部分基本已经完成。若是后续有时间精力对道具/效果卡进行补全，便可以通过 Playtest 进行后续迭代。</p><p>整体而言是一次有所收获的经历，既锻炼了快速构思能力，也练习了 One-Page Design 方法，但同时也直观体会到了设计方向在无意识间偏移了最初的设计意图的情况，值得警醒。</p><h2 id="第一次迭代"><a href="#第一次迭代" class="headerlink" title="第一次迭代"></a>第一次迭代</h2><h3 id="喜爱的点"><a href="#喜爱的点" class="headerlink" title="喜爱的点"></a>喜爱的点</h3><p>在 Playtest 后提到了喜爱的点：</p><ol><li>每轮结束后的资源流转，以及交互发生后资源回归自然的感觉很好</li><li>与玩家交恶有乐趣<h3 id="迭代结果"><a href="#迭代结果" class="headerlink" title="迭代结果"></a>迭代结果</h3></li></ol><p>以下是第一次迭代后的结果，迭代思路会在稍后阐述。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308162334508.png"></p><h3 id="迭代思路"><a href="#迭代思路" class="headerlink" title="迭代思路"></a>迭代思路</h3><p>这周一（20230814）晚上和朋友一起进行了一次 Playtest，发现了一些问题：</p><ol><li>作为 One-Page Design，看完后还是不知道怎么玩</li><li>交好和交恶的规则定义不清晰</li><li>亲和力的能力被使用的频率太低</li><li>升级之后的变化不明显</li><li>角色“仙”的能力实用性不强，整局游戏都没能用上一次</li><li>角色“人”的能力所获得的与停留时长不匹配，即收获太少导致使用能力积极性不高</li><li>升级成功与否完全随机，不够可控</li><li>玩家交互太弱</li></ol><p>针对这些问题，进行了一些设计上的迭代</p><ol><li>作为 One-Page Design，看完后还是不知道怎么玩<ul><li>将游戏流程单独列出，使得规则更加明确</li></ul></li><li>交好和交恶的规则定义不清晰<ul><li>在玩家每轮操作右方分别列出了交好和交恶的规则</li><li>交好<ul><li>对方直接获得所给出的资源</li><li>自己根据生克关系获得新资源</li></ul></li><li>交恶<ul><li>根据自己的骰子结果决定交恶结果<ul><li>若是成功<ul><li>自己根据生克关系，获得新资源</li><li>对方根据资源克制关系，损失对应资源</li></ul></li><li>若是失败<ul><li>自己根据生克关系，获得新资源</li><li>对方直接获得自己所投入的资源</li></ul></li></ul></li></ul></li></ul></li><li>亲和力的能力被使用的频率太低<ul><li>直接将亲和能力去除</li></ul></li><li>升级之后的变化不明显<ul><li>重新设计角色能力，使得升级之后可以强化对应的角色能力</li></ul></li><li>角色“仙”的能力实用性不强，整局游戏都没能用上一次<ul><li>重新设计了角色能力<ul><li>超越三界<ul><li>即移动能力不受限于相邻地界</li></ul></li><li>不在五行<ul><li>即与玩家的交互不受限于相邻地界</li></ul></li></ul></li></ul></li><li>角色“人”的能力所获得的与停留时长不匹配，即收获太少导致使用能力积极性不高<ul><li>重新设计了角色能力<ul><li>每停留两回合就可以再多获取一份资源<ul><li>比如第一回合在土，轮次开始时自动获取一份土资源</li><li>第二回合在土，轮次开始时自动获取一份土资源，且可以再获取一份土资源</li></ul></li><li>升级之后<ul><li>将第二回合可以新获取的资源范围扩大至相邻地界，即如果第一第二回合都在土地界没有移动，第二回合除了自动获取的一份土资源，还可从火/土/金三种资源中选取一种获取</li></ul></li></ul></li></ul></li><li>升级成功与否完全随机，不够可控<ul><li>引入升级几率的提升机制，第一次升级的几率为 2/6，第二次就是 (2+1)/6，第三次是 (2+2)/6… 以此类推，从而保证玩家即使运气不好也总能升级成功</li></ul></li><li>玩家交互太弱<ul><li>引入季节设定，也是与后天五行对应的春夏夏秋冬<ul><li>若是当前所处位置与当前季节对应，则可获取的资源+1<ul><li>这里面会涉及到资源有限的玩家冲突，所以玩家的回合次序也是很重要的，这个在规则中提到了，会在游戏开始前掷骰子决定</li></ul></li><li>这个设定的引入是为了加强玩家的移动意愿</li></ul></li><li>并且规定了玩家交互只能在相同或相邻地界发生，也是为了估计玩家移动</li><li>这个需要和 2. 一起理解，在 2. 中进一步明确了交好/交恶的规则，保证了自己与玩家交互时总能有所收获，以提升交互积极性</li></ul></li></ol><hr><p>此外也有一些其他迭代：</p><ul><li>角色设定彻底纳入了修仙体系中，成了“仙、魔、人”哈哈..</li><li>去除了初始地界的设定，现在玩家需要在开局前通过掷骰子决定初始地界</li></ul><h3 id="迭代反思"><a href="#迭代反思" class="headerlink" title="迭代反思"></a>迭代反思</h3><p>如此一来，One-Page Design 中的文字稍微多了一些，这使得设计意图传达得更清晰了，但也会使得读者的阅读欲望降低，需要寻找合适的平衡。</p><p>引入季节的初衷其实是想引入时与位两种机制的，最终只引入了季节。因为本身新加入的“交互只限定于相同/相邻地界”就是位机制的引入，所以季节的引入相当于只是强化了“位”的机制。目前而言还没有引入时的机制，因为缺少道具/效果卡的原因，使得玩家对抗随机性的能力不足，感觉可以通过引入“时”机制来解决这一问题。</p><h2 id="第二次迭代"><a href="#第二次迭代" class="headerlink" title="第二次迭代"></a>第二次迭代</h2><h3 id="迭代思路-1"><a href="#迭代思路-1" class="headerlink" title="迭代思路"></a>迭代思路</h3><p>第二次 Playtest （20180818）之后对局结果如下：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308282323563.png"></p><p>发现了以下问题：</p><ol><li>第一回合没啥能干的</li><li>如果对方没有可以被克制的资源 自己无法交恶</li><li>交恶失败 = 交好</li><li>出现了场上没有资源的情况</li><li>魔的技能随机性太大<ul><li>不如交好或者交恶</li></ul></li><li>第二次升级可以无限进行</li><li>先手优势太大</li></ol><p>Playtest 反馈：</p><ol><li>资源的稀缺性和守恒使得交互有可能受限</li><li>季节强化了 移动行为</li><li>也许可以做成玩家合作对抗 GM 的形式，相当于“携手胜天”的感觉</li></ol><h3 id="迭代思路-2"><a href="#迭代思路-2" class="headerlink" title="迭代思路"></a>迭代思路</h3><ol><li><p>增加“风水轮流转”的机制，即第一回合后轮次顺序顺次递进<br>原本是开局通过投骰子决定的先后手<br>通过该改动以弱化先手优势</p></li><li><p>更改季节机制，当季则从自然中生成 1 对应资源<br>原本是处于当季位置则可获取资源在原本基础上+1<br>通过该改动来弱化玩家累计资源能力，同时减少场上某种资源被清空的可能性</p></li><li><p>对玩家交互进行迭代<br>原本的交恶失败的结果与交好相同，导致玩家没有交好的理由<br>通过该改动去除了交好选项，将其替换为某种玩家博弈机制，减少了随机性，但因为涉及玩家博弈，所以增加了深度和可玩性</p></li><li><p>强化了升级失败的惩罚，同时调整了升级几率的计算方式<br>原本升级失败后，手中所有资源会根据生克进行轮转，但其实就是手中资源未变。<br>且原本的升级几率是 (2+n)/6 的方式，初期可能升级不顺利，而 1 级升 2 级的难度并未提升。<br>通过该改变使得所有升级所需资源都会被消耗后回到场上，减少了场上某种资源被全部掠夺的可能性，同时升级失败的挫败感其实是目标体验之一——逆天而行的困难。同时若是想快速积累新资源，也希望能鼓励玩家多进行交互。<br>升级几率改为了 0 级升 1 级是 2n/6，1 级升 2 级是 n/6，提高了第一次升级的平均几率，也降低了第二次升级的平均几率，使得升级节奏有所变化。</p></li><li><p>对魔的技能进行了略微迭代<br>0 级技能不变，还是等价置换，有 1/6 几率可能使得手中资源消失<br>而 1 级资源升级为无中生有，即最差情况下（1/6 几率）才会使得手中资源消失，其他情况下都能再获取 1 资源。而且魔的技能不受自然资源的限制。<br>通过该改变，对魔的技能进行强化，鼓励玩家使用技能。</p></li></ol><h3 id="迭代反思-1"><a href="#迭代反思-1" class="headerlink" title="迭代反思"></a>迭代反思</h3><ul><li>第一回合没什么可做的这个问题没能做有效迭代。</li><li>对于季节机制的迭代其实弱化了“顺势而为”的感觉，但强化了“天地不仁”的感觉。玩家的移动趋势不再是追随季节，而是更多地需要聚焦于“与人斗”的部分。</li><li>玩家合作对抗 GM 实现“携手胜天”其实是很有趣的思路，但因为此次的核心体验是“A-&gt;B”的路径体验，“携手胜天”的设计感觉会弱化这个体验，但可以作为有趣的延伸思考</li></ul><h3 id="迭代结果-1"><a href="#迭代结果-1" class="headerlink" title="迭代结果"></a>迭代结果</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308290004291.png"></p><h2 id="第三次迭代"><a href="#第三次迭代" class="headerlink" title="第三次迭代"></a>第三次迭代</h2><h3 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h3><ul><li>季节更替没能发挥平衡场上资源的作用<ul><li>因为季节是随资源生克方向顺次流转的，会导致多的资源永远都多，也无法补足不足的资源</li></ul></li><li>交易可能会由于场上的资源不够而失败</li><li>Bluff 的收益不高<ul><li>第三次试玩后提到了 Bluff 积极性不高的原因：1）使坏自己的资源也会减少；2）只有对方马上快升级的时候才有使坏的需求；3）即使不使坏，对方还是有可能由于随机性而升级失败</li></ul></li><li>魔的技能太强<ul><li>第二次改动让魔完全可以无视场上资源来利用技能，试玩中发现这一点过强，导致魔玩家完全不需要与其他玩家进行交互</li></ul></li><li>第二次升级很慢很随机<ul><li>因为第二次改动使得升级失败后所有资源都会根据生克回到场上，所以再次积累资源变得很困难，拉长了游戏时间</li></ul></li></ul><h3 id="迭代思路-3"><a href="#迭代思路-3" class="headerlink" title="迭代思路"></a>迭代思路</h3><ul><li>季节更替没能发挥平衡场上资源的作用<ul><li>让季节的更替变得随机<ul><li>投骰子决定当前季节，如果投到 6 即为复苏季节，复苏季所有场上资源都 + 1</li></ul></li><li>如此以来可以让季节更好地发挥补足场上资源的作用</li></ul></li><li>交易可能会由于场上的资源不够而失败<ul><li>思考之后决定保留，机制是交易会继续进行， 但若是不足的资源则无法被获得</li><li>由此强化资源有限的感觉，让玩家最好选择场上已有的资源进行交互</li><li>并且由于引入随机季节的设定后，资源不足的情况应该会得到一定改善</li></ul></li><li>魔的技能太强<ul><li>此次改动还是将魔的技能限制为需要获取场上的资源，而不是虚空获得</li><li>由此来鼓励魔与其他玩家交互</li></ul></li><li>第二次升级很慢很随机<ul><li>对升级机制进行了一些更改<ul><li>升级若需要所处位置的资源，可从自然直接获取</li><li>升级可自愿引入五行雷劫，若应对成功则几率 + 1/6，生灭的资源回到自然，失败则直接生灭 1 对应资源</li></ul></li><li>由此降低升级成本，且增加了升级可控性</li></ul></li><li>Bluff 的收益不高<ul><li>没有对这一点进行直接调整，因为目前的生克关系已经趋于完善，而且在其他改动的前提下降低了升级成本，变相增加了 Bluff 的需求</li></ul></li></ul><h3 id="迭代结果-2"><a href="#迭代结果-2" class="headerlink" title="迭代结果"></a>迭代结果</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202309031433853.png"></p><h3 id="迭代反思-2"><a href="#迭代反思-2" class="headerlink" title="迭代反思"></a>迭代反思</h3><p>上次迭代后，框架已经趋于稳定。这次主要对一些体验进行改善。短时间内可能不会继续进行迭代，准备开新的题了哈哈。</p><h2 id="2024-新年期间获得的反馈"><a href="#2024-新年期间获得的反馈" class="headerlink" title="2024 新年期间获得的反馈"></a>2024 新年期间获得的反馈</h2><p>今年过年回去时和朋友讲了游戏的点子，得到了一些反馈</p><ul><li>五行元素不具备“不可替代性”<ul><li>这个其实是很中肯的评价，说到底是对 WHY 的思考不够深刻——即为什么是木火土金水这五个元素，无法回答意味着换为任意 ABCDE 也可以</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-OnePageDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230813 - Making Lead-ins Instant and Impactful</title>
      <link href="2023/08/13/20230813-g04/"/>
      <url>2023/08/13/20230813-g04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解“Lead-in”动画！</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G04-Making-Lead-ins-Instant-and-Impactful"><a href="#G04-Making-Lead-ins-Instant-and-Impactful" class="headerlink" title="G04 - Making Lead-ins Instant and Impactful"></a>G04 - Making Lead-ins Instant and Impactful</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131339019.png"></p><iframe width="560" height="315" src="https://www.youtube.com/embed/E8DKndKkHw8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><ul><li>在前面的动画专题中提到了“lead-in”这个动作，即在按键后到攻击实际发生期间的姿势</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131311077.gif"></p><ul><li><p>Lead-in 有时也会被称为“anticipation/windup”</p></li><li><p>当在 Smash Bros. Ultimate. (SBU) 中想对 smash attack 进行蓄力时，角色会停在 lead-in 姿势，然后原地发生抖动</p><ul><li>这是与其他游戏很不相同的处理方式</li><li>当玩家按下按键时，角色动作发生大幅改变<ul><li>通常会从站立姿势采用插值办法过渡到蓄力姿势来避免出现动画跳帧的情况</li><li>但是在 SBU 中，响应度是非常关键的，所以为了给玩家尽可能提供及时反馈才做了这样的处理</li><li>想要完全估计网络/电视延迟是不太现实的，所以这也是一个为了让玩家立马知道成功按键的处理方法</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131320400.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131323629.png" alt="按下按键时，角色姿势大幅改变"></p><ul><li>实际上，有一些不存在 lead-in 的攻击<ul><li>比如零装萨姆斯的 neutral attack<ul><li>这个攻击在按键后的 1 帧后立马发生</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131330894.gif"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131331528.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308131332640.png"></p><ul><li>没错，其实没有 lead-in 游戏也是能正确运行的！<ul><li>比如 Final Fight 中的 jab 攻击，也是立即触发，而且可以立马发出多次，这种快速响应给人一种非常迅捷的感觉</li></ul></li><li>对于在线游戏，攻击前的 windup 其实可以帮助掩盖由于延迟造成的部分问题</li><li>并且，如果没有一个看似“迟缓”的大型 windup，可能会让角色的攻击缺乏视觉上的“力度”</li><li>也就是说让他们总是非常快速地相应并不是适用于任何场景的解决方案</li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>无论怎么做，当思考如何实现这些 lead-in 的时候，需要确保将输入反馈考虑在内</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230806 - Let Players Cheat the System</title>
      <link href="2023/08/06/20230806-b06/"/>
      <url>2023/08/06/20230806-b06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解提供游戏难度选项的新思路！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/MVsVTgJKuzU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B06-Let-Players-Cheat-the-System"><a href="#B06-Let-Players-Cheat-the-System" class="headerlink" title="B06 - Let Players Cheat the System"></a>B06 - Let Players Cheat the System</h2><ul><li>“策略” 可被定义为玩家在游戏中减小损失，增大利益获取的一种方式<ul><li>也许被拆分至此会被看作是这个词的一种奇怪解释，但其实这样利于该词被运用到不同的游戏品类中</li><li>也可以理解为承担很大损失，但获取更大利益的行为 </li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202308061309727.png"></p><ul><li>策略在不同品类游戏中的体现<ul><li>Action Game</li><li>FPS</li><li>Fighting Game</li><li>RPG</li><li>RTS</li><li>Puzzle</li><li>Gambling </li></ul></li><li>任何包含了 push and pull 元素的游戏都包含着一定程度的策略</li><li>游戏被倾向于以复杂方式塑造，有的时候也就有可能“cheat the system”——在不损失的情况下获得（逃课）<ul><li>逃课这样打破游戏平衡的情况其实在 debug 过程中总是会被发现，但其实让玩家逃课不仅是一个有趣的选择，也会让玩家感到印象深刻</li><li>例子<ul><li>黑魂中，吸引怪物直接掉落致死</li><li>Dragon Quest 中，存在 metal slime farming 的机制，给予了玩家巨大便利<ul><li>玩家可以通过 farming for metal slimes 来避过大量的战斗<ul><li>即使如此，但也很有趣不是嘛</li><li>这样的过程会被玩家不断经历，玩家也会尽其所能来逃课，比如 Save load 大法</li></ul></li></ul></li></ul></li></ul></li><li>直到玩家胜利才进行重置意味着玩家总会获得最终胜利，但这也可以成为乐趣的一部分</li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>逃课并不包括玩家可以重设游戏参数等情况，但让玩家在游戏允许范围内稍微“作弊”不失为一个好的选择。毕竟总是沿着设置好的道路前进并没有那么有趣不是吗~</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230730 - Eight Hit Stop Techniques</title>
      <link href="2023/07/30/20230730-d04/"/>
      <url>2023/07/30/20230730-d04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习跳跃的物理机制！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/tycbMSjDDLg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="D04-Eight-Hit-Stop-Techniques"><a href="#D04-Eight-Hit-Stop-Techniques" class="headerlink" title="D04 - Eight Hit Stop Techniques"></a>D04 - Eight Hit Stop Techniques</h2><ul><li>Hit stop 是一种在攻击击中目标后所添加的特效——自己和对方都停止一小段时间</li><li>这种用法其实有很长的历史，但其中一个游戏的 hit stop 产生了深远的影响—— final fight<ul><li>这个游戏要是没有 hit stop 会变得非常不同</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301036396.gif" alt="Final Fight"></p><ul><li><p>Hit stop 也是 Smash bros. 非常重要的一部分，但是其中的 hit stop 有好几种，有些可能基本在别的游戏中不会见到的技术，樱井在这期里面会分享这些在 Smash Bros. Ultimate 中所运用到的 hit stop 技术（泄露商业机密！哈哈）<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301046142.png"></p><h3 id="Smash-Bros-Ultimate-中的-Hit-stop"><a href="#Smash-Bros-Ultimate-中的-Hit-stop" class="headerlink" title="Smash Bros. Ultimate 中的 Hit stop"></a>Smash Bros. Ultimate 中的 Hit stop</h3></li><li><p>Hit stop 作为一个通用原则，在 Smash Bros. 里面不仅仅只是停顿而已，也包含了 shake（抖动）</p><ul><li>即使如此，它还是可以作为 hit stop 发挥作用<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301050669.gif"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301050072.gif"><h4 id="TECH-1-Make-the-receiving-character-shake-more"><a href="#TECH-1-Make-the-receiving-character-shake-more" class="headerlink" title="TECH 1. Make the receiving character shake more"></a>TECH 1. Make the receiving character shake more</h4></li></ul></li><li><p>即让受击目标抖动得更多<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301052008.png"></p></li><li><p>其他的一些游戏中，有时候攻击方完全不抖动，也有时候双方都不抖动</p></li></ul><h4 id="TECH-2-Don’t-move-the-hit-box"><a href="#TECH-2-Don’t-move-the-hit-box" class="headerlink" title="TECH 2. Don’t move the hit box"></a>TECH 2. Don’t move the hit box</h4><ul><li>即不要移动受击盒<ul><li>如果在受击方受击时直接抖动它，最终可能会导致它们的受击盒也一起抖动，这会导致本可以进行的连击无法进行</li><li>在 Smash 中，只有人物模型进行抖动，而受击盒是留在原地的</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301055261.png"></p><h4 id="TECH-3-Shake-horizontally-on-the-ground-shake-in-all-directions-in-the-air"><a href="#TECH-3-Shake-horizontally-on-the-ground-shake-in-all-directions-in-the-air" class="headerlink" title="TECH 3. Shake horizontally on the ground, shake in all directions in the air"></a>TECH 3. Shake horizontally on the ground, shake in all directions in the air</h4><ul><li><p>即在地上水平抖动，而在空中全方向抖动</p><ul><li>考虑到斗士们的面向关系，如果总是垂直（上下）抖动其实会更好，但当斗士处于地面时，这么做会导致腿部和地面穿模<ul><li>2D 游戏中倒是不用那么担心这个问题<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301059549.gif"><h4 id="TECH-4-Gradually-resolve-the-shake"><a href="#TECH-4-Gradually-resolve-the-shake" class="headerlink" title="TECH 4. Gradually resolve the shake"></a>TECH 4. Gradually resolve the shake</h4></li></ul></li></ul></li><li><p>即让抖动平滑结束</p><ul><li>抖动量不是定值<ul><li>其开始时是个比较大的值，而后逐渐变小</li><li>通过计算 hit stop 会持续的时长，就可以相对地让其平滑地结束<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301104733.gif"><h4 id="TECH-5-Control-the-amount-of-hit-stop"><a href="#TECH-5-Control-the-amount-of-hit-stop" class="headerlink" title="TECH 5. Control the amount of hit stop"></a>TECH 5. Control the amount of hit stop</h4></li></ul></li></ul></li><li><p>即控制 hit stop 的量</p><ul><li>在 smash 中，攻击强度越高，其 hit stop 也就更强，但樱井也为其应用了一个乘积型变量（multiplier）<ul><li>以 Marth 的 Smash Attack 为例，其剑身的攻击稍低，所以 hit stop 也稍弱，但其剑尖的攻击力很高，所以你立马就能感觉到很强的 hit stop<ul><li>这不仅仅只是攻击值的不同，multiplier 同时也在发挥作用，所以让 hit stop 的强弱不仅仅由攻击值的差值所影响<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301109420.gif"></li></ul></li></ul></li><li>但有时，即使对于伤害相同的攻击也会有不同的 hit stop 处理<ul><li>比如 Ryu 的攻击比起 Kazuya 的 hit stop 会更加明显<ul><li>这是为了契合其原本游戏中的设定而做的调整<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301126173.gif"></li></ul></li></ul></li></ul></li></ul><h4 id="TECH-6-Interpolate-into-the-damage-pose"><a href="#TECH-6-Interpolate-into-the-damage-pose" class="headerlink" title="TECH 6. Interpolate into the damage pose"></a>TECH 6. Interpolate into the damage pose</h4><ul><li><p>即为受击动作插值</p><ul><li>很多游戏中，受击者在 hit stop 期间是（保持同一姿势）静止不动的，但在 smash 中，会有几帧插值帧来让受击方从初始姿势转换为受击姿势，而不是完全保持初始姿势不同然后突然切换到受击姿势</li><li>这样会让受击的 hit stop 更加顺畅和令人满意<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301132774.gif"><h4 id="TECH-7-Keep-the-attacker-moving-very-slightly-during-the-hit-stop"><a href="#TECH-7-Keep-the-attacker-moving-very-slightly-during-the-hit-stop" class="headerlink" title="TECH 7. Keep the attacker moving very slightly during the hit stop"></a>TECH 7. Keep the attacker moving very slightly during the hit stop</h4></li></ul></li><li><p>即让攻击方在 hit stop 期间有细微移动</p><ul><li>这是 hit stop 技术的巅峰体现</li><li>比如说，一个剑士斗士对对方进行了一次强力挥剑，你如果在 hit stop 期间仔细观察，你会发现剑尖仍然会一点点移动<ul><li>在 hit stop 期间，攻击者的动画以非常慢的速率播放，有时候甚至不是每帧都变化，一旦 hit stop 结束，动画会回复到好像什么都没有发生过一样的状态</li><li>设计者是可以控制这个效果是否开启的，所以你可能不会每次攻击中都能看到这一效果<ul><li>这一效果的目的是为了让剑看起来真的有切割的感觉，所以有一些攻击关闭这一效果会更好</li></ul></li></ul></li><li>其他的一些效果包括<ul><li>延长对于 lighting 的 hit stop 效果</li><li>在多人游戏中减弱 hit stop 的效果等</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301144481.gif"></p><h4 id="TECH-8-Vary-the-amount-of-shake-based-on-camera-distance"><a href="#TECH-8-Vary-the-amount-of-shake-based-on-camera-distance" class="headerlink" title="TECH 8. Vary the amount of shake based on camera distance"></a>TECH 8. Vary the amount of shake based on camera distance</h4><ul><li>即根据摄像机距离来调整抖动量<ul><li>当摄像机较远时，抖动会比平常更大一些<ul><li>这样无论摄像机远近，都能有一种相似的 hit stop 感觉<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307301151414.gif"></li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>很自然地会想到要讲这个是因为其中很多技术就是樱井自己提出来的，他非常清楚什么情境下这些技术是需要的，并且会带来什么样的结果</li><li>每一个技术单拎出来可能都不那么显眼，但当它们一起发挥效果的时候，确实就能让游戏感觉好很多！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230723 - Making Your Game Easy to Tune</title>
      <link href="2023/07/23/20230723-k02/"/>
      <url>2023/07/23/20230723-k02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏微调（Fine Tuning）！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/nGaajB8m5Q0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="K02-Making-Your-Game-Easy-to-Tune"><a href="#K02-Making-Your-Game-Easy-to-Tune" class="headerlink" title="K02 - Making Your Game Easy to Tune"></a>K02 - Making Your Game Easy to Tune</h2><ul><li><p>对游戏进行微调（fine tuning）是一个非常重要的步骤</p><ul><li>但如果你不习惯游戏开发，如何平衡游戏这件事就有些难以被直观感知</li><li>樱井也不能在这方面透露过多，毕竟会涉及一些商业秘密，但他希望在允许范围内分享一些信息</li><li>分享中不会包含任何开发环境的画面，所以如果你觉得有些抽象，樱井对此表示抱歉</li></ul></li><li><p>首先，当团队对游戏进行编码时，樱井会要求程序团队引用一组被称为参数（parameters）的数值型变量</p><ul><li>这些变量包含了之后在游戏中可能会被微调的所有值<ul><li>比如一个攻击行为的能量为 10<ul><li>程序会负责整体的行为实现</li><li>但这个能量的值（此时为 10）是一个单独的可以被调整的参数</li><li>虽然可以直接把这个值直接写进程序中，但这样在后续有微调需要时就会比较麻烦</li></ul></li><li>可以认为程序是骨头，参数是肌肉</li><li>通过调整参数的大小可以使得同样的行为以非常不同的方式被玩家感知</li><li>通常而言，设计师想让一切都感觉“刚刚好”</li></ul></li></ul></li><li><p>参数存储于其各自单独的 excel 文档中，所以可以通过调整文档中的值来直接对游戏表现进行调整</p><ul><li>在 Smash Bros. 中，即使对于一个攻击也有很多参数可供调整</li><li>所以也会把不会被频繁调整的值隐藏起来 —— 一个提高效率的好办法<ul><li>减少犯错几率</li><li>提高寻找效率</li></ul></li><li>使用 Excel 的另一个好处 —— 使得运用公式更加简单<ul><li>这样的话参数可以互相引用，可以使得相对平衡更容易实现</li></ul></li></ul></li><li><p>如果需要让这些参数调整实际体现到游戏中，需要“conversion”</p><ul><li>也就是说需要把调整的值实际导入到游戏中，让其发挥作用</li><li>樱井他们使用一个 Excel 插件来完成这件事，一键就可以将变化导入开发版本中，这是非常有用的！<ul><li>有如此结构严密的开发工具是和万代南梦宫工作室合作的非常棒的好处之一</li><li>对于初代的 Smash Bros. &amp; Smash Bros. Melee 而言，这样的一次转换就需要花费十分钟，无论多微小的改变都是如此<ul><li>而且也需要重启游戏</li><li>当时也没有用 Excel，所以还需要打开文本工具来完成改动</li><li>在当时而言，可以说樱井构建了游戏中的每一个参数，而且那是当时唯一的办法</li></ul></li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>从 Smash Bros. (Wii U/3DS) 版本后，参数以一种更容易被调整和转换的方式进行存储和管理了，所以可以更方便地在开发过程中对参数进行微调以实现更好的效果！<ul><li>这其实是最需要经常迭代的部分，所以应该确保团队能够尽可能高效率地实现这件事！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230716 - That was Then, This Is Now</title>
      <link href="2023/07/16/20230716-m06/"/>
      <url>2023/07/16/20230716-m06/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解可爱的 Fukurashi！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/CVQ4PuihnTk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M06-That-was-Then-This-Is-Now"><a href="#M06-That-was-Then-This-Is-Now" class="headerlink" title="M06 - That was Then, This Is Now"></a>M06 - That was Then, This Is Now</h2><ul><li><p>樱井相信有很多人觉得可能过去的游戏比现在的好很多</p><ul><li>当时的游戏音乐令人印象深刻<ul><li>现在的游戏音乐听过就忘了</li></ul></li><li>现如今我们能玩到很多游戏的续作，但曾几何时，不断推出新系列才是常态</li></ul></li><li><p>游戏是创意的比拼</p><ul><li>过去的游戏充满了各种各样的惊喜</li><li>软硬件在当时飞速发展<ul><li>Games had mystery</li><li>Games had fantasy</li></ul></li><li>现如今，你可以通过 YouTube/Wikis 来了解大量的内容<ul><li>但过去对于游戏的了解只能基于个人的游玩经验和试错，那是非常棒的</li></ul></li></ul></li><li><p>樱井也很确定有很多人会简单地觉得现代游戏毫无亮点，所以他们也不再玩电子游戏了</p><ul><li>所以也会有一些人只是谈论过去他们玩过的老游戏，并以此作为基础来评价其他游戏</li></ul></li><li><p>但问题是，过去是过去，现在是现在</p><ul><li>往日不可回，今时也终成往日</li><li>所以应该全身心享受现在所拥有的</li></ul></li><li><p>游戏的乐趣并没有绝对的标准，而是一个相对感受，也会受到各种条件的影响</p><ul><li>你当时玩游戏的时机</li><li>个人状况</li><li>当时的趋势</li><li>技术限制</li></ul></li><li><p>如果需要证明的话，可以试试玩一个游戏的老的版本和新的版本</p><ul><li>当然了，老游戏会有其特殊的魅力和创造性</li><li>但谈及总的乐趣以及游戏的广阔度而言，樱井并不认为老游戏可以比肩现如今重置过的更大规模的版本</li></ul></li><li><p>但若是谈及游戏设计的创新性</p><ul><li>老的游戏可以说有更多的实验空间，因为当时的设计理论还不完备<ul><li>但这不是这里谈论的重点</li></ul></li><li>当我们还年轻，并且被我们所经历过的创意性内容所打动时，会在我们记忆中留下很深的烙印<ul><li>我们每个人都有视若珍宝的回忆</li></ul></li><li>但当看到人们仅仅因为现代游戏没能提供与自己的珍贵回忆同样深刻的印象，并以此抗拒现代游戏时，还是会令人感到遗憾</li></ul></li><li><p>不断尝试新东西总是好的对吧</p><ul><li>更不用说现在我们有很多方式能够游玩到过去的老游戏，这多好呀</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>只关注于自己喜欢的东西没有问题<ul><li>但如果想更加享受现在，那就不断拓展视野，尝试新东西吧！</li><li>相信你会为此高兴的！</li></ul></li><li>毕竟，过去是过去，现在是现在。</li></ul><blockquote><blockquote><p>悟已往之不谏，知来者之可追。</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220709 - ChatGPT Prompt Engineering for Developers</title>
      <link href="2023/07/09/20230709-chatgpt-prompt-engineering-for-developers/"/>
      <url>2023/07/09/20230709-chatgpt-prompt-engineering-for-developers/</url>
      
        <content type="html"><![CDATA[<h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>开发过程中如果能够使用大规模语言模型（Large Language Model, LLM，如 ChatGPT）来快速构建应用是一件很棒的事！所以就有了这篇与 DeepLearning 和 OpenAI 一起学习如何使用 LLM 为开发过程助力的笔记！</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091709315.png"></p><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ul><li>官网链接：<br><a href="https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/">https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/</a></li></ul><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><ul><li>重要的是使用 gpt api 来快速构建应用</li><li>两种类型的 LLM<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307081715572.png"></li><li>Base LLM<ul><li>基于文本训练的数据来预测下一个词</li></ul></li><li>Instruction Tuned LLM (course focus)<ul><li>被训练用于跟随指示</li><li>如果觉得其回答得不好，可能是因为给的问题不够准确</li></ul></li></ul></li></ul><h2 id="Guidelines-for-Prompting"><a href="#Guidelines-for-Prompting" class="headerlink" title="Guidelines for Prompting"></a>Guidelines for Prompting</h2><h3 id="两个原则"><a href="#两个原则" class="headerlink" title="两个原则"></a>两个原则</h3><h4 id="1-Write-clear-and-specific-instructions"><a href="#1-Write-clear-and-specific-instructions" class="headerlink" title="1. Write clear and specific instructions"></a>1. Write clear and specific instructions</h4><h5 id="Tactics-1-Use-delimiters-to-clearly-indicate-distinct-parts-of-the-input"><a href="#Tactics-1-Use-delimiters-to-clearly-indicate-distinct-parts-of-the-input" class="headerlink" title="Tactics 1 - Use delimiters to clearly indicate distinct parts of the input"></a>Tactics 1 - Use delimiters to clearly indicate distinct parts of the input</h5><pre class="line-numbers language-none"><code class="language-none">Delimiters can be anything like: &#96;&#96;&#96;, &quot;&quot;&quot;, &lt; &gt;, &#96;&lt;tag&gt; &lt;&#x2F;tag&gt;&#96;, &#96;:&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">text &#x3D; f&quot;&quot;&quot;You should express what you want a model to do by \ providing instructions that are as clear and \ specific as you can possibly make them. \ This will guide the model towards the desired output, \ and reduce the chances of receiving irrelevant \ or incorrect responses. Don&#39;t confuse writing a \ clear prompt with writing a short prompt. \ In many cases, longer prompts provide more clarity \ and context for the model, which can lead to \ more detailed and relevant outputs.&quot;&quot;&quot;prompt &#x3D; f&quot;&quot;&quot;Summarize the text delimited by triple backticks \ into a single sentence.&#96;&#96;&#96;&#123;text&#125;&#96;&#96;&#96;&quot;&quot;&quot;response &#x3D; get_completion(prompt)print(response)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">To guide a model towards the desired output and reduce irrelevant or incorrect responses, it is important to provide clear and specific instructions, which can be achieved through longer prompts that offer more clarity and context.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307082014721.png"></p><h5 id="Tactic-2-Ask-for-a-structured-output"><a href="#Tactic-2-Ask-for-a-structured-output" class="headerlink" title="Tactic 2: Ask for a structured output"></a>Tactic 2: Ask for a structured output</h5><p>HTML/JSON</p><pre class="line-numbers language-none"><code class="language-none">prompt &#x3D; f&quot;&quot;&quot;Generate a list of three made-up book titles along \ with their authors and genres. Provide them in JSON format with the following keys: book_id, title, author, genre.&quot;&quot;&quot;response &#x3D; get_completion(prompt)print(response)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#123;  &quot;books&quot;: [    &#123;      &quot;book_id&quot;: 1,      &quot;title&quot;: &quot;The Enigma of Elysium&quot;,      &quot;author&quot;: &quot;Evelyn Sinclair&quot;,      &quot;genre&quot;: &quot;Mystery&quot;    &#125;,    &#123;      &quot;book_id&quot;: 2,      &quot;title&quot;: &quot;Whispers in the Wind&quot;,      &quot;author&quot;: &quot;Nathaniel Blackwood&quot;,      &quot;genre&quot;: &quot;Fantasy&quot;    &#125;,    &#123;      &quot;book_id&quot;: 3,      &quot;title&quot;: &quot;Echoes of the Past&quot;,      &quot;author&quot;: &quot;Amelia Hart&quot;,      &quot;genre&quot;: &quot;Romance&quot;    &#125;  ]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Tactic-3-Ask-the-model-to-check-whether-conditions-are-satisfied"><a href="#Tactic-3-Ask-the-model-to-check-whether-conditions-are-satisfied" class="headerlink" title="Tactic 3: Ask the model to check whether conditions are satisfied"></a>Tactic 3: Ask the model to check whether conditions are satisfied</h5><pre class="line-numbers language-none"><code class="language-none">text_1 &#x3D; f&quot;&quot;&quot;Making a cup of tea is easy! First, you need to get some \ water boiling. While that&#39;s happening, \ grab a cup and put a tea bag in it. Once the water is \ hot enough, just pour it over the tea bag. \ Let it sit for a bit so the tea can steep. After a \ few minutes, take out the tea bag. If you \ like, you can add some sugar or milk to taste. \ And that&#39;s it! You&#39;ve got yourself a delicious \ cup of tea to enjoy.&quot;&quot;&quot;prompt &#x3D; f&quot;&quot;&quot;You will be provided with text delimited by triple quotes. If it contains a sequence of instructions, \ re-write those instructions in the following format:Step 1 - ...Step 2 - ……Step N - …If the text does not contain a sequence of instructions, \ then simply write \&quot;No steps provided.\&quot;\&quot;\&quot;\&quot;&#123;text_1&#125;\&quot;\&quot;\&quot;&quot;&quot;&quot;response &#x3D; get_completion(prompt)print(&quot;Completion for Text 1:&quot;)print(response)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Completion for Text 1:Step 1 - Get some water boiling.Step 2 - Grab a cup and put a tea bag in it.Step 3 - Once the water is hot enough, pour it over the tea bag.Step 4 - Let the tea sit for a bit to steep.Step 5 - After a few minutes, take out the tea bag.Step 6 - Add sugar or milk to taste, if desired.Step 7 - Enjoy your delicious cup of tea.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Tactic-4-“Few-shot”-prompting"><a href="#Tactic-4-“Few-shot”-prompting" class="headerlink" title="Tactic 4: “Few-shot” prompting"></a>Tactic 4: “Few-shot” prompting</h5><p>Give successful examples of completing tasks then ask model to perform the task</p><pre class="line-numbers language-none"><code class="language-none">prompt &#x3D; f&quot;&quot;&quot;Your task is to answer in a consistent style.&lt;child&gt;: Teach me about patience.&lt;grandparent&gt;: The river that carves the deepest \ valley flows from a modest spring; the \ grandest symphony originates from a single note; \ the most intricate tapestry begins with a solitary thread.&lt;child&gt;: Teach me about resilience.&quot;&quot;&quot;response &#x3D; get_completion(prompt)print(response)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&lt;grandparent&gt;: Resilience is like a mighty oak tree that withstands the strongest storms, bending but never breaking. It is the unwavering determination to rise again after every fall, and the ability to find strength in the face of adversity. Just as a diamond is formed under immense pressure, resilience is forged through challenges and hardships, making us stronger and more resilient in the process.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-Give-the-model-time-to-think"><a href="#2-Give-the-model-time-to-think" class="headerlink" title="2. Give the model time to think"></a>2. Give the model time to think</h4><h5 id="Tactic-1-Specify-the-steps-required-to-complete-a-task"><a href="#Tactic-1-Specify-the-steps-required-to-complete-a-task" class="headerlink" title="Tactic 1: Specify the steps required to complete a task"></a>Tactic 1: Specify the steps required to complete a task</h5><pre class="line-numbers language-none"><code class="language-none">text &#x3D; f&quot;&quot;&quot;In a charming village, siblings Jack and Jill set out on \ a quest to fetch water from a hilltop \ well. As they climbed, singing joyfully, misfortune \ struck—Jack tripped on a stone and tumbled \ down the hill, with Jill following suit. \ Though slightly battered, the pair returned home to \ comforting embraces. Despite the mishap, \ their adventurous spirits remained undimmed, and they \ continued exploring with delight.&quot;&quot;&quot;# example 1prompt_1 &#x3D; f&quot;&quot;&quot;Perform the following actions: 1 - Summarize the following text delimited by triple \backticks with 1 sentence.2 - Translate the summary into French.3 - List each name in the French summary.4 - Output a json object that contains the following \keys: french_summary, num_names.Separate your answers with line breaks.Text:&#96;&#96;&#96;&#123;text&#125;&#96;&#96;&#96;&quot;&quot;&quot;response &#x3D; get_completion(prompt_1)print(&quot;Completion for prompt 1:&quot;)print(response)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Completion for prompt 1:1 - Jack and Jill, siblings, go on a quest to fetch water from a hilltop well, but encounter misfortune when Jack trips on a stone and tumbles down the hill, with Jill following suit, yet they return home and remain undeterred in their adventurous spirits.2 - Jack et Jill, frère et sœur, partent en quête d&#39;eau d&#39;un puits au sommet d&#39;une colline, mais rencontrent un malheur lorsque Jack trébuche sur une pierre et dévale la colline, suivi de Jill, pourtant ils rentrent chez eux et restent déterminés dans leur esprit d&#39;aventure.3 - Jack, Jill4 - &#123;  &quot;french_summary&quot;: &quot;Jack et Jill, frère et sœur, partent en quête d&#39;eau d&#39;un puits au sommet d&#39;une colline, mais rencontrent un malheur lorsque Jack trébuche sur une pierre et dévale la colline, suivi de Jill, pourtant ils rentrent chez eux et restent déterminés dans leur esprit d&#39;aventure.&quot;,  &quot;num_names&quot;: 2&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Ask for output in a specified format</p><pre class="line-numbers language-none"><code class="language-none">prompt_2 &#x3D; f&quot;&quot;&quot;Your task is to perform the following actions: 1 - Summarize the following text delimited by   &lt;&gt; with 1 sentence.2 - Translate the summary into French.3 - List each name in the French summary.4 - Output a json object that contains the   following keys: french_summary, num_names.Use the following format:Text: &lt;text to summarize&gt;Summary: &lt;summary&gt;Translation: &lt;summary translation&gt;Names: &lt;list of names in Italian summary&gt;Output JSON: &lt;json with summary and num_names&gt;Text: &lt;&#123;text&#125;&gt;&quot;&quot;&quot;response &#x3D; get_completion(prompt_2)print(&quot;\nCompletion for prompt 2:&quot;)print(response)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Completion for prompt 2:Summary: Jack and Jill, siblings, go on a quest to fetch water from a hilltop well but encounter misfortune along the way. Translation: Jack et Jill, frère et sœur, partent en quête d&#39;eau d&#39;un puits au sommet d&#39;une colline mais rencontrent des malheurs en chemin.Names: Jack, JillOutput JSON: &#123;&quot;french_summary&quot;: &quot;Jack et Jill, frère et sœur, partent en quête d&#39;eau d&#39;un puits au sommet d&#39;une colline mais rencontrent des malheurs en chemin.&quot;, &quot;num_names&quot;: 2&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Tactic-2-Instruct-the-model-to-work-out-its-own-solution-before-rushing-to-a-conclusion"><a href="#Tactic-2-Instruct-the-model-to-work-out-its-own-solution-before-rushing-to-a-conclusion" class="headerlink" title="Tactic 2: Instruct the model to work out its own solution before rushing to a conclusion"></a>Tactic 2: Instruct the model to work out its own solution before rushing to a conclusion</h5><pre class="line-numbers language-none"><code class="language-none">prompt &#x3D; f&quot;&quot;&quot;Determine if the student&#39;s solution is correct or not.Question:I&#39;m building a solar power installation and I need \ help working out the financials. - Land costs $100 &#x2F; square foot- I can buy solar panels for $250 &#x2F; square foot- I negotiated a contract for maintenance that will cost \ me a flat $100k per year, and an additional $10 &#x2F; square \footWhat is the total cost for the first year of operations as a function of the number of square feet.Student&#39;s Solution:Let x be the size of the installation in square feet.Costs:1. Land cost: 100x2. Solar panel cost: 250x3. Maintenance cost: 100,000 + 100xTotal cost: 100x + 250x + 100,000 + 100x &#x3D; 450x + 100,000&quot;&quot;&quot;response &#x3D; get_completion(prompt)print(response)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">The student&#39;s solution is correct. They correctly identified the costs for land, solar panels, and maintenance, and calculated the total cost for the first year of operations as a function of the number of square feet.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Note that the student’s solution is actually not correct.<br>We can fix this by instructing the model to work out its own solution first.</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307082032637.png"></p><blockquote><blockquote><p>这里模型的输出出错了哈哈… 应该是 360x + 100000 来着。</p></blockquote></blockquote><h3 id="Model-Limitations-Hallucinations"><a href="#Model-Limitations-Hallucinations" class="headerlink" title="Model Limitations: Hallucinations"></a>Model Limitations: Hallucinations</h3><p>This will Makes statements that sound plausible But are not true<br>也就是说模型可能会胡乱编造。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307082046620.png"></p><p>为了减少类似情况的发生的 tactics：<br>First find relevant information,<br>Then answer the question based on the relevant information.</p><h2 id="Iterative-Prompt-Development"><a href="#Iterative-Prompt-Development" class="headerlink" title="Iterative Prompt Development"></a>Iterative Prompt Development</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091356205.png"></p><ul><li><p>第一次可能总不会得到理想结果，这不重要，重要的是分析为什么没有，然后基于此不断迭代</p></li><li><p>LLM 对于字符（character）统计不是很擅长，所以可能会给出不符合字数要求的答案</p></li><li><p>如果答案文本过长</p><ul><li>就让其限制答案字数</li></ul></li><li><p>如果错误关注了不应该关注的细节</p><ul><li>需要指明需要其关注的细节</li></ul></li><li><p>需要的话可以让其提供表格形式的输出</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091416874.png"></p><h2 id="Summarizing"><a href="#Summarizing" class="headerlink" title="Summarizing"></a>Summarizing</h2><ul><li>可以让其根据受众来 summarize<ul><li>会根据内容来总结</li></ul></li><li>如果是 extract <ul><li>则会是第三方的客观视角</li></ul></li></ul><h2 id="Inferring"><a href="#Inferring" class="headerlink" title="Inferring"></a>Inferring</h2><ul><li>比如可以用于推断评论的情绪效价</li><li>也可以让其辨别一段话中包含的情绪类型</li><li>可以让其从评论中 extract 产品信息</li><li>可以一次做好多不同的任务</li><li>Inferring topics<ul><li>根据文本推测 topic</li><li>也可以根据 topic 看文本是否包含了相应 topic（舆情监测） zero-shot training algorithm</li></ul></li></ul><h2 id="Transforming"><a href="#Transforming" class="headerlink" title="Transforming"></a>Transforming</h2><ul><li>翻译</li><li>转译</li><li>语气转换</li><li>形式/格式转换</li><li>语法检查<ul><li>甚至可以列出更改的部分<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091627821.png"><h2 id="Expanding"><a href="#Expanding" class="headerlink" title="Expanding"></a>Expanding</h2></li></ul></li><li>扩写</li><li>提醒模型在扩写的同时使用已知的细节</li><li>不应该使用该功能来写垃圾邮件</li><li>使用 temperature 参数来控制 variety 和 creativity<ul><li>如果 temperature = 0 基本可以保证每次结果都一致</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091633201.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091634765.png"></p><h2 id="Chatbot-Chat-Workflow"><a href="#Chatbot-Chat-Workflow" class="headerlink" title="Chatbot / Chat Workflow"></a>Chatbot / Chat Workflow</h2><h3 id="Chatbot"><a href="#Chatbot" class="headerlink" title="Chatbot"></a>Chatbot</h3><ul><li>OpenAI 的 chat model 使用 user message 作为 input 使用 assistant message 作为 output</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091639418.png"></p><ul><li>在此基础之上，system message 其实会影响 assistant 的回答逻辑</li></ul><blockquote><blockquote><p>大概这也是为什么许多 prompt 教程中提到的，先预设身份是有效的。这相当于把“预设身份”这一信息作为 system message 来告知模型，让其调整 assistant 的输出模式，从而更好地输出结果。</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091641447.png"></p><h3 id="OrderBot"><a href="#OrderBot" class="headerlink" title="OrderBot"></a>OrderBot</h3><ul><li>有时候模型无法回答是因为其不知道上下文情景（context），需要为其提供</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091649786.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091654535.png"></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091658054.png"></p><ul><li>Use it responsibly!</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> GCORES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230709 - Distinguishing Between Major and Minor Elements</title>
      <link href="2023/07/09/20230709-f03/"/>
      <url>2023/07/09/20230709-f03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解通过区分元素的主次进行优化的方法！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/NBXt-Uq7dHg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="F03-Distinguishing-Between-Major-and-Minor-Elements"><a href="#F03-Distinguishing-Between-Major-and-Minor-Elements" class="headerlink" title="F03 - Distinguishing Between Major and Minor Elements"></a>F03 - Distinguishing Between Major and Minor Elements</h2><ul><li><p>为主机游戏开发需要总是考虑性能问题</p></li><li><p>通常而言，硬件并没有大家想象中那么好</p></li><li><p>如果不优化性能，最终可能无法实现对应的目标</p></li><li><p>这种情况下，考虑什么是主要的，什么是次要的就很重要</p><ul><li>也就是说，需要考虑哪些部分对于游戏而言是更有影响力的</li></ul></li><li><p>以 Smash Bros.  的屏幕布局而言，背景的部分就像是天空盒，可以以一定视角进行观察</p><ul><li>但其实玩家主要会看到屏幕中间的部分<ul><li>也就是说中间部分是主要的，其余部分是次要的<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091109838.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091110702.png"></li></ul></li></ul></li><li><p>对于战斗舞台而言，台子下方的部分（因为经常处于摄像机外）就没有台面重要<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091111673.png"></p></li><li><p>而对于斗士和舞台的优先级而言，可能会觉得斗士优先级更高，但其实因为斗士通常以相对小的尺寸进行显示，所以其实不用特别地做太多处理</p></li><li><p>考虑同一时间屏幕中每个元素的占比是很重要的</p><ul><li>斗士们以各种不同的形态出现，这意味着不仅需要记住他们的模型不仅为 gameplay 服务，也需要相应地调整其性能优先级<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091114102.png"></li></ul></li><li><p>一个常用的性能优化技术被称为 LOD</p><ul><li>即可以基于距离来切换不同精度的资产</li><li>但这个开发起来并不容易，所以一定要让性能优化值得这份付出</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091120925.png"></p><ul><li>另外， 你可能会偶尔看到 stage 团队在 Smash Bros. 中所做的一些非常细节的部分，我也会在 Daily Screenshots （之前的 <a href="https://medill-east.github.io/2023/07/02/20230702-e01/">Sharing Info Within a Team</a> 中有提到，樱井会有每日邮件来更新团队进展）中对其进行展现<ul><li>樱井个人并没有要求这些部分的工作，但要是艺术家们已经在 DDL 之前完成了相应工作，也不会对性能造成影响，他也不会反对就是了，游戏当然也能因此变得更丰富</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091126690.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091126045.png"></p><ul><li>但樱井发现他们制作了一些在 inkling 的舞台背景中甚至会转向的车时，樱井就会介入了，这部分内容真的可能不会有人看到</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202307091131982.gif"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>区分主次要元素，并且针对性地分配资源，使得游戏以这种策略（不仅仅对于图形而言）进行优化是很重要的技巧！</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230702 - Sharing Info Within a Team</title>
      <link href="2023/07/02/20230702-e01/"/>
      <url>2023/07/02/20230702-e01/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解屏幕大小对于游戏内容呈现的影响！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/40ryMOr36fw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="E01-Sharing-Info-Within-a-Team"><a href="#E01-Sharing-Info-Within-a-Team" class="headerlink" title="E01 - Sharing Info Within a Team"></a>E01 - Sharing Info Within a Team</h2><ul><li>这个系列会聚焦于游戏开发过程中的团队管理相关内容</li><li>在大规模开发过程中，个体很容易不太清楚目前的游戏开发进程<ul><li>比如制作螺丝钉的过程中，可能并不知道它最终会被用在组成车的哪一部分</li><li>这种情况对于个人来说压力是很大的，樱井也会试图尽量减少类似情况的发生</li></ul></li><li>为了让团队中的大家了解项目进度，樱井鼓励成员之间分享信息</li><li>樱井有三条跨团队信息分享的小技巧<ul><li>Daily Report<ul><li>既包含了开发进程，也是团队成员们互相沟通的渠道</li><li>樱井也会在其中分享一些对于项目的看法</li></ul></li><li>Screenshot of the Day<ul><li>虽然目前在推特上也会有这样的截图</li><li>但内部分享中也会包含一些无法公开的开发中内容<ul><li>团队成员们也很乐于在评论中分享对于这些内容的见解</li></ul></li></ul></li><li>Project Presentations<ul><li>没几个月，樱井就会让团队来分享开发成果<ul><li>比如图形</li><li>声音</li><li>动画</li><li>VFX</li><li>UI</li></ul></li><li>想要契合团队中每个人的时间来组织这样的分享不是一件容易的事情，但绝对是值得的</li></ul></li></ul></li><li>每个成员的工作最终有机会被大家看到，大家也有机会能够以更宏观的视角来了解项目开发进度<ul><li>创意工作需要不断基于已有工作继续拓展，能够为大家提供动力和成就感是很棒的一件事</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>做这些事情也有开销，但绝对是值得去做的！</li><li>尽自己的努力来分享信息吧！</li><li>当你是团队中的一员时，没有人应该感觉在独自工作！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230625 - A Small Window Into the World</title>
      <link href="2023/06/25/20230625-c05/"/>
      <url>2023/06/25/20230625-c05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解屏幕大小对于游戏内容呈现的影响！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/DGIJk0Uh8jU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C05-A-Small-Window-Into-the-World"><a href="#C05-A-Small-Window-Into-the-World" class="headerlink" title="C05 - A Small Window Into the World"></a>C05 - A Small Window Into the World</h2><ul><li><p>在竞速游戏中，开发者们可能会追求非常真实的视觉效果，甚至已经类似实况录像一样的效果</p></li><li><p>然而无论你的图形和显示效果有多好，人们也无法拥有和真实环境一样的驾驶体验，其中有很多原因，但其中一个非常重要的因素是屏幕的大小</p></li><li><p>玩家坐在屏幕前，其视角范围大概在 30 度左右。但其实人们在驾驶时的视角范围是很大的</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251143805.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251144689.png"></p><ul><li>在游戏中，通过调节 field of view 可以增大可视范围，但其实是将更多的内容放入了更小的屏幕中，这其实是有些冲突的</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251145581.png"></p><ul><li>电视屏幕的限制其实很多，正因如此，我们需要充分意识到在任意时刻下，游戏内容到底占据了多少屏幕范围<ul><li>以 FPS 为例<ul><li>樱井会觉得自己能看到的范围很大，但敌人却很小是个问题<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251156838.png"></li><li>能看到周围环境——这本身不是个问题，但樱井认为这一点不足以作为一种娱乐方式（lacks some impact as a form of entertainment）</li></ul></li><li>在 Kid Icarus: Uprising 中，樱井为了解决敌人可能过小的问题选择将敌人进行一定程度的放大。但当然了，具体应该怎么做还是要看设计需求。<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251209271.png"></li></ul></li><li>在竞速游戏中，赛车内视角（cockpit）可能是最有真实感的视角。虽然樱井感觉大多数开发者都倾向于追求（打造）别的视角<ul><li>因为这样的视角下，真正的 gameplay 相关的部分只占据了很小的一部分</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251148239.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251150593.png"></p><ul><li>你也可以试着玩一玩 VR 游戏，但若是分辨率不够高，会使得远处的物体模糊而无法看清<ul><li>当玩家试图看到更多东西的时候就会出现这个问题</li><li>而且在真实的驾驶情境中，你可以左右瞥视来观察环境，但在 VR 中只能通过偏头来实现这一点</li><li>即便如此，樱井也推荐大家试一试 VR 赛车游戏<ul><li>虽然晕动症是不可避免的话题</li><li>但对于可以将玩家视角和前进方向分开的游戏（比如车子/飞机向前驶去/航行的同时你仍然可以左右转视角）而言，VR 可能是目前最适合的硬件设备</li></ul></li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>屏幕大小是一个很小的话题，但当你投入游戏制作中时，很有可能忽略这一其实比较重要的点</li><li>在制作游戏时想一想如何利用屏幕的不同部分吧，这可能能带来更好的结果！</li><li>将小屏幕的能量发挥到极限吧！</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306251214511.gif"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230618 - 为什么艾尔登法环给予了我目前为止最好的非联机游戏体验</title>
      <link href="2023/06/18/20230618-why-does-elden-ring-offer-me-the-best-offline-gaming-experience/"/>
      <url>2023/06/18/20230618-why-does-elden-ring-offer-me-the-best-offline-gaming-experience/</url>
      
        <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>正好最近 WH 打完了艾尔登法环，而王国之泪也出了。最开始是在思考为什么塞尔达传说（旷野之息/王国之泪）没有那么吸引我，后来不断延展成了这篇文字。</p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>这些文字纯粹是出于个人喜好的思辨，意不在于抨击或吹捧，旨在更好地理解个人对于游戏喜好的深层原因。</p><p>比较中会涉及《艾尔登法环》（“老头环”）、《塞尔达传说：旷野之息》（“旷野之息”）、《塞尔达传说：王国之泪》（“王国之泪”）、《只狼：影逝二度》（“只狼”）、《古墓丽影：暗影》（“古墓丽影”）、《战神 4》（“战神”）、《黑暗之魂 3》（“黑魂”）等游戏。</p><h2 id="论点"><a href="#论点" class="headerlink" title="论点"></a>论点</h2><p>论点——艾尔登法环的游戏体验可能是自大学以来我所拥有过的最好的单机游戏体验，没有之一。</p><p>为什么是大学以来，有如下几个原因：<br>1）再往前的游玩经历稍显久远，记忆的不可靠性使得这之间体验的比较变得不够可靠。<br>相较而言，大学以来的游戏经历更近，记忆也就相对而言更加可靠，基本可以算作在同一基准下的比较。<br>2）之前的阶段能够接触的游戏有限，所以会反复游玩当时所能玩到的游戏。由于 <a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E7%9C%8B%E6%95%88%E6%87%89">曝光效应 mere exposure effect</a> 的存在使得对于那些游戏可能有更多的不可控偏爱。<br>相较而言，大学之后能够更加自由地接触更多的游戏，且可以说是基于自主意愿的选择，本身也可以体现一部分喜好。</p><p>为什么是单机游戏体验？<br>由于 <a href="https://en.wikipedia.org/wiki/Social_facilitation">social facilitation - mere presence</a> 等因素的影响，多人游戏的体验其实是无法与单人游戏在同一基准下进行比较的，所以这里主要讨论的是单机游戏，或是可联网但是非联机状态下进行的游玩体验。</p><p>综合而言，论据有三方面：1）能看到希望的 Hardfun；2）兼顾宏大辉煌和萧瑟腐败的写实美学：3）兼顾探索/解谜但归于战斗的体验。</p><hr><h2 id="论据"><a href="#论据" class="headerlink" title="论据"></a>论据</h2><h3 id="论据-1：能看到希望的-Hardfun"><a href="#论据-1：能看到希望的-Hardfun" class="headerlink" title="论据 1：能看到希望的 Hardfun"></a>论据 1：能看到希望的 Hardfun</h3><p>即有较高难度的同时具有克服困难的可能性。这里指的是 <a href="https://medill-east.github.io/2022/07/30/20220730-why-i-think-elden-ring-is-attractive/">Why I Think Elden Ring Is Attractive</a> 里面提到的有关其提供了足够 <a href="https://medill-east.github.io/2022/06/02/20220601-gcores-playbeyondthegame/#toc-heading-22">hard fun</a> 的观点。艾尔登法环从游玩体验上而言给予了我足够的挑战感。“克服困难的可能性”既指魔法师在游戏中所提供的非常规近身战玩法，也指游戏为玩家所提供的各种“逃课”办法。</p><blockquote><blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306182137662.png"></p></blockquote></blockquote><p>与之相对的，“看不到希望”的 Hardfun 游戏指的是以《只狼：影逝二度》为代表的游戏。这里的看不到希望指的并不是其没有做战斗难度的平衡，相反，只狼中的战斗设计与艾尔登法环一样，都是经过精心设计的，理论上只要你足够熟悉一个怪物的出招方式，就一定能做出相应的应对。这里的看不到希望指的是其对于玩家技巧的考察是不可回避的。</p><blockquote><blockquote><p>关于只狼和艾尔登法环中 BOSS 的 AI 战斗设计思路异同，之前在一个游戏群中看到了一种从叙事角度出发的，易于理解的阐述。<br>只狼中所面对的 BOSS 大多还是可被视为人，而老头环中所面对的敌人大多却是神。正因为是人，所以攻守兼备，更加灵活；正因为是神，所以藐视一切，只重进攻。在只狼中，双方是更加平等的对位关系，BOSS 像是伺机而动的蛇；而在老头环中，玩家所扮演的是试图以下克上的小角色，BOSS 像是无所畏惧的虎。正因如此，只狼中所营造的是一种变招立回的感觉，而老头环所营造的是一种定式应对的感觉。</p></blockquote></blockquote><p>通常来讲，玩家技巧（Player Skills）可被分为三个大类，即物理（Physical）、精神（Mental）和社会（Social）。同为魂类游戏，只狼和老头环中都（主要）涉及对如下玩家技巧的考察：</p><ul><li>物理-时机掌控（timing）<ul><li>即知道何时进行操作的技巧</li></ul></li><li>物理-反射能力（feflexes）<ul><li>即在合适时间对一个刺激进行反应的技巧</li></ul></li><li>物理-精准（precision）<ul><li>即进行精准输入的技巧</li></ul></li><li>物理-灵活（dexterity）<ul><li>即以特定顺序进行按键输入的技巧</li></ul></li><li>精神-观察（observation）<ul><li>即对游戏情境的识别技巧</li></ul></li><li>精神-专注（concentration）<ul><li>即维持对所面对事情的注意力的技巧</li></ul></li><li>精神-战术选择（tactical choice）<ul><li>即根据情境选择合适应对方案的技巧<br>前面提到的不可回避指的是，只狼中玩家只能通过反复尝试，不断提高上面所提到的个人的物理和精神技巧，最终克服困难。但艾尔登法环对于高难挑战的可回避性从 1）转移玩家技巧考察重点；和 2）提供绕路可能性两方面为玩家提供了“逃课”的机会。<br>1）转移玩家技巧考察重点<br>指的是“魔法师”（法爷）这一职业的存在，为玩家提供了主要考察精神技巧而不是物理技巧的可能性。并且这种对于考察技巧的转移不会让玩家感觉有一种其实是在“逃课”的感觉。</li></ul></li></ul><blockquote><blockquote><p>这一点和今天正好看到的<a href="https://medill-east.github.io/2023/06/18/20230618-b05/">樱井政博提到的难度调整方案</a>相呼应，即为玩家提供一种更易于接受的难度调整方案比起直接让玩家调整游戏难度为简单而言，不会让玩家有一种“被侮辱”的感觉。</p></blockquote></blockquote><p>2）提供绕路可能性<br>由于个人对只狼和黑魂的攻略程度不够高，可能会有失偏颇。但这一点主要想强调的是开放世界所提供的，偏线性游戏所不能提供的，绕过 BOSS 的这一可能性。如老头环中，大部分玩家可能会遭遇的第一个真正意义上的剧情 BOSS 是史东薇尔城的接肢葛瑞克，但游戏中同时提供了能够绕过史东薇尔城的小路（更不用提玩家可以直接去探索其他区域的可能性）。这一点在偏线性的游戏中可能是无法做到的。</p><h3 id="论据-2：兼顾宏大辉煌和萧瑟腐败的写实美学"><a href="#论据-2：兼顾宏大辉煌和萧瑟腐败的写实美学" class="headerlink" title="论据 2：兼顾宏大辉煌和萧瑟腐败的写实美学"></a>论据 2：兼顾宏大辉煌和萧瑟腐败的写实美学</h3><p>关于宏大辉煌和萧瑟腐败的美学偏好，可能需要分开论述。<br>这里至少涉及两个方面，一是正反依存，二是大小之分。<br>正反依存指的是所谓阴与阳，明与暗，金玉与败絮，辉煌与萧瑟。个人倾向于认为这种拥有至少两方力量的世界观才相对完整。<br>大小之分指的是宏大构建 vs 见微知著/以小见大的故事展开方式。延伸而言其实有点像是道的超越性 vs 内存性。超越性指其超脱于具体情境的永恒存在，内存性指其蕴含于万物之中。可能是出于对恒常的喜爱？所以偏爱宏大。</p><blockquote><blockquote><p>相较而言，日式的侘寂美学虽然包含了对于死生与箱庭空间的美学思考和哲学体悟，但确是缺少了宏大韵味，所以可能就会觉得“差点意思”。</p></blockquote></blockquote><p>关于写实，思索了一下，这一点可能是由于高中前玩的游戏偏向写实风格而导致的。无论是封神榜，星际争霸，传奇世界，CS1.6，奇迹世界，永恒之塔，魔兽 RPG 等，都是写实风格。虽然当时也曾一度喜欢泡泡堂和跑跑卡丁车，但总的而言这些游戏的游玩时间没有那么长，可能最终的影响也就没有那么大。</p><h3 id="论据-3：兼顾探索但归于战斗的体验"><a href="#论据-3：兼顾探索但归于战斗的体验" class="headerlink" title="论据 3：兼顾探索但归于战斗的体验"></a>论据 3：兼顾探索但归于战斗的体验</h3><p>这里想提到的是艾尔登法环/战神，古墓丽影，以及旷野之息/王国之泪。它们对于战斗、探索和解密有不同的偏重。</p><p>从个人的游玩体验出发所得出的结论是：老头环和战神是围绕战斗而展开的探索，古墓丽影是围绕谜题展开的探索，旷野之息和王国之泪是围绕探索而展开的战斗。</p><p>当然了，这样的分类方式没什么实质意义，只是便于我将它们区分开来。<br>粗暴地说，玩老头环时是战斗的状态，玩古墓丽影时是解谜的状态，而玩塞尔达时是探索的状态。<br>最终可能是出于对战斗的喜爱导致了对于老头环和战神的偏爱。理查德·巴图的<a href="https://medill-east.github.io/2022/06/02/20220601-gcores-playbeyondthegame/#toc-heading-19">四种玩家类型理论</a>可能就没法将我纳入其中任何一类了——杀手型但却不指向玩家，探索型但却不那么偏重世界。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306182119667.png"></p><blockquote><blockquote><p>也许可以提出新的分类方式哈哈。</p></blockquote></blockquote><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总结而言，当前对于游戏的偏好来自于以下方面：<br>1）需要足够的 Hardfun，但与此同时需要提供能够回避挑战的可能性；<br>2）美学偏好——需要至少两方力量，超越性&gt;内存性；<br>3）体验偏好——战斗 &gt; 解密/探索。</p><p>不知未来是否还会发生变化~</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230618 - The Fiend&#39;s Cauldron</title>
      <link href="2023/06/18/20230618-b05/"/>
      <url>2023/06/18/20230618-b05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解提供游戏难度选项的新思路！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/ai7pBxHAcvU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B05-The-Fiend’s-Cauldron"><a href="#B05-The-Fiend’s-Cauldron" class="headerlink" title="B05 - The Fiend’s Cauldron"></a>B05 - The Fiend’s Cauldron</h2><ul><li><p>近年来的大多游戏都会让你从简单、普通、困难三种模式中进行选择</p></li><li><p>在 Kid Lcarus: Uprising 中，樱井创造了一个被称为“Fiend’s Cauldron”（恶魔的坩埚）的系统</p><ul><li>樱井个人认为这是一个从游戏本质出发的非常聪明的机制</li></ul></li><li><p>机制介绍</p><ul><li>在每个阶段开始前，恶魔的坩埚会出现，玩家在这时可以设定强度（intensity），默认强度为 2</li><li>随着强度增加，游戏难度也会增加<ul><li>敌人变多</li><li>敌人变得更具侵略性</li><li>敌人具有更高的攻击和防御属性</li></ul></li><li>更高的强度也能获得更多的得分<ul><li>更多的生命奖励</li><li>更强的武器</li><li>更强力的道具</li></ul></li><li>如果失败后，在坩埚中加入的心心会部分洒出<ul><li>难度相应降低</li><li>但此时因为已经损失了部分心心，要想获得相应的奖励可能会变得更加困难</li></ul></li><li>如果想要降低难度，也可以花费心心来降低强度<ul><li>如果强度被降为 0，你就几乎是无敌的状态</li><li>也就是说无论是升高还是降低强度，都需要花费心心</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306181247256.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306181325455.gif"></p><ul><li><p>Risk and reward</p><ul><li>很清晰</li><li>如果承受更多的风险，就可能会有更多的收益</li></ul></li><li><p>新颖之处</p><ul><li>这个系统在你失败后自动降低了难度，所以基本不会一直卡关</li><li>虽然这可能无法完全移除失败的痛苦，但至少不会像在被迫简单模式的时候那样感觉“受到侮辱”</li><li>并且玩家不需要像传统游戏一样，在整个游戏中都使用简单模式游玩，玩家可以调整每一关的难度，这可以帮助玩家获得更好的体验</li><li>如果强度被调整为 0，几乎就是无敌的，所以基本不可能有卡关的情况出现</li></ul></li><li><p>有问题的地方</p><ul><li>初学者可能会觉得游戏过于硬核<ul><li>一个不断让你逼近极限的游戏很难被称之为“休闲”</li><li>游戏的关卡相对比较大，也就意味着会有很多敌人</li><li>玩家死亡后也没有重生的机会</li></ul></li><li>Game essence 能够让游戏更具游戏感，但可能也会让游戏的受众范围变小（conversely make games feel less approachable）。这对于小屏幕的 3DS 机器更是如此<ul><li>Push and pull</li><li>Risk and reward</li></ul></li><li>樱井也怀疑，降低强度到 2 以下就意味着降低难度是否被玩家很好地理解了<ul><li>新手玩家是最需要这些部分的玩家</li><li>但这是开发中没有足够时间来进行更进一步优化的部分</li><li>如果再来一次的话，樱井希望能在这个部分做得更好</li></ul></li></ul></li><li><p>目前的游戏可以让玩家几乎没有限制地在任意时间更改难度</p><ul><li>这当然是很有必要的设计</li><li>但樱井内心仍然认为应该奖励那些愿意使用更高难度游玩的玩家</li></ul></li><li><p>虽然恶魔的坩埚这一机制并不完美，但樱井觉得这确实是一个很好的设计，这也可以为开发者们提供一种新的提供难度选项的思路</p></li><li><p>一些 Smash Bros. For Will U/3DS 和 Smash Bros. Ultimate 中的单人游玩模式也用了一种类似的方式来提供难度调整</p><ul><li>不过在这两个游戏中获取游戏点数不像 Kid Icarus: Uprising 之中那么重要，所以相对而言这个机制在这里没有那么重要</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306181353232.gif"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>要是能在家用主机上 玩一玩 Kid Icarus: Uprising 当然非常好，樱井很好奇有没有人愿意移植</p><blockquote><blockquote><p>然后露出了意味深长的笑容 (￣▽￣)／</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306181356391.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三十五章 每个设计师都有个目标</title>
      <link href="2023/06/17/20230617-theartofgamedesign-chap35/"/>
      <url>2023/06/17/20230617-theartofgamedesign-chap35/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三十五章-每个设计师都有个目标"><a href="#第三十五章-每个设计师都有个目标" class="headerlink" title="第三十五章 每个设计师都有个目标"></a>第三十五章 每个设计师都有个目标</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306162359945.png"></p><h3 id="最深刻的主题"><a href="#最深刻的主题" class="headerlink" title="最深刻的主题"></a>最深刻的主题</h3><ul><li>倾听你自己内心的声音<ul><li>为什么游戏设计对你来说如此重要</li></ul></li></ul><h4 id="112-号透镜：乌鸦"><a href="#112-号透镜：乌鸦" class="headerlink" title="112 号透镜：乌鸦"></a>112 号透镜：乌鸦</h4><p>为了铭记最重要的目标，问</p><ul><li>现在制作的游戏值得我投入时间吗</li></ul><h4 id="无限号透镜：秘密目的"><a href="#无限号透镜：秘密目的" class="headerlink" title="无限号透镜：秘密目的"></a>无限号透镜：秘密目的</h4><p>要确保你在为自己唯一的、真正的目的工作，问</p><ul><li>为什么我要做现在做的事</li></ul><h2 id="再见"><a href="#再见" class="headerlink" title="再见"></a>再见</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306170026881.png"></p><h3 id="一切美好的事物"><a href="#一切美好的事物" class="headerlink" title="一切美好的事物"></a>一切美好的事物</h3>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三十四章 设计师担负的责任</title>
      <link href="2023/06/16/20230616-theartofgamedesign-chap34/"/>
      <url>2023/06/16/20230616-theartofgamedesign-chap34/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三十四章-设计师担负的责任"><a href="#第三十四章-设计师担负的责任" class="headerlink" title="第三十四章 设计师担负的责任"></a>第三十四章 设计师担负的责任</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306162132301.png"></p><h3 id="默默无闻的风险"><a href="#默默无闻的风险" class="headerlink" title="默默无闻的风险"></a>默默无闻的风险</h3><ul><li>唯一能够为你创造的东西承担道德责任的人，只有你</li></ul><h3 id="负起责任"><a href="#负起责任" class="headerlink" title="负起责任"></a>负起责任</h3><ul><li>在线游戏真正危险之处，是它为危险的人提供了匿名的面具，让他们可以接触到无辜的受害者</li></ul><h3 id="你的隐藏计划"><a href="#你的隐藏计划" class="headerlink" title="你的隐藏计划"></a>你的隐藏计划</h3><ul><li>你的游戏能够为人类服务的唯一条件是有尽可能多的人来玩</li><li>如果你能设法通过你的游戏将玩家变得更好，那么他们会感受到，并且记起其他人关心他们会变成怎样的珍贵感觉</li></ul><h3 id="一目了然中隐藏的秘密"><a href="#一目了然中隐藏的秘密" class="headerlink" title="一目了然中隐藏的秘密"></a>一目了然中隐藏的秘密</h3><h3 id="戒指"><a href="#戒指" class="headerlink" title="戒指"></a>戒指</h3><ul><li>小指不起眼，但却引导着你的手</li><li>作为游戏设计师应该戴上下面这枚无形戒指</li></ul><h4 id="111-号透镜：责任"><a href="#111-号透镜：责任" class="headerlink" title="111 号透镜：责任"></a>111 号透镜：责任</h4><p>要担负起作为游戏设计师的责任，问</p><ul><li>我的游戏能帮助别人吗，怎样做到</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三十三章 游戏改变玩家</title>
      <link href="2023/06/15/20230615-theartofgamedesign-chap33/"/>
      <url>2023/06/15/20230615-theartofgamedesign-chap33/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三十三章-游戏改变玩家"><a href="#第三十三章-游戏改变玩家" class="headerlink" title="第三十三章 游戏改变玩家"></a>第三十三章 游戏改变玩家</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306152345195.png"></p><h3 id="游戏怎么改变我们"><a href="#游戏怎么改变我们" class="headerlink" title="游戏怎么改变我们"></a>游戏怎么改变我们</h3><h3 id="游戏有益于玩家吗"><a href="#游戏有益于玩家吗" class="headerlink" title="游戏有益于玩家吗"></a>游戏有益于玩家吗</h3><h4 id="情感维护"><a href="#情感维护" class="headerlink" title="情感维护"></a>情感维护</h4><ul><li>发泄负面情绪</li><li>振作自己</li><li>重建视角<ul><li>脱离现实世界，从一个较远的视角看待真实世界的麻烦</li></ul></li><li>建立信心</li><li>放松</li></ul><h4 id="连接彼此"><a href="#连接彼此" class="headerlink" title="连接彼此"></a>连接彼此</h4><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><h4 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306152348666.png"></p><ul><li><p>教育类的电子游戏为何不被重视</p><ul><li>时间限制</li><li>进度不同<ul><li>学校里老师大部分时间会让大家进度一致</li></ul></li><li>1965<ul><li>目前的教育系统大多由 1965 年以前生人掌控<ul><li>但这些人在长大过程中并没有电子游戏</li></ul></li></ul></li><li>优秀教育类游戏开发成本很高</li></ul></li><li><p>一些游戏具有优势的教育领域</p><ul><li>可视化进程</li><li>抽象概念具象化</li><li>完全投入</li><li>细分目标</li></ul></li><li><p>大脑完全投入时会学习哪些东西</p><ul><li>事实</li><li>解决问题</li><li>关系系统<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306152356103.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306152359905.png"><ul><li>适合通过游戏/模拟来了解的关系系统包括<ul><li>人体循环</li><li>大城市交通模式</li><li>核反应堆</li><li>细胞工作原理</li><li>濒危物种生态系统</li><li>地球大气加热和冷却系统</li></ul></li><li>测试极限条件能帮助你更好了解系统如何运作</li><li>有缺陷的模拟系统比起完美的系统更有教育意义<ul><li>让你思考为什么这样的情况没有出现在现实中</li></ul></li></ul></li><li>新的领悟<ul><li>给予玩家新的视角来看待事情</li></ul></li><li>好奇心</li><li>创造教育实例<ul><li>带有各种实际场景和待解决问题的游戏，可以作为一种帮助教师创造教育实例的工具</li></ul></li></ul></li></ul><h3 id="塑造性游戏"><a href="#塑造性游戏" class="headerlink" title="塑造性游戏"></a>塑造性游戏</h3><p>作者因不满严肃游戏的说法所创造的另一种说法，transformational games，因为这类游戏的目的是改变玩家。</p><h4 id="塑造性建议-1：定义改变"><a href="#塑造性建议-1：定义改变" class="headerlink" title="塑造性建议 1：定义改变"></a>塑造性建议 1：定义改变</h4><ul><li>要创造成功且有意义的改变，必须明确表明改变的内容，以及游戏具体将如何培养这种改变</li></ul><h4 id="塑造性建议-2：找到领域专家"><a href="#塑造性建议-2：找到领域专家" class="headerlink" title="塑造性建议 2：找到领域专家"></a>塑造性建议 2：找到领域专家</h4><ul><li>有两类专家<ul><li>对知识和技术极其精通</li><li>非常擅长教授这些知识和技术</li></ul></li><li>如果能和两类专家同事合作并了解哪些知识更重要，就更有机会制作出色的塑造性游戏</li></ul><h4 id="塑造性建议-3：教师们需要什么"><a href="#塑造性建议-3：教师们需要什么" class="headerlink" title="塑造性建议 3：教师们需要什么"></a>塑造性建议 3：教师们需要什么</h4><ul><li>目标应该是成为优秀教师的工具和好帮手</li></ul><h4 id="塑造性建议-4：不要试图做太多"><a href="#塑造性建议-4：不要试图做太多" class="headerlink" title="塑造性建议 4：不要试图做太多"></a>塑造性建议 4：不要试图做太多</h4><ul><li>从关键点入手，做到极致</li><li>例子<ul><li>和平使者</li><li>龙盒子 PLUS</li><li>僵尸除法</li><li>请出示证件</li></ul></li></ul><h4 id="塑造性建议-5：合理评估变化"><a href="#塑造性建议-5：合理评估变化" class="headerlink" title="塑造性建议 5：合理评估变化"></a>塑造性建议 5：合理评估变化</h4><ul><li>五个层面的评估项，越往后越严苛<ul><li>感觉大概有用</li><li>故事趣闻<ul><li>听别人说玩了游戏的玩家有了有益变化</li></ul></li><li>领域专家认同</li><li>非正式调查和评估<ul><li>前后对比实验测试</li></ul></li><li>科学测试和评估</li></ul></li></ul><h4 id="塑造性建议-6：选择正确的游戏场所"><a href="#塑造性建议-6：选择正确的游戏场所" class="headerlink" title="塑造性建议 6：选择正确的游戏场所"></a>塑造性建议 6：选择正确的游戏场所</h4><ul><li>地点、方式、同伴，都会对塑造性目标达成效果造成巨大影响</li></ul><h4 id="塑造性建议-7：接受市场现状"><a href="#塑造性建议-7：接受市场现状" class="headerlink" title="塑造性建议 7：接受市场现状"></a>塑造性建议 7：接受市场现状</h4><ul><li>商业智慧和经验同优秀的游戏设计能力同等重要</li></ul><h3 id="游戏会对人有害吗"><a href="#游戏会对人有害吗" class="headerlink" title="游戏会对人有害吗"></a>游戏会对人有害吗</h3><h4 id="暴力元素"><a href="#暴力元素" class="headerlink" title="暴力元素"></a>暴力元素</h4><ul><li>人们的恐惧来源<ul><li>玩带有真实化的暴力内容的游戏会让人们对于真实世界中的暴力感到麻木不仁，甚至更糟的情况，让人们觉得真实世界的暴力是有趣和令人愉快的</li></ul></li></ul><h4 id="成瘾性"><a href="#成瘾性" class="headerlink" title="成瘾性"></a>成瘾性</h4><p>游戏设计师有责任构建游戏结构来鼓励一种平衡的生活<br>宫本茂在给孩子们签名时常写：天气好的时候要去外面玩。</p><h3 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h3><ul><li>我们不是在设计游戏，而是在设计一段体验</li></ul><h4 id="110-号透镜：塑造性"><a href="#110-号透镜：塑造性" class="headerlink" title="110 号透镜：塑造性"></a>110 号透镜：塑造性</h4><p>游戏创造体验，体验改变人。要确保游戏的玩家变得更好，问</p><ul><li>我的游戏怎样让玩家可以变得更好</li><li>我的游戏怎样让玩家可以变得更糟</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三十二章 设计师和客户都希望游戏能够盈利</title>
      <link href="2023/06/14/20230614-theartofgamedesign-chap32/"/>
      <url>2023/06/14/20230614-theartofgamedesign-chap32/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三十二章-设计师和客户都希望游戏能够盈利"><a href="#第三十二章-设计师和客户都希望游戏能够盈利" class="headerlink" title="第三十二章 设计师和客户都希望游戏能够盈利"></a>第三十二章 设计师和客户都希望游戏能够盈利</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306142125849.png"></p><h3 id="爱与金钱"><a href="#爱与金钱" class="headerlink" title="爱与金钱"></a>爱与金钱</h3><ul><li>业余这个词本意就是有爱的人的意思</li><li>规则由掌握金钱的人制定</li><li>熟悉游戏商业运作对你来说非常重要，这样你才能和掌握金钱的人进行有意义的讨论<ul><li>这样也能给你更多创意把控，你需要清楚解释为什么你所看重的特性能来带利益</li></ul></li></ul><h3 id="了解你的商业模式"><a href="#了解你的商业模式" class="headerlink" title="了解你的商业模式"></a>了解你的商业模式</h3><h4 id="零售"><a href="#零售" class="headerlink" title="零售"></a>零售</h4><ul><li>理解钱从哪来，去哪里，为什么，就理解了商业</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306142132623.png"></p><ul><li><p>平台商</p><ul><li>如索尼、任天堂、微软</li><li>主机不赚钱，赚钱的是在上面发售的游戏的抽成</li></ul></li><li><p>零售商</p><ul><li>其实不怎么赚钱</li><li>开店和运营的成本不低</li><li>会根据协议要求发行商回购挤压的游戏盘</li></ul></li><li><p>发行商</p><ul><li>需要进行协调</li><li>如果游戏表现糟糕，他们是唯一亏钱的人</li></ul></li><li><p>开发商</p><ul><li>至少拿到了开发过程中的薪水</li><li>分成中的很大一部分是用来覆盖游戏赔钱的游戏发行成本的保险</li></ul></li></ul><h4 id="直接下载"><a href="#直接下载" class="headerlink" title="直接下载"></a>直接下载</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306142141780.png"></p><ul><li>问号来自于市场和广告</li></ul><h4 id="免费游戏-F2P"><a href="#免费游戏-F2P" class="headerlink" title="免费游戏 F2P"></a>免费游戏 F2P</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306142142926.png"></p><ul><li>平均 LTV<ul><li>每个用户的价值</li><li>平均每个玩家在游戏运营期间总共会在游戏中花多少钱</li><li>大部分玩家永不付费</li><li>小部分玩家花费很多</li></ul></li><li>用户获取成本<ul><li>即买量</li><li>衡量吸引每个下载并进入游戏的新玩家需要付出的平均成本</li></ul></li></ul><h3 id="了解竞争对手"><a href="#了解竞争对手" class="headerlink" title="了解竞争对手"></a>了解竞争对手</h3><ul><li>如何脱颖而出</li><li>你的游戏最好能够填补一项市场细分领域的空白</li></ul><h3 id="了解受众"><a href="#了解受众" class="headerlink" title="了解受众"></a>了解受众</h3><ul><li>了解他们如何玩游戏，如何消费<ul><li>如何定价</li><li>他们喜欢什么特色</li></ul></li><li>硬核 vs 休闲<ul><li>需要了解游戏定位</li></ul></li></ul><h3 id="了解财务语言"><a href="#了解财务语言" class="headerlink" title="了解财务语言"></a>了解财务语言</h3><h4 id="一般游戏商务术语"><a href="#一般游戏商务术语" class="headerlink" title="一般游戏商务术语"></a>一般游戏商务术语</h4><ul><li>SKU：发音为 skew，代表库存单位<ul><li>一个商店中库存的独特商品标识</li><li>发行商会通过一年推出多少 SKU 评价业绩</li></ul></li><li>COGS<ul><li>Cost of goods sold</li><li>每卖出一份游戏所需要的研发成本</li></ul></li><li>Burn rate<ul><li>资金消耗率</li><li>每月需要花费多少成本来维持团队运作<ul><li>工资</li><li>福利</li><li>房租…</li></ul></li></ul></li><li>Sold in vs. Sold through<ul><li>出货 vs. 消费者购买</li><li>零售商从发行商购买游戏就是游戏出货</li><li>消费者从零售商买走游戏就是消费者购买</li></ul></li><li>Units sold<ul><li>销售量</li><li>有多少份游戏被购买/下载</li></ul></li><li>Breakeven<ul><li>收支平衡点</li><li>销量要到多少发行商才能回本</li></ul></li></ul><h4 id="免费游戏商务术语"><a href="#免费游戏商务术语" class="headerlink" title="免费游戏商务术语"></a>免费游戏商务术语</h4><ul><li>Churn<ul><li>流失率</li><li>游戏每月流失多少用户</li></ul></li><li>Cost of acquisition<ul><li>获客成本</li><li>吸引用户下载和启动游戏需要花费的平均成本</li></ul></li><li>DAU<ul><li>每日活跃用户</li></ul></li><li>MAU<ul><li>月活</li><li>不等于 DAU x 30，因为可能不是同一批玩家在玩</li><li>MAU / DAU 可以看出很多问题<ul><li>如果比值很大，意味着流失率很高</li></ul></li></ul></li><li>ARPU<ul><li>平均每个用户的价值<ul><li>每月的用户付费量</li><li>= 前三十天的总收入/MAU</li></ul></li></ul></li><li>ARPPU<ul><li>从所有付费玩家算出平均每个用户付费的值</li></ul></li><li>LTV<ul><li>终身用户价值<ul><li>从开始下载到删除游戏能从玩家身上赚到多少钱</li></ul></li><li>这决定了获客成本的投入</li></ul></li><li>K-factor<ul><li>病毒传播指数</li><li>每个用户会带来多少新用户</li></ul></li><li>Whale<ul><li>即大 R 玩家</li></ul></li></ul><h3 id="了解销量榜单"><a href="#了解销量榜单" class="headerlink" title="了解销量榜单"></a>了解销量榜单</h3><ul><li>可以试着猜想去年最感兴趣平台最赚钱的十款游戏<ul><li>再与实际情况对比</li></ul></li><li>Electronic Entertainment Design and Research<ul><li>该公司将游戏特性拆分，并最终归纳为销量的回归模型</li></ul></li></ul><h3 id="壁垒的重要性"><a href="#壁垒的重要性" class="headerlink" title="壁垒的重要性"></a>壁垒的重要性</h3><ul><li><p>红海市场</p><ul><li>供大于求的买方市场</li></ul></li><li><p>蓝海市场</p><ul><li>竞争对手相对较少的市场</li></ul></li><li><p>一些壁垒</p><ul><li>技术壁垒</li><li>硬件壁垒</li><li>专业领域壁垒</li><li>销售和市场壁垒</li><li>想象力壁垒</li><li>关系壁垒<ul><li>IP 授权</li></ul></li><li>不确定性壁垒</li></ul></li></ul><h4 id="109-号透镜：利益"><a href="#109-号透镜：利益" class="headerlink" title="109 号透镜：利益"></a>109 号透镜：利益</h4><p>利益激发着整个游戏行业的获利，以下问题将帮助游戏提高盈利能力</p><ul><li>游戏商业模式中钱从哪来，往哪去，为什么</li><li>需要多少成本来生产、推广、分销、运营游戏？为什么</li><li>游戏可以获得多少销售收入，为什么</li><li>游戏所在市场的壁垒是什么</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三十一章 设计师要向客户推销自己的想法</title>
      <link href="2023/06/13/20230613-theartofgamedesign-chap31/"/>
      <url>2023/06/13/20230613-theartofgamedesign-chap31/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三十一章-设计师要向客户推销自己的想法"><a href="#第三十一章-设计师要向客户推销自己的想法" class="headerlink" title="第三十一章 设计师要向客户推销自己的想法"></a>第三十一章 设计师要向客户推销自己的想法</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306132322503.png"></p><h3 id="为什么是我"><a href="#为什么是我" class="headerlink" title="为什么是我"></a>为什么是我</h3><p>设计师应该比其他任何人更加了解这个游戏，了解它为什么比其他游戏更好</p><ul><li>一开始需要向团队成员和潜在合作伙伴推销大概想法</li><li>下一步需要向管理层推销，获得开发原型的资金</li><li>原型做好后需要拿着原型去向发行商/众筹机构推销获得生产资金</li><li>游戏完成后需要带着它参加展会，向记者推销</li></ul><h3 id="权力的谈判"><a href="#权力的谈判" class="headerlink" title="权力的谈判"></a>权力的谈判</h3><ul><li>权力就是获得想要的东西的能力<ul><li>能获得就是有权力</li></ul></li><li>推销游戏就是权力的谈判<ul><li>目的是获得你想要的东西</li><li>手段是让别人相信你的游戏会帮助他们获得他们想要的东西<ul><li>别忘了三层欲望结构<ul><li>话语</li><li>思想</li><li>内心</li></ul></li></ul></li></ul></li></ul><h3 id="想法的层次"><a href="#想法的层次" class="headerlink" title="想法的层次"></a>想法的层次</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306140029978.png"></p><h3 id="成功推销的-12-条建议"><a href="#成功推销的-12-条建议" class="headerlink" title="成功推销的 12 条建议"></a>成功推销的 12 条建议</h3><h4 id="推销建议-1：敲开客户的门"><a href="#推销建议-1：敲开客户的门" class="headerlink" title="推销建议 1：敲开客户的门"></a>推销建议 1：敲开客户的门</h4><ul><li>特别是对于大的发行商，有可能的话最好能联系到内部人员，让其为你的项目背书。<ul><li>这也是游戏展会的重要性所在</li></ul></li></ul><h4 id="推销建议-2：展示你的认真"><a href="#推销建议-2：展示你的认真" class="headerlink" title="推销建议 2：展示你的认真"></a>推销建议 2：展示你的认真</h4><ul><li>如果你自己都不在乎你的主意，不去做实验来探究答案，为什么资方要在乎？</li><li>你要证明你对游戏方方面面都已经考虑周全，包括目标市场和如何运营<ul><li>很多页的详细文档虽然没人看，但却能证明你的诚意</li><li>更好的选择是配合原型做一次演讲，详细说明为什么你的游戏可以大卖</li></ul></li></ul><h4 id="推销建议-3：条理分明"><a href="#推销建议-3：条理分明" class="headerlink" title="推销建议 3：条理分明"></a>推销建议 3：条理分明</h4><ul><li>做好周密计划</li><li>让材料清晰可读</li><li>提前测试准备</li></ul><h4 id="推销建议-4：充满激情"><a href="#推销建议-4：充满激情" class="headerlink" title="推销建议 4：充满激情"></a>推销建议 4：充满激情</h4><ul><li>激情不仅仅是激动，更包含了不惜一切代价制作出一个优质游戏的动力和承诺</li></ul><h4 id="推销建议-5：站在听众角度"><a href="#推销建议-5：站在听众角度" class="headerlink" title="推销建议 5：站在听众角度"></a>推销建议 5：站在听众角度</h4><ul><li>有机会的话在推销之前就接触他们，了解他们的需求，确保自己的游戏是他们所需要的</li><li>要用易于了解的语言让听众听懂你的讲述，避免使用专业术语，可以先给家人朋友讲述</li><li>直奔主题，如果他们对当前的部分不感兴趣，直接跳到下一部分<ul><li>如果他们需要了解更多他们会提问的</li></ul></li><li>如果你的听众被说服了，那他可能还需要去说服上级，以下是一些能够帮助到他们的建议<ul><li>开门见山说明游戏的平台、受众、类型</li><li>不要用游戏的故事开头<ul><li>还不如给他们说明你的游戏满足了人们什么样的幻想（[[游戏设计艺术#83 号透镜：幻想]]）</li></ul></li><li>展示代替讲述<ul><li>游戏精彩剪辑 + 实机 &gt; 概念 PPT &gt; 空讲</li><li>图像比语言更有力</li></ul></li><li>让听众更容易向其他人推销<ul><li>为他们制作推销的材料</li></ul></li></ul></li></ul><h4 id="推销建议-6：设计你的推销"><a href="#推销建议-6：设计你的推销" class="headerlink" title="推销建议 6：设计你的推销"></a>推销建议 6：设计你的推销</h4><ul><li><p>容易理解</p></li><li><p>充满惊喜</p></li><li><p>有着科学的兴趣曲线</p></li><li><p>有良好的美术数据</p></li><li><p>尽可能多的图片代替文字</p></li><li><p>展示优雅富有逻辑</p></li><li><p>焦点集中在游戏最独特的部分</p><ul><li>为什么它能脱颖而出</li><li>为什么它是最适合推销对象的投资</li></ul></li><li><p>尽可能让展示令人印象深刻</p></li><li><p>提前设想好展示的情景、流程</p></li></ul><h4 id="推销建议-7：熟悉所有细节"><a href="#推销建议-7：熟悉所有细节" class="headerlink" title="推销建议 7：熟悉所有细节"></a>推销建议 7：熟悉所有细节</h4><ul><li><p>设计细节</p><ul><li>游戏时间总长</li><li>完成一关需要多久</li><li>多人游戏通过什么形式进行</li></ul></li><li><p>时间表细节</p><ul><li>Project management</li><li>制作时长</li><li>Milestone ddl</li></ul></li><li><p>财务细节</p><ul><li>成本</li><li>人力、工时</li><li>其他预算</li><li>销售额<ul><li>用最好和最差情况估计一个范围</li><li>要确保最低销售额能够让资方赚到钱</li></ul></li><li>风险控制<ul><li>什么是最大的风险，如何面对</li></ul></li></ul></li><li><p>当你能预料到别人的问题，并准备好完美答案，你将会有神一般的说服力</p></li></ul><h4 id="推销建议-8：信心满满"><a href="#推销建议-8：信心满满" class="headerlink" title="推销建议 8：信心满满"></a>推销建议 8：信心满满</h4><ul><li><p>信心体现在你确信你的游戏就是客户所需要的，你的团队是实现它的最佳人选</p></li><li><p>当你展示令人惊叹的东西，应该表现得好像没什么大不了</p></li><li><p>万能回答</p><ul><li>绝对没问题<ul><li>当然了，需要准备好论据</li></ul></li></ul></li><li><p>自信地握手</p><ul><li>不断练习以确保这一点</li></ul></li></ul><h4 id="推销建议-9：灵活应对"><a href="#推销建议-9：灵活应对" class="headerlink" title="推销建议 9：灵活应对"></a>推销建议 9：灵活应对</h4><h4 id="推销建议-10：事先预演"><a href="#推销建议-10：事先预演" class="headerlink" title="推销建议 10：事先预演"></a>推销建议 10：事先预演</h4><ul><li>确保观点的逻辑顺序和连贯性</li><li>除非必要或者他们真的喜欢，不要邀请高管们试玩原型<ul><li>他们并不熟悉，很可能陷入尴尬</li></ul></li></ul><h4 id="推销建议-11：让他们成为创作者"><a href="#推销建议-11：让他们成为创作者" class="headerlink" title="推销建议 11：让他们成为创作者"></a>推销建议 11：让他们成为创作者</h4><ul><li>可以试着先提前说服其中一人，让其参与辩护</li><li>试着融合他们的想法，让他们感觉这也是他们的作品</li></ul><h4 id="推销建议-12：跟进"><a href="#推销建议-12：跟进" class="headerlink" title="推销建议 12：跟进"></a>推销建议 12：跟进</h4><ul><li>过几天应该找个借口写邮件跟进，以此暗示对方尚未答复</li><li>持续跟进，但不要太频繁</li></ul><h3 id="要不要尝试众筹"><a href="#要不要尝试众筹" class="headerlink" title="要不要尝试众筹"></a>要不要尝试众筹</h3><ul><li>Kickstarter</li><li>工作量很大<ul><li>一个月设计和制作相关资料</li><li>一个月推广</li><li>一个月来为付钱的客户兑现承诺（赠送 T 恤、定制内容…）</li></ul></li><li>众筹其实是预购<ul><li>适合硬件</li><li>适合定价 20 美元以上的游戏</li></ul></li><li>尽可能降低筹资目标</li><li>期限越短越好<ul><li>大部分筹资来源于第一周和最后一周</li></ul></li><li>承诺尽量简单的回报</li><li>画面代替文字<ul><li>展示切片而不是全貌</li></ul></li><li>全力推动传播</li><li>为更高目标留出空间<ul><li>“最低目标是 xx，但如果能达到 xxx，我们就 xxx”</li></ul></li><li>要有名气</li></ul><h4 id="108-号透镜：推销"><a href="#108-号透镜：推销" class="headerlink" title="108 号透镜：推销"></a>108 号透镜：推销</h4><p>要确保推销尽可能好，问</p><ul><li>为什么要向这个客户推销这个游戏</li><li>什么才是“一场成功的推销”</li><li>能够为推销的对象实现哪些目标/带来哪些好处</li><li>推销的对象需要了解关于游戏的哪些信息</li><li>如果推销对象是某位高管，对他来说最重要的事情是游戏是否可以赚钱，能赚多少</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三十章 你的游戏总有个客户</title>
      <link href="2023/06/12/20230612-theartofgamedesign-chap30/"/>
      <url>2023/06/12/20230612-theartofgamedesign-chap30/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三十章-你的游戏总有个客户"><a href="#第三十章-你的游戏总有个客户" class="headerlink" title="第三十章 你的游戏总有个客户"></a>第三十章 你的游戏总有个客户</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306122249003.png"></p><h3 id="谁在乎客户的想法呢"><a href="#谁在乎客户的想法呢" class="headerlink" title="谁在乎客户的想法呢"></a>谁在乎客户的想法呢</h3><ul><li>客户即资方</li></ul><h3 id="应对客户的烂点子"><a href="#应对客户的烂点子" class="headerlink" title="应对客户的烂点子"></a>应对客户的烂点子</h3><p>应该试图理解客户为什么会出这样的主意</p><blockquote><blockquote><p>经典的福特汽车问题，人们不知道要创造汽车，只知道要更快的马</p></blockquote></blockquote><h3 id="那块石头不行"><a href="#那块石头不行" class="headerlink" title="那块石头不行"></a>那块石头不行</h3><ul><li>能设法让用户了解他们需要的是什么，也可以帮助我们更好地进行设计</li></ul><h3 id="欲望的三个层面"><a href="#欲望的三个层面" class="headerlink" title="欲望的三个层面"></a>欲望的三个层面</h3><ul><li><p>欲望的三个层面</p><ul><li>话语</li><li>想法</li><li>内心</li></ul></li><li><p>应该设法了解想法甚至内心</p></li></ul><h3 id="1498-年的佛罗伦萨"><a href="#1498-年的佛罗伦萨" class="headerlink" title="1498 年的佛罗伦萨"></a>1498 年的佛罗伦萨</h3><ul><li><p>即米开朗基罗创作大卫的故事</p></li><li><p>让客户参与其中又不破坏整体创意是最好的局面</p></li><li><p>如果认真用心倾听客户，他们也会听从于你</p></li></ul><h4 id="107-号透镜：客户"><a href="#107-号透镜：客户" class="headerlink" title="107 号透镜：客户"></a>107 号透镜：客户</h4><p>如果游戏有一位雇主，应该花心思搞清楚他们想要的是什么，问</p><ul><li>客户的话语中说明他想要什么</li><li>客户实际的想法中想要的是什么</li><li>在客户内心深处，真正想实现的愿望是什么</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十九章 制作游戏的技术</title>
      <link href="2023/06/11/20230611-theartofgamedesign-chap29/"/>
      <url>2023/06/11/20230611-theartofgamedesign-chap29/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十九章-制作游戏的技术"><a href="#第二十九章-制作游戏的技术" class="headerlink" title="第二十九章 制作游戏的技术"></a>第二十九章 制作游戏的技术</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111918781.png"></p><h3 id="终于该谈论技术了"><a href="#终于该谈论技术了" class="headerlink" title="终于该谈论技术了"></a>终于该谈论技术了</h3><blockquote><p>机器并没有把人们从自然界最大的问题当中解脱出来，而是使他深陷其中。<br>——安托万·德圣埃克絮佩里</p></blockquote><p>对于游戏设计师而言，“技术”表示组成我们游戏的媒介——使得游戏能够实现的实际物质。</p><h3 id="基础性技术和装饰性技术"><a href="#基础性技术和装饰性技术" class="headerlink" title="基础性技术和装饰性技术"></a>基础性技术和装饰性技术</h3><ul><li>基础性技术能让一种全新游戏体验变成现实</li><li>装饰性技术只能让已经存在的体验变得更好</li></ul><h4 id="米老鼠的第一部卡通片"><a href="#米老鼠的第一部卡通片" class="headerlink" title="米老鼠的第一部卡通片"></a>米老鼠的第一部卡通片</h4><p>《疯狂的飞机》其实是米老鼠的第一部卡通片，但大部分人都以为《汽船威利号》是米老鼠的第一部卡通片，因为它用了同步音轨。这里的同步音轨就是基础性技术。<br>之后虽然《疯狂的飞机》也添加了同步音轨，但在其中只是作为装饰性技术。</p><h4 id="角力棋"><a href="#角力棋" class="headerlink" title="角力棋"></a>角力棋</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306112032104.png"></p><h4 id="刺猬索尼克"><a href="#刺猬索尼克" class="headerlink" title="刺猬索尼克"></a>刺猬索尼克</h4><p>世嘉五代游戏机和当时的竞争对手任天堂的超任游戏机之间的最大区别就是前者的系统架构支持非常快速的屏幕卷动。因此索尼克系列游戏都是围绕这一特性进行设计的，当时的玩家从未见过主角能够移动如此之快的游戏，因此得到了独一无二的新奇体验。</p><h4 id="神秘岛"><a href="#神秘岛" class="headerlink" title="神秘岛"></a>神秘岛</h4><ul><li>基础性技术<ul><li>CD-ROM 光盘驱动</li></ul></li><li>装饰性技术<ul><li>华丽 3D 画面和美术设计</li></ul></li></ul><h4 id="Journey"><a href="#Journey" class="headerlink" title="Journey"></a>Journey</h4><p>不是陈星汉的 journey<br>而是二十世纪八十年代早期的一款与 journey 乐队同名的角色闯关平台动作街机游戏<br>最开始照片技术被作为基础性技术而运用其中，后来因为一些原因变为了装饰性技术</p><h4 id="布娃娃系统"><a href="#布娃娃系统" class="headerlink" title="布娃娃系统"></a>布娃娃系统</h4><p>Ragdoll 在很多游戏中被作为装饰性技术而使用<br>但在 Ico 中被作为了基础性技术而使用，玩家需要始终牵着公主的手来闯关</p><h3 id="触摸屏革命"><a href="#触摸屏革命" class="headerlink" title="触摸屏革命"></a>触摸屏革命</h3><p>一直以来对于新技术都有同样的故事在上演：刚开始出现时，人们认为它没有任何价值，知道设计师们开始使用新技术设计专门的产品</p><h3 id="技术成熟度曲线"><a href="#技术成熟度曲线" class="headerlink" title="技术成熟度曲线"></a>技术成熟度曲线</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306112042974.png" alt="技术成熟度曲线"></p><ul><li>可见度可以理解为舆论热度</li></ul><p>需要从中学会</p><ol><li>免疫</li></ol><ul><li>不要把整个职业生涯堵在某个还没被证明可用的技术上</li></ul><ol start="2"><li>预防</li></ol><ul><li>让团队中的其他人了解技术成熟度曲线以规避风险</li></ul><ol start="3"><li>融资技巧</li></ol><ul><li>在幻觉破灭期前获取融资</li></ul><h3 id="创新者的窘境"><a href="#创新者的窘境" class="headerlink" title="创新者的窘境"></a>创新者的窘境</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306112046788.png" alt="创新者的窘境"></p><p>当新技术不够成熟时，总有反对的声音，若是此时完全将其放弃，就有可能错失成为将其变得足够好的机会</p><h3 id="分歧法则"><a href="#分歧法则" class="headerlink" title="分歧法则"></a>分歧法则</h3><ul><li>以前大家总觉得各个设备会融合，但其实事实并非如此，各个设备（或者说技术方向）有自己独特的优势</li><li>例外是随身携带的设备，这确实会越来越少，如瑞士军刀和智能手机</li></ul><h3 id="技术奇点"><a href="#技术奇点" class="headerlink" title="技术奇点"></a>技术奇点</h3><ul><li>理论认为科技发展是不断加速的</li><li>当技术发展过快而我们无法再预测未来时的时间点就被称为技术奇点</li></ul><h4 id="104-号透镜：技术"><a href="#104-号透镜：技术" class="headerlink" title="104 号透镜：技术"></a>104 号透镜：技术</h4><p>要确保使用适合的技术，问</p><ul><li>什么样的技术能够实现我想要创造的体验</li><li>使用的技术是基础性的还是装饰性的</li><li>如果选择的技术没有提供基础性的功能，是否还应该选择它</li><li>这项技术的实际效果是否达到预期</li><li>是否能找到根据革新性的技术来替代现有技术</li></ul><h3 id="看看你的水晶球"><a href="#看看你的水晶球" class="headerlink" title="看看你的水晶球"></a>看看你的水晶球</h3><ul><li><p>可以尝试着预测未来，猜不对很正常，但也可以吸取经验为下次预测做准备</p></li><li><p>一些例子</p><ul><li>4 年后的客厅游戏娱乐会是什么样子？和现在主流的游戏会有什么不同</li><li>8 年后呢</li><li>从现在开始 2 年后，下载游戏和零售版（物理载体）游戏各占多少市场比例？为什么？五年后呢</li><li>平板电脑会变成主流游戏设备吗？为什么</li><li>小型游戏开发工作室在未来四年会做什么样的游戏</li><li>大型游戏开发商在未来四年会做什么样的游戏</li><li>体育类游戏四年后会是什么样子</li><li>FPS 游戏四年后会是什么样子</li><li>四年后最喜欢的游戏类型？</li><li>未来四年会有哪些全新游戏类型出现？为什么</li></ul></li><li><p>预测结果本身可能不重要，需要的是作出假设依据的基础</p></li><li><p>科技+心理学=命运</p></li></ul><h4 id="105-号透镜：水晶球"><a href="#105-号透镜：水晶球" class="headerlink" title="105 号透镜：水晶球"></a>105 号透镜：水晶球</h4><p>如果想要了解一项游戏技术的未来， 尝试回答下列问题，理由越充分越好</p><ul><li>这项技术两年后是什么样，为什么</li><li>四年后呢</li><li>十年后呢</li></ul><h3 id="未来的可能"><a href="#未来的可能" class="headerlink" title="未来的可能"></a>未来的可能</h3><ol><li>魔法界面</li><li>公平支付</li><li>少点 A 多点 I<ul><li>让人工智能变得更真实</li></ul></li><li>家庭和好友</li></ol><ul><li>夫妻一起玩的游戏？</li><li>家庭一起玩的游戏？</li><li>孩子和远在外地的祖父母一起玩的游戏？</li></ul><ol start="5"><li>成长游戏</li></ol><ul><li>让人们通过游戏成为自己想要成为的人</li></ul><h4 id="106-号透镜：理想世界"><a href="#106-号透镜：理想世界" class="headerlink" title="106 号透镜：理想世界"></a>106 号透镜：理想世界</h4><p>要确认你正在向着一个更好的世界努力，问</p><ul><li>我正在创造的东西会让普通人感觉具有魔力吗</li><li>人们听到我在制作的东西时会感到激动吗？为什么</li><li>我的游戏是否确实提升了行业标准</li><li>我的游戏让世界变得更好吗</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230611 - Super Smash Bros Melee</title>
      <link href="2023/06/11/20230611-n05/"/>
      <url>2023/06/11/20230611-n05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Super Smash Bros 诞生的故事！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/vLRRNsAVl-8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N05-Super-Smash-Bros-Melee"><a href="#N05-Super-Smash-Bros-Melee" class="headerlink" title="N05 - Super Smash Bros Melee"></a>N05 - Super Smash Bros Melee</h2><ul><li>如果看过前面的视频就知道樱井创作游戏的情境一般是有一个问题，然后就设计一个游戏来解决这个问题<ul><li>但 Super Smash Bros. Melee 背后的理念真的非常简单<ul><li>即做一个增强版的 Smash Bros.!<ul><li>Fighters, stages, graphics, effects, animations, sounds, content,  play feel, items, bonus features 都得到了全方位的提升</li><li>对于当时只接触过 N64 版本的玩家而言一定是耳目一新的<ul><li>在 N64 版本的开发中有各种各样的挑战<ul><li>硬件能力</li><li>开发环境等</li><li>当时的一个斗士由 300 左右的多边形构成，在三个以上的斗士同时战斗时，每个斗士甚至会降到 200 多边形左右</li><li>当时的纹理也有很多限制，64 * 64, 甚至 32 * 32</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111333207.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111334300.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111337253.png"></p><ul><li>而 Super Smash Bros. Melee 是为 Nintendo GameCube 开发的<ul><li>更高的配置、也更容易开发</li><li>是任天堂首款配备光盘的家用游戏主机<ul><li>当时也使用上了使用真实乐器录制的音乐</li><li>这也促成了 Press Start 音乐会的举行</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111341683.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111343852.png"></p><ul><li>这也是樱井首个包含了 CG 电影的游戏<ul><li>当时因为时间紧张，樱井还放弃了新年假期来绘制故事版</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111346812.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111347996.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111347027.png"></p><ul><li>当时引入的一个新的特性是 Trophy system<ul><li>即斗士的展示页面</li><li>虽然当时对于能展示多少斗士有限制，但这给予了樱井他们展示一些横跨任天堂历史的角色的机会</li><li>也算是某种粉丝福利，让玩家们有机会了解角色背后的一些故事</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306111348397.png"></p><ul><li><p>当时在 Creatures Inc. 的伙伴给予了很多的帮助</p></li><li><p>“这个游戏是否值得如此之多的人力投入”是当时经常被问到，也是樱井不断自问的一个问题</p><ul><li>樱井一直以来的坚持就是 创意性作品，不仅仅包括游戏，应该尽可能地让自己凸显出来，脱瘾而出</li><li>所以樱井卷起袖子，尽其所能地让这个游戏有一种特别感</li></ul></li><li><p>游戏发售后受到了世界各国玩家的好评，樱井也觉得最终没有辜负大家的期望，但这都是发售之后才能验证的事</p></li><li><p>Smash Bros. Melee 最终成为了 GameCube 中销量最好的游戏</p></li><li><p>下一次的主题是 Kirby Air Ride</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十八章 通过试玩测试创造好游戏</title>
      <link href="2023/06/10/20230610-theartofgamedesign-chap28/"/>
      <url>2023/06/10/20230610-theartofgamedesign-chap28/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十八章-通过试玩测试创造好游戏"><a href="#第二十八章-通过试玩测试创造好游戏" class="headerlink" title="第二十八章 通过试玩测试创造好游戏"></a>第二十八章 通过试玩测试创造好游戏</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306092114758.png"></p><h3 id="游戏测试"><a href="#游戏测试" class="headerlink" title="游戏测试"></a>游戏测试</h3><p>四种不同的测试方法</p><ol><li>焦点小组</li></ol><ul><li>对潜在玩家爱进行采访，以了解他们对某些游戏类型和概念的喜好，会影响设计师对于所设计内容的决策</li></ul><ol start="2"><li>QA 测试</li></ol><ul><li>即 quality assurance</li><li>目的是为了找到 bug</li></ul><ol start="3"><li>可用性测试</li></ol><ul><li>确保交互界面和系统易用且符合用户直觉</li><li>是提高游戏品质的必要不充分条件</li></ul><ol start="4"><li>试玩测试</li></ol><ul><li>通过邀请玩家游玩</li><li>观察玩家反应是否符合预期</li></ul><h3 id="我尴尬的秘密"><a href="#我尴尬的秘密" class="headerlink" title="我尴尬的秘密"></a>我尴尬的秘密</h3><ul><li>害怕玩家讨厌自己的游戏很正常</li></ul><h3 id="试玩测试第一问：为什么"><a href="#试玩测试第一问：为什么" class="headerlink" title="试玩测试第一问：为什么"></a>试玩测试第一问：为什么</h3><ul><li><p>需要明确知道此次测试的目的，开始测试之前应该清楚列出此次测试需要关注哪些方面</p></li><li><p>一些例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306092121514.png"></p></li></ul><h3 id="试玩测试第二问：谁"><a href="#试玩测试第二问：谁" class="headerlink" title="试玩测试第二问：谁"></a>试玩测试第二问：谁</h3><ul><li>挑选谁来测试与你想要达成的测试目的有关</li><li>以下是一些常见情况</li></ul><ol><li>开发者同事</li></ol><ul><li>优点<ul><li>他们就在身边，有足够时间可以参加</li><li>可以得到有意义且深思熟虑的反馈</li><li>省去签保密协议的麻烦</li></ul></li><li>缺点<ul><li>他们太熟悉以至于会有偏见，需要谨慎看待他们的观点</li></ul></li></ul><ol start="2"><li>亲朋好友</li></ol><ul><li>优点<ul><li>他们愿意为此付出时间，交流会很轻松</li><li>事后随时都能询问</li></ul></li><li>缺点<ul><li>有可能不能得到最真实的反馈</li><li>他们可能倾向于喜欢你的作品，不自觉地乐于尝试</li></ul></li></ul><ol start="3"><li>专业玩家</li></ol><ul><li>优点<ul><li>有很多详细有价值的意见</li><li>也能举出同类型游戏的其他例子以佐证</li></ul></li><li>缺点<ul><li>他们往往比一般群体更容易厌倦，也会要求游戏有更高复杂度和挑战性</li></ul></li></ul><ol start="4"><li>一次性测试者</li></ol><ul><li><p>优点</p><ul><li>会发现很多习以为常的忽视的问题</li><li>在可用性、重要信息传达、游戏的最初吸引力等方面的反馈很有价值</li></ul></li><li><p>缺点</p><ul><li>他们的反馈更多会集中在游戏的初印象，但其实游戏一般是需要被多次打开游玩的，他们的反馈对于提升游戏初印象很有帮助，但对于后续体验的提升不一定很有帮助</li></ul></li><li><p>需要结合以上几种测试者，在合适时间找到合适测试者，得出想要的结论</p></li></ul><h3 id="试玩测试第三问：何时"><a href="#试玩测试第三问：何时" class="headerlink" title="试玩测试第三问：何时"></a>试玩测试第三问：何时</h3><ul><li>越早测越好</li><li>有想法前可以找所面向的玩家群体，进行焦点小组测试，问他们对什么样的游戏感兴趣</li><li>概念阶段可以问大家对想法的看法</li><li>纸面原型：可以让玩家试试是否喜欢游戏的骨架</li><li>白盒：让玩家了解当前状态后，游玩时可能更容易说实话<ul><li>但也有可能玩家会自己想象游戏完成后的美术品质，反而会出现白盒时成熟度分高但中期因为和原先的想象不一致而导致分低的情况</li></ul></li><li>工作原型：此时基本都已经功能顺畅，不断测试吧</li><li>完成上线游戏：真正上线后也需要关注“最大规模的测试”，以提供新的补丁</li><li>When useful, but at least every week</li></ul><h3 id="试玩测试第四问：在哪儿"><a href="#试玩测试第四问：在哪儿" class="headerlink" title="试玩测试第四问：在哪儿"></a>试玩测试第四问：在哪儿</h3><ol><li>在工作室</li></ol><ul><li>优点<ul><li>所有开发者和游戏都在，很方便</li><li>团队的大家都有机会观察真实的玩家测试反应</li></ul></li><li>缺点<ul><li>测试者可能不会 100% 舒适</li><li>被观察时可能不是真实的游戏反应<ul><li>应该为测试者尽可能创造舒适的环境，可以让测试者带朋友一同参加</li></ul></li></ul></li></ul><ol start="2"><li>测试实验室</li></ol><ul><li>优点<ul><li>一切设施都是为测试所准备的：单向观察玻璃，专门的镜头拍摄，提供问卷调查的专家，专门的记录人员，特定挑选的测试者</li></ul></li><li>缺点<ul><li>昂贵</li></ul></li></ul><ol start="3"><li>公共场合</li></ol><ul><li>优点<ul><li>便宜</li><li>可能会有很多人参加</li></ul></li><li>缺点<ul><li>可能无法过滤出特定的玩家群体</li><li>测试者可能被周围环境所干扰</li></ul></li></ul><ol start="4"><li>测试者家中</li></ol><ul><li>优点<ul><li>是测试者觉得很舒适的环境</li><li>测试者可能会邀请朋友一起，这样就可以看到玩家们在真实社交环境中的反应</li></ul></li><li>缺点<ul><li>试玩测试会有很多测试，可能只有一两名设计师能参与，每次测试的人员可能很少</li><li>可能需要设置测试机</li><li>以及签署 NDA</li></ul></li></ul><ol start="5"><li>在线测试</li></ol><ul><li><p>优点</p><ul><li>样本量大</li><li>会看到不同配置下的运行情况</li></ul></li><li><p>缺点</p><ul><li>测试报告的平均质量会下降</li><li>如果是保密项目会有泄露风险</li><li>而且很可能影响玩家的第一印象，所以需要限制测试群体<ul><li>通过告诉玩家还在开发中以降低其期待</li></ul></li></ul></li><li><p>选择什么样的形式还是需要考虑需要验证什么样的问题</p></li></ul><h3 id="试玩测试第五问：什么"><a href="#试玩测试第五问：什么" class="headerlink" title="试玩测试第五问：什么"></a>试玩测试第五问：什么</h3><ul><li>即要关注什么</li></ul><h4 id="第一类：你明确知道要找的东西"><a href="#第一类：你明确知道要找的东西" class="headerlink" title="第一类：你明确知道要找的东西"></a>第一类：你明确知道要找的东西</h4><h4 id="第二类：你通过测试首次发现的东西"><a href="#第二类：你通过测试首次发现的东西" class="headerlink" title="第二类：你通过测试首次发现的东西"></a>第二类：你通过测试首次发现的东西</h4><ul><li>集中注意力观察<ul><li>录像是个好办法，但玩家反应可能更多情况下只能通过观察来记录</li></ul></li></ul><h3 id="试玩测试第六问：怎样"><a href="#试玩测试第六问：怎样" class="headerlink" title="试玩测试第六问：怎样"></a>试玩测试第六问：怎样</h3><h4 id="你需要到场吗"><a href="#你需要到场吗" class="headerlink" title="你需要到场吗"></a>你需要到场吗</h4><h4 id="试玩前，告诉他们什么"><a href="#试玩前，告诉他们什么" class="headerlink" title="试玩前，告诉他们什么"></a>试玩前，告诉他们什么</h4><ul><li>最好把要告诉他们的信息写下来，确保给每一位测试者所说的信息的一样的</li><li>连续测试过程中也可以根据需要来调整所给出的信息，以符合测试需求</li></ul><h4 id="要看哪里"><a href="#要看哪里" class="headerlink" title="要看哪里"></a>要看哪里</h4><ul><li>可能观察玩家屏幕不是最重要的，而是观察玩家面部表情，他们的感受更加重要</li><li>原则上能同时录制屏幕和玩家反应是最好的</li></ul><h4 id="在试玩中还需要收集什么其他数据"><a href="#在试玩中还需要收集什么其他数据" class="headerlink" title="在试玩中还需要收集什么其他数据"></a>在试玩中还需要收集什么其他数据</h4><ul><li><p>有一些信息可以通过程序化方法来记录</p><ul><li>玩家在创建角色上花费了多少时间</li><li>打倒反派需要多少次攻击</li><li>玩家平均得分多少</li><li>最常使用哪些武器</li></ul></li><li><p>不应过于盲信量化设计</p></li></ul><h4 id="能否打扰正在进行游戏的玩家"><a href="#能否打扰正在进行游戏的玩家" class="headerlink" title="能否打扰正在进行游戏的玩家"></a>能否打扰正在进行游戏的玩家</h4><ul><li>会干扰玩家的自然游戏过程</li><li>但也可能错失最好的询问机会</li><li>可以让玩家采用 think out aloud 方法<ul><li>但可能一些玩家会觉得很不自然</li></ul></li></ul><blockquote><p>Valve 的原则是 shut up and watch</p></blockquote><h3 id="在测试结束后收集哪些数据"><a href="#在测试结束后收集哪些数据" class="headerlink" title="在测试结束后收集哪些数据"></a>在测试结束后收集哪些数据</h3><h4 id="调查问卷"><a href="#调查问卷" class="headerlink" title="调查问卷"></a>调查问卷</h4><ul><li>一些技巧<ul><li>优先使用图片</li><li>在线问卷可以节省大量时间</li><li>1-10 不如 1-5，后者可以有清晰的对应关系</li><li>不要添加过多问题</li><li>游戏完成后立马填写</li><li>在现场为测试者解答对于问卷的疑问</li><li>在答卷上注明参与者的性别年龄等信息，可以看玩家看法是否与用户特征有关</li><li>不要把调查数据当做圣经，问卷设计可能不够严谨，测试者们不确定时可能会捏造答案</li></ul></li></ul><h4 id="采访"><a href="#采访" class="headerlink" title="采访"></a>采访</h4><ul><li>适合问不易于回答的问题</li><li>建议<ul><li>提前准备好问题</li><li>尽可能单独采访每一个测试者<ul><li>如果是和朋友一起参加的 可以在之后再组织小组采访，来捕捉可能出现的好友之间交流的火花</li></ul></li><li>测试者可能会因为照顾你的情绪而无法说出真话<ul><li>要告诉他们他们的意见非常重要，不必顾忌</li></ul></li><li>避免记忆测试<ul><li>不要询问一些需要玩家仔细回忆的细节问题<ul><li>如果需要 应该在游戏过程中提问</li></ul></li></ul></li><li>不要用设计师的标准要求测试者<ul><li>不要直接问难度，问他们是否感到无聊</li></ul></li><li>多留冗余<ul><li>不要问最不喜欢，而是问最不喜欢的三个地方是什么</li></ul></li><li>考虑视频壁橱<ul><li>是设计师芭芭拉·钱柏林（新墨西哥州立大学学习游戏实验室的 leader）的发明</li><li>即一个独立空间中设置摄像机和写有问题的白板<ul><li>可以避免从众</li><li>可以让内向的玩家也发声</li></ul></li><li>要求测试者进入其中读出问题并对着摄像机回答</li><li>可以先在外面进行焦点小组或访谈询问过相关问题，再让他们进入其中阐述更深刻或不同角度的见解</li></ul></li><li>放下自我<ul><li>不要试图辩护，他们当时的感受是最重要的</li><li>提出更多客观角度的提问</li></ul></li></ul></li></ul><h4 id="FFWWDD"><a href="#FFWWDD" class="headerlink" title="FFWWDD"></a>FFWWDD</h4><ul><li>是肖恩巴顿发明的另一个大有用处的缩写</li></ul><ol><li>玩的过程中最沮丧的时刻/部分？</li></ol><ul><li>给玩家吐槽机会</li></ul><ol start="2"><li>玩的过程中最喜欢的时刻/部分？</li></ol><ul><li>让玩家点出高光时刻</li></ul><ol start="3"><li>有没有想做却做不到的事？</li></ol><ul><li>玩家会谈及一个小事</li></ul><ol start="4"><li>如果手里有魔杖，能随意修改、增加、删除体验中的任何东西，会是什么呢</li></ol><ul><li>这个问题玩家会更加放开地思考</li></ul><ol start="5"><li>在这个体验中，你在做什么</li></ol><ul><li>了解玩家目标</li></ul><ol start="6"><li>如何向亲朋好友形容这个游戏</li></ol><ul><li><p>了解玩家如何感受整个体验</p></li><li><p>这样的提问顺序也很重要</p></li></ul><h4 id="103-号透镜：试玩测试"><a href="#103-号透镜：试玩测试" class="headerlink" title="103 号透镜：试玩测试"></a>103 号透镜：试玩测试</h4><p>Playtest 是你提前看到游戏在最终用户面前如何表现的机会。要确保测试成功达到目的，问</p><ul><li>为什么组织这次测试</li><li>应该邀请谁参加</li><li>在哪里举行</li><li>在测试时手机哪些信息</li><li>如何筹划整个测试</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十七章 团队有时通过文档进行沟通</title>
      <link href="2023/06/09/20230609-theartofgamedesign-chap27/"/>
      <url>2023/06/09/20230609-theartofgamedesign-chap27/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十七章-团队有时通过文档进行沟通"><a href="#第二十七章-团队有时通过文档进行沟通" class="headerlink" title="第二十七章 团队有时通过文档进行沟通"></a>第二十七章 团队有时通过文档进行沟通</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306082120961.png"></p><h3 id="游戏设计文档之迷思"><a href="#游戏设计文档之迷思" class="headerlink" title="游戏设计文档之迷思"></a>游戏设计文档之迷思</h3><blockquote><p>根本没有神奇的模板</p></blockquote><h3 id="文档的目的"><a href="#文档的目的" class="headerlink" title="文档的目的"></a>文档的目的</h3><p>游戏文档的目的有且只有两个：备忘与沟通</p><h4 id="备忘"><a href="#备忘" class="headerlink" title="备忘"></a>备忘</h4><p>好记性不如烂笔头<br>清空大脑有助于思考</p><h4 id="沟通"><a href="#沟通" class="headerlink" title="沟通"></a>沟通</h4><p>别人也能从中发现问题</p><h3 id="游戏文档的种类"><a href="#游戏文档的种类" class="headerlink" title="游戏文档的种类"></a>游戏文档的种类</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306082124564.png"></p><h5 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h5><ol><li>游戏设计概述</li></ol><ul><li>主要读者是管理层，介绍游戏整体以及受众</li><li>游戏中的重要组成部分都应该能够被海报上的示意图解释清楚</li></ul><ol start="2"><li>详细设计文档</li></ol><ul><li>详细描述了游戏机制与界面</li><li>设计师们用于记下想出的所有细节，同时能够将这种想法传达给令他们变成代码的工程师，以及令他们变成美丽画面的艺术家</li><li>经常不及时更新，项目进行到一半可能已经被抛弃了</li><li>根据游戏子系统撰写多份详细文档比起只写一份巨大文档效果好很多</li></ul><ol start="3"><li>故事概要</li></ol><ul><li>与作家共同维护</li></ul><h5 id="工程"><a href="#工程" class="headerlink" title="工程"></a>工程</h5><ol start="4"><li>技术设计文档</li></ol><ul><li>方便新人理解已有系统</li></ul><ol start="5"><li>流程概述</li></ol><ul><li>通常由工程师为美术团队撰写，艺术家严格执行上面所提到的步骤以导入美术资源</li></ul><ol start="6"><li>系统限制<br>以帮助设计师和艺术家理解所使用系统的极限</li></ol><h5 id="美术"><a href="#美术" class="headerlink" title="美术"></a>美术</h5><ol start="7"><li>美术圣经 lore</li></ol><ul><li>保持一致性的关键</li></ul><ol start="8"><li>概念美术纵览</li></ol><ul><li>一窥游戏完成时的样子</li></ul><h5 id="制作"><a href="#制作" class="headerlink" title="制作"></a>制作</h5><ol start="9"><li>游戏预算</li></ol><ul><li>通常是最先完成的文档之一</li><li>好的项目经理需要持续更新，以保证预算可控</li></ul><ol start="10"><li>资源跟踪文档</li></ol><ul><li>必须追踪所有被创做出的资源及其状况</li><li>以及其验收情况</li></ul><ol start="11"><li>项目日程表</li></ol><ul><li>最常更新的文档之一</li><li>至少以星期为单位改变</li><li>需要列出任务、耗时、DDL、负责人等</li><li>需要考虑的事实<ul><li>每周工作不超过 40 小时</li><li>有些任务有优先级</li></ul></li></ul><h5 id="文案"><a href="#文案" class="headerlink" title="文案"></a>文案</h5><ol start="12"><li>故事圣经 lore</li></ol><ul><li>在其中写明故事中能发生以及不能发生的事情，会让团队中的每一个人更容易对故事提出建议</li><li>最终会整合艺术、科技和玩法，让故事世界更加坚实</li></ul><ol start="13"><li>剧本</li></ol><ul><li>NPC 的对话</li><li>设计师需要检查，因为台词有可能和玩法规则冲突</li></ul><ol start="14"><li>游戏教程与手册</li></ol><ul><li>游戏内置的教程/手册等</li></ul><h5 id="玩家"><a href="#玩家" class="headerlink" title="玩家"></a>玩家</h5><ol start="15"><li>游戏攻略</li></ol><ul><li>由喜爱游戏的玩家创作</li></ul><h3 id="那么我从哪里入手呢"><a href="#那么我从哪里入手呢" class="headerlink" title="那么我从哪里入手呢"></a>那么我从哪里入手呢</h3><ul><li>从核心的问题开始</li><li>不断记录，以及记录迭代的原因</li><li>持续写下希望记得的事情和希望沟通的事情</li></ul><h4 id="102-号透镜：文档"><a href="#102-号透镜：文档" class="headerlink" title="102 号透镜：文档"></a>102 号透镜：文档</h4><p>为确保使用必要的文档，跳过不必要的文档，问</p><ul><li>在制作游戏时需要牢记哪些事情</li><li>制作游戏时需要沟通哪些事情</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十六章 设计师常与团队合作</title>
      <link href="2023/06/08/20230608-theartofgamedesign-chap26/"/>
      <url>2023/06/08/20230608-theartofgamedesign-chap26/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十六章-设计师常与团队合作"><a href="#第二十六章-设计师常与团队合作" class="headerlink" title="第二十六章 设计师常与团队合作"></a>第二十六章 设计师常与团队合作</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306062244592.png"></p><h3 id="团队成功的秘诀"><a href="#团队成功的秘诀" class="headerlink" title="团队成功的秘诀"></a>团队成功的秘诀</h3><blockquote><p>成功合作的秘密在于爱</p></blockquote><ul><li>爱的问题一：团队成员不喜欢任何游戏<ul><li>请他们离开团队</li></ul></li><li>爱的问题二：团队成员比起正在制作的游戏，更喜欢另一个游戏<ul><li>发掘游戏中有没有他们感兴趣的部分</li></ul></li><li>爱的问题三：团队成员喜欢同一个游戏的不同版本<ul><li>即大家对游戏的最终版本有不同的期许</li><li>充分沟通，让大家清楚设计</li></ul></li></ul><h3 id="如果实在对游戏爱不起来，请热爱游戏的受众"><a href="#如果实在对游戏爱不起来，请热爱游戏的受众" class="headerlink" title="如果实在对游戏爱不起来，请热爱游戏的受众"></a>如果实在对游戏爱不起来，请热爱游戏的受众</h3><ul><li>为玩家思考，就当是为他们准备一份特殊的礼物</li><li>如果实在不行，假装有爱<ul><li>如果不知道怎样去热爱一样东西，只需要问你自己那些真正热爱游戏的人会做什么，然后照做</li></ul></li></ul><h4 id="100-号透镜：爱"><a href="#100-号透镜：爱" class="headerlink" title="100 号透镜：爱"></a>100 号透镜：爱</h4><p>为了使用这个透镜，问</p><ul><li>我热爱我的项目吗？如果不爱，那么怎样改变这种状况</li><li>团队里每个人都热爱这个项目吗？如果不爱，如何才能有所改观</li></ul><h3 id="共同设计"><a href="#共同设计" class="headerlink" title="共同设计"></a>共同设计</h3><ul><li><p>让整个团队都参与设计</p><ul><li>在不确定的细节部分可以留下一些空间，让相关负责人一起参与思考</li></ul></li><li><p>头脑风暴</p></li><li><p>独立设计</p></li><li><p>设计讨论会</p></li><li><p>设计报告会</p></li></ul><h3 id="团队交流的十个要点"><a href="#团队交流的十个要点" class="headerlink" title="团队交流的十个要点"></a>团队交流的十个要点</h3><ol><li>客观<ul><li>抛开主体</li><li>用问题代替陈述表达</li></ul></li><li>清晰<ul><li>表述清晰</li><li>也不要不懂装懂</li></ul></li><li>持续<ul><li>保持记录，持续追踪</li></ul></li><li>舒适<ul><li>舒适的场合和情绪能激发创意</li></ul></li><li>尊重<ul><li>尊重彼此</li><li>先从自身找原因</li></ul></li><li>信任<ul><li>判断的简单办法，观察哪些人一起吃饭</li><li>提供给你的团队成员碰面和交流的机会</li></ul></li><li>诚实<ul><li>信任建立在诚实之上</li></ul></li><li>保留隐私<ul><li>私下交流能让你们更加了解</li></ul></li><li>团结<ul><li>如果有争论，必须给予双方足够尊重，让双方共同处理这个问题，直到找出有意义的解决方案</li><li>不能忽视问题</li></ul></li><li>爱</li></ol><h4 id="101-号透镜：团队"><a href="#101-号透镜：团队" class="headerlink" title="101 号透镜：团队"></a>101 号透镜：团队</h4><p>为确保团队像一台运行顺利的机器，问</p><ul><li>这个团队适合这个项目吗？为什么</li><li>团队成员有没有客观交流</li><li>团队成员有没有清晰交流</li><li>团队成员在一起相互适应吗</li><li>团队成员是否互相信任与尊重</li><li>团队最终是否可以团结在决定的周围</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十五章 其他玩家有时会形成社群</title>
      <link href="2023/06/07/20230607-theartofgamedesign-chap25/"/>
      <url>2023/06/07/20230607-theartofgamedesign-chap25/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十五章-其他玩家有时会形成社群"><a href="#第二十五章-其他玩家有时会形成社群" class="headerlink" title="第二十五章 其他玩家有时会形成社群"></a>第二十五章 其他玩家有时会形成社群</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306042146000.png"></p><h3 id="社群不仅仅是其他玩家"><a href="#社群不仅仅是其他玩家" class="headerlink" title="社群不仅仅是其他玩家"></a>社群不仅仅是其他玩家</h3><ul><li>社群的主要元素<ol><li>会员<ul><li>能够清楚告诉你你是团体的一员</li></ul></li><li>影响<ul><li>成为团体一员会在其他事上给你带来影响</li></ul></li><li>整合与满足需求<ul><li>作为团体的一员能为你做些事情</li></ul></li><li>共享的情感联系<ul><li>对某些事情肯定会与团体内其他成员产生相同情感</li></ul></li></ol></li></ul><blockquote><p>一组共享兴趣、目的或目标的人，而且随着时间的推移，他们会愈加了解对方。<br>——艾米·乔·金</p></blockquote><ul><li>作为设计师，关心围绕游戏而组成的社群的原因<ol><li>成为社群的一员满足了部分社交需求</li><li>更长的“传染周期”<ul><li>即有更大的机会让更多玩家了解、购买游戏</li></ul></li><li>更长的游戏时间</li></ol></li></ul><h3 id="壮大社群的-10-条建议"><a href="#壮大社群的-10-条建议" class="headerlink" title="壮大社群的 10 条建议"></a>壮大社群的 10 条建议</h3><h4 id="社群建议-1：培养友谊"><a href="#社群建议-1：培养友谊" class="headerlink" title="社群建议 1：培养友谊"></a>社群建议 1：培养友谊</h4><p>想与另一个人产生有意义的在线关系需要三方面</p><ol><li>对话的能力</li></ol><ul><li>指的是游戏内的交互系统</li></ul><ol start="2"><li>值得交谈的对象</li></ol><ul><li>需要理解不同玩家群体所感兴趣的交谈对象</li></ul><ol start="3"><li>值得交谈的内容</li></ol><ul><li>即游戏内容本身</li></ul><p>友谊三阶段</p><ol><li><p>破冰</p></li><li><p>成为朋友</p></li></ol><ul><li>游戏中“交朋友”的仪式</li></ul><ol start="3"><li>保持友谊</li></ol><ul><li>游戏中“找到老朋友”的途径</li></ul><h4 id="96-号透镜：友谊"><a href="#96-号透镜：友谊" class="headerlink" title="96 号透镜：友谊"></a>96 号透镜：友谊</h4><p>人们热衷于和朋友一起玩游戏。为确保游戏中有合适特性让人交朋友且保持友谊，问：</p><ul><li>玩家想要一种怎样的友谊</li><li>玩家爱会如何破冰</li><li>玩家有足够机会与他人对话吗？有足够谈话内容吗</li><li>他们会在什么时候变成朋友</li><li>给了玩家什么工具让他们保持友谊</li></ul><h4 id="社群建议-2：牢记矛盾"><a href="#社群建议-2：牢记矛盾" class="headerlink" title="社群建议 2：牢记矛盾"></a>社群建议 2：牢记矛盾</h4><ul><li>与其他玩家间的矛盾</li><li>与游戏间的矛盾</li></ul><h4 id="社群建议-3：运用建筑学去形成你的社区"><a href="#社群建议-3：运用建筑学去形成你的社区" class="headerlink" title="社群建议 3：运用建筑学去形成你的社区"></a>社群建议 3：运用建筑学去形成你的社区</h4><ul><li>可以创造玩家们会频繁出现的场所为玩家提供社交机会<ul><li>公会</li><li>安全区</li></ul></li></ul><h4 id="社群建议-4：创造社群财产"><a href="#社群建议-4：创造社群财产" class="headerlink" title="社群建议 4：创造社群财产"></a>社群建议 4：创造社群财产</h4><ul><li>不一定是有形之物</li><li>公会荣誉/地位也是一种社群财产</li></ul><h4 id="社群建议-5：让玩家表达自己"><a href="#社群建议-5：让玩家表达自己" class="headerlink" title="社群建议 5：让玩家表达自己"></a>社群建议 5：让玩家表达自己</h4><ul><li>捏脸</li><li>个性化对话系统</li><li>服饰</li></ul><h4 id="97-号透镜：表达"><a href="#97-号透镜：表达" class="headerlink" title="97 号透镜：表达"></a>97 号透镜：表达</h4><p>当玩家得到表达自我的机会时，他们会感到自己的生命鲜活，为自己骄傲，自己很重要，而且自己和他人联系在了一起。在使用这个透镜的时候，问：</p><ul><li>如何才能让玩家表达自我</li><li>忽略了哪些方法</li><li>玩家爱对自己的身份感到自豪吗？为什么是，为什么不是</li></ul><p>可以与 71 号透镜：美感和 90 号透镜：地位结合使用</p><h4 id="社群建议-6：支持三种水平"><a href="#社群建议-6：支持三种水平" class="headerlink" title="社群建议 6：支持三种水平"></a>社群建议 6：支持三种水平</h4><ul><li>菜鸟</li><li>普通玩家</li><li>老鸟<ul><li>如何吸引他们留下<ul><li>难度更大的游戏</li><li>管理者特权</li><li>创造的乐趣</li><li>利于公会管理的工具</li><li>教导的机会</li></ul></li></ul></li></ul><h4 id="社群建议-7：迫使玩家互相依靠"><a href="#社群建议-7：迫使玩家互相依靠" class="headerlink" title="社群建议 7：迫使玩家互相依靠"></a>社群建议 7：迫使玩家互相依靠</h4><h4 id="社群建议-8：管理你的社群"><a href="#社群建议-8：管理你的社群" class="headerlink" title="社群建议 8：管理你的社群"></a>社群建议 8：管理你的社群</h4><ul><li>即游戏运营</li></ul><h4 id="社群建议-9：负起对他人的责任"><a href="#社群建议-9：负起对他人的责任" class="headerlink" title="社群建议 9：负起对他人的责任"></a>社群建议 9：负起对他人的责任</h4><ul><li>仔细设计一个玩家对玩家的承诺系统是让他们定期玩游戏的好办法，同时能帮助你组建强大社群</li></ul><h4 id="社群建议-10：创建社群活动"><a href="#社群建议-10：创建社群活动" class="headerlink" title="社群建议 10：创建社群活动"></a>社群建议 10：创建社群活动</h4><ul><li>让玩家有所期待</li><li>创造一个共享的经历，让玩家觉得与社群关系更紧密</li><li>强调某些时间，给玩家值得回忆的东西</li><li>事件确保了玩家互相联系的机会</li><li>知道了活动频繁发生后，玩家会经常回来查看未来的新活动</li></ul><h4 id="98-号透镜：社群"><a href="#98-号透镜：社群" class="headerlink" title="98 号透镜：社群"></a>98 号透镜：社群</h4><p>为确保游戏能够培养强有力的社群，问</p><ul><li>哪些矛盾是社群的核心</li><li>建筑学如何能够帮助社区</li><li>游戏支持三类不同水平玩家吗</li><li>有没有社群活动</li><li>为什么玩家互相之间需要对方</li></ul><h3 id="来自恶意破坏的挑战"><a href="#来自恶意破坏的挑战" class="headerlink" title="来自恶意破坏的挑战"></a>来自恶意破坏的挑战</h3><p>最容易被寻事者利用的游戏系统</p><ul><li>PVP<ul><li>也许需要设定安全区</li></ul></li><li>盗窃/最后一刀</li><li>交易<ul><li>需要保证交易信息是透明的</li></ul></li><li>下流语言<ul><li>屏蔽词+举报</li></ul></li><li>挡路<ul><li>可能需要避免玩家间的碰撞</li></ul></li><li>漏洞<ul><li>利用 bug</li></ul></li></ul><h4 id="99-号透镜：恶意破坏"><a href="#99-号透镜：恶意破坏" class="headerlink" title="99 号透镜：恶意破坏"></a>99 号透镜：恶意破坏</h4><p>为确保游戏里的恶意破坏程度被降到最低，问</p><ul><li>游戏中哪些系统能被轻易破坏</li><li>如何让恶意破坏在游戏里变得无趣</li><li>有忽视的漏洞吗</li></ul><h3 id="游戏社群的未来"><a href="#游戏社群的未来" class="headerlink" title="游戏社群的未来"></a>游戏社群的未来</h3><blockquote><p>制作网络游戏是非常激动人心的事情，因为我们发明的新社群可能会作为人类文化的永久组成部分保留下去。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十四章 一些游戏让多人同乐</title>
      <link href="2023/06/06/20230606-theartofgamedesign-chap24/"/>
      <url>2023/06/06/20230606-theartofgamedesign-chap24/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十四章-一些游戏让多人同乐"><a href="#第二十四章-一些游戏让多人同乐" class="headerlink" title="第二十四章 一些游戏让多人同乐"></a>第二十四章 一些游戏让多人同乐</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306022148489.png"></p><h3 id="我们并不孤单"><a href="#我们并不孤单" class="headerlink" title="我们并不孤单"></a>我们并不孤单</h3><p>人是社会性动物。一旦有可能，人类就会避免独处。</p><h3 id="为什么我们要与他人游戏"><a href="#为什么我们要与他人游戏" class="headerlink" title="为什么我们要与他人游戏"></a>为什么我们要与他人游戏</h3><ol><li><p>竞争<br>其所满足的需求是<br>A. 在一个游玩场地上允许一场平衡竞赛（37 号透镜：公平）<br>B. 提供称职对手（38 号透镜：挑战；43 号透镜：竞争）<br>C. 让我们解决有意思的问题<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306022203396.png"></p></li><li><p>合作</p></li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306022204116.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306022204700.png"></p><ol start="3"><li>会面</li></ol><p>提供见面的机会和内容</p><ol start="4"><li><p>了解朋友</p></li><li><p>了解自己</p></li></ol><h4 id="95-号透镜：旁观"><a href="#95-号透镜：旁观" class="headerlink" title="95 号透镜：旁观"></a>95 号透镜：旁观</h4><p>几千年来，人们都喜欢坐在那里看其他人玩游戏——前提是那些游戏值得他们旁观。为确保你的游戏也值得被人旁观，问</p><ul><li>我的游戏观看起来有意思吗？为什么有？为什么没有？</li><li>我如何才能让它看起来更有意思</li></ul><h4 id="多人游戏的作弊风险"><a href="#多人游戏的作弊风险" class="headerlink" title="多人游戏的作弊风险"></a>多人游戏的作弊风险</h4><p>作弊的危害</p><ol><li>如果游戏内有鼓励玩家作弊的漏洞会给其他玩家增加压力，因为他们需要格外留意作弊行为</li><li>如果玩家发现了作弊的可能，且不能明确判断其他玩家爱是否在作弊，那么他们就会停止玩耍，因为会担心如果不作弊就战胜不了作弊的人</li></ol><h4 id="95-1-2-号透镜：作弊"><a href="#95-1-2-号透镜：作弊" class="headerlink" title="95 1/2 号透镜：作弊"></a>95 1/2 号透镜：作弊</h4><p>没有人想要时刻担忧着会不会被作弊的人击败——这种感觉让人觉得自己是个傻瓜。为确保玩家相信你的游戏，问</p><ul><li>玩家能够在我的游戏中作弊吗？如何作弊</li><li>如果有玩家作弊，别人会注意到吗</li><li>玩家相信我的游戏吗</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十三章 世界的外观与感觉是由其美学所定义的</title>
      <link href="2023/06/05/20230605-theartofgamedesign-chap23/"/>
      <url>2023/06/05/20230605-theartofgamedesign-chap23/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十三章-世界的外观与感觉是由其美学所定义的"><a href="#第二十三章-世界的外观与感觉是由其美学所定义的" class="headerlink" title="第二十三章 世界的外观与感觉是由其美学所定义的"></a>第二十三章 世界的外观与感觉是由其美学所定义的</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306012313572.png"></p><h3 id="莫奈拒绝了手术"><a href="#莫奈拒绝了手术" class="headerlink" title="莫奈拒绝了手术"></a>莫奈拒绝了手术</h3><h3 id="美学的价值"><a href="#美学的价值" class="headerlink" title="美学的价值"></a>美学的价值</h3><p>好的美术作品能为游戏做出许多神奇贡献：</p><ul><li>将玩家吸引到本可能错过的游戏中</li><li>让游戏感觉更紧凑、真实与宏大。让玩家更认真对待游戏，提升内源性价值。</li><li>美学愉悦。</li><li>由画面、声音、音乐和游戏机制共同产生的氛围</li><li>让玩家容忍别的方面的不足</li></ul><p>下列透镜可以观察游戏美术素材<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306012319937.png"></p><h4 id="94-号透镜：氛围"><a href="#94-号透镜：氛围" class="headerlink" title="94 号透镜：氛围"></a>94 号透镜：氛围</h4><p>氛围看不见摸不着。但它用某种方法包围了我们，在我们周围，并让我们成为世界的一部分。为确保你的世界中有恰当的和醉人的氛围，问</p><ul><li>如何不用语言描述游戏氛围</li><li>如何用艺术内容（视听觉）加深那种氛围</li></ul><h3 id="学会观察"><a href="#学会观察" class="headerlink" title="学会观察"></a>学会观察</h3><p>在观察与思考游戏中的美术作品时，必须要学会让你的左脑休息，同时发挥右脑的力量，因为右脑能够察觉到一些左脑无法察觉的细节。</p><p>《用右脑来绘画》——贝蒂爱德华。这本书希望通过传授每个人观察的方法来教会人们作画的方法。</p><h3 id="如何让美学指导设计"><a href="#如何让美学指导设计" class="headerlink" title="如何让美学指导设计"></a>如何让美学指导设计</h3><p>玩法原型+概念美术原型可以传达想法</p><h3 id="多少才够"><a href="#多少才够" class="headerlink" title="多少才够"></a>多少才够</h3><p>精心绘制的铅笔草图+重要部分上色/打光/勾线</p><p>J.R.R. 托尔金的“远山”技巧——赋予未曾出现在书中的地点、人物与事件以名字。那些名字与简要介绍使得整个世界看起来比实际要大得多也丰富得多。</p><h3 id="使用音效"><a href="#使用音效" class="headerlink" title="使用音效"></a>使用音效</h3><p>音效反馈比起视觉反馈来说更接近本能，因此能更简单地模拟感觉。</p><p>应该在开发早期尽可能挑选音乐，如果能选出与游戏玩法感觉一致的音乐，那么你已经在潜意识里高效完成了许多关于游戏感觉的决定。即决定了游戏氛围。</p><h3 id="平衡艺术与技术"><a href="#平衡艺术与技术" class="headerlink" title="平衡艺术与技术"></a>平衡艺术与技术</h3><p>让技美来平衡艺术与技术。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十二章 一些交互界面创造临场感 - VR</title>
      <link href="2023/06/04/20230604-theartofgamedesign-chap22/"/>
      <url>2023/06/04/20230604-theartofgamedesign-chap22/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十二章一些交互界面创造临场感-VR"><a href="#第二十二章一些交互界面创造临场感-VR" class="headerlink" title="第二十二章一些交互界面创造临场感 - VR"></a>第二十二章一些交互界面创造临场感 - VR</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305271550284.png"></p><p>视频和电影虽引人入胜，但我们的大脑并不会觉得我们身处其中。因为我们可以看到且可以感到我们的身体没有和画面在同一个地方。</p><p>梦里的幻觉又是另一回事，我们会信以为真。</p><p>VR 和 AR 其实是一种用于欺骗头脑对于身体的感知的技术。这种感知的术语叫做“本体感受”（proprioception）。这个源自拉丁文的术语在 1906 年被提出，本意为“对于个体本身的感受”。</p><blockquote><blockquote><p>让我想起的是具身感知 [[Embodiment]]。<br>![[Embodiment#L-My Words]]</p></blockquote></blockquote><p>VR 和 AR 真正的魔力并不是 3 D 画面，3 D 画面自 1838 年立体眼镜问世以来就已经有了。其真正魔力是带着身体一同进入模拟世界。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305271617937.png"></p><p>在所有我们能够创造的现实里，有一些是值得思考的：</p><ul><li>逻辑现实：定义了因果关系</li><li>空间现实：定义了如何在空间中移动</li><li>本体感受现实：定义了我对我的身体所处位置的感受</li><li>社交现实：定义了我如何与其他人互动</li></ul><h3 id="临场的力量"><a href="#临场的力量" class="headerlink" title="临场的力量"></a>临场的力量</h3><p>VR 和 AR 的核心是临场感。</p><h3 id="6-种威胁临场感的因素"><a href="#6-种威胁临场感的因素" class="headerlink" title="6 种威胁临场感的因素"></a>6 种威胁临场感的因素</h3><h4 id="临场感威胁-1：晕动症-motionsickness"><a href="#临场感威胁-1：晕动症-motionsickness" class="headerlink" title="临场感威胁 1：晕动症 motionsickness"></a>临场感威胁 1：晕动症 motionsickness</h4><p>![[motion sickness#L-My Words]]</p><h4 id="临场感威胁-2：反直觉的互动"><a href="#临场感威胁-2：反直觉的互动" class="headerlink" title="临场感威胁 2：反直觉的互动"></a>临场感威胁 2：反直觉的互动</h4><p>玩家沉迷于将一种道具在另一种道具上使用。<br>这里也和 [[Affordance]] 即 [[Affordance|可供性]] 有关。可互动的方式应该尽量符合直觉。</p><h4 id="临场感威胁-3：过于紧张"><a href="#临场感威胁-3：过于紧张" class="headerlink" title="临场感威胁 3：过于紧张"></a>临场感威胁 3：过于紧张</h4><p>玩家的紧张程度相比普通平面游戏会在 VR 中被放大很多。<br>若是玩家心里不断告诉自己“眼前发生的是假的是假的”，临场感无疑就被破话了。</p><h4 id="临场感威胁-4：不真实的音效"><a href="#临场感威胁-4：不真实的音效" class="headerlink" title="临场感威胁 4：不真实的音效"></a>临场感威胁 4：不真实的音效</h4><p>耳听则实。</p><h4 id="临场感威胁-5：本体感受脱节"><a href="#临场感威胁-5：本体感受脱节" class="headerlink" title="临场感威胁 5：本体感受脱节"></a>临场感威胁 5：本体感受脱节</h4><ul><li>本体感受不仅仅是对身体所处位置的感受，也是你对身体如何摆放姿势的感受。</li><li>在 VR 中确保玩家的身体姿势和现实中一致。</li><li>比例尺也很重要。</li><li>另一种本体感受分离和物体穿过玩家身体有关。让本体感受分离的最快方法就是，让玩家见到自己奇怪的虚拟身体。<ul><li>与显示稍微错位的身体相比，完全不显示身体要好得多</li><li>可把这一点视为 VR 化身的恐怖谷</li></ul></li></ul><h4 id="临场感威胁-6：缺少自我认同"><a href="#临场感威胁-6：缺少自我认同" class="headerlink" title="临场感威胁 6：缺少自我认同"></a>临场感威胁 6：缺少自我认同</h4><p>玩家需要清楚知道自己在场景中到底扮演什么样的角色。</p><h3 id="6-种临场感营造方法"><a href="#6-种临场感营造方法" class="headerlink" title="6 种临场感营造方法"></a>6 种临场感营造方法</h3><h4 id="临场感营造方法-1：手的存在"><a href="#临场感营造方法-1：手的存在" class="headerlink" title="临场感营造方法 1：手的存在"></a>临场感营造方法 1：手的存在</h4><p>清醒梦（lucid dreaming）是一种意识到自己在做梦但持续做下去的特殊体验。热衷清醒梦的人通常会运用一个技巧，一旦意识到自己在做梦，马上会盯着梦中的手以维持梦境。看着自己的手似乎能说服大脑世界是真实的。</p><p>人在用工具时，大脑不会考虑手——大脑的注意力处在手握工具的尖端。所以在 VR 中使用工具时，即使不出现手也可以接受。</p><h4 id="临场感营造方法-2：社交临场"><a href="#临场感营造方法-2：社交临场" class="headerlink" title="临场感营造方法 2：社交临场"></a>临场感营造方法 2：社交临场</h4><p>在同一空间里和另一个人同时存在且可以交互可以大大提高临场感。</p><h4 id="临场感营造方法-3：熟悉程度"><a href="#临场感营造方法-3：熟悉程度" class="headerlink" title="临场感营造方法 3：熟悉程度"></a>临场感营造方法 3：熟悉程度</h4><p>若是能提供玩家已经熟悉的场景，玩家就不必观察环境，而是补充环境的细节以提供临场感。</p><h4 id="临场感营造方法-4：真实音效"><a href="#临场感营造方法-4：真实音效" class="headerlink" title="临场感营造方法 4：真实音效"></a>临场感营造方法 4：真实音效</h4><p>需要注意空间音效<br>需要注意物体在不同材质表面的声音</p><h4 id="临场感营造方法-5：本体感受一致"><a href="#临场感营造方法-5：本体感受一致" class="headerlink" title="临场感营造方法 5：本体感受一致"></a>临场感营造方法 5：本体感受一致</h4><p>即让现实世界和虚拟世界中的姿势一样</p><h4 id="临场感营造方法-6：喜剧"><a href="#临场感营造方法-6：喜剧" class="headerlink" title="临场感营造方法 6：喜剧"></a>临场感营造方法 6：喜剧</h4><p>在喜剧的世界里临场感更容易出现<br>玩家不会计较奇怪事情的发生</p><blockquote><blockquote><p>正是 [[suspension of disbelieve]] 的典型场景。<br>![[suspension of disbelieve#L-My Words]]</p></blockquote></blockquote><h3 id="鼓励观察四周"><a href="#鼓励观察四周" class="headerlink" title="鼓励观察四周"></a>鼓励观察四周</h3><p>为了营造临场感，让玩家爱观察周围很重要，这能让玩家在脑中建立环境的感知。<br>不仅需要给玩家环顾四周的理由（比如面前的东西没什么用，比如旁边的东西看起来、操作起来很有趣），还要让玩家仔细研究周围的东西</p><h3 id="想一想纸箱实验"><a href="#想一想纸箱实验" class="headerlink" title="想一想纸箱实验"></a>想一想纸箱实验</h3><p>![[纸箱实验#L-My Words]]</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305271721952.png"></p><h3 id="不同硬件带来不同体验"><a href="#不同硬件带来不同体验" class="headerlink" title="不同硬件带来不同体验"></a>不同硬件带来不同体验</h3><p>不同硬件的体验并不一致，应该为其专门打造匹配的交互体验。</p><h4 id="93-1-2-号透镜：临场感"><a href="#93-1-2-号透镜：临场感" class="headerlink" title="93 1/2 号透镜：临场感"></a>93 1/2 号透镜：临场感</h4><p>临场感看不见，稍纵即逝，脆弱不堪，但却是人类体验的重要部分。为了记住你的玩家身处何地，问</p><ul><li>我的玩家产生临场感了吗？这种感觉能够变得更强烈吗</li><li>游戏里有什么东西破坏了这种临场感</li><li>游戏里有什么建立/加强了临场感</li></ul><blockquote><blockquote><p>正如 [[Mel Slater]] 所提出的 [[Place Illusion]] 和 [[Plausibility Illusion]] 一样，临场感已经被拆分为了地点错觉（是否觉得所处位置是真的）和可能性错觉（是否觉得面前所发生的事情是真的）。这个透镜里面并没有将这两方面区分开来，但其实可以用不同视角来看待临场感的塑造。</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230604 - My Feline Friend Fukurashi</title>
      <link href="2023/06/04/20230604-m05/"/>
      <url>2023/06/04/20230604-m05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解可爱的 Fukurashi！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/EbkshNLpMwo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M05-My-Feline-Friend-Fukurashi"><a href="#M05-My-Feline-Friend-Fukurashi" class="headerlink" title="M05 - My Feline Friend Fukurashi"></a>M05 - My Feline Friend Fukurashi</h2><ul><li>这次谈的是和游戏不那么直接有关的事情</li><li>樱井讲自己在 Twitter 每天发布和 Smash Bros. 有关的内容的时候，用户们总是希望樱井分享和他的猫 Fukurashi 有关的更多内容</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041101752.png"></p><ul><li>严格意义上讲小猫的名字是 Fukura<ul><li>但因为 Fukurashi 更顺口，所以就这么叫了</li></ul></li><li>小猫在屋子里的时候没一会儿就能听到人们说<ul><li>太可爱了</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041103867.png"></p><ul><li>这一期视频主要会分享一些 Fukurashi 的图片和视频片段~</li></ul><blockquote><blockquote><p>突然开始云吸猫了哈哈<br>建议直接去原视频观看，配合音乐食用风味更佳~</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041105483.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041105921.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041106212.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041106716.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041106976.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041107294.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041107177.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041107939.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041108922.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041108955.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202306041109049.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十一章 世界里的空间</title>
      <link href="2023/06/03/20230603-theartofgamedesign-chap21/"/>
      <url>2023/06/03/20230603-theartofgamedesign-chap21/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十一章-世界里的空间"><a href="#第二十一章-世界里的空间" class="headerlink" title="第二十一章 世界里的空间"></a>第二十一章 世界里的空间</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305252222294.png"></p><h3 id="建筑的功能"><a href="#建筑的功能" class="headerlink" title="建筑的功能"></a>建筑的功能</h3><blockquote><p>对，造一幢弗兰克·劳埃德房屋。如果你不介意下雨天里在前院露营的话。<br>——艾琳·巴恩斯德尔</p></blockquote><p>建筑的主要目的是把握一个人的体验。</p><ul><li>我们希望体验背阴及干燥的地方，所以就有了庇护所</li><li>我们希望体验安全及有保护的地方，所以就有了围墙</li><li>当我们称赞一栋大楼的设计非常“优秀”时，我们并没有在谈论这栋大楼的外观，谈论的是在建筑内部所创造出来的良好体验</li></ul><p>游戏设计师和建筑设计师都想要创造一种会为人带来快乐体验的结构。</p><p>游戏设计师创造空间的一个入手点是为游戏空间确定一条组织原则。通过 26 号透镜观察游戏，然后把它作为希望制造的空间的骨架。</p><p>![[游戏设计艺术#26 号透镜：功能空间]]</p><p>要是还没有确定功能空间，在游戏设计早期可以绘制一张游戏地图以帮助你理解游戏流程。</p><h4 id="5-种常用游戏空间"><a href="#5-种常用游戏空间" class="headerlink" title="5 种常用游戏空间"></a>5 种常用游戏空间</h4><ol><li>线性</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305252232212.png"></p><ol start="2"><li>网格</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305252233312.png"></p><ol start="3"><li>网络</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305252233392.png"></p><ol start="4"><li>空间内的点</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305252234741.png"></p><ol start="5"><li>分隔空间</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305252234066.png"></p><p>这些办法通常可以结合使用。</p><h4 id="简单说一下地标"><a href="#简单说一下地标" class="headerlink" title="简单说一下地标"></a>简单说一下地标</h4><blockquote><p>任何一个优秀的游戏空间里都会自带地标，这能够帮助玩家辨认方向，并且让整个空间看起来更有意思。</p></blockquote><h3 id="克里斯多夫·亚历山大是一位天才"><a href="#克里斯多夫·亚历山大是一位天才" class="headerlink" title="克里斯多夫·亚历山大是一位天才"></a>克里斯多夫·亚历山大是一位天才</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305252237819.png"></p><h4 id="92-号透镜：内在矛盾"><a href="#92-号透镜：内在矛盾" class="headerlink" title="92 号透镜：内在矛盾"></a>92 号透镜：内在矛盾</h4><p>一部优秀游戏不能有妨碍最终目的的属性。为扫除那些互为矛盾的属性，问</p><ul><li>我的游戏的目的是什么</li><li>我的游戏里每个子系统的目的是什么</li><li>游戏里有没有什么东西是与其目的矛盾的</li><li>如果有，要怎么改善</li></ul><h3 id="亚历山大提出的“生动结构的-15-项特性”"><a href="#亚历山大提出的“生动结构的-15-项特性”" class="headerlink" title="亚历山大提出的“生动结构的 15 项特性”"></a>亚历山大提出的“生动结构的 15 项特性”</h3><ol><li>缩放级别<ul><li>短期中期长期目标</li><li>分形兴趣曲线</li><li>嵌套游戏世界结构</li></ul></li><li>强力中心<ul><li>视觉设计</li><li>故事结构</li><li>游戏目的</li></ul></li><li>边际<ul><li>领土</li><li>规则</li></ul></li><li>交替重复<ul><li>关卡/BOSS/关卡</li><li>紧张/放松/紧张/放松</li></ul></li><li>正空间<ul><li>阴阳</li><li>前景/背景</li></ul></li><li>好的形状<ul><li>一个令人愉快的形状</li><li>一个好的关卡感觉起来是紧凑的，而且有一条优美曲线</li></ul></li><li>本地对称<ul><li>在一个设计内部多种细小的对称</li><li>规则系统与游戏平衡同样可以有这种特性</li></ul></li><li>深度连锁与歧义<ul><li>两样东西相互之间连接得过于紧密，使得拿走其中一样会使得对方失去意义</li><li>如围棋中棋子所处位置只有相对于对方棋子的位置才有意义</li></ul></li><li>对比<ul><li>对手</li><li>受控/不受控</li><li>奖赏/惩罚</li></ul></li><li>渐变<ul><li>逐步变化的属性</li><li>逐步上升的挑战曲线</li><li>精心设计的概率曲线</li></ul></li><li>粗糙感<ul><li>Homemade 使得一个游戏更加活灵活现</li></ul></li><li>回声<ul><li>回声是一种令人愉悦且统一的重复<ul><li>怪物首领与其爪牙</li><li>优美的分形兴趣曲线</li></ul></li></ul></li><li>空虚<ul><li>在那些最深刻的中心，都有最完美的整体性</li><li>但在它们当中都有一个虚空，就像水，有无限的深度，与其周围杂乱的事物形成对比</li></ul></li><li>简单与内在平静<ul><li>设计师总是一再重复：让一个游戏变得简单的重要性——通常从数个规则中引申出众多特性</li><li>规则必须能很好地平衡</li></ul></li><li>不分离性<ul><li>某些东西能和周围事物紧密联系，就像它是其中一部分一样</li><li>游戏的每一条规则都必须有这项特性</li><li>游戏中的每一项元素也同样如此</li><li>可以参考 11 号透镜<br>  ![[游戏设计艺术#11 号透镜：统一]]<h4 id="93-号透镜：难以名状的特性"><a href="#93-号透镜：难以名状的特性" class="headerlink" title="93 号透镜：难以名状的特性"></a>93 号透镜：难以名状的特性</h4></li></ul></li></ol><p>有些东西的初始感觉就很特别也很美妙，这是因为它们自然、有机的设计。为确保你的游戏也有这些特性，问</p><ul><li>我的设计有没有生命的特殊感？设计中某些部分是“死”的吗？什么能够让设计“活起来”？</li><li>设计里有亚历山大提出的 15 项特性中的哪几项</li><li>能不能通过某种方法加入更多特性</li><li>设计的哪部分感觉起来像我自己</li></ul><h3 id="真实与虚拟的建筑"><a href="#真实与虚拟的建筑" class="headerlink" title="真实与虚拟的建筑"></a>真实与虚拟的建筑</h3><p>一些流行游戏里的空间时，我们会发现它们常常很奇怪。<br>人们没有注意到建筑的布局有多奇怪是因为人脑非常不擅长于将 3 D 空间转化为 2 D 地图。<br>3 D 空间有没有真实的 2 D 地图这件事并不重要。重要的事，当玩家身处其中时，他们的感觉是怎么样的。</p><h4 id="知其规模"><a href="#知其规模" class="headerlink" title="知其规模"></a>知其规模</h4><p>用现实世界中非常熟悉的东西作为游戏里的尺寸是一个明智的选择。<br>如果游戏世界中元素的比例合适，但玩家还是觉得很怪，可能的原因有</p><ul><li>眼睛高度<ul><li>人们倾向于假设摄像机高度和眼睛高度接近</li></ul></li><li>人与门<ul><li>门被设计用来通过，所以人们会用门作为参考</li><li>若是游戏中没有人们熟悉的尺寸的人造物，玩家也会搞不清尺寸</li></ul></li><li>贴图缩放<ul><li>确保游戏里的贴图与现实中的纹理相一致</li></ul></li></ul><h4 id="第三人称空间错觉"><a href="#第三人称空间错觉" class="headerlink" title="第三人称空间错觉"></a>第三人称空间错觉</h4><p>在我们玩能够看到自己身体的第三人称视角游戏时，大脑会让我们同时在角色身体里和 avatar 身体后两三米的地方同时观看。这会使得当玩家进入房间时感觉“拥挤”<br>以下是一些解决方法</p><ul><li>1：放大房间与家具尺寸<ul><li>这样空间更多</li><li>但玩家会觉得角色变小</li></ul></li><li>2：放大房间，保持家具尺寸不变<ul><li>屋子很大很空</li><li>家具孤立存在</li></ul></li><li>3：放大房间，家具尺寸不变，但分散摆放<ul><li>房间中的物品很稀疏</li></ul></li><li>4：放大房间，稍微放大家具，家具分散摆放<ul><li>最早由《马克思·佩恩》的设计师运用</li><li>在第三人称视角游戏中非常有效</li></ul></li></ul><h3 id="关卡设计"><a href="#关卡设计" class="headerlink" title="关卡设计"></a>关卡设计</h3><p>关卡设计师所做的就是用一种有趣且有意思的方法区布置建筑，道具，还有游戏里的各种挑战。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二十章 世界中的角色</title>
      <link href="2023/06/02/20230602-theartofgamedesign-chap20/"/>
      <url>2023/06/02/20230602-theartofgamedesign-chap20/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二十章-世界中的角色"><a href="#第二十章-世界中的角色" class="headerlink" title="第二十章 世界中的角色"></a>第二十章 世界中的角色</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211947839.png"></p><h3 id="游戏角色的本质"><a href="#游戏角色的本质" class="headerlink" title="游戏角色的本质"></a>游戏角色的本质</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305222137488.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305222138588.png"></p><ul><li>心理 -&gt; 身体<ul><li>小说中的人物深陷精神挣扎</li><li>电影角色同时有心理与身体两方面的挣扎</li><li>游戏角色面对的冲突几乎都是身体上的</li></ul></li><li>现实 -&gt; 幻想<ul><li>小说希望基于现实</li><li>电影常扎根于现实，但往往倾向于幻想</li><li>游戏世界几乎全是幻想</li></ul></li><li>复杂 -&gt; 简单<ul><li>剧情复杂程度及角色刻画深度从小说到游戏呈递减趋势</li></ul></li></ul><h3 id="化身"><a href="#化身" class="headerlink" title="化身"></a>化身</h3><p>AVATAR<br>该名称源自梵语词汇，指神以肉身形式出现在地面上。<br>常用于指代玩家们所控制的角色。</p><p>玩家会将自己投射到化身上去。<br>哪种角色最适合玩家投射呢？</p><h4 id="理想型"><a href="#理想型" class="headerlink" title="理想型"></a>理想型</h4><p>即玩家一直梦想成为的角色。</p><h4 id="白板"><a href="#白板" class="headerlink" title="白板"></a>白板</h4><blockquote><p>一个角色身上的细节越少，读者就更有可能将自己投射到那个角色上。<br>——《理解漫画》斯科特·麦克劳德</p></blockquote><h4 id="85-号透镜：化身"><a href="#85-号透镜：化身" class="headerlink" title="85 号透镜：化身"></a>85 号透镜：化身</h4><p>化身是玩家进入游戏世界的入口。为确保化身能展示出玩家尽可能多的身份特征，问</p><ul><li>我创造的化身是不是一个能与玩家引起共鸣的理想型</li><li>我创造的化身有没有符号化的特性来让玩家将自己投射到那个角色里去</li></ul><h3 id="创造令人信服的游戏角色"><a href="#创造令人信服的游戏角色" class="headerlink" title="创造令人信服的游戏角色"></a>创造令人信服的游戏角色</h3><h4 id="角色窍门-1：列出角色功能"><a href="#角色窍门-1：列出角色功能" class="headerlink" title="角色窍门 1：列出角色功能"></a>角色窍门 1：列出角色功能</h4><p>假设一个动作平台游戏中的角色列表可能是下面这样的</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305222149374.png"></p><p>将角色功能与对角色的想象区分开后，可以更清楚地思考故事，并能缺编游戏中不会缺少必要角色。有时候，可以通过赋予一名角色多个功能让整个过程更有效率。</p><h4 id="86-号透镜：角色功能"><a href="#86-号透镜：角色功能" class="headerlink" title="86 号透镜：角色功能"></a>86 号透镜：角色功能</h4><p>为了确保角色完成游戏所赋予他们的全部职责，问</p><ul><li>我需要的角色是什么</li><li>我已经想象了哪些角色</li><li>某角色与某功能是否很好地对应</li><li>能否让某一角色行使多个功能</li><li>是否需要改变角色设定，让其与功能对应得更好</li><li>需要新角色吗</li></ul><h4 id="角色窍门-2：定义并且运用角色特征"><a href="#角色窍门-2：定义并且运用角色特征" class="headerlink" title="角色窍门 2：定义并且运用角色特征"></a>角色窍门 2：定义并且运用角色特征</h4><h4 id="87-号透镜：角色特征"><a href="#87-号透镜：角色特征" class="headerlink" title="87 号透镜：角色特征"></a>87 号透镜：角色特征</h4><p>为了确保一名角色的特征再起言行中表现出来，问</p><ul><li>是什么特征定义了我的角色</li><li>这些特征是如何表现在世界、角色举止和容貌上的</li></ul><h4 id="角色窍门-3：运用人际关系环状图"><a href="#角色窍门-3：运用人际关系环状图" class="headerlink" title="角色窍门 3：运用人际关系环状图"></a>角色窍门 3：运用人际关系环状图</h4><ul><li>角色关系环状图<ul><li>由凯瑟琳·伊斯比斯特从社会心理学领域引入游戏设计领域</li><li>两板斧：友谊和支配</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305222202283.png"></p><p>将角色放置其中可以将角色间的关系可视化。</p><p>以《星球大战》中其他角色与汉索罗（Han Solo）之间的关系为例<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305222204561.png"></p><h4 id="88-号透镜：人际关系环状图"><a href="#88-号透镜：人际关系环状图" class="headerlink" title="88 号透镜：人际关系环状图"></a>88 号透镜：人际关系环状图</h4><p>理解角色间的关系非常重要。一个办法是画一个直角坐标系，x 为敌意/友好，y 表示服从/支配。选取一名角色进行分析，将其放在原点。思考其他角色相对于该角色所处位置，问</p><ul><li>图上是否有间隙？它们为什么出现？将间隙填上是否有帮助</li><li>图上是否有“极端角色”？如果没有，加入是否有帮助</li><li>被分析角色的同伴都处于一个分区还是不同分区？如果在不同分区会怎样</li></ul><h4 id="角色窍门-4：创造一个角色网络"><a href="#角色窍门-4：创造一个角色网络" class="headerlink" title="角色窍门 4：创造一个角色网络"></a>角色窍门 4：创造一个角色网络</h4><p>角色网络是探讨角色相互之间的感觉以及他们为什么这样感觉的好办法。</p><h4 id="89-号透镜：角色网络"><a href="#89-号透镜：角色网络" class="headerlink" title="89 号透镜：角色网络"></a>89 号透镜：角色网络</h4><p>为了让角色间的关系更加丰满，列一个所有角色的清单，问</p><ul><li>角色之间具体怎么看待对方</li><li>有没有未解释的人际关系？如何使用它们</li><li>是否有太多相似关系？它们怎样才能变得不同</li></ul><h4 id="角色窍门-5：运用“地位”"><a href="#角色窍门-5：运用“地位”" class="headerlink" title="角色窍门 5：运用“地位”"></a>角色窍门 5：运用“地位”</h4><h4 id="90-号透镜：地位"><a href="#90-号透镜：地位" class="headerlink" title="90 号透镜：地位"></a>90 号透镜：地位</h4><p>人们在互动时会根据其不同地位产生不同行为。为了让角色能够有相互意识，问</p><ul><li>游戏里的角色的相对地位级别是什么</li><li>他们怎样才能展现出符合其地位的行为</li><li>地位冲突很有趣，我的角色如何争取他们的地位</li><li>地位的改变也很有趣，这会发生在游戏的哪些环节中呢</li><li>如何给玩家一个表达地位的机会</li></ul><h4 id="角色窍门-6：运用语音的力量"><a href="#角色窍门-6：运用语音的力量" class="headerlink" title="角色窍门 6：运用语音的力量"></a>角色窍门 6：运用语音的力量</h4><ul><li>游戏中的语音表演与电影中的强大表现相比显得粗糙的原因<ul><li>游戏开发者缺乏与优秀配音演员打交道的经验</li><li>游戏工业中在后期才引入配音，这在很大程度上消除了配音演员的作用<ul><li>无法利用其对于角色的理解所即兴发挥出的表演</li><li>这是无奈之举，未来随着技术的发展希望能有所改观</li><li>《顽皮狗》在这方面就有很大的投入</li></ul></li></ul></li></ul><h4 id="角色窍门-7：运用面部的力量"><a href="#角色窍门-7：运用面部的力量" class="headerlink" title="角色窍门 7：运用面部的力量"></a>角色窍门 7：运用面部的力量</h4><p>其他动物并没有非常明显的眼白。这似乎是我们为了交流所进化出来的。我们也是唯一能够脸红、能够哭泣的动物。</p><p>面部动画不一定需要高昂成本，因为你可以通过简单眉毛或者眼睛形状的变化来得到很好效果。但你必须要有一个玩家能够看到的脸。</p><p>最重要的是，你应该把注意力集中到角色的眼睛上。</p><h4 id="角色窍门-8：有力的故事能够转变角色"><a href="#角色窍门-8：有力的故事能够转变角色" class="headerlink" title="角色窍门 8：有力的故事能够转变角色"></a>角色窍门 8：有力的故事能够转变角色</h4><blockquote><p>人们不会改变，他们只是很少流露真心。<br>——安妮·斯莱特</p></blockquote><p>优秀故事的一个显著特点就是其中角色的转变。</p><p>可以利用角色转变表来标记出角色经历转变的环节。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305232120916.png" alt="《灰姑娘》的角色转变表"></p><h4 id="91-号透镜：角色转变"><a href="#91-号透镜：角色转变" class="headerlink" title="91 号透镜：角色转变"></a>91 号透镜：角色转变</h4><p>我们关注角色转变，因为我们关心这么做之后能带来的转变。为了确保你的角色能够通过一种又去方式发生转变，问</p><ul><li>每一名角色在游戏中会如何转变</li><li>如何讲这些转变传达给玩家？能否使用一种更清楚、更有力的方式</li><li>转变足够多吗</li><li>转变出人意料吗？有趣吗</li><li>变化可信吗</li></ul><h4 id="角色窍门-9：让你的角色出人意料"><a href="#角色窍门-9：让你的角色出人意料" class="headerlink" title="角色窍门 9：让你的角色出人意料"></a>角色窍门 9：让你的角色出人意料</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305232127485.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305232128553.png"></p><h4 id="角色窍门-10：避免恐怖谷"><a href="#角色窍门-10：避免恐怖谷" class="headerlink" title="角色窍门 10：避免恐怖谷"></a>角色窍门 10：避免恐怖谷</h4><p>![[恐怖谷效应#L-My Words]]</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十九章 在世界里发生的故事与游戏</title>
      <link href="2023/06/01/20230601-theartofgamedesign-chap19/"/>
      <url>2023/06/01/20230601-theartofgamedesign-chap19/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十九章-在世界里发生的故事与游戏"><a href="#第十九章-在世界里发生的故事与游戏" class="headerlink" title="第十九章 在世界里发生的故事与游戏"></a>第十九章 在世界里发生的故事与游戏</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211637930.png"></p><h3 id="跨媒体世界"><a href="#跨媒体世界" class="headerlink" title="跨媒体世界"></a>跨媒体世界</h3><p>![[跨媒体世界#定义]]</p><h3 id="口袋妖怪的力量"><a href="#口袋妖怪的力量" class="headerlink" title="口袋妖怪的力量"></a>口袋妖怪的力量</h3><p>《口袋妖怪》系列是至今最成功的跨媒体世界之一。</p><p>《口袋妖怪》最初是任天堂 Game Boy 上的一个游戏。</p><p>游戏非常成功，以至于不久之后一部漫画和一个动画系列就被纳入了议程。《口袋妖怪》动画如实地反映了游戏里错综复杂的玩法。而主角的冒险更是直接取自 Game Boy 游戏的流程。最后的结果就是，一部真实反映游戏机制的动画。玩家在观看之后能够对游戏里所应该采取的策略有更深的理解。</p><p>1999 年，任天堂与制作了第一款可搜集卡片游戏《万智牌》的公司——威世智合作，创作了一款给予口袋妖怪世界的可搜集卡片游戏。与电视节目一样，这款卡片游戏的机制也尽可能地与 Game Boy 游戏一致。</p><p>这三个通向同一个紧凑世界的入口，互为补充，使得这项资产几乎成为一个无法阻挡的力量。</p><h3 id="跨媒体世界的特性"><a href="#跨媒体世界的特性" class="headerlink" title="跨媒体世界的特性"></a>跨媒体世界的特性</h3><h4 id="强而有力的跨媒体世界"><a href="#强而有力的跨媒体世界" class="headerlink" title="强而有力的跨媒体世界"></a>强而有力的跨媒体世界</h4><p>为了确保你能够把握由幻想带来的传奇力量，请使用以下透镜</p><h4 id="83-号透镜：幻想"><a href="#83-号透镜：幻想" class="headerlink" title="83 号透镜：幻想"></a>83 号透镜：幻想</h4><p>每个人都有不能说的愿望与欲求。为了确保你（创造）的世界能够满足它们，问</p><ul><li>我的世界能够满足什么幻想</li><li>我的玩家幻想成为什么样的人</li><li>我的玩家会幻想在那个世界里做什么事</li></ul><h4 id="经久不衰的跨媒体世界"><a href="#经久不衰的跨媒体世界" class="headerlink" title="经久不衰的跨媒体世界"></a>经久不衰的跨媒体世界</h4><ul><li><p>超人</p><ul><li>75 年+</li></ul></li><li><p>詹姆斯邦德</p><ul><li>60+</li></ul></li><li><p>星际迷航/神秘博士</p><ul><li>50+</li></ul></li><li><p>迪士尼乐园也是跨媒体世界的典型例子之一</p></li></ul><h4 id="不断进化的跨媒体世界"><a href="#不断进化的跨媒体世界" class="headerlink" title="不断进化的跨媒体世界"></a>不断进化的跨媒体世界</h4><ul><li><p>夏洛克·福尔摩斯</p><ul><li>猎鹿帽<ul><li>在西德尼·佩吉特的插画中引入<ul><li>画家本人很喜欢这种帽子</li></ul></li></ul></li><li>大烟斗<ul><li>威廉·吉列特在其所扮演的福尔摩斯的话剧中引入<ul><li>因为大烟斗非常显眼，即使坐在剧院后排也能看到</li></ul></li></ul></li><li>以上两个元素的引入可能是福尔摩斯之父阿瑟·柯南·道尔爵士也从未想过的，但随着跨媒体世界的演变，也随之成为了福尔摩斯的标志</li></ul></li><li><p>圣诞老人</p><ul><li>也是多人合作的产物</li><li>驯鹿<ul><li>克莱门特·摩尔在 1823 年引入</li></ul></li><li>鲁道夫<ul><li>罗伯特 L ·梅在 1939 年引入</li></ul></li></ul></li><li><p>谁来决定哪些新的特征能进入跨媒体世界？</p><ul><li>集体意识的一部分决定</li><li>长远来看，这个世界是由那些造访它的人所统治的</li></ul></li></ul><h3 id="成功的跨媒体世界都有些什么共同点"><a href="#成功的跨媒体世界都有些什么共同点" class="headerlink" title="成功的跨媒体世界都有些什么共同点"></a>成功的跨媒体世界都有些什么共同点</h3><ul><li>它们常常扎根在一个单一媒体里面<ul><li>最成功的跨媒体世界首先只会在一个媒体里吸引大量注意<ul><li>夏洛克福尔摩斯<ul><li>连载小说</li></ul></li><li>超人<ul><li>漫画</li></ul></li><li>星球大战<ul><li>电影</li></ul></li><li>星际迷航<ul><li>电视剧</li></ul></li><li>口袋妖怪<ul><li>掌机游戏</li></ul></li><li>变形金刚<ul><li>玩具</li></ul></li></ul></li></ul></li><li>它们很直观<ul><li>超人与蝙蝠侠的作者们肯定从来没有想过，它们的角色会与其他的超级英雄共享一个世界。但对漫画读者来说，这些角色住在同一个世界里是显而易见的——所以现在他们就在一个世界里了</li></ul></li><li>它们的核心是富有创造力的个人<ul><li>大部分成功的跨媒体世界都建立在一个人的想象与美学风格之上<ul><li>华特迪士尼</li><li>宫本茂</li><li>L·弗兰克·鲍姆</li><li>田尻智</li><li>吉姆汉森</li><li>J.K.罗琳</li><li>乔治卢卡斯</li></ul></li></ul></li><li>它们适合讲多个故事</li><li>它们可以通过任意一个入口去理解<ul><li>这里面有两种情况<ul><li>要么各个入口独立存在</li><li>要么一些入口的进入需要基于其他入口<ul><li>也就是如果没有先理解入口 A，那么就无法理解入口 B</li><li>这种情况会有一些局限性</li></ul></li></ul></li></ul></li><li>它们常常与探索有关</li><li>它们与完成心愿有关</li></ul><p>如果你想要创造/改进跨媒体世界，请使用以下透镜</p><h4 id="84-号透镜：世界"><a href="#84-号透镜：世界" class="headerlink" title="84 号透镜：世界"></a>84 号透镜：世界</h4><p>你的游戏的世界与游戏是分离的。你的游戏是一扇通向这个只存在于玩家想象力中的神奇世界的大门。为了确保你的世界有足够的力量和完整性，问</p><ul><li>我的世界在哪方面比现实世界更胜一筹</li><li>能有多个通往该世界的入口吗？它们之间有什么不同？它们之间如何互相支持</li><li>我的世界围绕一个单一故事吗？有没有可能在其中发生多个故事</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十八章 故事和游戏结构可以用间接控制艺术性地融为一体</title>
      <link href="2023/05/31/20230531-theartofgamedesign-chap18/"/>
      <url>2023/05/31/20230531-theartofgamedesign-chap18/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十八章-故事和游戏结构可以用间接控制艺术性地融为一体"><a href="#第十八章-故事和游戏结构可以用间接控制艺术性地融为一体" class="headerlink" title="第十八章 故事和游戏结构可以用间接控制艺术性地融为一体"></a>第十八章 故事和游戏结构可以用间接控制艺术性地融为一体</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305182212741.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305182213646.png"></p><h3 id="自由的感觉"><a href="#自由的感觉" class="headerlink" title="自由的感觉"></a>自由的感觉</h3><h4 id="79-号透镜：自由"><a href="#79-号透镜：自由" class="headerlink" title="79 号透镜：自由"></a>79 号透镜：自由</h4><p>自由是区分游戏和其它娱乐形式的事物之一。为了确保你的玩家尽可能地感觉自由，问自己这些问题：</p><ul><li>我的玩家什么时候可以自由行动？这些时间里他们感觉到自由了吗？</li><li>他们什么时候会被束缚？这些时候他们感觉到被束缚了吗？</li><li>游戏中是否有些地方可以让他们比现在感觉更加自由？</li><li>游戏中是否有些地方他们会因为过于自由而感到手足无措</li></ul><blockquote><p>我们无须总是给予玩家真正的自由，我们只需给予他们自由感。就像我们讨论过的那样，所有的真实只是你的感觉。</p></blockquote><h3 id="间接控制方法-1：限制"><a href="#间接控制方法-1：限制" class="headerlink" title="间接控制方法 1：限制"></a>间接控制方法 1：限制</h3><p>过多的选择会带来选择困难。<br>有限制的选择能保留自由感，而且能让玩家走向设计师所设想的方向。</p><h3 id="间接控制方法-2：目标"><a href="#间接控制方法-2：目标" class="headerlink" title="间接控制方法 2：目标"></a>间接控制方法 2：目标</h3><p>玩家若是有目标，就会不自觉地朝着目标前进。</p><blockquote><p>创造玩家永远看不见的内容并不会给予他们更多的自由，这样做只是在浪费那些本可以用来改进玩家可见场景的开发资源。</p></blockquote><p>玩家相信目标，那么间接控制的作用就更强。</p><p>例子：阿姆斯特丹的史基浦机场里的男盥洗室里小便池内的“苍蝇”图画。</p><h3 id="间接控制方法-3：界面"><a href="#间接控制方法-3：界面" class="headerlink" title="间接控制方法 3：界面"></a>间接控制方法 3：界面</h3><p>这里谈到的是玩家的可见部分所随之带来的“潜在交互可能性”。若是看不到一个东西，玩家可能不会想到与之有关的玩法，但若是放上了，就应该提供相应的交互可能。</p><h3 id="间接控制方法-4：视觉设计"><a href="#间接控制方法-4：视觉设计" class="headerlink" title="间接控制方法 4：视觉设计"></a>间接控制方法 4：视觉设计</h3><blockquote><p>如果用眼而不是透过眼来看，<br>我们就会相信谎言。<br>——威廉·布莱克</p></blockquote><blockquote><p>人们倾向前往能吸引注意力的地方。因此，如果你能控制人们望向何处，你就可以控制他们去往何地。</p></blockquote><blockquote><p>要设计好的关卡，其中一个要点是玩家的眼睛能将他们毫不费力地带过关卡。这会让玩家感觉掌控自如并且沉浸在游戏世界中。</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305182239746.png" alt="玩家不知道该去往何处，会自由前行"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305182240776.png" alt="玩家会不自觉前往线条导向的位置"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305182240807.png" alt="玩家不自觉地会分散往三个方向"></p><h3 id="间接控制方法-5：虚拟角色"><a href="#间接控制方法-5：虚拟角色" class="headerlink" title="间接控制方法 5：虚拟角色"></a>间接控制方法 5：虚拟角色</h3><blockquote><p>如果你可以使用你叙事的能力来使玩家确实关心角色，也就是说，他们愿意想要服从这些角色，保护他们，帮助他们，或者摧毁他们，那么你突然就拥有了一个杰出的工具来控制玩家将尝试做什么和不做什么。</p></blockquote><ul><li><p>例子</p><ul><li>早期互动电影《猎尸者》<ul><li>旁白假装说观众手中的“惩罚/宽恕”卡片会决定放映师播放哪种结局</li><li>但其实根本没有拍摄“宽恕”结局</li></ul></li><li>游戏《动物之森》<ul><li>有一个快乐房间学院（HRA）的神秘委员会会定期评估你的房屋装饰并基于其成绩给予奖励<ul><li>玩家一方面因为分数是游戏目标而努力想要达成更高分数</li><li>另一方面可能也因为想要避免有“人”在观察自己家时感到厌恶的尴尬，即使只是一种假想情境</li></ul></li></ul></li><li>游戏《古堡迷踪》<ul><li>玩家若是长时间不动，同行的公主就可能被突然出现的恶灵拖走<ul><li>若是恶灵出现，玩家通常都会迅速反应，因为可能想到了“让公主失望了”</li></ul></li></ul></li></ul></li><li><p>使用这一方法的前提是让玩家关心游戏中的虚拟角色，再之后，让玩家帮助他们所同情的角色是很自然也是伟大的人类天性。</p></li></ul><h4 id="80-号透镜：帮助"><a href="#80-号透镜：帮助" class="headerlink" title="80 号透镜：帮助"></a>80 号透镜：帮助</h4><p>本质上，每个人都是愿意给予他人帮助的。为了将这种乐于助人的精神引向引人入胜的游戏玩法，问</p><ul><li>在游戏上下文中，玩家在帮助谁</li><li>我是否可以让玩家感觉和需要帮助的角色内心联系得更紧密</li><li>我是否可以更好地讲述完成游戏目标可以帮助他人的故事</li><li>被帮助的角色如何表现出他们的感谢方式</li></ul><h3 id="间接控制方法-6：音乐"><a href="#间接控制方法-6：音乐" class="headerlink" title="间接控制方法 6：音乐"></a>间接控制方法 6：音乐</h3><ul><li>餐厅一直在使用这种方法。<ul><li>快节奏的音乐让人们吃得更快。</li><li>慢速音乐可以让顾客更久地停留，并增加其点单的可能性</li></ul></li></ul><p>想象用什么音乐让玩家</p><ul><li>四处张望寻找隐藏物</li><li>不放慢速度的同时毁坏任何可能的东西</li><li>发现走错路了</li><li>缓慢并小心移动</li><li>担心误伤到无辜旁观者</li><li>走得尽可能远、尽可能快，头也不回</li></ul><p>但有时候间接控制有可能以非设计师意图的方式对玩家造成影响。<br>为确保间接控制使用得正确，用以下透镜</p><h4 id="81-号透镜：间接控制"><a href="#81-号透镜：间接控制" class="headerlink" title="81 号透镜：间接控制"></a>81 号透镜：间接控制</h4><p>为达到一种理想的游戏体验，每位设计师对于想要玩家做什么都有一个幻想。为确保玩家是完全凭着自由意愿做这些事，问</p><ul><li>最理想情况下，我想要玩家做什么</li><li>限制是否可以让玩家去做这件事</li><li>目标是否可以让玩家去做这件事</li><li>界面是否可以让玩家去做这件事</li><li>视觉设计是否可以让玩家去做这件事</li><li>游戏角色是否可以让玩家去做这件事</li><li>音乐/声音是否可以让玩家去做这件事</li><li>是否还有别的方法在不侵犯玩家自由感前提下，可以用其强迫玩家进行理想中的行为</li><li>我的设计是否会降低我倾向玩家不该拥有的欲望</li></ul><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><h4 id="82-号透镜：串通"><a href="#82-号透镜：串通" class="headerlink" title="82 号透镜：串通"></a>82 号透镜：串通</h4><p>角色应该起到他在游戏设计中的作用，如果有可能，那么也应该作为游戏设计师的许多小分身来向着他的最终目标努力工作，这样也保证了这是一次对玩家来说迷人的体验。为确保你的角色能胜任这个职责，问</p><ul><li>我想要玩家体验什么</li><li>角色如何在不损害游戏世界目标的前提下实现这种体验？</li></ul><p>中国哲学家老子说过：</p><pre class="line-numbers language-ad-cite" data-language="ad-cite"><code class="language-ad-cite">太上···功成事遂，百姓皆谓我自然。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>希望当你尝试将玩家引向会让他们感觉自己掌控天下、如鱼得水和成功的迷人体验时，你能发现这种间接控制方法的巧妙。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十七章 有种体验叫做故事</title>
      <link href="2023/05/30/20230530-theartofgamedesign-chap17/"/>
      <url>2023/05/30/20230530-theartofgamedesign-chap17/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十七章-有种体验叫做故事"><a href="#第十七章-有种体验叫做故事" class="headerlink" title="第十七章 有种体验叫做故事"></a>第十七章 有种体验叫做故事</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305112151386.png"></p><blockquote><p>上帝一生从没写过一出好戏。<br>—— 库尔特·冯内古特</p></blockquote><h3 id="故事-游戏二象性"><a href="#故事-游戏二象性" class="headerlink" title="故事/游戏二象性"></a>故事/游戏二象性</h3><blockquote><p>我们关心的不是创造故事或者游戏——我们关心的是创造体验。故事和游戏都可以被认为是帮助创造体验的机器。</p></blockquote><h3 id="被动娱乐的神话"><a href="#被动娱乐的神话" class="headerlink" title="被动娱乐的神话"></a>被动娱乐的神话</h3><blockquote><p>传统叙事的底层机制是人天生的交流能力，关于它被互动叙事废除的这个观点是荒谬的。</p></blockquote><h3 id="梦想"><a href="#梦想" class="headerlink" title="梦想"></a>梦想</h3><blockquote><p>“我有一个关于美丽的互动叙事的梦想——一个超越轻微游戏玩法，一个关于拥有完全互动叙事的精彩故事，它会让参加者感觉自己身处在有史以来最佳电影里，而同时他们依然拥有行动、思维和表达的完全自由！当然如果我们继续摸放过去的故事和玩法形式，这个梦将无法实现。”</p></blockquote><h3 id="事实"><a href="#事实" class="headerlink" title="事实"></a>事实</h3><h4 id="真实世界方法-1：珍珠串"><a href="#真实世界方法-1：珍珠串" class="headerlink" title="真实世界方法 1：珍珠串"></a>真实世界方法 1：珍珠串</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305122318708.png"></p><p>这是两种统领游戏设计世界互动叙事领域中的其中一种方法，常被称为 [[珍珠项链]] 也被称为 [[河与湖]]。</p><p>![[珍珠项链#定义]]</p><p>在这种情况下，玩家赢得挑战时的奖励可被视为更多的故事和挑战。</p><h4 id="真实世界方法-2：故事机器"><a href="#真实世界方法-2：故事机器" class="headerlink" title="真实世界方法 2：故事机器"></a>真实世界方法 2：故事机器</h4><pre class="line-numbers language-ad-cite" data-language="ad-cite"><code class="language-ad-cite">什么是故事——是一连串把某人和其他人联系起来的事件。...一个好故事就像一台故事机——产生一连串事实上非常有趣的事件。...设计师将越多的规则放入游戏中（就像珍珠的链子），游戏就产生越少的故事。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="73-号透镜：故事机器"><a href="#73-号透镜：故事机器" class="headerlink" title="73 号透镜：故事机器"></a>73 号透镜：故事机器</h4><p>当人们玩一个游戏的时候它是一台能够生产故事的机器，这便是好游戏。为确保你的故事机器能够尽可能高产，问：</p><ul><li>当玩家在达到目标时有不同的选择，会产生新的不同的故事。我如何才能添加更多的这种选择呢？</li><li>不同的矛盾导致不同的故事。怎么才能让更多种类的矛盾从游戏中产生？</li><li>当玩家可以个性化设定角色时，他们会更关心故事的结果，类似的故事会开始感觉非常不同。怎样才能让玩家个性化故事呢？</li><li>好的故事拥有好的兴趣曲线。我的规则能让故事拥有好的兴趣曲线吗？</li><li>只有你能讲述的故事才是一个好故事。</li></ul><p>以上两种方法已经涵盖了 99% 的现有的互动叙事的方法。<br>珍珠链子需要事先创造一个线性故事，而故事机器充满生命力却需要事先产生尽可能少的故事。<br>但是否有别的方式——具有精彩分支的故事树，都是 AI，数十个令人满意的结局，可供玩家反复享受。<br>这个构想有一些问题，且值得探讨。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="问题-1：好的故事是统一的"><a href="#问题-1：好的故事是统一的" class="headerlink" title="问题 1：好的故事是统一的"></a>问题 1：好的故事是统一的</h4><p>创造互动故事树很简单——一直创造更多选择就可以。但其中有多少选择是有趣的？会拥有什么样的兴趣曲线？</p><pre class="line-numbers language-ad-cite" data-language="ad-cite"><code class="language-ad-cite">好故事拥有强烈的统一性——故事开头五分钟呈现的问题具有驱动的意义，贯穿始终。...所有的故事都是被同意创造的——开头和结尾是一体的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>为了创造一个具有二十种结局，以及一个能够完美适配所有这些结局的开头，至少可以说是富有挑战性的。</p><h4 id="问题-2：组合爆炸"><a href="#问题-2：组合爆炸" class="headerlink" title="问题 2：组合爆炸"></a>问题 2：组合爆炸</h4><blockquote><p>我担心有太多的现实<br>——约翰·斯坦贝克，《与查理一起旅行：寻找美国》</p></blockquote><p>做一个简单计算。<br>假如每种分支都是独立不同的，如果每一次抉择都需要 3 个分支选项，游戏中共有 10 次需要抉择的时候，这就意味着一共会有 3^10 种分支走向。<br>如此巨大的数字让任何形式有意义的分支叙事对我们短暂的人生来说都显得不太可能。</p><p>大部分互动叙事者处理这些令人费解的过多剧情的主要方法是一开始就将结局融合在一起——有点像下面这样。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305142236484.png"></p><p>这使得叙事变得容易管理了，但也意味着玩家的很多选择变得没有那么有意义了。</p><h4 id="问题-3：多重结局让人失望"><a href="#问题-3：多重结局让人失望" class="headerlink" title="问题 3：多重结局让人失望"></a>问题 3：多重结局让人失望</h4><p>幻想：一个故事如果有多重结局，是如此美妙，玩家可以重复游玩，每次都是新体验！<br>现实：玩家打出其中一个结局后，会开始思考：<br>1）这就是真结局了吗？<br>我们想寻找办法写出同等合理的结局，但如前所说，好的故事具有统一性，这意味着可能本就没有那么多合理结局。一旦玩家开始怀疑自己当前所走的是“错误结局”，他们会停止体验故事转而开始思考如何<em>正确地玩</em>，这会让其他的叙事尝试变得没有意义。[[珍珠项链]]在这里有一个巨大优势——玩家总是处于“正确的故事线”上，而且玩家知道他们的任何尝试都会将他们带往一个有回报的终点。</p><pre class="line-numbers language-ad-note" data-language="ad-note"><code class="language-ad-note">这里说的也许有些过于极端了？诚然，也许大部分玩家会希望寻求所谓 &#96;True End&#96;，但因为这样就将其他的叙事称为没有意义也许有失偏颇。也许可以通过玩家获取成就的数据来侧面看出玩家对于不同结局的追求情况？（但此方法放在目前也并无实际意义，因为貌似不存在一个拥有近乎无线结局的游戏可以作为数据来源）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2）必须要把所有的一切重玩一遍来看另外的那个结局吗？</p><p>多结局和统一性相抵触。<br>重复游玩相同的内容与四号透镜相抵触。</p><p>![[游戏设计艺术#4 号透镜：惊喜]]</p><p>例子：</p><ul><li>《灵魂侦探》</li></ul><blockquote><blockquote><p>应该指的是《Murdered Soul Suspect》？</p></blockquote></blockquote><p>游戏是一场 30 分钟不停移动的体验，最终在一场与恶棍的灵魂大战中达到高潮，战斗中玩家的力量取决于玩家在游戏中选择的路径。<br>结果就是玩家为了通关需要一次又一次游玩。<br>游戏由很多视频片段组成，整个游戏树有一个明显的瓶颈，而玩家每次都必须通过这个瓶颈。设计师拍摄了瓶颈区域的多个视频版本，每个都是不同的对话，但包含相同信息。虽然设计师努力解决重复内容的问题，但玩家还是普遍觉得重复游玩有些无聊。</p><ul><li>《星球大战：旧共和国武士》</li></ul><p>玩家可以从两个阵营力量中选择，拥有不同的冒险，不同的任务，最终有一个不同的结局。<br>人们可能会争论这并不真的是同一故事的两种不同结局，而是两个完全不同的故事——如此不同以至其是同等有效的。<br>想走中间道路的玩家通常会觉得体验不好。</p><h4 id="问题-4：动词不够"><a href="#问题-4：动词不够" class="headerlink" title="问题 4：动词不够"></a>问题 4：动词不够</h4><p>游戏中的人物花时间做的事和电影/书籍中人物做的事很不一样：</p><ul><li>电视游戏动词：跑，设计，跳，爬，扔，投掷，用拳猛击，飞翔；</li><li>电影动词：交谈，问，谈判，说服，争论，交，恳求，抱怨。</li></ul><p>电视游戏人物因为严重受限于其能力而做不了任何需要高于他们脖子以上的发生的事。在故事中发生的大部分事情都是交谈，而目前的电视游戏还无法支持它。</p><p>游戏设计师克里斯·斯温曾建议当科技发展到某一阶段，玩家可以与电脑控制的角色进行富有智慧的口头对话，它将具有和引入有声电影一样类似的效果。</p><blockquote><blockquote><p>脖子以上干不了也太真实了 (￣▽￣)／<br>不过随着 chatGPT 的发布，感觉距离文中所说的那个时代又更近了</p></blockquote></blockquote><h4 id="问题-5：时间旅行使悲剧过时"><a href="#问题-5：时间旅行使悲剧过时" class="headerlink" title="问题 5：时间旅行使悲剧过时"></a>问题 5：时间旅行使悲剧过时</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305152142536.png"></p><blockquote><p>自由和控制感是任何互动故事里最让人兴奋的部分之一，但是它们的代价很可怕：叙事者必须放弃必然性。</p></blockquote><p>悲剧的特性之一就是其不可抗性，你明知悲剧将至，但无力抵抗。<br>电视游戏的掌控感使人感觉任何悲剧都可以被撤销。</p><blockquote><p>不是所有好的故事都自然是悲剧。但是任何符合互动小说之梦质量的故事都应该至少拥有悲剧的潜质。</p></blockquote><h3 id="梦想重生"><a href="#梦想重生" class="headerlink" title="梦想重生"></a>梦想重生</h3><h3 id="给游戏设计师的故事秘诀"><a href="#给游戏设计师的故事秘诀" class="headerlink" title="给游戏设计师的故事秘诀"></a>给游戏设计师的故事秘诀</h3><h4 id="故事秘诀-1：尊重故事栈"><a href="#故事秘诀-1：尊重故事栈" class="headerlink" title="故事秘诀 1：尊重故事栈"></a>故事秘诀 1：尊重故事栈</h4><p>![[故事栈#定义]]</p><h4 id="故事秘诀-2：开始使用你的故事"><a href="#故事秘诀-2：开始使用你的故事" class="headerlink" title="故事秘诀 2：开始使用你的故事"></a>故事秘诀 2：开始使用你的故事</h4><p>设计可以从故事、玩法、技术、美感四元素中的任意点开始。<br>许多设计开始于故事，但在以损失其他元素为代价的情况下过于盲从地跟从故事是一个常见错误。<br>故事可以说是最有适应性的元素，应该让其来服务于其他元素的实现/满足。</p><p>别怕将故事塑造成可以支持你认为最好的玩法的样子。</p><h4 id="故事秘诀-3：目标、障碍和冲突"><a href="#故事秘诀-3：目标、障碍和冲突" class="headerlink" title="故事秘诀 3：目标、障碍和冲突"></a>故事秘诀 3：目标、障碍和冲突</h4><p>好莱坞剧本创作届的格言：一个故事主要的原料有（1）一个带有目标的任务和（2）妨碍他完成目标的障碍。</p><pre class="line-numbers language-ad-cite" data-language="ad-cite"><code class="language-ad-cite">当人物尝试克服障碍时，矛盾就会产生，特别是当另外的角色拥有一个与之冲突的目标时。这个模式会引出非常有趣的故事，因为故事中，角色必须参与解决问题（我们认为这非常有趣），矛盾导致不可预料的结果，或者可以说惊喜（我们认为这非常有趣），再加上障碍越大，戏剧性变化的潜力也就越大（我们认为这非常有趣）。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="74-号透镜：障碍"><a href="#74-号透镜：障碍" class="headerlink" title="74 号透镜：障碍"></a>74 号透镜：障碍</h4><p>一个没有障碍的目标并不值得追寻。使用这个透镜来确保障碍是玩家想要克服的。</p><ul><li>主人公和目标之间存在什么关系？为什么主人公会在意它？</li><li>主人公和目标之间的障碍是什么？</li><li>在障碍背后是否存在一个对手？在主人公和对手之间存在什么关系？</li><li>障碍是否在逐渐增加难度？</li><li>有些人说“障碍越大，故事越好”。你的障碍够大吗？它们能够变得更大吗？</li><li>杰出的故事经常包含为了克服障碍主人公发生的转变。你的主人公是如何转变的？</li></ul><h4 id="故事秘诀-4：做到真实"><a href="#故事秘诀-4：做到真实" class="headerlink" title="故事秘诀 4：做到真实"></a>故事秘诀 4：做到真实</h4><blockquote><p>了解你的世界，因为上帝了解我们。<br>——罗伯特·麦基</p></blockquote><p>要想象自己就是那个世界中的角色，并以他们的方式和视角来思考世界中的一切。<br>如果你的想象对你来说不像真的，那么对玩家们来说也是一样。</p><h4 id="故事秘诀-5：提供简单和超越"><a href="#故事秘诀-5：提供简单和超越" class="headerlink" title="故事秘诀 5：提供简单和超越"></a>故事秘诀 5：提供简单和超越</h4><ul><li><p>简单</p><ul><li>游戏世界比真实世界更简单</li></ul></li><li><p>超越</p><ul><li>玩家在游戏世界比现实世界更富有力量</li></ul></li><li><p>例子</p><ul><li>中世纪<ul><li>剑与魔法</li></ul></li><li>未来派<ul><li>后启示录</li></ul></li><li>战争<ul><li>正常规则和法律被放置一旁</li><li>超越<ul><li>强力装备/能力</li></ul></li></ul></li><li>现代<ul><li>GTA<ul><li>简单<ul><li>不用遵守法律时生活变得简单</li></ul></li><li>超越<ul><li>不用遵守法律时会变得强大得多</li></ul></li></ul></li><li>模拟人生<ul><li>简单<ul><li>简化人类生活</li></ul></li><li>超越<ul><li>上帝般的力量来控制游戏中的人物</li></ul></li></ul></li></ul></li><li>抽象<ul><li>我的世界</li></ul></li></ul></li></ul><h4 id="75-号透镜-简单和超越"><a href="#75-号透镜-简单和超越" class="headerlink" title="75 号透镜 简单和超越"></a>75 号透镜 简单和超越</h4><p>为了确认你将简单和超越正确组合，问</p><ul><li>我的世界如何比真实世界更简单？用其他方法可否使它更简单？</li><li>我给予了玩家何种超越的力量？我如何可以在不去除游戏挑战的前提下给予玩家更多这种力量？</li><li>我创造的简单与超越组合是否不自然，或者它是否满足了我的玩家一种特别的愿望？</li></ul><h4 id="故事秘诀-6：参考英雄的旅程"><a href="#故事秘诀-6：参考英雄的旅程" class="headerlink" title="故事秘诀 6：参考英雄的旅程"></a>故事秘诀 6：参考英雄的旅程</h4><ul><li>《千面英雄》<ul><li>约瑟夫·坎贝尔</li><li>描述了大部分神话故事看上去都会具有的组成结构——单一神话/英雄的旅程。</li><li>乔治卢卡斯围绕着坎贝尔描述的结构创造了《星球大战》的基础结构并获得巨大成功</li></ul></li><li>《作家之旅》<ul><li>克里斯托弗·沃格勒</li><li>教授如何使用坎贝尔描述的原型写作故事的使用指南</li><li>创作了《黑客帝国》的沃卓斯基兄弟据称用了沃格勒的书作为指南。</li></ul></li></ul><p>沃格勒对于英雄旅程的概要</p><ol><li>平凡世界——创造场景以显示英雄是一个过着平凡生活的普通人</li><li>冒险的召唤——英雄面临的挑战扰乱了他平凡的生活</li><li>拒绝召唤——英雄为他不能继续冒险找借口</li><li>和导师见面——一些充满智慧的任务提出建议、训练和帮助</li><li>跨过大门——英雄离开平凡生活（常迫于压力）而进入冒险世界</li><li>测试、同盟、敌人——英雄面对小挑战，结盟，早与敌人，学习冒险世界的运转方式</li><li>接近洞窟——英雄遭遇挫折并且需要尝试一些新的挑战</li><li>严峻考验——英雄面临巅峰生死危机</li><li>奖励——英雄大难不死，克服了恐惧，得到了奖励</li><li>回家的路——英雄回到了平凡世界，问题依然未全部被解决</li><li>重生——英雄面临一场更大的危机并且必须运用已学到的一切</li><li>带着长生不老药回归——现在旅程彻底结束，英雄的成功改善了平凡世界里每个人的生活</li></ol><p>不必全用，可以更多，可以调序<br>不必将英雄旅程作为写作起点，但可以用其来检验自己的故事</p><h4 id="76-号透镜：英雄的旅程"><a href="#76-号透镜：英雄的旅程" class="headerlink" title="76 号透镜：英雄的旅程"></a>76 号透镜：英雄的旅程</h4><p>许多英雄故事都有类似结构。使用这个透镜确保没有遗漏任何可能改进故事的元素。问：</p><ul><li>我的故事是否拥有能够使之成为英雄故事的元素？</li><li>如果是这样，它如何匹配英雄旅程的结构</li><li>我的故事是否可以通过加入更多典型元素的方法来改进</li><li>我的故事是否和这个形式过于匹配，以至于感觉陈腐</li></ul><h4 id="故事秘诀-7：保持故事世界的一致性"><a href="#故事秘诀-7：保持故事世界的一致性" class="headerlink" title="故事秘诀 7：保持故事世界的一致性"></a>故事秘诀 7：保持故事世界的一致性</h4><p>所构建的世界的规则应该是一以贯之的，这也是为什么所谓空气墙让人无法忍受。<br>一致性是想象得以延续的基础。</p><h4 id="故事秘诀-8：让你的故事世界平易近人"><a href="#故事秘诀-8：让你的故事世界平易近人" class="headerlink" title="故事秘诀 8：让你的故事世界平易近人"></a>故事秘诀 8：让你的故事世界平易近人</h4><blockquote><p>当你在讲一个故事时，真相并不总是你的朋友。让玩家相信和喜欢的重点是外观上的精确性。</p></blockquote><p>即是说，游戏世界中有时候需要舍弃一些真实度（即之前提过的简单原则），让玩家“感觉真实/合理”比实际真实/合理更加重要。</p><p>而当你的游戏中需要引入一些新奇的东西时，需要以合理的方式引入。</p><h4 id="77-号透镜：最奇怪的东西"><a href="#77-号透镜：最奇怪的东西" class="headerlink" title="77 号透镜：最奇怪的东西"></a>77 号透镜：最奇怪的东西</h4><p>故事里有奇怪的东西可以帮助你给奇异的游戏机制赋予意义——它可以抓住玩家的兴趣，而且可以让你的世界看上去特别。不过，太多太奇怪的东西会把你的故事渲染得费解并难以接近。为确保你的故事是好的那种奇怪，问：</p><ul><li>我的故事里最奇怪的东西是什么</li><li>我怎样确保这个最奇怪的东西不会迷惑/疏远玩家</li><li>如果有多件奇怪的东西，我是否应该去掉/合并其中的一些</li><li>如果我的故事里没有奇怪的东西，那么它依然有趣吗</li></ul><h4 id="故事秘诀-9：明智地使用陈词滥调"><a href="#故事秘诀-9：明智地使用陈词滥调" class="headerlink" title="故事秘诀 9：明智地使用陈词滥调"></a>故事秘诀 9：明智地使用陈词滥调</h4><blockquote><p>尽管陈词滥调有着被滥用的危险，但它们拥有巨大的对玩家熟悉的优势，而熟悉就意味着可理解和可领会。<br>…<br>过于使用陈词滥调是一个错误，但完全将它从你的工具箱内驱逐也是一个错误。</p></blockquote><h4 id="故事秘诀-10：有时一张地图能让故事活过来"><a href="#故事秘诀-10：有时一张地图能让故事活过来" class="headerlink" title="故事秘诀 10：有时一张地图能让故事活过来"></a>故事秘诀 10：有时一张地图能让故事活过来</h4><p>《金银岛》其实最开始起源于作者所画的一幅梦幻岛地图。</p><blockquote><p>大部分电视游戏并不发生在文字的世界里，而是在实体的地方。通过画这个地方的素描和图画，一般故事都会自然成型，因为你被迫去思考谁生活在那儿，他们在干什么及为什么。</p></blockquote><h4 id="故事秘诀-11：惊喜和情感"><a href="#故事秘诀-11：惊喜和情感" class="headerlink" title="故事秘诀 11：惊喜和情感"></a>故事秘诀 11：惊喜和情感</h4><p>如果故事无趣，通常是因为它们缺乏惊喜或情感。如果是这种情况，1 号和 4 号透镜可能有用。</p><p>![[游戏设计艺术#1 号透镜：情感]]</p><p>![[游戏设计艺术#4 号透镜：惊喜]]</p><h4 id="78-号透镜：故事"><a href="#78-号透镜：故事" class="headerlink" title="78 号透镜：故事"></a>78 号透镜：故事</h4><p>问</p><ul><li>我的游戏真的需要一个故事吗，为什么</li><li>为什么玩家会对这个故事感兴趣</li><li>故事怎么支持四元组的其他部分（美学、技术、玩法）？能优化它吗</li><li>四元组的其他其他部分如何支持游戏？能优化它们吗</li><li>怎样使我的故事变得更好</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230528 - Writing Game Proposals</title>
      <link href="2023/05/28/20230528-a05/"/>
      <url>2023/05/28/20230528-a05/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习如何写游戏提案！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/2Iiu1k16Ukc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A05-Writing-Game-Proposals"><a href="#A05-Writing-Game-Proposals" class="headerlink" title="A05 - Writing Game Proposals"></a>A05 - Writing Game Proposals</h2><ul><li>这期内容虽然看起来像是 Planning &amp; Game Design 的内容，但其实其适用性更广泛，所以就算作 Work Ethic 了~</li><li>樱井将分析近年来他自己用于分享游戏提案的一种格式<ul><li>提案以 PPT 形式展开<ul><li>每页一个主题<ul><li>一张图</li><li>两句话</li></ul></li><li>有非常多页 但每一页都足够精简 让人能快速抓住重点<ul><li>有一些涉及深入机制 即一些只有开发团队需要知道的内容</li></ul></li><li>有一种观点是需要保持提案足够精简，但并不总是如此的<ul><li>需要保证的是清晰，抓住重点</li><li>只要可以让其成为一个有高信息密度的可以快速阅读的 presentation，页数就不再是问题</li></ul></li></ul></li><li>将内容分类别/子类别陈列<ul><li>这样读者可以清晰知道目前的阅读进度<ul><li>没有人喜欢无尽的 presentation</li></ul></li></ul></li></ul></li><li>樱井自自己开始做外包开始就用这种提案格式<ul><li>在实际展示的时候确实会在每一页多在语言上多做一些说明</li><li>但从不只是照着文字读而已</li><li>如果只是演讲者一直在照着文字念是很烦的<ul><li>人们会自己读下面的东西</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281301090.png" alt="Smash Bros. Ultimate 的提案封面"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281302184.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281323699.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281323284.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281324211.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281324292.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281325347.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281326564.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281326087.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281327279.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281327524.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305281333060.png" alt="分类呈现"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>如果想让提案容易被消化，可以试试这种方法</li><li>但是不要忘记了：最重要的是其中的内容！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230521 - Jump Physics</title>
      <link href="2023/05/21/20230521-d03/"/>
      <url>2023/05/21/20230521-d03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习跳跃的物理机制！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/noKsDZ-UPq8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="D-03-Jump-Physics"><a href="#D-03-Jump-Physics" class="headerlink" title="D 03 - Jump Physics"></a>D 03 - Jump Physics</h2><h3 id="跳跃动画"><a href="#跳跃动画" class="headerlink" title="跳跃动画"></a>跳跃动画</h3><ul><li>跳跃动画<ul><li>是一个很简单的动画，但其实其中有诸多需要考虑的地方</li></ul></li><li>跳跃动画是如何在程序中被设计的<ul><li>通常而言会设计一个降落速度</li><li>最开始有一个向上的初始速度</li><li>每向上一帧，就会施加一个向下的速度<ul><li>如果地面是平的，那么角色就会在达到和初始上升速度相同的速度时落地</li></ul></li><li>且速度施加通常只针对垂直方向，水平方向保持和原始状态一致/稍微减小一些</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211143017.png" alt="初始上升和落地速度都是5"></p><ul><li>需要明确的一点是，游戏中的跳跃动画可以根据游戏需要来改变</li></ul><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul><li>Super Mario Bros.<ul><li>上升的时候速度比较慢<ul><li>即下降加速度施加的时间比较朝后</li><li>但在到达最高点之后突然增大下降加速度，因此马里奥下降得比起上升得要快很多</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211157994.gif"></p><ul><li>Metroid<ul><li>Samus 的上升速度甚至更慢</li><li>其下降得也很慢，从而营造一种她在浮空的感觉</li><li>且密特罗德中的射击高度是很重要的，所以跳跃的设计需要 1</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211202661.gif"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211203175.png"></p><ul><li>Ghosts’ n Goblins<ul><li>跳跃高度相对很低</li><li>并且一旦跳起后落点已经确定</li><li>这里的跳跃限制更强<ul><li>但相对的也有更坚实的 “game essence”的感觉</li><li>因为你必须仔细考虑每一次跳跃</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211304469.gif"></p><ul><li>Street Fighter<ul><li>Zangief’s Spinning Pile Driver 攻击</li><li>Street Figher II Turbo 之后加快了其上升后的速度<ul><li>这使得同样的攻击有了更强的“打击感”</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211310228.gif"></p><ul><li>Super Smash Bros.<ul><li>在起跳之前会有一个 windup<ul><li>以前对于每一个斗士而言这个动作都是不一样的</li><li>但如今每个斗士的这个动作都被统一了</li><li>如果我们将其完全去除，玩家可能在要释放 up smash 之前就先跳起了<ul><li>所以需要将其以某种形式保留下来</li></ul></li></ul></li><li>樱井每次在制作新的大乱斗系列的时候都在想到底需不需要跳跃<ul><li>答案总是确定的</li><li>但其实每一作中的物理都有些许变化</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211314280.png"></p><ul><li>Smash Bros. Ultimate<ul><li>这是 Kirby Super Star 之后的首部作品，在其中运用了一种新的跳跃设计<ul><li>在每次跳跃的开始部分就给其一个很大的向上速度</li><li>几帧之后迅速增大向下的加速度</li><li>一旦跳跃到了特定高度，向下加速度就回到正常</li><li>如此一来，即使玩家反应慢了一点也能及时触发跳跃<ul><li>这引入了更多的参数，更复杂的物理，以及潜在的更多的 bug</li><li>但这也意味着一个漂亮的跳跃表现以及一些相应的好处</li><li>但樱井猜玩家们并没有注意到这一点，这只是</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211322469.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305211331892.gif"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>即使是一个简单的跳跃也有很多门道</li><li>仔细思考，可能你根本不知道最终能想出来什么！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230514 - Breaking Down Attack Animations</title>
      <link href="2023/05/14/20230514-g03/"/>
      <url>2023/05/14/20230514-g03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解“攻击动画”的拆解！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/LewXWM7HDd8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G-03-Breaking-Down-Attack-Animations"><a href="#G-03-Breaking-Down-Attack-Animations" class="headerlink" title="G 03 - Breaking Down Attack Animations"></a>G 03 - Breaking Down Attack Animations</h2><ul><li>樱井将其所制作的游戏中的攻击动作拆分为以下几类<ul><li>Standby</li><li>Lead-In</li><li>Attack</li><li>Follow-Through</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305141336943.gif"></p><h3 id="Standby"><a href="#Standby" class="headerlink" title="Standby"></a>Standby</h3><ul><li>这是所有其他动作的基础状态</li><li>几乎所有的动作的开始都是地面 standby / 空中 standby，所以将其做好，并且不改变这部分动作是很重要的</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305141338552.png"></p><h3 id="Lead-In"><a href="#Lead-In" class="headerlink" title="Lead-In"></a>Lead-In</h3><ul><li>这也被称为“anticipation”/“windup”<ul><li>即攻击开始的预备动作，比如举起武器</li></ul></li><li>在比如 smash bro 中，这类动画通常会在第一帧的时候以一个很大的，出乎预料的动作来开始，即游戏角色突然变成了这个姿势<ul><li>从 <code>standby</code> 到 <code>lead-in</code> 的一个平滑转换可能会耗费太多时间</li><li>而像这样突然有大动作的转换能让玩家立马知道其输入被识别了</li><li>这也鼓励对手根据这个动作来做出闪避动作</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305141404109.gif"></p><h3 id="Attack"><a href="#Attack" class="headerlink" title="Attack"></a>Attack</h3><ul><li>通常来说，这是攻击动画的核心动作</li><li>这也是攻击能被识别为“可造成伤害的状态”，且在前后可以增加一点点移动的时候</li><li>Smash bros 中，如果攻击打到地面的话，通常会用 <code>hit stop</code> 的机制来停止该动画<ul><li>这使得攻击的关键——击中的时刻，变得明显可读</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305141415358.gif"></p><h3 id="Follow-Through"><a href="#Follow-Through" class="headerlink" title="Follow-Through"></a>Follow-Through</h3><ul><li>这是攻击之后的动画（即常说的“攻击后摇”）<ul><li>攻击判定结束</li><li>动作在回到 <code>standby</code> 状态前会有一段状态<ul><li>在这一状态中玩家是无法操控的</li><li>所以要将这个状态的动作与 <code>standby</code> 区分开来，并且尽可能长久地保持这个状态</li></ul></li></ul></li><li>与此同时，也会为 <code>follow-through</code> 设置取消帧（<code>cancel frames</code>）<ul><li>这可以使得玩家在角色完全回复到 <code>standby</code> 动作前就重新获得角色操控权</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305141420719.gif"></p><ul><li><p>这个概念在 Smash Bros. Mell 之后才被采用</p><ul><li>也就是说在此之前，玩家只有完全回复到 <code>standby</code> 状态才能进行下一个动作</li><li>樱井认为这让角色稍微变得有些僵硬</li></ul></li><li><p>正如以前所提过的，每次在制作新动画的时候需要明确以下四件事</p><ul><li>Standby pose</li><li>Attack pose</li><li>Attack start frame</li><li>Total frames/ time until the attack can be cancelled</li></ul></li><li><p>如此一来就给了动画师一个比较清晰的需求</p><ul><li>当然了，在实际制作过程中，樱井也会直接介入其中，并给出许多具体的建议和指导</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305141427155.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>以后的系列中可能还会更多谈及 <code>lead-in</code>，<code>attack</code>，<code>follow-through</code> …</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十六章 体验可以用兴趣曲线来评价</title>
      <link href="2023/05/10/20230510-theartofgamedesign-chap16/"/>
      <url>2023/05/10/20230510-theartofgamedesign-chap16/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十六章-体验可以用兴趣曲线来评价"><a href="#第十六章-体验可以用兴趣曲线来评价" class="headerlink" title="第十六章 体验可以用兴趣曲线来评价"></a>第十六章 体验可以用兴趣曲线来评价</h2><blockquote><blockquote><p>20230508</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305082130311.png"></p><h3 id="兴趣曲线"><a href="#兴趣曲线" class="headerlink" title="兴趣曲线"></a>兴趣曲线</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305082212642.png"></p><pre class="line-numbers language-ad-cite" data-language="ad-cite"><code class="language-ad-cite">要描绘一条兴趣曲线，最好地安排体验中的最佳时刻，就得不知道它们是什么。这就是让“时刻”透镜变得如此重要的原因。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="68-号透镜：时刻"><a href="#68-号透镜：时刻" class="headerlink" title="68 号透镜：时刻"></a>68 号透镜：时刻</h4><p>值得纪念的时刻是组成你的兴趣曲线星座的星星。为了能够绘制这些最重要的东西，问：</p><ul><li>我的游戏中最重要的时刻有哪些？</li><li>我如何让每一个时刻尽可能强大？</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305082253125.png" alt="一条展示成功娱乐体验兴趣曲线的范例"></p><ul><li>A<ul><li>客人怀着某个级别的兴趣开始体验，该初始兴趣来自对体验娱乐性的预设性期待（否则他们可能根本不会开始体验）</li><li>预测性期待会被包装、广告、朋友的建议等所影响</li><li>我们希望这个初始兴趣大得恰到好处，能吸引客人上门，过度扩大可能会使得整个体验变得无趣</li></ul></li><li>B<ul><li>有时也称为“钩子”</li><li>有时候是真的吸引你并让你对整个体验感到兴奋的时刻</li><li>拥有一个优秀“钩子”非常重要<ul><li>给予客人一个对于即将到来的体验的预告</li><li>提供一个美好的兴趣峰值</li><li>帮助客人在不太有趣的段落中保持专注</li></ul></li><li>例子<ul><li>是一出音乐剧中的第一首曲子</li><li>是《甲壳虫的革命》中尖利的吉他反复小节</li><li>是《哈姆雷特》中鬼魂出现的那一刻</li><li>在一个电视游戏中，它经常以一段短小影片形式（CG）在游戏正式开始前出现</li></ul></li></ul></li><li>CDEF<ul><li>体验的主体部分</li><li>精细设计过的主体部分会让客人的兴趣不断提升</li><li>会有相对的波峰和波谷</li></ul></li><li>G<ul><li>产生某种高潮</li></ul></li><li>H<ul><li>故事解开答案</li><li>客人感到满意，体验随之结束</li><li>希望客人意犹未尽，乘兴而归，甚至比入场时更多</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305082306884.png" alt="一种特别不好的兴趣曲线示例"></p><pre class="line-numbers language-ad-cite" data-language="ad-cite"><code class="language-ad-cite">当观察客人体验时，拿他们被观察到的兴趣等级和你作为表演者预想这些观众会达到的等级进行比较，是很有用的。为不同的人群设计不同的曲线是一种有益的练习。从这种练习中会发现。对某些人群有趣的事物可能对其他人乏味。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="模式中的模式"><a href="#模式中的模式" class="headerlink" title="模式中的模式"></a>模式中的模式</h3><ul><li>别的娱乐形式中也存在优秀的兴趣曲线的模式<ul><li>好莱坞电影的三段式结构</li><li>流行歌曲的结构<ul><li>序曲</li><li>正歌</li><li>副歌</li><li>正歌</li><li>副歌</li><li>桥段</li><li>终曲</li></ul></li><li>亚里士多德说每一部悲剧都存在纠葛和结局</li><li>喜剧演员说“三法则”</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305092158136.png" alt="《半条命2：第一章》中玩家的死亡次数，其平均完成时间为5小时39分钟"></p><p>图上的三条线分别表示游戏中的三个维度。<br>可以讨论玩家的死亡次数是否可以作为挑战的优秀指示器，挑战适合游戏体验的有趣程度相关的。<br>对于更长的游玩体验，其兴趣曲线模式是可以碎片化的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305092200445.png"></p><p>每个长峰值，其内都会有符合兴趣模式的内部结构。</p><p>这种模式一般以三个等级存在于游戏中：</p><ol><li>整个游戏：开场 CG，之后是提升兴趣的一系列关卡，最后以玩家击败游戏时达到大高潮作为结尾。</li><li>每一关：一开始的美感和挑战会吸引玩家，然后玩家会遭遇一些列提升兴趣的挑战（战斗、谜题等），直到关卡结束，一般都会以“头目战”结尾。</li><li>每次挑战：每次玩家遭遇的挑战最好都自身拥有一条优秀的兴趣曲线，有一个有趣的介绍，你努力通过难度阶梯式提升的挑战。</li></ol><h4 id="69-号透镜：兴趣曲线"><a href="#69-号透镜：兴趣曲线" class="headerlink" title="69 号透镜：兴趣曲线"></a>69 号透镜：兴趣曲线</h4><p>大部分让人愉悦的那种吸引模式对于每个人来说是明显相似的。为了看出在你给出的体验中一个玩家的兴趣是如何随着时间变化的，问：</p><ul><li>如果画一张我的游戏的兴趣曲线图，其大致形状如何？</li><li>它有钩子吗？</li><li>它是否拥有逐渐提升的兴趣并由阶段性的休息间隔开？</li><li>它是否拥有一个比其他一切都更有趣的一个大结局？</li><li>什么改变会给我一条更好的兴趣曲线？</li><li>我的兴趣曲线是否拥有一个碎片化的组织？它应该存在吗？</li><li>我关于兴趣曲线的直觉是否符合我观察到的玩家的兴趣？如果让试玩人员画一条兴趣曲线，它看上去是什么样子的呢？</li></ul><p>为每一种你想触及的玩家类型创造兴趣曲线时，结合 19 号透镜“玩家”会很有用。</p><h3 id="兴趣是由什么组成的"><a href="#兴趣是由什么组成的" class="headerlink" title="兴趣是由什么组成的"></a>兴趣是由什么组成的</h3><h4 id="因素-1：内在兴趣"><a href="#因素-1：内在兴趣" class="headerlink" title="因素 1：内在兴趣"></a>因素 1：内在兴趣</h4><h4 id="70-号透镜：内部兴趣"><a href="#70-号透镜：内部兴趣" class="headerlink" title="70 号透镜：内部兴趣"></a>70 号透镜：内部兴趣</h4><pre class="line-numbers language-ad-cite" data-language="ad-cite"><code class="language-ad-cite">戏剧是期待与不确定的混合体。——威廉·阿彻<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>有些事情就是有趣。通过问这些问题，可以使用这个透镜来确认你的游戏是否拥有内在兴趣品质：</p><ul><li>我的游戏的哪些方面会立刻吸引玩家的兴趣？</li><li>我的游戏会让玩家做/看一些他们从来没做过/见过的东西吗？</li><li>我的游戏会吸引哪些基础本能？它是否可以吸引更多的基础本能呢？</li><li>我的游戏会吸引哪些更高层次的本能？它是否可以吸引更多的高层次本能呢？</li><li>戏剧性变化和对这种变化的期待是否会在我的游戏中发生？怎样可以使其变得更具戏剧性？</li></ul><blockquote><p>事件的内在兴趣部分依赖于它们彼此之间的联系。</p><blockquote><p>即需要由一些事件串联出故事线。</p></blockquote></blockquote><h4 id="因素-2：演出的诗歌艺术"><a href="#因素-2：演出的诗歌艺术" class="headerlink" title="因素 2：演出的诗歌艺术"></a>因素 2：演出的诗歌艺术</h4><p>指的是娱乐体验的美感。</p><h4 id="71-号透镜：美丽"><a href="#71-号透镜：美丽" class="headerlink" title="71 号透镜：美丽"></a>71 号透镜：美丽</h4><p>美丽是神秘的。举例来说，为什么大部分美的事物都有一点悲伤的味道？问：</p><ul><li>我的游戏是由哪些元素组成的？每个元素如何能变得更加美丽？</li><li>一些东西本身并不美丽，但组合起来就很漂亮。如何才能把游戏中的元素编绘得既富有诗意又美丽？</li><li>在游戏的上下文中，美丽意味着什么？</li></ul><h4 id="因素-3：投影"><a href="#因素-3：投影" class="headerlink" title="因素 3：投影"></a>因素 3：投影</h4><p>即需要迫使客人使用他们的共鸣和想象将自身融入游戏体验。这个因素对于理解故事和玩法之间的共通性很关键。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305092352606.png"></p><p>通常而言，若是一件事的主体与自己越相关，人们对其的兴趣越大。</p><p>乍一想，这可能会把讲故事的人放在一个不利位置上，因为讲述的故事往往是关于陌生人的，经常是从未听过/根本不存在的人。然而，讲故事的艺术中的一个重要部分就是创造那种能够让听众轻易代入的角色，因为听众和角色产生共鸣越多，听众就会觉得发生在这些角色身上的事情越有趣。</p><p>随着对游戏世界观/角色等的了解愈加深入，游戏内的 NPC 可能会变得像你的朋友，你也可能开始关心发生在他们身上的事，兴趣就会增加。在某些时刻，你也许甚至会在精神上将自己投影于他们的位置。</p><p>在尝试制造投影的方面，想象力和代入一样重要。人类存在于两个世界：面向外界的感知世界和面向内心的想象世界。</p><p>每次娱乐体验都在想象中创造出自己的小世界。这个世界不需要真实（虽然它也许是），但是它必须要内部连贯。当玩家“沉浸”其中，会增加投影，显著提升玩家整体兴趣。但若是想象世界中出现了矛盾，玩家就会被“带回”现实。</p><blockquote><blockquote><p>让我想起了《游戏设计：原型与开发》中提到的“魔法圈”：<br>![[游戏设计原型与开发#魔法圈理论]]</p></blockquote></blockquote><p>另一种建造玩家对你所创造的世界进行投影是提供多种进入世界的方式。许多人认为基于流行电影或电视剧的玩具和游戏只是利用一场成功的娱乐体验的长尾效应多赚点钱的鬼把戏。</p><blockquote><blockquote><p>![[202305100016 长尾效应#定义]]</p></blockquote></blockquote><h4 id="72-号透镜：投影"><a href="#72-号透镜：投影" class="headerlink" title="72 号透镜：投影"></a>72 号透镜：投影</h4><p>某人正在享受一段体验的一个关键指标是他们将自己的想象投影进了体验中。当他们这么做的时候，他们对体验的享受以一种良性循环的方式快速增长。为了检查你的游戏是否合适地引导了玩家的投影，问：</p><ul><li>我的游戏中有什么可以让玩家和自身联系起来的东西？除此之外，我还可以添加什么 ？</li><li>我的游戏中有什么可以抓住玩家想象力的东西？除此之外，我还可以添加什么？</li><li>游戏中有什么地方是玩家一直希望前往的？</li><li>玩家是否可以成为一个他们一直想象自己能够成为的人物？</li><li>游戏中是否还有别的玩家会感兴趣遇见（或者监视）的人物？</li><li>玩家是否可以做那些他们在现实生活中想做而不能做的事？</li><li>游戏中是否有一个玩家一旦开始做就很难停下的行动？</li></ul><h3 id="兴趣因素的例子"><a href="#兴趣因素的例子" class="headerlink" title="兴趣因素的例子"></a>兴趣因素的例子</h3><ul><li>街头杂耍表演<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305100040220.png"></li><li>小提琴协奏曲<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305100040795.png"></li><li>俄罗斯方块<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305100041483.png"><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305100042403.png"></p><p>检查玩家在游戏中的兴趣，是测量你所创造的体验质量的最好办法。</p><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230507 - Let Your Characters Shine</title>
      <link href="2023/05/07/20230507-h02/"/>
      <url>2023/05/07/20230507-h02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何让游戏角色在特效中依然显眼！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/0ucvynuIe-o" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="H02-Let-Your-Characters-Shine"><a href="#H02-Let-Your-Characters-Shine" class="headerlink" title="H02 - Let Your Characters Shine"></a>H02 - Let Your Characters Shine</h2><ul><li>如果想要实现比较好的特效的话，有时候很有可能会发生角色被“淹没”在特效中的情况</li><li>2D 游戏还好，只需要永远让角色处于最高图层就好</li><li>但对于 3D 游戏，特别是不以头顶视角（overhead perspective）来显示的游戏，角色就很有可能被淹没在特效中</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305071425455.gif"></p><ul><li>3D 游戏中也有可能强制让角色有更高的显示优先级，但这有可能会导致景深的分离，总体而言效果并不好</li><li>Smash Bros. 系列也遇到了这个问题，但樱井他们想出了一些解决方案<ul><li>角色即使在特效的中心，也应该保持可见性<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305071429137.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305071430405.png"></li><li>对于会对角色造成遮挡的特效，会降低其透明度，使得角色总是可见<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305071431083.png"></li><li>对于有多层级的立体特效，通过控制不同层（主要是面向摄像机的层）的特效高度，保持角色可见性<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305071432441.png"></li><li>对于环绕角色的持续特效，也要使得角色一直可见<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305071433444.png"></li><li>还有一种办法是为角色增加轮廓线，这样也能使角色一直可见<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202305071434665.png"></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>上面提到的东西如果不进行实际操作的话，可能会有些难以理解呢</li></ul><blockquote><blockquote><p>做着试试看吧！</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230501 - Making a Living Making Games</title>
      <link href="2023/05/01/20230501-c04/"/>
      <url>2023/05/01/20230501-c04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何进入游戏业界！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/_-WyivvfibM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C04-Making-a-Living-Making-Games"><a href="#C04-Making-a-Living-Making-Games" class="headerlink" title="C04 - Making a Living Making Games"></a>C04 - Making a Living Making Games</h2><ul><li><p><code>How do I break into game industry</code> 是樱井这些年来听到过很多次的问题</p><ul><li>樱井觉得，人们其实最开始可能没有什么特定的职业/岗位目标，想的可能只是做一些喜欢的事情来谋生就好了，这一点的话，樱井并没有持批评态度，毕竟每个人可能都是这么开始的。</li><li>樱井自己也是，最开始从未想过能够以制作游戏来作为自己的职业。</li></ul></li><li><p>Game Industry</p><ul><li>排除一些除艺术家/作曲家等的特殊岗位，樱井会分享一条可能可以最快进入游戏业界的职业路径，也就是——自己制作一款游戏</li><li>相比起以前，现在有很多工具可供选择<ul><li>Unity</li><li>Unreal</li><li>C</li><li>JavaScript</li><li>Visual Programming Languages</li><li>“Maker” Tools</li><li>…</li></ul></li><li>对于刚开始寻求工作的人而言，应该试一试来创作自己的游戏<ul><li>即使梦想是成为一名设计师，但难免也会遇到需要像程序员一样思考的时候</li><li>在做游戏时，也能看到什么样的问题会出现，以及什么是最好的解决办法，这些会成为宝贵的学习经验</li></ul></li><li>最开始的时候，尝试模仿一个已经存在的游戏也没问题<ul><li>无论是否对其做出改变，做出东西来本身就很有成就了</li><li>一旦做出一个自己觉得满足的游戏后，让别人真正玩一玩<ul><li>让身边的朋友玩一玩是一个好的开始</li><li>也可以将其免费放到网上</li><li>如果真的对自己的游戏感到自信，也可以尝试售卖它<ul><li>有很多种方式可以促成这件事，但无论如何，都可以为你增长一些制作和发行经验</li></ul></li></ul></li><li>在别人游玩后，收集他们的意见和想法<ul><li>要么接纳这些想法，并将其用于当前游戏的迭代</li><li>也可以吸取这些经验，将其运用在下一个游戏的制作过程中</li></ul></li><li>一旦你觉得你已经对目前的制作结果满意，可以将其附在简历中，作为申请招聘的资料一起提交<ul><li>不用担心自己无法满足招聘说明上的所有要求</li></ul></li><li>游戏工业总是会寻求能够制作有趣游戏的人才<ul><li>也就是说，一个模仿性的游戏创意无法让你出彩，想办法让你的创意发光发亮吧！</li></ul></li></ul></li></ul></li><li><p>至于如何制作有趣游戏/如何提出新想法</p><ul><li>会在该频道的后续视频中来呈现</li></ul></li><li><p>有许多人都想制作游戏，你需要让自己脱颖而出</p><ul><li>如果你确实成功进入了游戏行业，你就正式成为了一名职业人员了！</li></ul></li><li><p>当然了，也有一些人喜欢独立于公司之外，自己独立制作或是以小团队的方式来制作</p><ul><li>如果你完全是自己独立制作的，那么当然所有的收益都会收入自己囊中。<ul><li>比起工资，很多人更喜欢这种方式</li></ul></li></ul></li><li><p>即使只是一个小规模的 Demo，制作你的第一个游戏也是进入游戏业界的重要一步</p><ul><li>如果你已经做出了尝试，但是发现这不是你想要的，至少你也可以总结说可能这条路并不适合你</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>制作自己的游戏能让你学到很多经验<ul><li>这可能并不容易，但不试试怎么知道呢！</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230423 - Text Size</title>
      <link href="2023/04/23/20230423-j02/"/>
      <url>2023/04/23/20230423-j02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏 UI！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/W1ubngQNJpw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="J02-Text-Size"><a href="#J02-Text-Size" class="headerlink" title="J02 - Text Size"></a>J02 - Text Size</h2><ul><li><p>当日本玩家们游玩海外游戏时通常有一个疑问是“为什么文字如此之小”</p></li><li><p>这就是樱井这一集想要强调的内容：对于不同语言而言，其合适的字体大小是不同的</p></li><li><p>比如中国和日本部分文字中所用的汉字会占据很大空间</p></li><li><p>这个和文字所承载的信息密度有关，信息密度高的（如汉字）则同等内容的句子就会更短，所以需要将其字体增大。相应的，如果其信息密度较低，则就需要缩小字体以让其能在相同空间内用更长的句子来表述内容。</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202304231819580.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202304231819072.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202304231820165.png"></p><ul><li><p>汉字的单字就可以表述多个字母所代表的含义</p><ul><li>如果在制作时只考虑了英文 UI 的大小，最终转化为汉字等字体时可能就会让人觉得太小</li></ul></li><li><p>其实现如今，问题没有以往那么突出了</p><ul><li>一方面是因为开发者们更加细致了</li><li>也是因为屏幕分辨率提高之后更容易缩放字体了</li></ul></li><li><p>许多游戏也会让玩家自己来选择字体大小，这也是非常推荐的做法</p><ul><li>如果游戏能提供更加简洁的 UI 界面的话这样的方法会更容易实现，因为有更多的屏幕空间可用于显示文字</li></ul></li><li><p>对于一些专为手持设备，如 switch 等设备开发的游戏，开发者们一般更偏爱更大的字体</p><ul><li>樱井相信这是因为开发者们通常也会直接在掌机上进行开发测试和检查，如果字体过小他们也能及时发现</li></ul></li><li><p>但如果文字过长，可能并不是所有的文字的风格化都那么明显</p></li><li><p>在以往的一些分辨率较低的主机上，如 NES，开发者们像使用了魔法一般将汉字压缩到了 8x8 的 sprite 中</p><ul><li>我们的大脑如何补全那些丢失的细节其实是个很有趣的事情<blockquote><blockquote><p>应该与格式塔原则有关？</p></blockquote></blockquote></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202304231831844.png" alt="放大时无法理解，缩小后其实就能看出到底是什么字"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230416 - Strike a Balance with Sound Effects</title>
      <link href="2023/04/16/20230416-i02/"/>
      <url>2023/04/16/20230416-i02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏音效！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/qKjD5qbLUeI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>## 内容<h2 id="I02-Strike-a-Balance-with-Sound-Effects"><a href="#I02-Strike-a-Balance-with-Sound-Effects" class="headerlink" title="I02 - Strike a Balance with Sound Effects"></a>I02 - Strike a Balance with Sound Effects</h2><ul><li><p>很多时候需要在更加现实 vs. 更夸张的音效之间进行选择</p><ul><li>即使如此，需要仔细想好需要 how loud, how flashy, how discernible 的音效</li></ul></li><li><p>比如</p><ul><li>林克的走路和轻攻击听起来都很听，应该强调哪一个呢？</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202304161618090.png"></p><ul><li><p>游戏中的音效都是被用于模拟其相应行为的音效的，所以有时候的抉择很困难</p></li><li><p>樱井自己的建议是：一个音效越和玩家相关，其声音就需要越大<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202304161622873.png"></p></li><li><p>下面会用 smash bro 举例（为了简化情况会隐藏一些效果（subtle effects）</p><ul><li>top priority<ul><li>应该被强化的声音：KO<ul><li>无论是 KO 别人还是被 KO，都是如此</li><li>这对于 push and pull 以及比赛结果而言都很重要</li><li>所以这是最响的声音，最高优先级</li></ul></li></ul></li><li>less priority<ul><li>之后是 impacts sound<ul><li>无论是打击到对手，或是被打到</li><li>玩家需要对其所处状态的直观反馈，这也是 impacts sound 所发挥的作用</li></ul></li><li>完美格挡 perfect shielding <ul><li>和 impacts sound 是同等优先级的音效</li></ul></li></ul></li><li>less priority<ul><li>explosions<ul><li>如果爆炸越大，其音效也需要相应放大</li></ul></li></ul></li><li>less priority<ul><li>special moves<ul><li>指的不是造成伤害的时候，而是使用的时候</li><li>每个角色可能都有相应的特殊操作，所以需要确保每个角色的特殊音效的可辨识度</li><li>取决于各个特殊操作的强度等属性，每个的音量大小可能各有不同</li></ul></li><li>voices<ul><li>即角色说话声，和 special moves 是同等优先级</li><li>但清楚的角色说话声会打断别的音效，所以需要在这里寻求平衡（清楚地说话 vs. 只是表意的喊声）</li></ul></li></ul></li><li>less priority<ul><li>dodges/shield blocks/ledge grabs<ul><li>即闪避/格挡/抓边</li><li>这些行为基于特定条件，这些音效用于突出玩家的成功操作</li></ul></li></ul></li><li>less priority<ul><li>attack swings<ul><li>即没有击中目标时的攻击</li><li>此时，这类音效已经很难听到了，但这类音效依然为玩家的按键输入提供了反馈，所以也需要有一定的辨识度</li></ul></li><li>dashing<ul><li>即奔跑</li><li>通过倾斜摇杆触发，和 attack swings 是同等音量的</li></ul></li></ul></li><li>less priority<ul><li>jumping &amp; landing<ul><li>这两者中，因为 landing 算是一种 reaction，所以其音量稍微比 jumping 更大一些</li><li>需要让这些音效和每个角色的属性（尤其是所穿戴的衣物）相匹配<ul><li>比如克劳德的 landing 音效和他所穿的衣服就有关</li></ul></li></ul></li></ul></li><li>less priority<ul><li>walking<ul><li>这也是作为玩家的输入反馈的一部分，所以当然也需要可以听到且有辨识度</li><li>并且总需要为同种音效做一些变化（比如左脚落地/右脚落地听着不同），否则如果总是相同音效重复播放会让人感觉无聊和不自然</li></ul></li></ul></li></ul></li><li><p>谈及 脚步声，你曾经想过在 3D 游戏中，它们应该有更高的优先级吗</p><ul><li>如果不怎么能听见脚步声，这会让你感觉缺了点什么，让你感觉角色是悬空的，而不是在行走</li><li>但其实脚步声有时候真的很难搞<ul><li>因为地面会有不同的材质和属性，这就意味着需要为不同材质的地面设计不同的脚步声</li><li>和现实相近的脚步声总是最好的，所以不得不为此费心劳神</li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>在 评审游戏音效时，需要考虑其对于游戏及游戏角色的重要性，然后来确定相应的优先级，如果只考虑一个动作的大小/幅度，可能不能达到预期的效果</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230402 - The Price of Games</title>
      <link href="2023/04/02/20230402-m04/"/>
      <url>2023/04/02/20230402-m04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解不变的游戏价格！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/i6jKMAU3aJ8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M04-The-Price-of-Games"><a href="#M04-The-Price-of-Games" class="headerlink" title="M04 The Price of Games"></a>M04 The Price of Games</h2><ul><li>首先要声明的是 这纯粹是樱井自己的观点<ul><li>但他想说 <code>Games are cheap!</code></li><li>对于一个成年人而言，没有那么多事情可以与花费购买游戏的钱所获得的乐趣相匹敌<ul><li>当然了 这可能与你住在哪个国家有关<ul><li>比如，日本<ul><li>电影票就很贵</li><li>喝酒不便宜</li><li>赌博更不用说</li><li>度假</li><li>享受美食</li></ul></li></ul></li><li>而一个游戏，即使是最贵的游戏，不会超过 69.99$，却能给予你很多个小时的快乐，更小的一些游戏甚至只需要几块钱，更不用提一些 Free to play 的游戏了<ul><li>其制作成本不知几何，但价格却几乎没有上涨<ul><li>这还没有算上宣发和运营成本<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202304021316186.png"></li></ul></li></ul></li></ul></li><li>近年来，也出现了很多更低成本的娱乐方式<ul><li>这里主要指的是订阅制服务<ul><li><code>有如此多的内容，快乐永无止尽！</code><ul><li>对于消费者而言确实很不错，但对于开发者呢？<ul><li>这其中既包含了获取到制作费用的乐趣，但也有需要和过往作品竞争的痛苦</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>如果没有玩家游玩，再低的价格也没有任何意义</li><li>如果有想玩/支持的游戏，请不要犹豫，购买/订阅来支持开发者吧！</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230326 - Emphasize Objects with Collision</title>
      <link href="2023/03/26/20230326-f02/"/>
      <url>2023/03/26/20230326-f02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解强调画面中的可碰撞区域的原则！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/FfPN4ZGgBpo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="F02-Emphasize-Objects-with-Collision"><a href="#F02-Emphasize-Objects-with-Collision" class="headerlink" title="F02 - Emphasize Objects with Collision"></a>F02 - Emphasize Objects with Collision</h2><ul><li>这个话题在每次制作新的大乱斗场地时都会被提到<ul><li>但它总是一个棘手的问题</li><li>樱井发现自己每次在制作新场地的时候都会提到这个话题</li><li>这个话题就是<ul><li>强调有碰撞的物体</li><li>而 de-emphasizing 没有碰撞的物体</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230326140206.png"></p><ul><li><p>因为大乱斗是一款动作游戏 所以对于玩家而言知道哪里是可以站立的“实地”（solid ground）是很重要的</p></li><li><p>但因为在透视试图中使用了多变性，这会使得碰撞区域及碰撞点变得难以识别</p><ul><li>也就是说，如果不将地形元素和非地形元素区分开来的话，玩家很难知道自己当前的所在位置<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230326140401.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230326140502.png"></li><li>大乱斗的背景是很精致的，但当设计师们在非碰撞区域花了太多心血，使其变得过于突出的话，会有让碰撞区域，即战斗的主舞台与之混淆的风险<ul><li>所以樱井通常也告诉艺术家们，背景的设计是为了突出前方的地形&amp;主舞台的</li><li>强调前方有碰撞的物体和区域，让背景不那么突出，不是一件容易的事情，特别是想让舞台也看起来好看的时候</li></ul></li></ul></li><li><p>有一种简单的解决方案</p><ul><li>即对非地形/碰撞的区域使用 aerial perspective 来减少其存在感，但如果你仅仅只用了这一种方法，虽然地形和有碰撞区域确实被突出了，但整体的感觉就差了很多。游戏的视觉吸引力也是很重要的！<ul><li>虽然玩法和视觉表现总需要平衡，但樱井觉得在稍微倾向玩法设计的前提下，也不该忽视视觉表现！<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230326141105.png"><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3></li></ul></li></ul></li><li><p>艺术家的工作并不只是产出艺术作品然后就大功告成了，也要理解艺术在游戏中所发挥的作用，从而让其有合适的表现！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230319 - Spec Changes</title>
      <link href="2023/03/19/20230319-a04/"/>
      <url>2023/03/19/20230319-a04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习如何面对项目开发过程中的 Spec 变化！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/bzWibA7izF8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A04-Spec-Changes"><a href="#A04-Spec-Changes" class="headerlink" title="A04 - Spec Changes"></a>A04 - Spec Changes</h2><ul><li><p>在游戏开发过程中改变 spec 是需要尽量避免的事情，但如果真的发生了，也需要灵活应对</p></li><li><p>改变 spec 意味着推翻一些已经完成的工作，不仅耗费了资源，也会对团队士气有不利影响，所以应该尽量避免</p></li><li><p>但即使在开发前尽可能列举了游戏的细节，有些情况在遇到之前还是难以想象的</p><ul><li>想要让游戏面世，第一步当然是将其完成</li><li>如果在最开始就试图预见开发时的所有问题，最终可能会花费和开发一样的时间来完善大量的文档</li><li>并且，信息很有可能在传递过程中被曲解/误解</li><li>工期的考虑也可能会迫使你改变 spec</li><li>真正想要避免的是由于游戏不够有趣而改变制作方向<ul><li>在游戏规划阶段就要始终将游戏的乐趣纳入考虑</li></ul></li></ul></li><li><p>创意性工作是很多元素的组合</p><ul><li>比如<ul><li>planning</li><li>art design</li><li>modeling</li><li>animation</li><li>visual effects</li><li>programming</li><li>scripting</li><li>sound effects</li><li>…</li></ul></li><li>任何一个上层规划出现问题/或无法按时完成都会影响到后续工作</li><li>或者说后续某一个工作无法推进，还是需要回到上层进行重新设计</li></ul></li><li><p>可能是出于技术和方法的进步而改变 spec</p></li><li><p>也可能是基于降低成本的考量而改变 spec</p></li><li><p>也有可能是游戏的运营状况不如预期</p></li><li><p>需要结合项目情况具体情况具体分析</p><ul><li>如果不深入理解是什么导致了当前局面，带着一个不成熟，经不住考验的想法推进的话，是无法达成任何目标的</li></ul></li><li><p>不要将潜在问题藏在心里</p><ul><li>等事情发生后才说一句“我就知道这是不行的”对任何人都没有帮助</li><li>一旦发现了一个问题，需要尽早和团队中的其他人进行沟通，这对于团队中的任何人都适用</li></ul></li><li><p>玩家无法改变一个既成的错误，但开发人员很有可能能将其修复</p><ul><li>而且由于电脑并不总是可靠的，你可能会遇到更多矛盾的、无法克服的问题</li><li>但不要低估了群体智能的威力<ul><li>需要将所有可能的选项都一一列出，并从中选出目前最合适的方案</li><li>并且需要确保解决方案不仅短期有效，也适用于解决长期的问题</li></ul></li></ul></li><li><p>樱井自己的风格是这样的</p><ul><li>当一个问题出现的时候，比起花费时间，他更倾向于立马做出一个决定</li><li>在大多时候，听到了需要的信息之后，就立马行动<ul><li>信息越不准确，则越有可能作出错误决定</li><li>所以樱井倾向于让相关人员毫无保留地告诉自己全部的信息</li></ul></li><li>犹豫太久只是在浪费时间</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>在事情不妙时不能只是提出问题，团队会浪费时间在考虑如何提出这一顾虑，这会让事情变得更糟</li><li>游戏开发是一项持续变化的过程，越早提出问题，就能避免浪费更多的时间</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230312 - Too Much is Just Right</title>
      <link href="2023/03/12/20230312-g02/"/>
      <url>2023/03/12/20230312-g02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解“超出常理”的游戏动画！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/zNBKzLzDKtM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G02-Too-Much-is-Just-Right"><a href="#G02-Too-Much-is-Just-Right" class="headerlink" title="G02  Too Much is Just Right"></a>G02  Too Much is Just Right</h2><ul><li><p>能将 rig 权重利用到极限的动画才是好的动画</p></li><li><p>当设计攻击动画时，其实没有所谓“过头了”的说法，常规认知的动作其实远远达不到要求</p><ul><li>毕竟是在一个很小的屏幕上的动作，如果想要制作一个攻击动画，那么最好的办法就是想着“too much is just right”——“看起来过头了其实才是刚刚好”</li><li>如果你觉得一个东西的表现差不多了，很有可能其实它的表现还能更进一步</li></ul></li><li><p>例子</p><ul><li>下面这样的动作幅度是远远不够的<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230312160241.png"></li><li>而这样就有点意思了<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230312160300.png"></li><li>对比图<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230312160455.png"></li></ul></li><li><p>当制作初代 Smash Bros 的时候，或者说甚至它还是更早期的 Demo 《Dragon King: The Fighting Game》的时候手臂和躯干被直接 rig 在一起，所以可供调整的只有角度而已，也就是说，角色的动作是 locked<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Mar-12-2023-16-14-37.gif"></p><ul><li>但实际上，人们可以在现实中前后移动肩膀，但在当时还没能对动画做这样的调整</li><li>如今有更加专业和先进的工具，所以可以让 rig 更加灵活</li><li>有时当动作停止时一个模型看起来错位了，团队被要求对动画要进行修正，但其实这破坏了动画所蕴含的能量</li></ul></li><li><p>另一个例子 - Virtua Fighter，一款非常早期的 3D 格斗游戏</p><ul><li>但即使在当时，动画也已经进行过非常精细地优化了<ul><li>如动图中所示，已经出现了上下半身没有面对同一方向的情况，但这正是这集所说的 Too much is just right</li><li>限制在物理范围内并不总是最好的，特别对于动画而言，Too mush is just right<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Mar-12-2023-16-22-04.gif"></li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>对于 linear animations 也同样如此<ul><li>稍微超过一点点 natural limit，然后再拉回来可能会有更好的效果</li><li>樱井本人从 NES 时代开始就已经开始运用这一技巧<ul><li>比如卡比的尖刺能力就是如此<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230312162700.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Mar-12-2023-16-27-51.gif"></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230305 - Super Smash Bros</title>
      <link href="2023/03/05/20230305-n04/"/>
      <url>2023/03/05/20230305-n04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Super Smash Bros 诞生的故事！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/i3IOWaVDbx0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N04-Super-Smash-Bros"><a href="#N04-Super-Smash-Bros" class="headerlink" title="N04 - Super Smash Bros"></a>N04 - Super Smash Bros</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul><li>时间来到 1996，当时 Kirby Super Star 刚刚开发完成，Nintendo 64 的时代即将来临</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305155629.png"></p><ul><li><p>樱井自确认 Kirby Super Star 能够顺利发行后，就开始了一些独立的 3D 研究</p><ul><li><p>在当时，他有一台 Silicon Graphics machine 来使用 softimage 软件 进行建模/动画/相机镜头（camera）设计/渲染等的学习<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305155846.png"></p></li><li><p>在进行 super star 开发过程中已经有了一些接触 CG 软件的经验，但那些都是由艺术家们创作的静态图像</p></li><li><p>所以当时决定为 Nintendo 64 提案两个游戏</p><ul><li>一个是可供四人游玩的没有生命条的格斗游戏，后来成为了任天堂大乱斗<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305160227.png"></li><li>另一个是一个 RC 机器人的冒险游戏，你需要骇入安全摄像头中以闯关<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305160328.png"></li><li>最终两个提案都提交了</li></ul></li><li><p>樱井负责设计，图形，建模以及动画</p><blockquote><blockquote><p>这也太全能了…全栈 GD！</p></blockquote></blockquote></li><li><p>Satoru Iwata （岩田聪）负责编程</p><blockquote><blockquote><p>   牛，岩田先生！<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305160521.png"></p></blockquote></blockquote></li><li><p>还有另外一位同事负责音效</p></li></ul></li><li><p>由此，一款从未见过的原型出现了，被他们称为“Dragon King: The Fighting Game!”</p><ul><li>在当时还没有特殊操作/闪避/道具，但基本的游戏规则和目前的任天堂明星大乱斗是几乎一样的</li><li>在当时就有 <ul><li>smash attacks</li><li>midair jumps</li><li>shields</li><li>dashes</li><li>five-direction aerial attacks</li></ul></li><li>在当时，关于配置模型还有诸多限制（very limited in how we could configure models），但在樱井看来其实已经展现得很好了</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Mar-05-2023-16-08-38.gif"></p><ul><li>两个原型都受到了任天堂的高度评价，由此，樱井就在等待一个机会。<ul><li>当时的情况是公司团队里的其余成员已经开始忙于其他游戏，也就是说人手不够了<ul><li>当时的游戏有<ul><li>为 64DD 开发的 Mother 3<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305161705.png"></li><li>以及一个 Air Ride 的滑雪版本的游戏，这个与 GameCube 游戏无关</li><li>还有一些从未发表过的其他游戏</li></ul></li></ul></li><li>毕竟这些项目最终都失败了，所以很需要一个能够最终做完的游戏<ul><li>樱井感觉 RC 冒险游戏已经有一些进展了，但如果要开发完的话需要两年</li><li>所以最终选择了觉得可以快速开发完成的四人格斗游戏（后面成为了任天堂明星大乱斗）</li></ul></li></ul></li></ul><h3 id="The-Origins-of-Super-Smash-Bros-SSB"><a href="#The-Origins-of-Super-Smash-Bros-SSB" class="headerlink" title="The Origins of Super Smash Bros. (SSB)"></a>The Origins of Super Smash Bros. (SSB)</h3><ul><li><p>SSB 的构想最初其实来源于格斗游戏的对立面——也是在我脑中不断萦绕的一种想法——但其实并不是完全反其道而行之的</p></li><li><p>格斗游戏其实是很有趣的，这个品类中 push and pull 有非常好的可发挥空间，经过多年竞争开发商之间的竞争培养，所以格斗游戏能够席卷全球也并不奇怪</p></li><li><p>但这里要谈及的是 combos</p><ul><li>事实上，樱井并不认为在 combos 中有任何的 push and pull </li><li>gameplay 围绕你如何在第一次命中后将攻击串联起来而展开，这使得你的对手的技能水平变得貌似无关紧要了</li><li>越来越多的格斗游戏关注于 combo，这使得战术战略的选择在游戏中变得没有那么重要<ul><li>如果你不知道连招，或者刚刚接触这个游戏，很容易看着屏幕中的自己一直挨打</li></ul></li><li>比起单纯只是靠输入来决定结果，樱井想在游戏中加入更多的玩家互动和即兴的成分——这就是伤害累计系统的由来<ul><li>你的对手即使受到了同样的打击，但由于当前生命值的不同，最终每次呈现的结果都是不一样的</li><li>如果被踢出屏幕，无论当前的生命值如何，都直接判负</li><li>想到这里，樱井觉得自己已经有了一些成果</li></ul></li></ul></li><li><p>在 1996 年的时候，樱井提出了这个创意，在当时，格斗游戏所需输入的指令变得越来越复杂</p><ul><li>有一些输入的强度真的非常高<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305212303.png"></li><li>所以樱井在当时就选择了摇杆方向+按键的简化控制，这样玩家可以很容易地上手<ul><li>也有需要同时按键的 smash 攻击</li><li>如此只需要简单的操作就可以使出非常强力的攻击/跳跃</li><li>这是在思考了如何充分利用 N64 的信的模拟摇杆之后想出来的<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305213128.png"></li></ul></li><li>别的格斗游戏更加关注与模拟输入的方向和角度，而樱井更关注于输入的时机</li></ul></li><li><p>虽然在现在提到 SSB 肯定会想到丰富的明星角色，但在最开始的提案中其实不是这样的。明星角色的方案是后期协商后的结果</p></li><li><p>基于指令（console-based）的格斗游戏有一个通病是玩家会突然看到非常多的潜在主角色（即繁复的选人界面）<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305213640.png"></p><ul><li>以塞尔达传说为例，玩家有一个主角色林克，然后会面对很多次要角色和对手<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305213745.png"></li><li>从宣发的角度来看，你最开始会有一个角色，之后会基于此不断拓展</li><li>但对于格斗游戏而言，可能一开始就需要从 8~12 甚至更多角色中进行选择<ul><li>对于玩家而言，这些可能都是新面孔，让玩家对他们感兴趣并从中选择并不是一件容易的事情</li><li>解决方案<ul><li>对于街机游戏而言<ul><li>玩家可以直接坐下然后开始游戏</li><li>甚至通过看其他玩家游玩也是一种解决方案，因为玩家很有可能在看别人玩一个角色的时候喜欢上 ta 然后自己也开始使用</li></ul></li></ul></li></ul></li><li>樱井并不想给玩家呈现一个他们从未见过的一长串的角色列表，所以需要为此想出一个合理的解决方案</li><li>在最终，樱井他们说服了任天堂，从他们那里借用了最受人欢迎的角色。由此产生的第一印象也困扰我们到了最后</li></ul></li><li><p>SSB 发行后，任天堂内部的意见发生了分化</p><ul><li>经常玩这个游戏的开发者们非常喜欢这个游戏</li><li>但是销售团队和批发商们反对让任天堂的角色们互相攻击的这个想法<ul><li>虽然这发生在他们游玩之前</li></ul></li></ul></li><li><p>樱井说 当时也很难让接触传统格斗游戏的玩家们来接受这个新游戏</p><ul><li>游玩策略完全不同</li><li>也很难打破之前人们脑海中已经有的观念</li></ul></li><li><p>为了解决这个问题，樱井提出了一些解决方案，包括 Smash Bros. DOJO!</p><ul><li>相当于官方分享了 SSB 的玩法策略<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230305215030.png"></li></ul></li><li><p>游戏在发行后最终收获了正面评价，也逐渐变得流行起来</p></li><li><p>樱井也非常感谢在当时支持游戏的玩家们</p></li><li><p>很偶然的，这也是樱井所做的第一个为游戏角色使用了配音演员的游戏</p><ul><li>也是在那是，为卡比确定了官方配音</li></ul></li><li><p>玩过 SSB 的玩家都知道，这个游戏的游玩方式是很自由的</p><ul><li>你可以打开道具模式然后在一个会切换的随机场地中战斗</li><li>也可以关掉道具然后专注于 1v1 的纯粹战斗</li></ul></li><li><p>设计哲学—— playing what you want, how you want</p><ul><li>这在 Smash 系列的第一部作品中就已经在某种程度上确定了</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>下次要介绍的是 Super Smash Bros. Melee.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230226 - Fun Beyond Game Essence</title>
      <link href="2023/02/26/20230226-b04/"/>
      <url>2023/02/26/20230226-b04/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解除 Game Essence 之外的游戏乐趣！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/Dq7X8-lB0is" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B04-Fun-Beyond-Game-Essence"><a href="#B04-Fun-Beyond-Game-Essence" class="headerlink" title="B04 - Fun Beyond Game Essence"></a>B04 - Fun Beyond Game Essence</h2><ul><li>一个游戏的乐趣不仅仅只是“game essence”</li><li>这一期中会列举 7 种不同类型的游戏和乐趣</li></ul><h3 id="1-Games-that-are-fun-to-control"><a href="#1-Games-that-are-fun-to-control" class="headerlink" title="1 Games that are fun to control"></a>1 Games that are fun to control</h3><ul><li>游戏世界提供了真实世界难以甚至无法提供的模拟环境</li><li>为了提供这种操控的乐趣，需要调整相应的设计决策，并且需要有相应的能力来实现想要的操控感<ul><li>遥控赛车的乐趣也是相通的</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226151023.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226151050.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226151133.png"></p><h3 id="2-Adventure-Games-amp-Visual-Novels"><a href="#2-Adventure-Games-amp-Visual-Novels" class="headerlink" title="2 Adventure Games &amp; Visual Novels"></a>2 Adventure Games &amp; Visual Novels</h3><ul><li>这个品类的游戏不那么注重”push and pull”，其乐趣主要来源于不断展开的故事<ul><li>这种品类的游戏可被视为小说/电影的一种延伸品，然而单是一个出色的故事是不足以制作一个出色的游戏的</li><li>和小说/电影等媒介不同，游戏最终是可以与电脑交互的，这一游戏品类的乐趣正是利用了这一点</li></ul></li><li>当然了，一些基于故事的游戏，比如《Ace Attorney Trilogy》（逆转裁判）也进行了非常好的”push and pull”的设计，从而让这一品类有些模糊。</li></ul><h3 id="3-Cinematic-amp-Story-Focused-Games"><a href="#3-Cinematic-amp-Story-Focused-Games" class="headerlink" title="3 Cinematic &amp; Story-Focused Games"></a>3 Cinematic &amp; Story-Focused Games</h3><ul><li>这一品类和前一品类相似，但其实故事元素是可以融合进任意品类中的</li><li>但其实 fun cinematics/stories 并不一定需要是 game essence 的一部分<ul><li>但两者都可以被用于强化 game essence </li><li>此二者是一种驱动玩家不断向前面对危险的驱动力</li></ul></li><li>此外，活灵活现的角色和世界能够帮助加深玩家的印象，从而与屏幕中发生的事件的情感联系 visceral connection</li></ul><h3 id="4-Licensed-Games"><a href="#4-Licensed-Games" class="headerlink" title="4 Licensed Games"></a>4 Licensed Games</h3><ul><li>其实就是 IP 游戏</li><li>这一品类通常与如下事物相关<ul><li>电影</li><li>玩具</li><li>贸易卡</li></ul></li><li>这些产品都服务于特定的粉丝群体</li><li>也就是说，可能玩家最关心的不是游戏本身是否足够有趣，而是其是否满足了特定粉丝群体的期待</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226152641.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226152712.png"></p><h3 id="5-Games-Based-on-Real-Life"><a href="#5-Games-Based-on-Real-Life" class="headerlink" title="5 Games Based on Real Life"></a>5 Games Based on Real Life</h3><ul><li>这类游戏一定程度上实现了对现实体验的模拟再现</li><li>在一个模拟世界中进行游玩能提供超出 game essence 的乐趣</li><li>比如<ul><li>火车模拟器</li><li>欧洲卡车模拟器</li><li>强力清洗模拟器  PowerWash Simulator</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226153127.png"></p><h3 id="6-Building-amp-Crafting-Games"><a href="#6-Building-amp-Crafting-Games" class="headerlink" title="6 Building &amp; Crafting Games"></a>6 Building &amp; Crafting Games</h3><ul><li><p>除了 game essence 之外，在这些游戏中造东西本身就足够有趣了</p><ul><li>但如果有合适的机制也可以引入 “risk and reward” 从而为游戏提供更多潜在乐趣<ul><li>如果从高处坠落就会死亡</li><li>建造建筑来抵御敌人</li><li>冒险收集材料</li></ul></li></ul></li><li><p>一些情况下，建造游戏和基于现实的游戏会有些许重叠，如模拟经营游戏，这些游戏都是基于假装的（pretend）</p><ul><li>先不说 Minecraft</li><li>另一个这样的例子是 Animal Crossing</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226153721.png"></p><h3 id="7-Rhythm-Games"><a href="#7-Rhythm-Games" class="headerlink" title="7 Rhythm Games"></a>7 Rhythm Games</h3><ul><li>在节奏游戏中，我们及时按键从而及时奏出音乐节拍的乐趣可能是最主要的乐趣来源</li><li>人类天性中就享受韵律和节奏</li><li>在这种品类中，你对一首歌越熟悉，你能获取的乐趣就越多</li><li>这类游戏就围绕学习歌曲，契合韵律来展开，这本身就很有趣</li><li>根据设计的不同，也可以在这类游戏中引入”push and pull”，也就是可以引入”risk and reward”</li><li>例子<ul><li>Beatmania<ul><li>这个游戏中即使是非常轻微的延后输入也会被判定为 miss<ul><li>随着可允许的输入延迟增加，难度也相应降低，玩家可能就会觉得无聊了</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226154314.png"></p><h3 id="Sports-Games"><a href="#Sports-Games" class="headerlink" title="Sports Games"></a>Sports Games</h3><ul><li>这是一个考虑过，但最终没有纳入的品类</li><li>真实世界中的运动或多或少都定义了某些 push and pull </li><li>为了实现这种模拟，你可以说游戏中已经有一些 game essence 了 <ul><li>此外，有一些运动游戏能获得成功是因为本身就有特定的观众会支持他们所喜爱的队伍</li><li>玩家最终会在游戏中操控其所喜爱的队伍</li><li>这些源于现实，来到游戏的玩家会在游戏内感受喜爱队伍的成功和失败，并为之上头</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230226154920.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>game essence 并不是唯一能让游戏有趣的东西</li><li>上述提到的分类也并不是严格/完全的区分开来的，其中的某些品类的边界是模糊的</li><li>如果你确实觉得一个东西有趣，并且能将其拆分开来，你可能能得到更加全面的列表</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230219 - Make the Tempo Match the Game</title>
      <link href="2023/02/19/20230219-i01/"/>
      <url>2023/02/19/20230219-i01/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏 Tempo！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/hGp2Jw5dLH8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="I01-Make-the-Tempo-Match-the-Game"><a href="#I01-Make-the-Tempo-Match-the-Game" class="headerlink" title="I01 - Make the Tempo Match the Game"></a>I01 - Make the Tempo Match the Game</h2><ul><li><p>tempo</p><ul><li>在音乐中指的是在给定速率情况下 节拍（beats）以多快速度出现的一种计量方式</li><li>也被称为 BPM - beats per minute</li><li>不同的游戏内容适合不同的 tempo</li><li>虽然最终这可能会落于个人品味和偏好 但无论是不是作曲家 该一直记得有这么一回事儿</li></ul></li><li><p>例子</p><ul><li>对于任天堂大乱斗，适合战斗的舞台的音乐通常的 BPM 被设计为 &gt; 120 （平均在 130~170）</li><li>即使同为动作游戏，从动作速度考虑，游戏可能也有不同的适合的 tempo</li><li>在第一版的 dragon quest 中，随着越来越深入地牢，游戏音乐的 tempo 越来越慢<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230219190542.png"></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230212 - Exercise While You Game</title>
      <link href="2023/02/12/20230212-m03/"/>
      <url>2023/02/12/20230212-m03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，在玩游戏时也锻炼身体！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/ysaNUatLMn0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M03-Exercise-While-You-Game"><a href="#M03-Exercise-While-You-Game" class="headerlink" title="M03 - Exercise While You Game!"></a>M03 - Exercise While You Game!</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230212134458.png"></p><ul><li><p>玩游戏会占据大量的锻炼时间</p></li><li><p>所以樱井就想办法把游戏和玩结合在一起</p><ul><li>比如在玩游戏的同时踩单车<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230212134606.png"></li><li>条件允许的话 也可以安装走步机等</li></ul></li><li><p>有趣的现象</p><ul><li>玩潜行游戏的时候不自觉会踩得很慢</li><li>玩竞速游戏的时候会踩得很快</li></ul></li><li><p>玩游戏的时候运动 有时会忘记运动的劳累</p></li><li><p>樱井会同时做好几件事</p><ul><li>玩游戏</li><li>踩单车</li><li>看剧<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230212134847.png"></li><li>但这样经常会使得对于某一任务无法沉浸 如果确实想要专注的话可能就会暂停另外一边（比如剧）<ul><li>现如今有如此多的订阅服务 樱井觉得看了总比不看好</li></ul></li></ul></li><li><p>樱井其实不是很喜欢运动</p><ul><li>但其实运动的人会比不运动的人的效率高很多</li><li>所以至少应该做一些运动</li><li>自从 COVID-19 之后 樱井没有去健身房了 都觉得这对他的健康造成了一些影响 所以开始尝试着在家中做一些简单运动 比如可调节重量的哑铃<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230212135327.png"></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>疫情期间 樱井甚至开始利用公寓里的楼梯<ul><li>但有一次爬得太多导致伤到了腿 目前正在修养</li><li>关节总是在响</li><li>要注意不要过度啊！</li></ul></li></ul><blockquote><blockquote><p>这一节也太有趣了<br>原来樱井是那种多线程停不下来的人哈哈<br>确实 专门锻炼身体可真让人痛苦 (￣▽￣)” 边玩边练可能确实不错</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230205 - Keeping Rewards in Sight</title>
      <link href="2023/02/05/20230205-c03/"/>
      <url>2023/02/05/20230205-c03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何用奖励驱动玩家！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/KePsEzN-IAM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="CO3-Keeping-Rewards-in-Sight"><a href="#CO3-Keeping-Rewards-in-Sight" class="headerlink" title="CO3 - Keeping Rewards in Sight"></a>CO3 - Keeping Rewards in Sight</h2><ul><li><p>是什么驱使着玩家不断游玩呢</p><ul><li>回报和奖励是驱动玩家的其中一种重要方式</li></ul></li><li><p>樱井认为</p><ul><li>如果一个游戏不会让你期待下一个奖励是什么的话 是失败的</li></ul></li><li><p>例子</p><ul><li>在可见范围内 放置经验值 可以让玩家清楚目前的进度 以及与下一阶段的距离<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230205141707.png" alt="Ys 中将经验值放在玩家视野中"></li><li>将玩家所具备的货币呈现出来，可以让玩家想到如果想购买下一件强力装备还需要获取多少钱<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230205142026.png" alt="Faxanadu 中展示玩家现有货币"></li></ul></li><li><p>将奖励置于玩家的视野中</p><ul><li>可以提供一个清晰的目标</li><li>同时也可以驱动玩家，提供玩家动力</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>现在的游戏有着很多货币类型，也有很多装备可供选择<ul><li>在这样的情况下很难像老游戏一样提供如此直接的 货币-装备 的对应关系</li><li>即使如此，为玩家提供可实现的目标，并让玩家感受实现目标的乐趣（经验值-升级）依然很重要</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230115 - Name Files Logically</title>
      <link href="2023/01/15/20230115-name-files-logically/"/>
      <url>2023/01/15/20230115-name-files-logically/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏文件命名！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/XMzR5mJHPDg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="K01-Name-Files-Logically"><a href="#K01-Name-Files-Logically" class="headerlink" title="K01 - Name Files Logically"></a>K01 - Name Files Logically</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230115180746.png"></p><ul><li>会更多强调一些通用问题</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Jan-15-2023-18-11-16.gif"></p><ul><li>这样的一个动作 可能会有不同的叫法 special up move/up special/special up 等等</li><li>但是开发团队中应该有一个统一的名称</li><li>原因<ul><li>游戏中的每一个动作都有一个对应的文件名，也可称之为标签（labels）</li><li>这个命名方式在初代大乱斗时期已经决定，并且沿用至今</li><li>所有普通攻击开头都是 Attack<ul><li>Neutral Attack 的命名是 Attack1</li><li>Smash Attack 的命名是 Attack4</li><li>Neutral Attack Combo 被命名为 Attack11/Attack12/Attack13</li></ul></li><li>所有特殊攻击开头都是 Special</li><li>Tilt attacks, smash attacks, special moves 会受到输入方向的影响<ul><li>centered stick 就是 N/neutral</li><li>Up 是 Hi</li><li>Side 是 S</li><li>down 是 Lw</li><li>空中操作是 Air</li><li>如此，一个 side smash attack 就会被命名为 <code>AttackS4</code></li><li>一个 forward aerial attack 就是 <code>AttackAirF</code></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Jan-15-2023-18-16-29.gif" alt="普通攻击"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Jan-15-2023-18-18-14.gif" alt="特殊攻击"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Jan-15-2023-18-22-06.gif" alt="不同方向输入的影响"></p><ul><li><p>这样的好处在于</p><ul><li>人们一看到明明就知道其所指代的动作</li><li>所有东西都保持整洁和有序<ul><li>同类动作会自动被放到一起</li><li>如果把方向标识放在最前，就会打乱排序</li></ul></li></ul></li><li><p>问题</p><ul><li>为何在游戏中要叫它 <code>Up Special</code> 呢<ul><li>因为从玩家视角看来，方向优先</li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>让开发文件命名保持简洁有序和便于理解，这样刚接触项目的人第一次寻找的时候也能一眼知道文件所指代的内容</li><li>如果命名太短了，可能会让人觉得难以理解</li><li>另外一点是<ul><li>要避免使用日文罗马音，而是使用英语，以便通用使用</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230108 - Try Telling That to the Player</title>
      <link href="2023/01/08/20230108-try-telling-that-to-the-player/"/>
      <url>2023/01/08/20230108-try-telling-that-to-the-player/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习在紧要关头也总是考虑玩家感受！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/Ik3deWOVCHI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A03-Try-Telling-That-to-the-Player"><a href="#A03-Try-Telling-That-to-the-Player" class="headerlink" title="A03 - Try Telling That to the Player"></a>A03 - Try Telling That to the Player</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230108130753.png"></p><p>游戏开发过程中总会涉及到不配合（cooperate）的电脑，这些也是人力资源管理支出的一部分</p><p>有时，我们想做的和我们能做的并不总是一致的</p><ul><li>比如<ul><li>我让一个游戏设计师完成一份设计文档</li><li>通常所得到的是一份更加强调开发者工作的，而不是玩家体验的文档<ul><li>有时，这是一种出于效率考虑的合理妥协</li><li>但很多时候，其实这会给玩家带来不好的体验<ul><li>或是为了便于开发而过于注重开发的优先级</li></ul></li></ul></li><li>樱井对于此的回复是<ul><li>how are you going to tell that to your players</li><li>怎么向你的玩家们交代这件事呢</li><li>玩家们并不会考虑开发者们做某个决策的理由，他们只会在乎游戏好玩与否</li><li>虽然也许并不是如此的非黑即白，但他们并不会因为开发困难而因此降低对游戏的标准，他们也不该如此</li><li>游戏开发者也是玩家，他们应该清楚地知道玩家们对于游戏的感受</li><li>但是当你处于开发侧的时候，很容易忘记以玩家视角来看待游戏，特别是当事情开始堆积的时候</li><li>简言之<ul><li>你应该总是把玩家的感受放在心上！</li></ul></li><li>开发过程中，问题总是会不断积累，这是无可避免的</li><li>并且由于每个人口味不同，对于问题，不会总是有一个清晰的答案<ul><li>有时候可能仅仅是因为技术限制，或是没有别的选择了</li></ul></li><li>但是当迫在眉睫时，应该谨记，玩家是第一位的</li><li>如果觉得玩家们不会喜欢这样的设计，可以尝试看看别的可能性</li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>The player comes first!</li><li>这不仅是个设计问题，也应该和程序们达成共识<ul><li>最终需要在理想情况和技术可行之间达成一个平衡</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230102 - Building a Living World from Ancient Ruins in Assassin&#39;s Creed Odyssey</title>
      <link href="2023/01/02/20230102-gdc-building-a-living-world-from-ancient-ruins-in-assasins-creed-odyssey/"/>
      <url>2023/01/02/20230102-gdc-building-a-living-world-from-ancient-ruins-in-assasins-creed-odyssey/</url>
      
        <content type="html"><![CDATA[<h2 id="原视频链接"><a href="#原视频链接" class="headerlink" title="原视频链接"></a>原视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/DBqa7Um28m8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><blockquote><p>create a world that was everything we wanted it to be<br>while keeping the team engaged and empowered</p></blockquote><ul><li>Keywords<ul><li>Knowledge Gathering</li><li>Team Engagement/Empowerment</li><li>World Phases</li><li>Substance Designer/Painter</li><li>Sprint Review Every 2 WEEKS</li><li>Having Fun!</li></ul></li></ul><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><ul><li>01 Project overview</li><li>02 the vision</li><li>03 world phases</li><li>04 conclusion</li><li>05 Q &amp; A</li></ul><h3 id="01-Project-Overview"><a href="#01-Project-Overview" class="headerlink" title="01 Project Overview"></a>01 Project Overview</h3><ul><li>GREECE 431 BCE</li><li>Peloponnesian war<ul><li>Sparta vs. Athens</li></ul></li></ul><h3 id="02-The-Vision"><a href="#02-The-Vision" class="headerlink" title="02 The Vision"></a>02 The Vision</h3><h4 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h4><ul><li>在项目最早期由 create director 定下<blockquote><p>During the golden age of ancient Greece<br>Determine your path on the EPIC odyssey of a legendary greek hero</p></blockquote></li></ul><h4 id="HOW-TO-ACHIEVE"><a href="#HOW-TO-ACHIEVE" class="headerlink" title="HOW TO ACHIEVE"></a>HOW TO ACHIEVE</h4><h5 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h5><ul><li>reference as many as possible <ul><li>setting revisited in MOVIES numerous times in THE LAST 60 YEARS<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102163832.png"></li><li>setting revisited in GAMES numerous times in THE LAST 35 YEARS<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102164021.png"></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102164108.png"></p><h5 id="Historical-Research"><a href="#Historical-Research" class="headerlink" title="Historical Research"></a>Historical Research</h5><ul><li>借助希腊历史学博士的帮助</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102164455.png"></p><h5 id="Scouting-Trip"><a href="#Scouting-Trip" class="headerlink" title="Scouting Trip"></a>Scouting Trip</h5><ul><li>实地考察 &amp; 博物馆参观 &amp; 网站</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102164620.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102164745.png"></p><h5 id="Visual-Pillars"><a href="#Visual-Pillars" class="headerlink" title="Visual Pillars"></a>Visual Pillars</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102164956.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165030.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165101.png"></p><ul><li>Colorful / vibrant<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165241.png"></li><li>Contrasted / dynamic<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165307.png"></li><li>Epic / grandiose<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165348.png"></li></ul><h5 id="World-Pillars"><a href="#World-Pillars" class="headerlink" title="World Pillars"></a>World Pillars</h5><ul><li>什么让这个世界特别</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165431.png"></p><ul><li>最终增大了陆地面积以保证玩家的陆地探索，但也保留了很多海洋区域以让玩家探索海洋<ul><li>也能体现出 land vs. sea 的对比</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165654.png"></p><ul><li>很大程度上复现了当时的区域划分</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102165810.png"></p><h4 id="World-Phases-Building-Ancient-Greece"><a href="#World-Phases-Building-Ancient-Greece" class="headerlink" title="World Phases Building Ancient Greece"></a>World Phases Building Ancient Greece</h4><ul><li>投入生产前需要规划好实现范围</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102170214.png"></p><ul><li>10 studios work together</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102170253.png"></p><h3 id="03-World-Phases"><a href="#03-World-Phases" class="headerlink" title="03 World Phases"></a>03 World Phases</h3><h4 id="Phase-1-Research-Reference-Paper-Map"><a href="#Phase-1-Research-Reference-Paper-Map" class="headerlink" title="Phase 1 - Research - Reference - Paper Map"></a>Phase 1 - Research - Reference - Paper Map</h4><ul><li>在投入大量精力制作 3D 版本前 先制作 2D 版本</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102170511.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102170617.png"></p><h4 id="Phase-2-terrain"><a href="#Phase-2-terrain" class="headerlink" title="Phase 2 - terrain"></a>Phase 2 - terrain</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102170656.png"></p><h5 id="the-biomes"><a href="#the-biomes" class="headerlink" title="the biomes"></a>the biomes</h5><ul><li>以增加 variety</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102170752.png"></p><h5 id="water"><a href="#water" class="headerlink" title="water"></a>water</h5><ul><li>同时也创建了许多 sub biome</li><li>可以创建不同的 combat experience</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102171029.png"></p><h4 id="Phase-3-Grey-box-blocking"><a href="#Phase-3-Grey-box-blocking" class="headerlink" title="Phase 3 - Grey box blocking"></a>Phase 3 - Grey box blocking</h4><ul><li>每两周会有一个视频来展示目前的成果</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102171159.png"></p><h5 id="the-architecture"><a href="#the-architecture" class="headerlink" title="the architecture"></a>the architecture</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102171311.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102171334.png"></p><ul><li>许多建筑目前都已经不见了，有的被多次加盖重建，但依然提供了重要的参考，而不是从头重建</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102171548.png"></p><h5 id="Texturing-the-world"><a href="#Texturing-the-world" class="headerlink" title="Texturing the world"></a>Texturing the world</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102171717.png"></p><h4 id="Phase-4-Intent"><a href="#Phase-4-Intent" class="headerlink" title="Phase 4 - Intent"></a>Phase 4 - Intent</h4><ul><li><p>分工，并专注于各自的内容</p><ul><li>Level art</li><li>Level design</li></ul></li><li><p>立项一年后达到 alpha</p></li><li><p>prop 的制作也需要 concept art 的参与</p><ul><li>毕竟制作的是 2500 年前的东西，很多都不存在</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102172126.png"></p><ul><li>crowd life design<ul><li>living world </li><li>ecosystem</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102172252.png"></p><ul><li>如果你做了什么“不该做的”，NPC 也会注意到你</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102172337.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102172355.png"></p><h4 id="phase-5-final-level-pass"><a href="#phase-5-final-level-pass" class="headerlink" title="phase 5 - final level pass"></a>phase 5 - final level pass</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102172436.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20230102 - Kirby Super Star</title>
      <link href="2023/01/02/20230102-kirby-super-star/"/>
      <url>2023/01/02/20230102-kirby-super-star/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Kirby Super Star 诞生的故事！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/PkeETXCSn5M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N03-Kirby-Super-Star"><a href="#N03-Kirby-Super-Star" class="headerlink" title="N03 - Kirby Super Star"></a>N03 - Kirby Super Star</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102131610.png"></p><h3 id="Kirby-Super-Star"><a href="#Kirby-Super-Star" class="headerlink" title="Kirby Super Star"></a>Kirby Super Star</h3><ul><li>为 Super NES 平台制作，发布于 1996 年</li></ul><h3 id="制作"><a href="#制作" class="headerlink" title="制作"></a>制作</h3><ul><li>在完成 Kirby’s Adventure 后，在为 SNES 设置相应开发环境时，还有一段空闲时间，所以并不是立马就全力进行开发的</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102131734.png"></p><h3 id="制作理念"><a href="#制作理念" class="headerlink" title="制作理念"></a>制作理念</h3><h4 id="Two-Player"><a href="#Two-Player" class="headerlink" title="Two-Player"></a>Two-Player</h4><ul><li><p>来源</p><ul><li>当时的任天堂社长 Shigeru Miyamoto 问樱井能否加入这一特性，他一直很希望能在马里奥系列中加入，但马里奥的快节奏玩法不是很适合。卡比的移动速度相较马里奥更慢，也许可以有机会加入这一特性</li></ul></li><li><p>设计考虑</p><ul><li>对于滚轴的动作游戏，玩家经常在前进（从而导致卷轴滚动）时把队友拉向自己一边</li><li>初代卡比确实比起马里奥的游戏节奏更慢，理论上有加入双人合作机制的可能性</li><li>但是卡比的后续系列中已经加入了复制能力，不同的能力的移动能力差别很大（比如轮胎能力），如此一来，可能比起马里奥系列还更难加入了</li><li>但如果硬件支持画面缩放的话也许也可以一试<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Jan-02-2023-13-33-29.gif" alt="卷轴当前画面会受到队友所在位置的影响"></li></ul></li><li><p>Helper system</p><ul><li><p>画面跟随</p><ul><li>在上面的情形之下，提出了 helper system，即将玩家分为了 lead/supporting 的角色</li><li>相机跟随 lead 角色，如果 supporting 角色不在画面内，就会随时间掉血</li><li>如果 support 角色离画面太远，一段时间后就会被传送到画面中</li></ul></li><li><p>能力结合</p><ul><li>玩家吸入敌人后消耗生命值就可以将敌人外化，变为玩家 2 可以操控的角色<ul><li>既增加了乐趣</li><li>也增加了角色个性</li></ul></li></ul></li><li><p>难点</p><ul><li>需要为每种敌人方案设置合适的参数，以让复制能力尽可能发挥作用</li><li>解决<ul><li>复制帽子 copy hats<ul><li>一开始只是需要某种 item 来创造 helper</li><li>后来发现这个帽子可以很好地构建和强化卡比的角色特性</li><li>卡比的设计最开始本来也很简单，所以这个增加的特性也很适合它</li></ul></li><li>根据按键输入来产生不同的输出效果<ul><li>Kirby’s Adventure 中，一种复制出的能力只有一种操作（如每个方向都是普攻）</li><li>但现在为其加入了和按键映射相对应的操作（如带方向的斩击，连续按下的连斩等）<ul><li>为了平衡这一设置，也让即使是最普通的怪物也能遭受多次打击</li><li>原来一般打一下就死了</li></ul></li><li>如此也让每种复制能力真正区分开了</li></ul></li><li>将生命值系统从老的 六格 版本更新为了不分格版本</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102134916.png" alt="Helper system - 画面跟随"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Jan-02-2023-13-54-03.gif" alt="Helper System - 能力结合"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102135735.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102140708.png" alt="更新的生命值系统"></p><ul><li>题外话<ul><li>卡比的复制能力在明星大乱斗中带来了很多令人头疼的实现问题…</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102140033.png"></p><h4 id="Omnibus"><a href="#Omnibus" class="headerlink" title="Omnibus"></a>Omnibus</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102140821.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102141142.png"></p><ul><li><p>这一作中引入了许多卡片——不同的游戏模式</p></li><li><p>制作原因</p><ul><li>在当时，越来越多“很重”的游戏逐渐占据市场</li><li>看到许多游戏需要花费太长时间来通关了</li><li>所以想加入一个 Omnibus 合集来让玩家享受许多能够快速游玩的具有不同游戏模式的小游戏，让玩家能够在享受多种内容的同时，不会觉得太累</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102141945.png" alt="Spring Breeze"></p><ul><li><p>SpringBreeze</p><ul><li>是第一个场景</li><li>这个场景中最开始甚至没有打算纳入复制能力</li><li>虽然最后应一位任天堂制作人的要求将复制能力加入了，但时至今日，我还是建议玩家们可以试试在不使用复制能力的情况下游玩这一场景（至少是第一次游玩时可以试试），不然的话这一场景和下一场景之间就没有什么实质上的区分了</li></ul></li><li><p>The Lost Scenario</p><ul><li>Kagero Mansion</li><li>是在最初规划阶段纳入的其中一个 scenario，但由于时间和 ROM 空间有限等原因，没有成为最终产品的一部分</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20230102143048.png" alt="Kagero Mansion"></p><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><ul><li>在制作中期左右，决定使用 CG 来作为背景<ul><li>背景<ul><li>随着 Donkey Kong Country 等游戏的出现，使用 CG 背景变得越来越常见</li></ul></li><li>樱井个人认为这个效果没有那么好</li><li>因为当时卡比的制作人员并不是非常熟悉这一技术，并且这对于卡比好像确实没有那么契合，因为它需要配合很多不同的拼接起来的地形</li><li>但确实学习新技术很重要<ul><li>the things you make today can lead to what you make tomorrow</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Jan-02-2023-14-35-20.gif" alt="Donkey Kong Country"></p><ul><li>樱井其实只执导了三作卷轴风格的卡比<ul><li>Kirby’s Dream Land</li><li>Kirby’s Adventure</li><li>Kirby Super Star</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>Two player + Omnibus + 新的 copy ability &amp; hats 造就了这一作独特的卡比体验</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221225 - Giving “Weight” to Buttons</title>
      <link href="2022/12/25/20221225-d02/"/>
      <url>2022/12/25/20221225-d02/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习如何为按钮添加分量！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/9qzUwoKT9T8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="D02-Giving-“Weight”-to-Buttons"><a href="#D02-Giving-“Weight”-to-Buttons" class="headerlink" title="D02 - Giving “Weight” to Buttons"></a>D02 - Giving “Weight” to Buttons</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221225141643.png"></p><ul><li>这里指的 “weight” 不是 PS5 的 dualsense 那样的机械定义的按压分量</li><li>而是由游戏设计或呈现方式带来的不同的按压感觉</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Dec-25-2022-14-21-16.gif"></p><ul><li><p>分量在不同游戏中的感知难度不同</p><ul><li>在有模拟摇杆或是 3D 游戏中可能感知不那么明显</li><li>但如果是 NES 上的控制板的话 就会有明显不同的按钮“分量”<ul><li>根据游戏类型的不同 角色的移动甚至就能让人感到很不一样</li></ul></li><li>同样的按键方式根据呈现方式的不同也能让人有不同的感觉<ul><li>这也是游戏设计师的有力工具！</li></ul></li></ul></li><li><p>让人感觉按钮分量不同的方式</p><ul><li>操控单位移动的快慢</li><li>inertia （惯性）</li><li>jump physics （跳跃的物理机制）</li><li>lag （延迟）</li><li>frame rate （帧率）</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Dec-25-2022-14-27-48.gif"></p><ul><li>人机交互中的几种信息传递<ul><li>人们通过眼耳接收屏幕显示的信息（绿色）</li><li>人们通过操控器向程序发送的指令（红色）</li><li>程序接收到指令后所产生的即时反馈（紫色）<ul><li>这一点容易被忽视 但也很重要</li><li>这一点是可以通过手上的操控感来体现的</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221225143424.png" alt="人机交互中的几种信息传递"></p><ul><li><p>将紫色通道考虑在内，这甚至会影响你的设计方式</p></li><li><p>以《任天堂明星大乱斗》为例，其中的每个角色的移速、易受击程度（vulnerability）和动画感觉 （animation flair，说实话不知道怎么翻比较合适哈哈…）都不一样</p><ul><li>这样不仅创造了<a href="https://medill-east.github.io/2022/09/17/20220917-risk-and-rewards/">“push and pull” </a> </li><li>也能让玩家感到每个角色的独特性</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Dec-25-2022-14-38-17.gif"></p><ul><li>实际上不同的系统的模拟摇杆是不同的，我们需要在开发游戏时考虑哪些呢？<ul><li>tilt sensitivity<ul><li>也就是摇杆倾斜被检测到的最小阈值</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221219 - Invisible Intuition：Blockmesh and Lighting Tips to Guide Players and Set the Mood</title>
      <link href="2022/12/19/20221219-gdc-invisible-intuition-blockmesh/"/>
      <url>2022/12/19/20221219-gdc-invisible-intuition-blockmesh/</url>
      
        <content type="html"><![CDATA[<h2 id="原视频链接"><a href="#原视频链接" class="headerlink" title="原视频链接"></a>原视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/09r1B9cVEQY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h2 id="14-原则"><a href="#14-原则" class="headerlink" title="14 原则"></a>14 原则</h2><h3 id="1-功能可供性-affordance"><a href="#1-功能可供性-affordance" class="headerlink" title="1-功能可供性 affordance"></a>1-功能可供性 affordance</h3><ul><li><p>目的</p><ul><li>告诉玩家<ul><li>可以去哪里</li><li>可以交互</li></ul></li></ul></li><li><p>游戏设计可供性</p><ul><li>是设计师向玩家传达可以交互内容的方法</li><li>玩家通过一致的形状和颜色去学习可供性规则</li><li>整个游戏的功能可供性需要保持一致</li></ul></li><li><p>可供性的例子</p><ul><li>梯子可以爬</li><li>石头边缘可以悬挂攀爬</li><li>斜坡可以往下</li></ul></li></ul><h3 id="2-功能非可供性-denying-affordance"><a href="#2-功能非可供性-denying-affordance" class="headerlink" title="2-功能非可供性 denying affordance"></a>2-功能非可供性 denying affordance</h3><ul><li><p>目的</p><ul><li>告诉玩家<ul><li>不能去哪里</li><li>不能交互</li></ul></li></ul></li><li><p>方法</p><ul><li>用一些游戏内的已有元素对那些会造成误导的信息进行遮盖 从而保留清晰的行进线</li></ul></li><li><p>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218223101.png"></p></li></ul><h3 id="3-形状引导-visual-language-shape"><a href="#3-形状引导-visual-language-shape" class="headerlink" title="3-形状引导 visual language - shape"></a>3-形状引导 visual language - shape</h3><ul><li><p>目的</p><ul><li>减少玩家认知和学习成本</li></ul></li><li><p>方法</p><ul><li>保持形状一致性</li><li>利用形状的认知效应 引导玩家靠近/远离<ul><li>圆形<ul><li>没有威胁</li></ul></li><li>正方形<ul><li>稳定可靠</li><li>像庇护所</li></ul></li><li>三角形<ul><li>具有攻击型和危险性</li><li>像矛</li></ul></li></ul></li></ul></li><li><p>例子</p><ul><li>在《神秘海域》中可攀爬边缘总是水平且平坦的。作为玩家，很快的学习这种视觉语言的可供性，使攀爬接下来可以很容易。</li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218223729.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218223942.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218224121.png"><h3 id="4-色彩引导-visual-language-color"><a href="#4-色彩引导-visual-language-color" class="headerlink" title="4-色彩引导 visual language - color"></a>4-色彩引导 visual language - color</h3></li></ul></li><li><p>目的</p><ul><li>减少玩家认知和学习成本</li></ul></li><li><p>方法</p><ul><li>颜色一致性<ul><li>在不同环境中使用一致的颜色和形状 将其融入环境中，看起来自然却引人注目</li></ul></li><li>利用颜色的认知效应<ul><li>比如红色代表危险</li><li>绿色暗示安全</li><li>紫色暗示未知</li><li>蓝色暗示平静</li><li>黄色暗示警示</li></ul></li><li>充分利用对比度</li></ul></li><li><p>注意</p><ul><li>不要太依赖颜色 因为有些玩家可能是色盲</li></ul></li><li><p>例子</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218224310.png"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218224523.png"></li></ul></li></ul><h3 id="5-地标引导-Landmarks"><a href="#5-地标引导-Landmarks" class="headerlink" title="5-地标引导 Landmarks"></a>5-地标引导 Landmarks</h3><ul><li><p>目的</p><ul><li>引导玩家前往</li><li>也可以作为玩家的目标</li></ul></li><li><p>地标 Landmark</p><ul><li>基本是一个可以在很远的地方从不同角度看到的大物体</li><li>如果使用得到 玩家在靠近这个物体的路上会一次又一次地看到它</li></ul></li><li><p>方法</p><ul><li>在目标中加上独特的轮廓 以便玩家一眼区分</li></ul></li><li><p>例子</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218224754.png"></li></ul></li></ul><h3 id="6-入口引导-Openings-Attract"><a href="#6-入口引导-Openings-Attract" class="headerlink" title="6-入口引导 Openings Attract"></a>6-入口引导 Openings Attract</h3><ul><li>目的<ul><li>引导玩家前往</li></ul></li><li>方法<ul><li>利用该类视觉符号的空间意义<ul><li>通向避难所<ul><li>门、洞穴、拱门等通常通向一个避难空间，是玩家会感到安全的地方</li></ul></li><li>通向新区域<ul><li>通常这些视觉符号也预示着新区域，会引起玩家好奇心</li></ul></li></ul></li></ul></li><li>注意<ul><li>充分利用对比色以突出入口</li></ul></li><li>例子<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218225258.png"></li></ul></li></ul><h3 id="7-空间引导-Gates-amp-Valves"><a href="#7-空间引导-Gates-amp-Valves" class="headerlink" title="7-空间引导 Gates &amp; Valves"></a>7-空间引导 Gates &amp; Valves</h3><ul><li>目的<ul><li>限制玩家可移动范围 阻止玩家漫无目的闲逛</li><li>让玩家专注于当前挑战</li></ul></li><li>方法<ul><li>门 gate - 可通过</li><li>阀门 valve - 预示其可开关<ul><li>利用 valve 吸引玩家前往战斗区域 进入后关闭 valve</li><li>利用 gate 提示玩家那是挑战完成后可以前往的地方</li></ul></li></ul></li><li>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218230203.png"></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218230435.png" alt="超级银河战士中 门与阀门的转换"></p><h3 id="8-线性引导-Leading-Lines"><a href="#8-线性引导-Leading-Lines" class="headerlink" title="8-线性引导 Leading Lines"></a>8-线性引导 Leading Lines</h3><ul><li>目的<ul><li>让玩家看向目标位置 从而引导前往</li></ul></li><li>方法<ul><li>利用线条状的物体构建视觉引导<ul><li>道路</li><li>管道</li><li>电缆</li><li>树枝…</li></ul></li></ul></li><li>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218233637.png"></li></ul><h3 id="9-视觉角度引导-Pinching"><a href="#9-视觉角度引导-Pinching" class="headerlink" title="9-视觉角度引导 Pinching"></a>9-视觉角度引导 Pinching</h3><ul><li>目的<ul><li>引导玩家前往特定区域</li></ul></li><li>方法<ul><li>用元素将区域隔开 把玩家目光角度自然吸引到目标上</li></ul></li><li>注意<ul><li>需要配合游戏动向<ul><li>即玩家从什么地方到来 会从什么角度观察场景</li></ul></li></ul></li><li>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218234552.png"></li></ul><h3 id="10-构图与框架引导-Framing-amp-Composition"><a href="#10-构图与框架引导-Framing-amp-Composition" class="headerlink" title="10-构图与框架引导 Framing &amp; Composition"></a>10-构图与框架引导 Framing &amp; Composition</h3><ul><li>目的<ul><li>凸显画面重点 屏蔽次要信息</li></ul></li><li>方法<ul><li>借鉴摄影技术 通过构图（地标、敌人、入口等）吸引玩家注意力</li><li>和空间引导、视觉角度引导一起用会有更好的效果<ul><li>先用视觉角度引导玩家关注特定区域</li><li>再利用构图来放大效果</li></ul></li></ul></li><li>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218235627.png"></li></ul><h3 id="11-小部件引导-Breadcrumbs"><a href="#11-小部件引导-Breadcrumbs" class="headerlink" title="11-小部件引导 Breadcrumbs"></a>11-小部件引导 Breadcrumbs</h3><ul><li>目的<ul><li>吸引玩家到达目的地</li></ul></li><li>方法<ul><li>利用任何场景元素来吸引玩家步步前进<ul><li>地上的大物件</li><li>待拾取物品<ul><li>同时也可以让玩家确保自己走在正确的路上</li></ul></li><li>敌人</li><li>发光区域等</li></ul></li><li>越早加入白模中越好<ul><li>这样可以尽早知道是否需要这些小部件</li><li>如果多次优化后仍需要 那就放心添加</li></ul></li></ul></li><li>例子</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218235924.png"></p><h3 id="12-纹理引导-Textures"><a href="#12-纹理引导-Textures" class="headerlink" title="12-纹理引导 Textures"></a>12-纹理引导 Textures</h3><ul><li><p>目的</p><ul><li>指出前进方向</li></ul></li><li><p>方法</p><ul><li>利用结构纹理巧妙/明显地指向目标<ul><li>方向箭头</li><li>墙壁划痕</li><li>标志</li></ul></li></ul></li><li><p>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221219000148.png"></p></li></ul><h3 id="13-动静引导-Movement"><a href="#13-动静引导-Movement" class="headerlink" title="13-动静引导 Movement"></a>13-动静引导 Movement</h3><ul><li>目的<ul><li>吸引玩家注意力 从而引导目光或前进方向</li></ul></li><li>方法<ul><li>移动物体能吸引玩家注意力<ul><li>鸟</li><li>火花</li><li>伙伴</li><li>敌人</li><li>微风中飘摇的物体</li></ul></li><li>同时也要利用好移动物体的移动方向 从而更好地牵引视觉</li></ul></li><li>注意<ul><li>白模阶段能否加上动静引导取决于游戏和引擎性能</li><li>可以先用简单方块代替</li><li>游戏后期可以利用该方法来引导玩家 但不要过度依赖</li></ul></li><li>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221219000337.png"></li></ul><h3 id="14-光线引导-Light-amp-God-Rays"><a href="#14-光线引导-Light-amp-God-Rays" class="headerlink" title="14-光线引导 Light &amp; God Rays"></a>14-光线引导 Light &amp; God Rays</h3><ul><li>目的<ul><li>吸引玩家注意力 </li><li>吸引玩家前往</li></ul></li><li>方法<ul><li>光和阳光散射可以引导玩家到目标处<ul><li>阳光散射会引出一条指引线</li></ul></li><li>人天生会被光源所吸引</li></ul></li><li>注意<ul><li>最好在白模阶段就开始加入光线</li></ul></li><li>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221219000724.png"></li></ul><h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><h3 id="眯眼挑战-The-Squinting-Test"><a href="#眯眼挑战-The-Squinting-Test" class="headerlink" title="眯眼挑战 The Squinting Test"></a>眯眼挑战 The Squinting Test</h3><ul><li><p>步骤</p><ol><li>眯眼看游戏画面</li><li>观察什么部分比较突出</li><li>根据需求来调整突出的部分</li></ol></li><li><p>例子<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221219000938.png"></p></li></ul><h2 id="Further-Reading"><a href="#Further-Reading" class="headerlink" title="Further Reading"></a>Further Reading</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221219001914.png"></p><h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h2><ul><li><a href="https://mp.weixin.qq.com/s?__biz=Mzg5MzA4NDA3Mw==&mid=2247486714&idx=1&sn=382ac9acfdf3a61023cd1dde54f6647f&chksm=c035043cf7428d2aaf5662561d3b60e1a5d9091a6cee492050ae7b1a5bed0248f062b6d496db&mpshare=1&scene=1&srcid=1203MS6Mzi1YyGn1cYGDC54F&sharer_sharetime=1606958075572&sharer_shareid=76523d1e98da3b871114b903472cd101&version=3.0.36.2201&platform=win#rd">含金量200%！顽皮狗关卡设计师David Shaver干货分享</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221218 - Clarity vs. Style</title>
      <link href="2022/12/18/20221218-clarity-vs-style/"/>
      <url>2022/12/18/20221218-clarity-vs-style/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏 UI！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/UjW_TTNtXEM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="J01-Clarity-vs-Style"><a href="#J01-Clarity-vs-Style" class="headerlink" title="J01 - Clarity vs. Style"></a>J01 - Clarity vs. Style</h2><ul><li><p>UI 即 user interface 用户界面</p><ul><li>在游戏中其更多指代如菜单等界面 以及游戏中出现的数字等</li><li>本系列主要会涉及屏幕中出现的 UI </li></ul></li><li><p>UI 涉及通常会涉及 clarity 和 style 的冲突</p><ul><li>以女神异闻录为例 其 UI 便具有强烈的风格化 sharp, stylish 具有很强的辨识度</li><li>但论及其 clarity 或是 well-organize 可能就不尽然了 第一眼看去可能有些难以分段 甚至有些内容过多了</li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218162630.png" alt="女神异闻录 Persona 的风格化 UI"></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218162824.png" alt="风格化带来的后果是清晰度和组织度的下降"></li></ul></li><li><p>游戏的 UI 就像是个抽屉 将其打开时希望其中的内容能以合理的方式排列好</p><ul><li>但如果 女神异闻录 5（P5）只是为了可读性而用了传统的界面可能并不是大家所想看到的</li></ul></li><li><p>同一个界面中能容纳的元素也因游戏而异</p></li><li><p>清晰的 UI 并不一定意味着其就是 出色的 UI ，反之亦然</p><ul><li>这一切都取决于每个标题需要什么样的界面</li></ul></li><li><p>在建造游戏中 玩家通常需要多种材料 这通常也与 UI 有关</p><ul><li>在 Minecraft 中，许多玩家最终都会建造一个仓库 就像建立文件件一般来存放东西</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218163327.png" alt="Minecraft"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221218163423.png" alt="Minecraft 中玩家的自建仓库"></p><ul><li><p>每一个界面都有一堆需要考虑的关键设计指标</p><ul><li>视觉指引 visual guidance</li><li>元素大小 the size of display elements</li><li>层级关系 window hierarchy</li><li>明度和饱和度 brightness and saturation</li><li>字体的选择 typeface</li><li>…</li></ul></li><li><p>在 clarity 和 style 中没有一个完美答案说谁更重要</p><ul><li>在设计 UI 时也要考虑到游戏内容和设定</li><li>在此基础上创造更加友好的用户界面吧！ </li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221211 - Just Let Them Play!</title>
      <link href="2022/12/11/20221211-just-let-them-play/"/>
      <url>2022/12/11/20221211-just-let-them-play/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何创建游戏的第一印象！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/PlbwQ_rntCM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="C02-Just-Let-Them-Play"><a href="#C02-Just-Let-Them-Play" class="headerlink" title="C02 - Just Let Them Play!"></a>C02 - Just Let Them Play!</h2><ul><li><p>第一印象非常重要</p><ul><li>玩家应该在最开始的三分钟就能了解到一个游戏为什么有趣</li></ul></li><li><p>印象来源</p><ul><li>游戏评分</li><li>游戏预告<ul><li>很多一开始都以讲故事的方式展开，让玩家等了很久才看到实际的游戏演示</li><li>所以樱井个人有了会跳过一些视屏开头的习惯</li><li>可以把高端的 CG 电影和开头放在后面</li><li>不能期待玩家在了解游戏之前就购买游戏</li><li>而且对于预告而言 叙事的展开会拖慢玩家了解游戏的进度</li><li>一个开局很缓慢的游戏在最开始可能就选错了路</li><li>不要让玩家一直想着“这到底是个什么样的游戏”然后焦急等待</li><li>想要解决这个问题需要快速引入玩法</li></ul></li></ul></li><li><p>并不是说叙事引入不重要，而是应该优先引入玩法</p></li><li><p>比如</p><ul><li>不要只是让玩家作为第三方旁观<ul><li>而是将玩家引入到一个后续将要发生的游戏事件当中</li><li>或是让他们实际以一个角色进行战斗，而不直接代入主角，只是让他们先玩起来</li></ul></li></ul></li><li><p>影片的展示是其它视觉媒介也能做的事 不是游戏所特有的</p></li><li><p>所以建议为玩家提供只有游戏才能感受到的乐趣</p></li><li><p>新手教程也应该有趣，而不仅仅只是为了让玩家进行明显的练习，而是将玩家更自然地引入主要游戏当中</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221211 - BAYONETTA - 白金游戏工作室的哲学：游戏业界的现在与未来</title>
      <link href="2022/12/11/20221211-bayonetta-future/"/>
      <url>2022/12/11/20221211-bayonetta-future/</url>
      
        <content type="html"><![CDATA[<h2 id="白金游戏工作室的哲学-游戏业界的现在与未来"><a href="#白金游戏工作室的哲学-游戏业界的现在与未来" class="headerlink" title="白金游戏工作室的哲学 游戏业界的现在与未来"></a>白金游戏工作室的哲学 游戏业界的现在与未来</h2><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a>要点总结</h3><ul><li><p>白金游戏工作室</p><ol><li>公司虽然在跟着时代发展变化，但员工们对游戏的态度和理念始终没变</li><li>白金游戏工作室最具魅力的地方在于游戏的品质和能让玩家感到有趣且充满惊喜的游戏</li><li>公司培养人才最难之处在于扩充员工数量的同时提升员工的能力，提升员工水平最重要的是通过实践磨练技能。领导要考虑到适材适所</li><li>神谷先生认为自我意识强烈且能表达出来的人适合做游戏导演</li></ol></li><li><p>人才与愿景</p><ol><li>两位讲师寻求的人才是“只要是有趣的东西就想积极参与进去”的人</li><li>稻叶：年轻人经验不足，要以长远眼光去考虑；神谷：寻求具有能动性的人才</li><li>积极接受外国籍员工增加公司内部多样化</li><li>游戏公司发展到一定阶段后要挑战做自己的 IP，虽然能给玩家带来兴奋感的游戏越来越难做，但做出这样的游戏是创作者们的愿景和梦想</li></ol></li></ul><h3 id="关于今后的白金游戏工作室"><a href="#关于今后的白金游戏工作室" class="headerlink" title="关于今后的白金游戏工作室"></a>关于今后的白金游戏工作室</h3><ul><li>成立时间<ul><li>截止 2021 年成立满 15 年</li></ul></li><li>成立之时从卡普空的第四开发部独立经历了四叶草工作室<ul><li>该公司几乎都由四叶草工作室成员组成</li><li>当时公司里有很强的第四开发部的精神</li><li>也是现在公司理念的基础 但也在慢慢发生变化</li></ul></li></ul><blockquote><p>公司在发展变化，但对游戏态度理念不变</p></blockquote><ul><li>人数变化<ul><li>59 -&gt; 几乎 300</li></ul></li></ul><blockquote><p>白金游戏的魅力是有游戏品质及惊喜有趣的游戏</p></blockquote><h3 id="培养人才的困难之处"><a href="#培养人才的困难之处" class="headerlink" title="培养人才的困难之处"></a>培养人才的困难之处</h3><ul><li>游戏开发中的审美只有在制作经验中才能培养出来</li><li>比起做一个很棒的培训课程 还是坚持做游戏 通过游戏开发来提升员工的水平更好</li></ul><blockquote><p>最重要的是通过实践磨练技能</p></blockquote><ul><li>需要找到合适人才做适合的事</li><li>白金经常有年轻游戏导演 是自己的志愿还是被挑选<ul><li>都有</li><li>创作者要有独立创作的欲望</li><li>会要问他们想不想做 同时也会考虑对方意愿</li></ul></li></ul><ul><li>日常工作中其实也能察觉出一个人是否有导演的特质<ul><li>自我意识强烈，能表达出来的人会比较适合</li></ul></li></ul><h3 id="寻求的人才形象"><a href="#寻求的人才形象" class="headerlink" title="寻求的人才形象"></a>寻求的人才形象</h3><blockquote><p> 只要有趣就想积极参与的人才</p></blockquote><blockquote><p>只有自己才能做到并给公司带来价值的人，才是开发公司的价值的体现</p></blockquote><blockquote><p>年轻人经验不足，要以长远眼光去考虑</p></blockquote><blockquote><p>导演会寻求那些具有能动性的人</p></blockquote><ul><li>白金工作室的外国人比例<ul><li>20%</li><li>多元人才对于游戏的创意和想法有益</li><li>外籍员工可以带来多样化</li></ul></li></ul><h3 id="白金游戏工作室的未来"><a href="#白金游戏工作室的未来" class="headerlink" title="白金游戏工作室的未来"></a>白金游戏工作室的未来</h3><ul><li><p>目前为止的白金工作室都是开发公司</p></li><li><p>未来也会兼顾发行</p></li><li><p>想让自己创作的作品成为自己的 IP</p><ul><li>自己的孩子希望能在自己的想法构建的环境中培育</li><li>更想自己去培育作品</li></ul></li><li><p>风险</p><ul><li>有可能偏离用户口味</li><li>要能更客观审视自己</li></ul></li><li><p>目前公布的（project G.G./Sol Cresta）要由白金自己制作发行的游戏 是从众多策划中选出的吗</p><ul><li>公司内公平竞稿<ul><li>但神谷展现实力（Project G.G.）赢了</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221211152905.png"></p><ul><li><p>公司规模虽然扩大了 但结构还是很简单的</p><ul><li>社长<ul><li>佐藤</li></ul></li><li>开发组领导<ul><li>稻叶（2022 年 1 月已经任职社长）</li></ul></li></ul></li><li><p>未来目标或愿景 - 稻叶</p><ul><li>希望啊大家能说出“哇居然还能这样”“真想不到”</li><li>希望能一直让玩家感到兴奋</li></ul></li></ul><blockquote><p>带来兴奋感的游戏会越来越难做</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221204 - Make It Pop!</title>
      <link href="2022/12/04/20221204-make-it-pop/"/>
      <url>2022/12/04/20221204-make-it-pop/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解如何让特效更加具有表现力！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/kcYDrtRvuKg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="H01-Make-It-“Pop”"><a href="#H01-Make-It-“Pop”" class="headerlink" title="H01 - Make It “Pop”"></a>H01 - Make It “Pop”</h2><ul><li><p>effects</p><ul><li>是设计用来增加视觉吸引力的元素</li><li>比如<ul><li>击中敌人时迸发的星星</li></ul></li></ul></li><li><p>许多特效都是通过叠加混合 additive blending 实现的</p><ul><li>比如为爆炸或者冲击绘制某种效果</li><li>然后运用叠加混合，就将这些元素叠加在了背景之上<ul><li>如此每种元素的色彩都“加”到了背景上</li><li>使他们更接近了白色</li><li>这和 translucency 是不一样的<ul><li>translucency 会使得颜色更加接近</li></ul></li><li>不断叠加后就获得了一些合适的效果</li></ul></li></ul></li><li><p>但不要过度依赖 additive blending！</p><ul><li>虽然用相对简单的视觉来实现比较好的结果是很好的</li><li>但这是不够的</li></ul></li><li><p>如果一个效果不够 “pop”（具有冲击力？）就会在缺少想要的冲击力和对比度</p></li></ul><p> <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221204134050.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221204134139.png" alt="Explosion Effects"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221204134421.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Dec-04-2022-13-49-08.gif" alt="效果可能太亮了"></p><ul><li>并且如果背景太白的话，additive blend 也没办法很好地表现出来</li><li>如果想更好的表现 effect 应该让游戏整体更暗一些</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Dec-04-2022-13-52-11.gif" alt="更暗的背景具有更好的表现力"></p><ul><li>建议是混合一些 crisp effect（不好翻啊哈哈）<ul><li>添加一些多边形或者简单的图像，让其成为焦点</li><li>《任天堂明星大乱斗》中也是这么做的<ul><li>to give them a clean, anime-style look</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221204135449.png" alt="添加简单形状，让其成为焦点"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221204135554.png" alt="大乱斗中的 effect"></p><ul><li>effect 通常在亮色背景中不太明显<ul><li>可以通过在其中添加暗色元素来增加对比度</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221204135657.png" alt="增加暗色元素来增加对比度"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>任何的设计（不仅是 effects）都需要思考<ul><li>如何让对立的元素（如上面提到的亮色背景）帮助自己的设计更加亮眼<ul><li>充分利用 contrast！</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221204 - BAYONETTA - 稻叶敦志 游戏制作人看业界</title>
      <link href="2022/12/04/20221204-bayonetta-inaba-atsushi/"/>
      <url>2022/12/04/20221204-bayonetta-inaba-atsushi/</url>
      
        <content type="html"><![CDATA[<h2 id="稻叶敦志：游戏制作人看业界"><a href="#稻叶敦志：游戏制作人看业界" class="headerlink" title="稻叶敦志：游戏制作人看业界"></a>稻叶敦志：游戏制作人看业界</h2><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a>要点总结</h3><ul><li>稻叶的经历</li></ul><ol><li>稻叶先生从少年开始憧憬游戏，当时时代背景下制作者多为程序员，所以学习了编程</li><li>选择制作人的道路是因为想要做的东西有很多，比起专注制作一个游戏，想把自己的想法实践到众多游戏中</li><li>稻叶先生的看法：<ul><li>欲望多则适合制作人</li><li>欲望深则适合游戏导演</li></ul></li><li>制作人在面对工期矛盾时，需要适当信心和耐心。这一切基础是企划时扎实的判断和对团队的信任 </li></ol><ul><li>稻叶想说<ol><li>游戏业界工作充满成就感，对业界有志向的人们，不要放弃理想</li><li>只想成为游戏制作者的人，不应该拘泥环境，应该积极创作，在心中思考和尝试是免费的，也会是今后无价的财富</li></ol></li></ul><h3 id="稻叶先生的游戏业界经历"><a href="#稻叶先生的游戏业界经历" class="headerlink" title="稻叶先生的游戏业界经历"></a>稻叶先生的游戏业界经历</h3><ul><li>为什么、如何进入游戏行业<ul><li>从小喜欢游戏</li><li>更早（12 岁）接触到电脑 觉醒游戏兴趣<ul><li>《勇者斗恶龙》的崛井雄二</li><li>《最终幻想》坂口博信</li><li>CHUNSOFT 中村光一</li><li>大家都是作为程序员推出游戏的<ul><li>《港口镇连续杀人事件》</li><li>《Door Door》</li></ul></li><li>当时游戏制作者 = 程序员</li></ul></li><li>最开始从改造游戏起步 想要提高能力和技巧 学习了程序</li><li>志愿不是程序员 而是因为当时的制作游戏的人都是程序</li><li>虽然做程序也很开心 但没想着要一直做程序 只是想进入游戏行业 所以从 12 开始自学程序 后来读高中 大学 进入游戏行业</li><li>在卡普空结识了神谷<ul><li>卡普空在当时建立了类似游戏制作人的制度</li><li>也诞生了游戏导演职位</li><li>当时才知道 自己虽然有做出游戏的欲求 但不一定要成为游戏导演或者设计师 发现制作人可能才是自己想做的</li><li>虽然制作人的具体工作内容定义还不清晰</li></ul></li></ul></li><li>稻叶所担任的游戏制作人的工作内容<ul><li>将自己的欲求作为根本<ul><li>最初想的就是自己想做出某种东西</li><li>然后将这个想法交给可以很好将其实现的人</li></ul></li><li>认为制作人就是<ul><li>拜托别人做事 </li><li>创造契机并指引方向</li><li>剩下的内容更像是个守护者</li><li>资金调配 管理工数 确认日程等都是后来附加上来的工作内容</li></ul></li></ul></li></ul><ul><li>制作人很像活动组织者<ul><li>思考一些设置会让参加活动人更加高兴、惊讶</li></ul></li></ul><blockquote><p>稻叶：服务心强<br>喜欢制造惊喜<br>并将其融入游戏制作中</p><ul><li>并且不仅是简单直接地满足他人 而是再往前考虑三步</li></ul></blockquote><ul><li><p>中间是否想过成为导演/参与企划</p><ul><li>有过<ul><li>但不知道自己能不能做好</li><li>见识过很出色的导演 不觉得自己能做到他们那种程度</li></ul></li><li>可能觉得不适合</li></ul></li><li><p>神谷却没有成为制作人的想法</p><ul><li>觉得自己没有那样的能力</li><li>除了创造力<ul><li>还要构建清晰框架<ul><li>自己脑中比较混乱 </li></ul></li></ul></li><li>如果公司资金允许像雾一样蒸发 随心所欲支配就能做</li><li>在社交媒体上被称为神谷制作人的时候会很受伤<ul><li>因为觉得被抬到了自己无法胜任的位置</li></ul></li></ul></li><li><p>稻叶认为什么样的人适合做制作人</p><ul><li>欲望多的人<ul><li>想同时想做很多事情</li></ul></li></ul></li><li><p>什么样的人适合做游戏导演</p><ul><li>欲望深的人</li></ul></li><li><p>白金工作室的制作人</p><ul><li>需要兼顾很多项目</li><li>对游戏制作每个部分的关联就会减少 但也没办法</li><li>也会发表很多游戏制作的建议 但和导演的角度不同<ul><li>会从商品整体角度来看</li><li>把控力量和资源分布</li><li>调控排期</li></ul></li></ul></li><li><p>如何更高平衡质量和有限资源的冲突</p><ul><li>带着不安的心情 信任地等待<ul><li>信任的基础是对项目的了解</li><li>不会等待完全没有机会的东西</li></ul></li><li>考虑如何顺利延长时间表和平衡账目</li></ul></li></ul><blockquote><p>信任地等待</p></blockquote><h3 id="神谷先生与稻叶先生的关系性"><a href="#神谷先生与稻叶先生的关系性" class="headerlink" title="神谷先生与稻叶先生的关系性"></a>神谷先生与稻叶先生的关系性</h3><ul><li><p>神谷看稻叶</p><ul><li>作为导演 <ul><li>认为制作人是会想出有趣设定的人</li><li>是非常信赖的人</li></ul></li><li>认为稻叶<ul><li>不仅是制作人 </li><li>还在指导工作室发展<ul><li>是公司的核心</li><li>如果稻叶不在了白金可能就不是现在的白金了</li></ul></li></ul></li></ul></li><li><p>游戏行业每天都在变化</p><ul><li>我们必须适应变化并进行调整</li><li>产品也要随之变化</li></ul></li><li><p>稻叶想对年轻人们说些什么</p><ul><li>通常如果人们说想成为行业顶尖<ul><li>人们会对孩子说加油</li><li>成年人之间却会说太辛苦了要不算了</li></ul></li><li>但自己想说做<ul><li>游戏真的很有趣</li><li>游戏完成后会有很多人来玩</li><li>自己的想法可能会变成业界的一种常识</li><li>作为游戏开发者会获得很高的成就感</li><li>可以先尝试着做些什么<ul><li>无论是想象、妄想、写东西</li><li>希望大家可以尝试并体验创作的过程</li><li>多年后都会成为自己的财产 </li><li>在脑中想象是免费的 也是无限的 不要吝啬</li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221127 - Thinking after the reading of 《The Meaning of Life： A Very Short Introduction》</title>
      <link href="2022/11/27/20221127-after-reading-the-meaning-of-life/"/>
      <url>2022/11/27/20221127-after-reading-the-meaning-of-life/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><h3 id="为什么写"><a href="#为什么写" class="headerlink" title="为什么写"></a>为什么写</h3><p>本书是牛津通识读本中的一册，因为自己的“没有意义也是一种意义”这一答案不足以解惑，遂读之以期有解。<br>当夜读完后力荐之，后又问起好在何处，哑然，遂重读，有此二三字。</p><h3 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h3><p>这里主要介绍一下后文中可能会涉及到的概念：</p><ul><li>能指、所指、意指</li></ul><p>这三个概念来自瑞士索绪尔的结构语言学。<br>能指，是表示实体（具体事物或抽象概念）的语言符号，如“桌子”这个词语。<br>所指，是语言符号所表达的实体，如作为具体事物的“桌子”的物质实体或概念实体，也是该语言符号的意义。<br>意指，即从能指指向所指的这个过程，描述了二者之间的关系。</p><h3 id="格式介绍"><a href="#格式介绍" class="headerlink" title="格式介绍"></a>格式介绍</h3><blockquote><p>如此框定的文字，都是摘录的文字，算作引用</p></blockquote><p>以下两种格式都是由我所写：</p><ol><li>没有任何框定的普通文字<blockquote><blockquote><ol start="2"><li>被双层框框定的文字，一般作为引文的注解/理解</li></ol></blockquote></blockquote></li></ol><h2 id="摘"><a href="#摘" class="headerlink" title="摘"></a>摘</h2><p>这部分主要是书中的摘录，其中也包括了个人对摘录部分的一些理解和联想。</p><h3 id="何为意义"><a href="#何为意义" class="headerlink" title="何为意义"></a>何为意义</h3><p>既然问意义为何，那么需要先回答何为意义。</p><blockquote><p>有些思想家认为人生的意义问题本身并无意义，之所以如此认为，有一个相当坚实的理由。意义是一个语言层面的东西，无关实体。</p></blockquote><p>意义并无实体，为人所构建。当我们谈及“人生的意义”是什么，为其能指下一个定义是再合理不过的需求了。如书中所言，它并不是事物本身的属性，且仅在谈及时出现。</p><h3 id="意义的三类用法"><a href="#意义的三类用法" class="headerlink" title="意义的三类用法"></a>意义的三类用法</h3><p>作者在书中归纳了“意义（mean/meaning）”一词的三类用法：</p><blockquote><p>一类是心里意图做某事，或心里想着某事；…另一类关乎“表示···的意思”。第三类将前面两类结合起来，表示“意图”这个动作，或者心里想以这个动作来表示某种意思。</p><blockquote><p>What I mean is …<br>The meaning of this is …<br>They are mean to be …</p></blockquote></blockquote><p>之后也用语言学观点对意义一词进行了阐释：</p><blockquote><p>区分作为给定含义的“意义”，和作为意图表示某种意思的动作的“意义”，这非常重要。…研究与研学的学者有时把这两种不同的“意义”含义区分为作为动作的意义和作为结构的意义。就后一种而言，一个词的意义是语言结构的一种功能。…那么，如果说人生有意义，也许这个意义是我们主动赋予的，就好比我们在一页纸上画一组黑色记号，表示某种意思；或者，这个意义与我们自己的活动无关，而是类似于作为结构或功能的意义。</p></blockquote><p>这里所谈到的是人们对于一个词的讨论，需要建立在一种共识的前提下才能进行。事物是被言语所构建的，人们并不能意指其已知范围外的内容，所以，也可以说，非物质实体在被语言所构建前，并不存在。</p><h3 id="这是否真的是个问题"><a href="#这是否真的是个问题" class="headerlink" title="这是否真的是个问题"></a>这是否真的是个问题</h3><p>作者引出了事物的存在性问题，即<code>为什么一切事物会存在，而不是不存在</code>，由此引出万物存在的目的性问题，或世界的存在是否具有目的性的问题。作者想要谈论的在我看来也许是意义的存在假设，既然我们要问“意义是什么”，假如这是一个可以被回答的问题，那么就假定至少有一个答案，即假定至少存在一种可被定义和回答的意义。当然了，如前所述，这里有一系列假设，而回答的前提是问题可以被回答，自然也存在这并不是一个可被回答的问题的可能性（虽然没有答案在我看来也是一种答案，但显然不是这里讨论的重点）。</p><p>书中用维特根斯坦所提出的有关真伪问题的定义来继续说明有一些问题本身是伪问题，如下面这段话所言：</p><blockquote><p>“灵魂在身体何处？”可能听起来像是一个合理的问题，但仅仅是因为我们把它当做“肾脏在身体何处？”一类的问题来思考。</p></blockquote><blockquote><blockquote><p>这里提到的其实和近来看到的行为经济学中的<code>启发法与替代问题</code>有关，即人们会在回答一个问题时不自觉地将目标问题（即真正所想要知道答案的问题）替换为了更简单的一个启发性问题（比如引文中提到的<code>肾脏在身体何处</code>）。</p></blockquote></blockquote><p>而后有关尼采和雅克·德里达的文字其实是对上述观点的强调，同时也自然引出了另一个问题：<code>人生</code>又指什么呢。</p><p>此后，提到了马克思的观点：</p><blockquote><p>马克思曾经略带神秘地评论说，人类只会提出他们能够解答的问题——他的意思也许是说，假如我们具备提出某个问题的概念装置，那么理论上我们已然有了规定答案的手段。</p></blockquote><blockquote><blockquote><p>看到这里时其实想到的是当时看《解忧杂货店》时的一个点——当你提出问题时，你的问题其实已经有了答案。<br>同时也想到了金庸的《神雕侠侣》中所写：“杨过身中情花之毒，天竺神僧说：’天下毒物相生相克，就像毒蛇出没的地方，七步之内必定有克制化解蛇毒之物’。”颇有异曲同工之妙。</p></blockquote></blockquote><p>提到这个，是因为问题并非凭空出现，它<code>暗示了哪种类型的回应至少可以充当答案</code>。后面也说到了在上文中所说的，<code>不是说所有的问题都能解答</code> ，<code>或许人类大脑注定无法解决某些问题</code>，<code>另一些问题没有答案，仅仅是因为它们本来就没有答案</code>。</p><h3 id="所谓的人生无意义"><a href="#所谓的人生无意义" class="headerlink" title="所谓的人生无意义"></a>所谓的人生无意义</h3><h4 id="存在主义的无意义"><a href="#存在主义的无意义" class="headerlink" title="存在主义的无意义"></a>存在主义的无意义</h4><blockquote><p>发觉人生无意义的人，并不是在抱怨他们不知道自己身体的构造，或者抱怨自己是陷入了黑洞或是坠入了海洋。怀有那种无意义感的人不只是意志消沉，而且还有精神病。他们所要表达的是，自己的生活缺乏深意（significance），所谓缺乏深意，就是说缺乏核心、实质、目的、质量、价值和方向。这些人不是在说他们不能理解人生，而是他们没有什么东西值得为之生活。不是说他们的存在不可理解，而是空洞无物。但是，要意识到他们的生活空洞无物，需要大量的阐释，因而需要大量的意义活动。“我的人生毫无意义”是一句存在主义的陈述，而非逻辑陈述。一个感到人生无意义的人大概不会去找本字典来查意义，他更可能会去找自杀药丸。</p></blockquote><blockquote><p>《麦克白》的这段台词至少体现了两种关于“无意义”的概念。其中一个概念是存在主义的：人的存在是一片虚无，或一场空洞的闹剧。确实有很多意义存在着。但都是糊弄人的。</p></blockquote><h4 id="语义学的无意义"><a href="#语义学的无意义" class="headerlink" title="语义学的无意义"></a>语义学的无意义</h4><blockquote><p>另一个概念是所谓语义学的，暗指人生没有意义，就像一段疯子的话没有意义。这是一个白痴讲述的故事，不表达任何意思。</p></blockquote><h3 id="为什么探求人生意义"><a href="#为什么探求人生意义" class="headerlink" title="为什么探求人生意义"></a>为什么探求人生意义</h3><p>书中提到了存在主义的兴盛：</p><blockquote><p>存在主义，及其对人生的荒诞感，总体上正是在二战后几十年间兴盛起来的。</p></blockquote><p>也从集体与个人的关系角度阐述了探求该问题的原因：</p><blockquote><p>如果你被迫在总体上探究存在的意义，那么，结果很有可能是失败的。<br>一个从未问过自己人生过得如何、该如何更好的生活的人，会显得尤其缺乏自我意识。<br>知道自己过得如何，这是决定自己是去努力改变生活还是维持原状的必要条件。了解境况是幸福的助手，而非敌人。</p></blockquote><blockquote><p>20 世纪之所以有比以往多数是其更为痛苦的关于存在之意义的思考，一个原因或许在于，这个世纪的人命薄如纸。</p></blockquote><blockquote><p>现代时期的一个典型特征是，人类生命的所谓“象征维度”被一直挤到了边缘。在这一维度之内，有三个领域在传统上至关重要：宗教、文化和性。这三个领域随着现代时期的展开而越来越远离公共生活的核心。<br>这和人生的意义问题又有什么关系呢？答案是，这些正是人们传统上探寻自身存在之意义和价值时所指向的领域。爱、宗教信仰以及对家族血缘与文化的眷恋：很难找到比这些更为根本的生命理由。<br>…<br>文化、宗教和性越是被迫充当衰落的公共价值的替身，它们就越无力扮演这种角色。</p></blockquote><h3 id="人生的意义？"><a href="#人生的意义？" class="headerlink" title="人生的意义？"></a>人生的意义？</h3><p>该部分中，先引述了问题的本质和其答案有其时代性，而后对问题的各种情况做了大致分类，从而引出各自情况下的可能答案：</p><ul><li>问题不存在 / 问题没有答案的情况下</li><li>问题存在<ul><li>问题无法被回答</li><li>问题不需要有答案 / 问题的答案不重要</li><li>问题的答案不是什么</li><li>问题有答案，且答案是</li></ul></li></ul><h4 id="问题的本质和其答案有其时代性"><a href="#问题的本质和其答案有其时代性" class="headerlink" title="问题的本质和其答案有其时代性"></a>问题的本质和其答案有其时代性</h4><p>作者在书中提到了在我看来是问题的本质和其答案有其时代性这一观点。</p><p>作者用海德格尔的论述做引：“人类与其他存在物的不同之处在于，它们具有反省自身存在的能力。”，<code>反思自身存在本身就是我们存在的一种方式</code>，之后用了一段话表述了现代主义思想的标志性特征：</p><blockquote><p>20 世纪的艺术家和哲学家远比 12 世纪的更容易把恐惧、焦虑、恶心、荒诞等当做人类处境的一般特征。现代主义思想的标志性特征是一种信念 ，认为人的存在是偶然的——没有根基、没有目标、没有方向、没有必然性，人类本来很有可能从未出现在这颗行星上。这种可能性掏空了我们的现实存在，投射出恒常的失落和死亡的阴影。即使是狂喜的时刻，我们也颓丧地知道脚下的根基宛如沼泽——我们的身份与行为缺乏牢固的基础。这可能让我们的美好时光变得更加珍贵，也可能让它们变得毫无价值。</p></blockquote><p>之后的很多文字都是在谈论不同背景下对于人生意义这一问题的可能答案。</p><h5 id="前现代人的答案：个体蕴含于集体之中"><a href="#前现代人的答案：个体蕴含于集体之中" class="headerlink" title="前现代人的答案：个体蕴含于集体之中"></a>前现代人的答案：个体蕴含于集体之中</h5><p>前现代人的个体蕴含于集体之中：</p><blockquote><p>前现代人也许不像我们现代人那么受人生的意义问题困扰。这不单是因为他们的宗教信仰比我们坚定，还因为他们的社会实践比我们更少有问题。或许在那个时代，人生的意义差不多等于遵循祖先的行事惯例和亘古以来的社会规范。…大致来说，你个人的人生意义就在于你在一个更大的整体中发挥的作用。离开这个背景，你只是一个空洞的符号。</p></blockquote><p>前现代思维用寓言来阐释世界：</p><blockquote><p>在寓言中，事物的意义并未直接呈现于表面；相反，它们必须被理解为某种“文本”或潜在真理的符号，通常是道德或宗教符号。</p></blockquote><p>其实在我看来寓言便是某种“一语双关”。</p><h5 id="现代人的答案：科学"><a href="#现代人的答案：科学" class="headerlink" title="现代人的答案：科学"></a>现代人的答案：科学</h5><p>现代思想以“科学”代替了“寓言”，但其实质未变：</p><blockquote><p>符号学和拯救是联系在一起的。现代思想在某种意义上与这种联系模式割裂开来，但在另一种意义上仍然忠实于这种模式。意义不再是埋藏在事物表面之下的精神本质。但意义仍然要被挖掘出来，因为这个世界不会自发地揭示它。这种挖掘行为有个名字叫做“科学”，在某种观点看来，科学就是在揭示事物运行所遵循的隐含的规律和机制。深度尚未消失，但现在在深度中发挥作用的是自然，而不是神性。</p></blockquote><h5 id="达达主义：反意义与对“无意义”的追求"><a href="#达达主义：反意义与对“无意义”的追求" class="headerlink" title="达达主义：反意义与对“无意义”的追求"></a>达达主义：反意义与对“无意义”的追求</h5><blockquote><p>达达主义…批评那些认为词义固定不变的古板之见。作者这么做是“意图”表达些什么的，即便他“想说”的话只能用它语言系统里无意义的词语来表达。</p></blockquote><h5 id="后现代主义的答案：避无可避的文化和探求本身"><a href="#后现代主义的答案：避无可避的文化和探求本身" class="headerlink" title="后现代主义的答案：避无可避的文化和探求本身"></a>后现代主义的答案：避无可避的文化和探求本身</h5><p>后现代主义消解了“自我”，消解了“意义”，但可能没有办法避开其实质依然存在，名为“文化”这一问题：</p><blockquote><p>如果说前现代文化大体上不像弗兰兹·卡夫卡那般为人生的意义所烦扰，后现代文化似乎也是如此。置身于发达的后现代资本主义社会的实用主义和市侩气息中，加上它对远大图景和宏大叙事的怀疑、对形而上事物的固执的祛魅，“人生”和许多其他总体性概念一样已经名声扫地。我们被诱使只考虑生活中的小问题，不去思考大问题…后现代主义诚然有各种各样的信念（beliefs），但没有信仰（faith）。<br>“意义”与设了一个事物能代表或代替另一个事物…事物该是什么就是什么，而非代表其他东西的神秘符号…自我是一个去中心化的网络，而不是神秘难解的精神。</p><p>后现代主义坚称，只要我们还有深度、本质和根基，我们就仍然活在对上帝的敬畏之中。我们还没有真正把上帝杀死并埋葬。我们只是给他新换了一套大写的名字，如自然、人类、理性、历史、权利、欲望，诸如此类。我们并未摧毁整套过时的形而上学和神学体系，只是用旧瓶装了新酒。…虽然后现代主义厌恶一切绝对根基，它还是偷偷的加入了一个绝对的信条…对后现代主义来说，这个绝对信条叫做“文化”。</p></blockquote><p>后现代主义者（或者称为多元主义）所看重的并不是追求到的意义的结果本身，而是追求意义的这个过程：</p><blockquote><p>对他们而言，重要的不是去寻找人生意义问题的确切答案，而是有那么多极为不同的解答方式这一事实。实际上，能够在那么多观点中选择，这种自由本身可能就是我们所能碰巧找到的最珍贵的意义。</p></blockquote><blockquote><p>人生的意义就在于追寻人生的意义。</p></blockquote><p>这里也提到了如果只有一种确定的人生的意义，那么在多元主义看来，这对于每个人来说就没有区别了。这也正是意义的多元化的重要性所在：</p><blockquote><p>人生没有既定的意义，这就为每个个体提供了自主创造意义的可能。如果我们的人生有意义，这个意义也是我们努力倾注进去的，而不是与生俱来的。</p></blockquote><blockquote><p>人生也许没有一个固有的目标，但这不能说明人生是徒劳的。虚无主义者不过是幻灭的形而上学家。对世界的恐惧不过是信仰的轻率的一面。…你只有因为层错误的想象这个世界可能本质上具有某种意义——后现代主义者则觉得此说不通——现在才会如此失望地发现世界原来并无意义。</p></blockquote><blockquote><p>后现代主义不过使用人类替换了上帝的位置。现实不是自在地存在，而是由我们所建构。</p></blockquote><h4 id="问题不存在-问题没有答案"><a href="#问题不存在-问题没有答案" class="headerlink" title="问题不存在 / 问题没有答案"></a>问题不存在 / 问题没有答案</h4><p>则无所谓答案是什么。</p><h4 id="问题存在"><a href="#问题存在" class="headerlink" title="问题存在"></a>问题存在</h4><h5 id="问题无法被回答"><a href="#问题无法被回答" class="headerlink" title="问题无法被回答"></a>问题无法被回答</h5><h6 id="无法理解"><a href="#无法理解" class="headerlink" title="无法理解"></a>无法理解</h6><blockquote><p>人生既无法理解，又毫无意义。但严格来说，这句话不能同时说。因为如果人的存在真的无法理解，你就不能对它进行任何道德评价，比如你不能断定它没有意义。</p></blockquote><h6 id="不可知"><a href="#不可知" class="headerlink" title="不可知"></a>不可知</h6><blockquote><p>人生可能具有某种我们所有人都一无所知的“内在”意义——它不同于我们在个体的人生中所构建的意义。例如，弗洛伊德相信人生的意义在于死亡——爱欲或生存本能的全部努力是为了回到死亡一般的静止状态，使得自我不再受到伤害。…我们的驱力和欲望可能构成某种我们没有意识到的模式，而这种模式深刻地决定着我们的存在意义。</p></blockquote><h6 id="不知道正是意义的一部分"><a href="#不知道正是意义的一部分" class="headerlink" title="不知道正是意义的一部分"></a>不知道正是意义的一部分</h6><p>下面摘录的这段话也很有意思：</p><blockquote><p>不知道人生的意义正是人生意义的一部分…人生就是依靠着我们不去理解它的根本意义而顺利进行下去的。</p></blockquote><p>这其实是将探寻意义的这个过程，或者说意义一词的意指抽离而出了，求之无果是求的结果，当然也是求的一部分。</p><ul><li>无意识意义</li></ul><blockquote><p>实际上作者当时究竟“在想什么”，恐怕永远无法得知，甚至他自己也想不起来了。</p></blockquote><blockquote><p>按照定义并非故意意图的“无意识意义”呢？“我真的是用笔在思考，”维特根斯坦说，“因为我的脑袋常常不知道我的手在写什么。”</p></blockquote><h5 id="问题不需要有答案-问题的答案不重要"><a href="#问题不需要有答案-问题的答案不重要" class="headerlink" title="问题不需要有答案 / 问题的答案不重要"></a>问题不需要有答案 / 问题的答案不重要</h5><h6 id="不预设意义的存在-也就不必为无意义感到失望-——-后现代主义"><a href="#不预设意义的存在-也就不必为无意义感到失望-——-后现代主义" class="headerlink" title="不预设意义的存在 也就不必为无意义感到失望 —— 后现代主义"></a>不预设意义的存在 也就不必为无意义感到失望 —— 后现代主义</h6><blockquote><p>人生并非充满意义，但也并非毫无意义。悲观地说存在失去了意义，就表明你仍然被囚禁于幻象，觉得它可能有意义。…如果一意是人创造出来的，那么我们怎么能预料这个世界本身有没有意义呢？这个世界没有呈现出充满意义的样子给我们，但我们为什么要为此而悲伤呢？你不会因为自己出生时没有戴小羊毛帽而感到悲伤。人们不会期待婴儿带着神气的小羊毛帽出生。我们没有理由为此而心情低落。</p></blockquote><h5 id="问题的答案不是什么"><a href="#问题的答案不是什么" class="headerlink" title="问题的答案不是什么"></a>问题的答案不是什么</h5><h6 id="不是工具性的"><a href="#不是工具性的" class="headerlink" title="不是工具性的"></a>不是工具性的</h6><blockquote><p>除了幸福，人生的意义还有其他选项：权利、哎、冗余、真理、快乐、自由、理性、自主、国家、民族、上帝、自我牺牲、沉思、皈依自然、最大多数人的最大幸福、自我克制、死亡、欲望、世俗成就、周围人的尊敬、获得尽量多的强烈体验、好好地笑一场，等等。理论上也许并非总是如此，但实际上对大多数人来说，人生是因为身边最亲密的人，例如伴侣和孩子，才变得有意义的。<br>以上选项中有许多会被人认为过于琐碎，或过于工具性，无法构成人生的意义。权利和财富明显属于工具性的范畴；而任何工具性的事物都不具有人生的意义看起来所要求的那种根本特质，因为这些事物之所以存在，是为了比它更为根本的东西。</p></blockquote><blockquote><p>对资本主义最有力的控诉之一是，它驱使我们把大部分创造性能量投入到纯粹功利性的事物中。人生的手段成了目的。人生成了为生活奠定物质基础的活动。令人震惊的是，人生的物质组织活动在 21 世纪和在石器时代竟然同样重要。本该用于在某种程度上将人类从劳动的迫切需求当中解放出来的资本，现在却被用来积累更多的资本。</p></blockquote><h5 id="问题有答案，且答案是"><a href="#问题有答案，且答案是" class="headerlink" title="问题有答案，且答案是"></a>问题有答案，且答案是</h5><h6 id="非常规答案（范畴谬误-问题的替换）"><a href="#非常规答案（范畴谬误-问题的替换）" class="headerlink" title="非常规答案（范畴谬误/问题的替换）"></a>非常规答案（范畴谬误/问题的替换）</h6><ul><li>42</li></ul><blockquote><p>道格拉斯·亚当斯在《银河系漫游指南》中有一段著名描写：一台名为“深思”的计算机被要求演算出全宇宙的终极答案，这台计算机花了七百五十万年来运算，终于得出答案：42。接着就需要制造另一台更大型的计算机，以弄清那问题究竟是什么意思。</p></blockquote><p>该回答其实是将问题进行了替换，将人生<code>转化为另一种符号系统（这次是转化为数字系统，而非文字系统），结果呢，你可以用一个数字来表示人生的意义。</code></p><ul><li>搞点薯条</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221127215853.png"></p><p>这让我想起了之前在网上看到的另一个异曲同工的梗——活着是为了什么？为了待会去码头整点薯条。<br>这个部分其实也可以视为下面要提到的 <code>生活本身就是意义</code> 的一种幽默缩影。</p><h6 id="无意义正是意义本身-没有意义也是一种意义"><a href="#无意义正是意义本身-没有意义也是一种意义" class="headerlink" title="无意义正是意义本身 / 没有意义也是一种意义"></a>无意义正是意义本身 / 没有意义也是一种意义</h6><p>这也是我一直以来的回答。</p><ul><li> 无目的的目的性</li></ul><p>作者在书中提到了伊曼努尔·康德在《判断力批判》中的“无目的的目的性”的观点：</p><blockquote><p>人体没有目的；但我可以说，各个器官依据它们在整个身体系统中的位置而具有特定“意义”。并且这些意义不是由我们自身决定的。</p></blockquote><ul><li> 觉得无意义本身就是一种意义 / 没有评价标准所以不能说没有意义</li></ul><blockquote><p>我们面对那些宣称人生无意义的人，总是可以反驳：“你说的无意义是指什么？”他接下来的回答必定是从意义方面来表达。那些追问人生的意义的人常常问，人生中的各种境况总括起来意味着什么；但既然分析人生中的每一个具体处境都要涉及意义，那么，就不能悲叹人生没有任何意义。…也许就缺乏给定的目的或目标来说，人生从头至尾是无意义的；但除非我们能依据某一逻辑来评价这一事实，我们就不能说人生完全荒诞。</p></blockquote><h6 id="并没有确定的意义-意义是不确定的-——-贝克特"><a href="#并没有确定的意义-意义是不确定的-——-贝克特" class="headerlink" title="并没有确定的意义 / 意义是不确定的 —— 贝克特"></a>并没有确定的意义 / 意义是不确定的 —— 贝克特</h6><blockquote><p>等待戈多算是一个事件，还是事件的悬置呢？等待，是一种没有内容的行为，意义的一次无限延迟，一种对未来的期待——同时也是一种活在当下的方式。这表明活着即延迟，延迟那终极意义的到来；尽管推迟的行为使得人生难以承受，但也可能正是这种行为使得人生处于运动之中。…或许，整个令人痛苦的、闹剧般的时间停滞，就是个多的到来，就像哲学家瓦尔特·本雅明认为，历史的空虚恰恰以否定的形式指出了弥赛亚即将降临。兴许戈多的到来将是一次有意的祛魅，告知人们其实本无必要等它——从来就没有什么重要的东西在呼唤救赎，但这种认识本身也是我们的错误意识的一部分。这有点类似于瓦尔特·本雅明的弥赛亚观念，即弥赛亚真的会变个世界，但变革的手段却是做些微调。</p></blockquote><blockquote><p>在贝克特的笔下没有什么是确定的，每一个破碎的能指都将我们运送到下一个能指——这个事实不但可以被视为一个欲望的寓言，也可以被视为意义的寓言。意义也是一个无尽的、未完成的过程，从一个符号拖着脚步走到另一个，对于终结既无恐惧亦不指望。我们至少可以肯定，意义总是越挖越多。逻辑上不可能有一个终极意义，一个终结所有阐释的意义，因为它本身也需要阐释。既然一个符号的意义来自于它与其他符号的关系，那么，就不会有一个终极的符号，正如不会有一个终极数字，或终极之人。</p></blockquote><h6 id="只缘身在此山中——生活本身就是意义"><a href="#只缘身在此山中——生活本身就是意义" class="headerlink" title="只缘身在此山中——生活本身就是意义"></a>只缘身在此山中——生活本身就是意义</h6><blockquote><p>兴许，人生的意义就是我现在正在做的事，就像呼吸一样简单，我根本意识不到它。如果人生的意义之所以神秘，不是因为它被藏了起来，而是因为它离我们的眼球太近，以至于我们无法看清呢？也许，人生的意义不是某个需要追求的目标，或一块需要发掘的真理，而是生活本身表达出来的某种东西，或者寓于某种生活方式之中。毕竟，一段叙事的意义不只在于它的“目的 / 结局”，还在于叙事过程本身。</p></blockquote><h6 id="悲剧以问回答"><a href="#悲剧以问回答" class="headerlink" title="悲剧以问回答"></a>悲剧以问回答</h6><p>书中也提到了从悲剧的角度对人生意义进行的回答：</p><blockquote><p>悲剧乃是诸多无乐观方案的人生意义问题中最有力的之一。在所有的艺术形式中，悲剧最彻底、最坚定地直面人生的意义问题，大胆思考那些最恐怖的答案。最好的悲剧是对人类存在之本质的英勇反思，其源流可追溯至古希腊文化，这种文化认为人生脆弱、危险、极易受到打击。</p></blockquote><blockquote><p>最有力的悲剧是一个没有答案的问句，刻意撕掉所有观念形式上的安慰。</p></blockquote><blockquote><p>悲剧一方面描绘了一个亟待救赎的世界，另一方面也提醒我们，救赎观念本身可能只是另一种把我们的注意力从一种恐怖上移开的手段，这种空不可能会把我们变成石头。</p></blockquote><h6 id="意义在于超验存在的意图的实现"><a href="#意义在于超验存在的意图的实现" class="headerlink" title="意义在于超验存在的意图的实现"></a>意义在于超验存在的意图的实现</h6><blockquote><p>人生的意义指的是意义的一个动作，即上帝（或生命力量，或时代精神）意图通过它来传达的任何内容。</p></blockquote><ul><li>现实都是“意志”的产物——叔本华</li></ul><blockquote><p>在叔本华看来，全部现实（不单单是人生）都是他所谓的“意志”的短暂产物。意志是一种贪婪的、无法平息的力量，它有自己的意图性；但如果说它产生了世上的一切，那不过是它保持自我运转的手段罢了。意志通过再生产现实来再生产自我，虽然这一切绝无任何目的。因此，人生的确有一个本质或核心动力；但这个真相令人恐惧，而不是鼓舞人心，它将导致破坏、混乱和永久的痛苦。并非所有的宏大叙事都不切实际。</p></blockquote><blockquote><p>我们也许自认为，我们的生命拥有价值和意义；但真相却是，我们的存在只是在无助地充当意志的工具，为其盲目而无意义的自我再生产服务。不过要实现这一点，意志必须让我们产生错觉，误以为人生真的有意义；它的做法是，在我们脑中培育一种自我欺骗的拙劣机制，即“意识”，我们由此而获得一种幻象，觉得自己的人生有目的、有价值。它让我们误以为，它的渴望即我们的渴望。</p></blockquote><blockquote><p>“所有的意志行为”，叔本华写道，“都来自匮乏缺陷，因而都来自痛苦。”欲望是永恒的，而欲望的满足则是罕见而不连续的。只要自我持续存在，被我们称作“欲望”的致命传染病就不会消失。只有无我的审美沉思，以及一种佛教式的自我克制，才能治愈我们因匮乏而产生的散光病，重新看清这世界的本来面目。</p></blockquote><ul><li>欲望——弗洛伊德</li></ul><blockquote><p>弗洛伊德将叔本华称为“意志”的那个东西重新命名为“欲望”。对弗洛伊德来说，幻想、误解和对真实（the Real）的压抑都是自我的构成要素，而非附属部分。一旦失去这些补救性的遗忘，我们将无法度日。</p></blockquote><h6 id="历史或某种宏大叙事——揭示某种意味深长的设计"><a href="#历史或某种宏大叙事——揭示某种意味深长的设计" class="headerlink" title="历史或某种宏大叙事——揭示某种意味深长的设计"></a>历史或某种宏大叙事——揭示某种意味深长的设计</h6><blockquote><p>马克思主义者通常也是无神论者，但他们相信人类生活——或者用他们更喜欢的词，“历史”——有其意义，能够展现出某种意味深长的模式。</p></blockquote><blockquote><p>宇宙可能没经过有意设计，它几乎肯定也不是想表达些什么，但也不是全然杂乱无章。想法，它的深层规律显示出某种美感、对称和简洁，能令科学家们感动落泪。认为这个世界要么是由上帝给定意义，要么完全混乱而荒谬，这是一种错误的二元对立思维。</p></blockquote><blockquote><p>我们经历的时候可能觉得毫无意义，但对于黑格尔而言，比方说，当时代精神越过自己的肩头回望，对自己所创造的一切投去赞赏的一瞥时，一切都具有了意义。在黑格尔眼中，甚至历史的愚蠢错误和盲目小道最终都是这宏大构思的一部分。</p></blockquote><h6 id="意义蕴含事物当中——内在主义"><a href="#意义蕴含事物当中——内在主义" class="headerlink" title="意义蕴含事物当中——内在主义"></a>意义蕴含事物当中——内在主义</h6><blockquote><p>价值是既有物和创造物的结合。事物没有得到高度珍视，但是它们本身既可能是珍贵的，也可能无足轻重。</p></blockquote><h6 id="意义是被建构而出的-——-建构主义"><a href="#意义是被建构而出的-——-建构主义" class="headerlink" title="意义是被建构而出的 —— 建构主义"></a>意义是被建构而出的 —— 建构主义</h6><blockquote><p>一切意义都是人类的言语行为，而“内在”意义只是某些捕捉到了事物真理的言语行为。…这类“建构”是一种与世界的单向对话，在这种对话中，是由我们来叙述事物的真相…但是，实际上意义是我们与现实相互作用的产物。本文与读者互相依赖。</p></blockquote><h6 id="受制于存在特征的有规则的建构实践-——-爱"><a href="#受制于存在特征的有规则的建构实践-——-爱" class="headerlink" title="受制于存在特征的有规则的建构实践 —— 爱"></a>受制于存在特征的有规则的建构实践 —— 爱</h6><blockquote><p>创造自己的人生的意义，而不是期待意义被预先给定，这是一个非常令人信服的主意…人生的意义不是自己能够随心所欲创造的。它并不能免除你的一项责任，即在常识之下证明任何使你的人生有意义的东西的合理性。…<br>这也不是无中生有式的创造过程。…无论身处何方，我们都已经深陷于意义之中。我们被编织进他人的意义网络——我们不曾选择过那些意义，但它们却提供了一个母体，我们可以在其中理解自我与世界。在这个意义上，即使不是在所有意义上，“我能决定自己的人生意义”这种观念乃是一种错觉。<br>但是，不单单是别人的人生意义会限制我的人生意义。我的人生意义还受制于我的存在特征，这些特征来自于我作为自然物中的一员的身份，并且在我的身体的物质本质中表现得最明显。…我们的推理方式与我们的动物性有密切关系。…除非人生的意义包括我的肉体和我的物种属性，否则就不能说它包括我。</p></blockquote><blockquote><p>人生的意义与其说是一个命题，不如说是一种实践。它不是深奥的真理，而是某种生活形式。它本身只能在生活中真正为人所知晓。<br>…<br>当我们意识到人生的意义不可能成为某个在哲学上有意义的问题的答案时，我们便窥见了一丝人生意义。它绝不是什么“解答”。一旦我们认识到它超越所有这些问题，我们便知道，这就是我们的答案。<br>…<br>语言无法描述作为整体的世界。但是，尽管作为整体的世界的价值和意义不能被陈述出来，它们却能被展现出来。有一种相反的方法是，展现哲学无法说出来的那些东西。<br>人生的意义不是对某个问题的解答，而是关乎以某种方式生活。它不是形而上的，而是伦理性的。它并不脱离生活，相反，它使生命值得度过——也就是说，它使人生具有一种品质、深度、丰富性和强度。在这个意义上，从某种角度看人生的意义便是人生本身。</p></blockquote><blockquote><p>我们在本性上是社会性的动物，…但我们也是个体性的存在…个体化是我们物种存在的一项活动，而不是一项与之冲突的条件。<br>我们称之为“爱”的东西，及我们调和个体实现与社会性动物之本性的方式。因为，爱表示为别人创造发展的空间，同时，别人也为你这么做。每个人自我的实现，成为他人的实现的基础。<br>…<br>可能不存在只属于我个人的意义，无论是人生的意义或其他什么意义。如果我们在他人当中并通过他人而存在，那么，这一定密切关系到人生的意义问题。</p></blockquote><blockquote><p>不管我们将来会如何不幸地注定达不到目标。我们需要的是一种毫无目的的生活，就像爵士乐演奏那样毫无目的。它不是要服务于某个功利目的或形而上的严肃宗旨，它本身就是一种愉悦。它不需要处于自身存在之外的合法性理由。在这个意义上，人生的意义有趣地接近于无意义。</p></blockquote><blockquote><p>爵士乐队的即兴演奏明显与交响乐队不同，因为很大程度上每位演奏者都可以按自己的喜好来自由表现。但是，她在这么做的时候，对其他月瘦自我表达式的演奏，怀有一种接纳性的敏感。他们所形成的符合的和谐状态，并非源于演奏一段共同的乐谱，而是源于在他人自由表达的基础上，每位乐手都用音乐自由地表达。每位乐手的演奏越有表现力，其他乐手就会从中得到灵感，被激励而达到更精彩的效果。在这里，自由与“整体的善”之间没有冲突，但这个意象与集权主义截然相反。虽然每位乐手都为“整体的更大的善”做出了贡献，但她不是通过苦涩的自我牺牲，而只是通过表达自我。这当中有自我实现，但实现的方式是自我在作为整体的音乐中消失。其中有成就，但不是自吹自擂的成功。相反，成就——音乐本身——充当着乐手之间发生关联的媒介。演奏的高超技巧带来快乐，并且——因为人的力量得到了自由满足或实现——存在着自我发展意义上的幸福。由于这种自我发展是互惠互利的，我们甚至可以宽泛地、比拟地说，这是一种爱。</p></blockquote><h6 id="荣格的自己实现"><a href="#荣格的自己实现" class="headerlink" title="荣格的自己实现"></a>荣格的自己实现</h6><p>写到这里，倒是想到了之前所看的荣格的“自己实现”的说法，想来也是对于该问题的一种可能答案：</p><blockquote><p>自我是意识中心，自己是心理中心（包含意识与无意识）。<br>按《漫画荣格：内心深处结构的解析》中所提，自己实现所指的是碰到问题，自我看到阴影，借此机会看到部分自己，而后摆脱这部分自己的过程，或者用其话语，即将这部分原本属于集体无意识中支配的部分分化的过程。</p></blockquote><hr><h2 id="感"><a href="#感" class="headerlink" title="感"></a>感</h2><p>算是又重新梳理了一遍后，结合自己的视角对“人生的意义是什么”这个问题再做一番回答。</p><p>作者在文中给出的回答是，一种名为“爱”的，受制于存在特征的有规则的建构实践。这种实践是一种具有积极意义的，将个人意义延伸至集体意义的实践。具有独立性的个人在实现自我价值的同时，参与到了社会性价值的实现当中。</p><p>除去我平时的“无意义也是一种意义”的答案，我之前所写的<a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">《乌合之众》读后感</a>中其实也可以延伸出对于该问题的答案。</p><p>当时所讨论的问题是在游戏情境下，被游戏内的范畴所界定的玩家，在对自己所属的群体没有身份认同的情况下，是否有自己实现的可能。</p><blockquote><blockquote><p>自己实现即上面所提到的荣格所谓的“将原本属于集体无意识中支配的部分分化的过程”。</p></blockquote></blockquote><p>这里也引用一下当时所得出的结论：</p><blockquote><ul><li>  在当下，这一问题因为受限于技术，所以几乎不可能。但一旦能实现，即使是部分实现，该部分玩家都能在较长时间段内成为黏性极高的核心玩家；</li><li>  当下游戏语境中其实已经在用两种手段尝试解答该问题：1. 提供玩家自组织的创建机会；2. 提供玩家自创内容的机会。这两个方向也是未来游戏语境下游戏核心竞争力的保证。</li><li>  针对上面提到的两个方向，有几点需要关注：玩家自组织的创建最终服务于玩家自创内容；玩家自创内容的限制应该尽可能少；玩家自创内容需要具备规模才能最终帮助解决问题。</li></ul></blockquote><p>之所以提到这个，是因为借助游戏这一媒介或载体，个人也许能以更低的成本参与到更广泛的社会群体之中（在线游戏），从而在实现自己实现（还是以爵士乐为例，即表演好自己的那部分）的同时，为群体中的其他具有相似境况的人揭露自身所见的阴影（为后来人铺路），也为启发其他人找到他们的阴影（寻找属于他们自己的乐器和节奏），最终使得他们也实现自己实现（奏响专属于他们的华美乐章）奠定基础。</p><p>当然了，这是放眼未来的一个美好假设，但也值得为之奋斗。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li>人生的意义/（英）伊格尔顿（Eagleton, T.）著；朱新伟译. ——南京：意林出版社，2012.11（2021.8 重印）<br>  书名原文：The Meaning of Life: A Very Short Introduction</li></ul><hr><p>寥寥数言，浅薄己见，看个乐 (￣▽￣)”</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221127 - Game Essence in Role-Playing Games</title>
      <link href="2022/11/27/20221127-b03/"/>
      <url>2022/11/27/20221127-b03/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解玩家的压力管理！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/BFGkFHb2lBw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B03-Game-Essence-in-Role-Playing-Games"><a href="#B03-Game-Essence-in-Role-Playing-Games" class="headerlink" title="B03 - Game Essence in Role-Playing Games"></a>B03 - Game Essence in Role-Playing Games</h2><h3 id="RPG-游戏的核心"><a href="#RPG-游戏的核心" class="headerlink" title="RPG 游戏的核心"></a>RPG 游戏的核心</h3><h4 id="Exploration"><a href="#Exploration" class="headerlink" title="Exploration"></a>Exploration</h4><ul><li><p>对于未知危险的冒险</p><ul><li>路途越长，敌人越强大恐怖</li><li>与之相应的是更加丰厚的回报</li></ul></li><li><p>可以让你随意离开或是资源较为丰富的类型就显得更加的 casual 休闲</p><ul><li>这并不意味着他们没有很好的 nail-biting 挑战（大概就是能吸引玩家上钩的危险）</li><li>通过增加单场战斗的难度，也可以实现很好的平衡</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Nov-27-2022-14-10-40.gif" alt="搏命 vs 逃跑"></p><h4 id="Combat"><a href="#Combat" class="headerlink" title="Combat"></a>Combat</h4><ul><li><p>ARPG 需要将战斗场景考虑在平衡性中</p></li><li><p>所以暂时以回合制战斗为例</p></li><li><p>首先，敌人出现，玩家会根据其外观（大小等）和行为来对其实力进行预判</p></li><li><p>如果它看起来怕火，玩家就会进行尝试，从而从结果中获得经验</p><ul><li>玩家会探索敌人的弱点，从而使得伤害最大化</li><li>这既是玩家策略 strategy，也是 game essence</li></ul></li><li><p>当然了 玩家可能也没有想那么多，对于休闲游戏而言，最好不要让事情太复杂</p></li><li><p>以《女神异闻录》为例，探索弱点可以让你实现连招，让战斗更加丰富 variety 和富有节奏 rhythm</p><ul><li>游戏设计促使你来探索敌人的弱点，从而打造平衡</li><li>重要的是 <a href="https://medill-east.github.io/2022/09/17/20220917-risk-and-rewards/">push and pull</a> </li></ul></li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>RPG 的两个 essence （但是不要被此限制）<ul><li>exploration</li><li>combat </li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221127 - BAYONETTA - 神谷英树 游戏导演看业界</title>
      <link href="2022/11/27/20221127-bayonetta-hideki-kamiya/"/>
      <url>2022/11/27/20221127-bayonetta-hideki-kamiya/</url>
      
        <content type="html"><![CDATA[<h2 id="神谷英树：游戏导演看业界"><a href="#神谷英树：游戏导演看业界" class="headerlink" title="神谷英树：游戏导演看业界"></a>神谷英树：游戏导演看业界</h2><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a>要点总结</h3><ol><li>游戏行业中有“游戏狂”，也有不会玩游戏的人，进游戏行业的门槛并不是会不会玩游戏</li><li>新人可以先进入公司，再选择想做的工作内容</li><li>对于神谷先生来说制作游戏的魅力包括并不仅限于<ul><li>听到玩家的声音</li><li>和有才华的人一起工作</li></ul></li><li>对于神谷先生来说，游戏制作过程中的“地狱”是提交完成版之后无致命 BUG 就不能再进行修改。看到专业游戏制作者的才能和开发过程中的快乐则是他不断前进的理由</li><li>导演的创意也有枯竭的时候，需要周围的人给予刺激和指引</li></ol><h3 id="神谷进入行业的契机"><a href="#神谷进入行业的契机" class="headerlink" title="神谷进入行业的契机"></a>神谷进入行业的契机</h3><ul><li><p>从小喜欢游戏，到了异常的程度</p></li><li><p>开始在百货店和酒店游戏角落玩</p></li><li><p>后来自己买了 FC，SFC玩</p></li><li><p>自然而然成了想做游戏的人</p></li><li><p>没想过自己会被录用</p><ul><li>有很多人玩得更厉害</li><li>觉得游戏行业中应该有很多游戏狂人</li></ul></li><li><p>实际进入卡普空里面发现也有不怎么玩游戏的人</p></li></ul><h3 id="神谷最初的职务"><a href="#神谷最初的职务" class="headerlink" title="神谷最初的职务"></a>神谷最初的职务</h3><ul><li>最开始是制作《迷魔界村》，原本是《不可思议》系列</li><li>原本《不可思议大百科秘籍》的世界观是猫追老鼠，其中有很多机关小游戏</li><li>接到的任务是置换成卡普空的角色的话怎么做<ul><li>提了单机、洛克人等角色提案</li><li>后来《迷魔界村》的提案通过了，就用了其中角色进行了替代</li></ul></li><li>即最开始就是在做设计</li><li>当时除了卡普空的策划角色，也收到了南宫梦的美术设计岗位录用<ul><li>但其实没学过绘画，就是涂鸦水平</li><li>应聘时提出的企划书都是以插画为主的</li><li>企划书中的角色、关卡和游戏画面都用插画表现，文字相对较少</li><li>南宫梦的评价<ul><li>游戏企划无趣</li><li>插画有趣</li></ul></li><li>卡普空的评价<ul><li>游戏策划有趣</li></ul></li><li>当时其实最喜欢南宫梦，80 年代也是其黄金期，南宫梦是第一志愿</li><li>因为想做的是策划角色，所以选择了卡普空</li><li>但回想起来即使是以美术设计身份加入，也可以提出创意或者参与游戏策划，或者直接调剂到游戏策划职位，不过当时不懂</li></ul></li></ul><h3 id="进入游戏行业的准备和心理建设"><a href="#进入游戏行业的准备和心理建设" class="headerlink" title="进入游戏行业的准备和心理建设"></a>进入游戏行业的准备和心理建设</h3><ul><li><p>学生时代就已经想加入游戏公司</p></li><li><p>但其实学生时代完全没有做过什么准备</p></li><li><p>高中时和父母说要学编程，买了电脑，但买回来就玩游戏去了，只学了一点点编程</p></li><li><p>很幸运地得到了南宫梦和卡普空的录取资格，但做的准备只有玩游戏</p></li><li><p>神谷说自己是文科脑，稻叶说自己是理科脑</p></li><li><p>游戏公司中的文理比例</p><ul><li>程序员基本是理科专业</li><li>设计师相较来说文科多<ul><li>美术</li><li>作曲</li><li>策划</li></ul></li></ul></li><li><p>所以很多时候是依靠经验和感性制作游戏</p></li></ul><h3 id="游戏制作的魅力"><a href="#游戏制作的魅力" class="headerlink" title="游戏制作的魅力"></a>游戏制作的魅力</h3><ul><li>游戏制作过程很长 应该会很疲惫 那么制作游戏有什么魅力呢<ul><li>参与制作的游戏发布、被商店售卖</li><li>听到顾客说游戏有趣</li><li>作为导演认为工作的每一天都很快乐 能和优秀团队一起工作<ul><li>提出了创意想法 也能得到很好的反馈</li></ul></li></ul></li></ul><h3 id="有过因为太难而想放弃的想法吗"><a href="#有过因为太难而想放弃的想法吗" class="headerlink" title="有过因为太难而想放弃的想法吗"></a>有过因为太难而想放弃的想法吗</h3><ul><li><p>仍然觉得禁止完成版的数据上传时就像是地狱</p><ul><li>总会出现优先级的抉择</li><li>无大问题不能再修改了</li><li>这时就会很难受</li></ul></li><li><p>专业人员的能力及开发过程中的快乐是继续前进的理由</p></li></ul><h3 id="会经常储蓄一些创意吗"><a href="#会经常储蓄一些创意吗" class="headerlink" title="会经常储蓄一些创意吗"></a>会经常储蓄一些创意吗</h3><ul><li><p>有过但基本没有</p></li><li><p>做一款游戏时候会优先完成，之后再考虑下一款要做什么</p></li><li><p>稻叶会激发自己的创意</p></li><li><p>稻叶如何激发神谷创意</p><ul><li>构造和设计相关的想法会觉得很不错</li><li>想到了就传达给神谷<ul><li>虽然创意不是我的工作，但我想要你这样构成，只要按照这个框架来做怎样都可以</li></ul></li></ul></li><li><p>也就是相当于稻叶框定范围，神谷二次创作</p></li><li><p>神谷自评创意贫乏，视野很窄，但受到周围的刺激（比如希望自己做什么游戏时），创作思路会被打开</p></li></ul><h3 id="神谷与稻叶的关系"><a href="#神谷与稻叶的关系" class="headerlink" title="神谷与稻叶的关系"></a>神谷与稻叶的关系</h3><ul><li>从成为制作人和导演，认识大概 20 年了</li><li>稻叶在《鬼泣》开发初期参与了一部分，当时开始接触<ul><li>稻叶当时是作为程序员进入团队的</li></ul></li><li>从《红侠乔伊》开始正式以制作人和导演身份合作</li><li>基本没有私下交往</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221120 - Assigning Animations</title>
      <link href="2022/11/20/20221120-assigning-animations/"/>
      <url>2022/11/20/20221120-assigning-animations/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏动画！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/fV8xIP480qk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="G01-Assigning-Animations"><a href="#G01-Assigning-Animations" class="headerlink" title="G01 - Assigning Animations"></a>G01 - Assigning Animations</h2><ul><li><p>游戏开发中的动画指的是角色和其他元素的移动方式</p></li><li><p>当为动作游戏设计战士时，当然需要考虑其动作将如何被动画呈现</p><ul><li>这需要与动画师进行充分沟通 </li></ul></li><li><p>和动画师的沟通</p><ol><li>创建一份动画列表<ul><li>用文字清楚地描述动作</li><li>注明动画长度</li><li>注明触发条件<ul><li>记得考虑 <a href="https://medill-east.github.io/2022/09/17/20220917-risk-and-rewards">B01 - Risk and Rewards</a> 中的 push and pull 以设定伤害触发和结束的 timing </li><li>对于可以 loop 的动画（如 idle，行走等）<ul><li>将其发生条件设为 loop / any 都可以</li></ul></li></ul></li></ul></li><li>利用玩偶来沟通一些重要动作 <ul><li>拿到人偶 - 摆动作 - 抠出形象 - 调整对比度</li><li>以此制作一个 spec sheet</li><li>一个战士通常有 70 80 页的图像来展示其动画<ul><li>如果动作或行为参考了角色原本的游戏 也可以从原本游戏中通过截图或录像进行展示</li><li>对于非人型或是没有参考的角色 就只用文字对其动作进行叙述</li></ul></li></ul></li></ol></li><li><p>游戏导演在初期能提供越多的动画细节，能大大提高动画制作效率和降低沟通成本</p></li><li><p>为了让动画变得更好，动画师需要考虑补帧及其细节</p><ul><li>而且由于人偶的限制，可能游戏内的骨骼移动范围更广，动画师也需要进行相应调整</li></ul></li><li><p>一些动画可能无法如计划中那样实现，那么就需要将计就计，进行调整，总之要让角色有亮点，并且提供尽可能好的游戏体验</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221120144622.png" alt="动画的发生条件"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Nov-20-2022-14-50-34.gif" alt="Push and Pull - Right timing"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221120145344.png" alt="用于与动画师沟通动作的人偶"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Nov-20-2022-14-55-57.gif" alt="利用玩偶模拟动作"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221120 - BAYONETTA - 品质管理 打造经典游戏的完美收尾</title>
      <link href="2022/11/20/20221120-bayonetta-quality/"/>
      <url>2022/11/20/20221120-bayonetta-quality/</url>
      
        <content type="html"><![CDATA[<h2 id="品质管理-打造经典游戏的完美收尾"><a href="#品质管理-打造经典游戏的完美收尾" class="headerlink" title="品质管理 打造经典游戏的完美收尾"></a>品质管理 打造经典游戏的完美收尾</h2><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a>要点总结</h3><ul><li><p>品质管理的定义和方法</p><ul><li>品质管理的定义<ol><li>企划书是否有趣，能否实现企划书的主干</li><li>能否将游戏内容传达给玩家</li><li>能否让负责品质管理的人有所期待</li><li>完成的游戏会有很多不足，就算逐一解决也未必能到有趣的最大值，可适当裁剪掉玩家不会触碰或者和游戏主干无关的部分</li><li>只在意负面的内容不能称之为品质管理 品质管理要做到“抓起重点将其升华”，在满足基础游戏体验至上追求更高的层次</li><li>做出创作者最想表达的乐趣可提升游戏魅力</li><li>创作者要锻炼出能将游戏的魅力用言语表达并解释说明</li><li>在团队中多次对游戏进行评分十分重要，通过评分，创作者可以发现游戏问题及玩家感受</li><li>原创游戏得到大家的认可需要时间，因此对于品质管理，关键是要发挥其优点</li></ol></li></ul></li><li><p>神谷流游戏品质管理</p><ul><li>作为白金游戏工作室首席设计师，要注重导演的“创作者个性”</li><li>对没能发挥最大魅力的游戏给予建议</li><li>推荐导演做出最好的选择，提案更适合的做法</li><li>同时不将自己的想法强加于人</li></ul></li><li><p>神谷流游戏品控</p><ol><li>平衡制作日程，游戏亮点最大化</li><li>开篇做出高质量，让玩家将游戏趣味性印在脑中</li><li>高质量开篇，不要影响后续进度和质量，为此要先预设解决方案</li><li>提高游戏质量与工作总体量之间的 tradeoff，做好折中方案</li></ol></li></ul><h3 id="品质管理的定义及方法"><a href="#品质管理的定义及方法" class="headerlink" title="品质管理的定义及方法"></a>品质管理的定义及方法</h3><h4 id="品质管理定义"><a href="#品质管理定义" class="headerlink" title="品质管理定义"></a>品质管理定义</h4><ul><li>以下都是稻叶敦志谈白金工作室的品质管理时所提到的</li></ul><blockquote><p>企划书是否有趣<br>能否实现企划书的主干<br>内容能否被很好理解 能否传达给玩家<br>能否让负责品质管理的人有所期待</p></blockquote><blockquote><p>游戏制作过程中出现的每个问题都处理的话 游戏是会崩盘的<br>        所谓崩盘就是没能达到有趣的最大值</p></blockquote><blockquote><p>剪裁掉玩家不会触碰的、和游戏主干没有联系的地方也是品质管理重要的一环</p></blockquote><blockquote><p>品质管理和检查应该从“发挥游戏优点”的角度出发<br>    而不是过于关注短板<br>满足基础的游戏体验后，要追求更高的层级</p></blockquote><ul><li>创作者应该训练自己能够说出一个东西有趣，为什么有趣的能力<blockquote><p>先用言语表达要点（要点提炼），再锻炼言语说明（阐释说明）</p></blockquote></li></ul><blockquote><p>品质管理的重点之一是抓住重点，将其升华</p></blockquote><h4 id="品质管理要经过的步骤"><a href="#品质管理要经过的步骤" class="headerlink" title="品质管理要经过的步骤"></a>品质管理要经过的步骤</h4><ul><li>稻叶敦树认为最好可以多一些在很多人面前让大家打分这样的机会<ul><li>不是让很多人进行评价</li><li>而是让团队成员当场试玩进行评分</li><li>虚心接受对方意见<ul><li>就是之前提到的 评价一方要把评价认真地用言语表达出来</li></ul></li></ul></li></ul><blockquote><p>通过评分可以发现自身问题以及玩家感受</p></blockquote><ul><li><p>白金工作室有很多检查机会</p><ul><li>创意总监检查</li><li>制作人检查</li><li>游戏导演检查</li></ul></li><li><p>真诚地对乐趣点进行交谈和反馈</p></li></ul><blockquote><p>白金游戏：制作原创游戏，创作新的玩法</p></blockquote><blockquote><p>原创游戏的品质管理的关键：发挥优点</p></blockquote><h3 id="神谷流品质管理"><a href="#神谷流品质管理" class="headerlink" title="神谷流品质管理"></a>神谷流品质管理</h3><ul><li><p>神谷英树也会对白金工作室其他游戏导演的作品进行品质管理</p><blockquote><p>对没达到最大魅力的游戏给予建议<br>神谷流：注重导演的“创作者个性”<br>神谷流：绝不能将自己想法强加于人</p><pre><code>看过企划和实际演示后，要感觉什么才是导演想要做的，体验分析后，提出“其实这方面还没有表现得足够突出”的观点，或者在 AB 决策时给出建议要帮助导演发掘他的真实意图，从而选出最契合其意图的方案</code></pre></blockquote></li><li><p>尽可能在早期</p><blockquote><p>推荐较好做法<br>提案更适合做法</p></blockquote></li></ul><h3 id="神谷流品质控制"><a href="#神谷流品质控制" class="headerlink" title="神谷流品质控制"></a>神谷流品质控制</h3><ul><li>日程很重要</li><li>目标是优先将游戏有趣的部分最大化</li></ul><blockquote><p>平衡制作日程，将有趣部分最大化</p></blockquote><ul><li>一个游戏从头到尾都有一流质量是非常困难的<ul><li>在游戏开篇拿出最佳状态印象上能让玩家感觉整体质量都很高</li><li>可以帮助玩家在最开始就把游戏趣味性印刻在脑海里</li></ul></li><li>在游戏一开头就把游戏最高质量做出来<ul><li>但也要在心中想好 如何在后面弥补在开头部分消耗的工期</li><li>比如火元素主题替换为冰元素就可以直接制作，但对于玩家来说是不同的体验<ul><li>要在心中预设好方案</li></ul></li></ul></li></ul><blockquote><blockquote><p>这里说的也没错<br>但可能也可以考虑 [[高潮结尾]] 效应</p></blockquote></blockquote><blockquote><p>神谷流游戏开篇：做高质量</p></blockquote><blockquote><p>神谷流：预设后期解决方案，集中精力提高完成度<br>考虑提高质量与工作总体量的平衡</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221113 - Game Awards</title>
      <link href="2022/11/13/20221113-game-awards/"/>
      <url>2022/11/13/20221113-game-awards/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏奖项！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/re5JlUcYvxU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="M02-Game-Awards"><a href="#M02-Game-Awards" class="headerlink" title="M02 - Game Awards"></a>M02 - Game Awards</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113141850.png"></p><blockquote><p>The game you like best is number one!</p></blockquote><ul><li><p>游戏类型是多种多样的，也没有必要把所有游戏都放在一起进行比较</p></li><li><p>游戏大奖的存在目的之一</p><ul><li>让创作者和粉丝们庆祝</li><li>也是对创作者们的肯定</li></ul></li><li><p>不要将游戏大奖视为一种比拼</p><ul><li>一种更好也并不意味着另一个更差</li><li>把它视为一种传递幸福的机会吧</li></ul></li><li><p>关于樱井政博作为评审之一的 Game Designers Award (Part of Japan Game Awards)</p><ul><li>收集来自独特游戏的导演的选票，并为 the most original 的游戏颁发奖项</li><li>为什么游戏制作者们参与到了评选过程中呢？<ul><li>Japan Game Awards 中的大多奖项都由用户票选决定，也就是个热度投票。所以卖得好的自然更容易获得更多投票</li><li>而对于 Game Designer Awards 比起商业成功，更看重游戏的 ingenuity，即新意</li><li>游戏导演们深知制作独特游戏的困难，所以也更能发现游戏的这部分价值</li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>将游戏奖项视作为游戏创作者和粉丝庆祝的机会</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221113 - BAYONETTA - 开发进程：掌控游戏开发的全局</title>
      <link href="2022/11/13/20221113-bayonetta-schedule/"/>
      <url>2022/11/13/20221113-bayonetta-schedule/</url>
      
        <content type="html"><![CDATA[<h2 id="开发进程：掌控游戏开发的全局"><a href="#开发进程：掌控游戏开发的全局" class="headerlink" title="开发进程：掌控游戏开发的全局"></a>开发进程：掌控游戏开发的全局</h2><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a>要点总结</h3><ul><li><p>品质管理和方法</p><ol><li>制作企划书时就可以确认游戏很有趣是最理想情况。但不是所有导演都具备这样的能力。在制作游戏过程中，不断追加有趣的要素也不失为一种方法</li><li>游戏创作者可以在平时多思考有趣的要素，增加脑中存货</li></ol></li><li><p>早期测试版</p><ol><li>游戏制作流程：企划立案 - 早期测试版 - 测试版 - 量产/正式开发 - 完成</li><li>早期测试版：为了看出企划书中基础玩法是否有趣；<br> 测试版：查看游戏中最小的单位循环</li><li>游戏中每个任务为最小循环，将它们重叠形成大循环，游戏就是各种循环的集合</li><li>在测试版完成前创作者可以推翻重做，进入正式开发后，则需要充实游戏内容</li><li>游戏导演需要为团队创造良好气氛，调动成员制作情绪</li></ol></li><li><p>测试版</p><ol><li>游戏导演认为理想情况：在提案阶段制定详细计划，可以不走弯路，不会浪费时间</li><li>带着自己的感觉和信念反复试错</li><li>BAYONETTA 为白金工作室成立后第一部游戏，比起制作日程，更重视确保品质</li><li>作为游戏创作者，应该专注于眼前事物及近期目标</li></ol></li></ul><h3 id="游戏制作的品质管理和方法"><a href="#游戏制作的品质管理和方法" class="headerlink" title="游戏制作的品质管理和方法"></a>游戏制作的品质管理和方法</h3><ul><li><p>BAYONETTA 制作时间不到三年</p></li><li><p>理想情况是在企划中就写入有趣要素</p></li><li><p>实际上</p><ul><li>虽然在企划中写了<code>高速动作</code>的主题，也写了<code>魔女时间</code>什么情况下可以发动，但仍觉得缺点味道</li><li>又加入了<code>魔女漫步</code>来强化在更华丽环境中战斗的表现力 </li><li>又加入了<code>高潮场景</code></li></ul></li><li><p>如果没有达到导演觉得有趣的程度，最终成型时可能也很难有趣</p></li><li><p>创意就像发明，需多思考增加存货</p></li></ul><h3 id="导演找到手感的瞬间-是否与团队一致"><a href="#导演找到手感的瞬间-是否与团队一致" class="headerlink" title="导演找到手感的瞬间 是否与团队一致"></a>导演找到手感的瞬间 是否与团队一致</h3><blockquote><p>导演觉得有趣时，团队也有同样的想法</p></blockquote><h3 id="关于游戏开发进程"><a href="#关于游戏开发进程" class="headerlink" title="关于游戏开发进程"></a>关于游戏开发进程</h3><ul><li>早期测试版<ul><li>可以看出基础玩法是否有趣</li></ul></li><li>测试版<ul><li>看到游戏中最小的单位循环<ul><li>游戏是由多个这样的循环以多重构造形式组合成的</li></ul></li><li>试做阶段，检验最小的循环是否有趣<ul><li>觉得不行可以推翻重做</li></ul></li></ul></li><li>量产/正式开发<ul><li>不断制作并增加游戏内容的过程</li></ul></li><li>β<ul><li>完成前，要把整体游戏玩一遍</li><li>游戏整体相连，除了制作者以外的人也能了解商品全貌</li><li>如果是自制游戏并想发售 不到这个版本可能没法获得协助销售的人的理解和帮助</li></ul></li><li>制作完成阶段</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134216.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134244.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134309.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134327.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134400.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134445.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134527.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134557.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134615.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134715.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134756.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134838.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134858.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113134950.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113135008.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113135037.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113135057.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221113135117.png"></p><h3 id="关于早期测试版"><a href="#关于早期测试版" class="headerlink" title="关于早期测试版"></a>关于早期测试版</h3><ul><li><p>游戏导演所关注的点</p><ul><li>第一目标 - 做出有趣的游戏</li><li>要建立一个有积极氛围的团队<ul><li>让工作人员对作品方向有相同想法</li><li>对制作目标 大家能相互提出恰当意见</li></ul></li></ul></li><li><p>企划中的详尽程度该如何掌控</p><ul><li>有的导演能构建十分详尽的设计文档</li><li>神谷英树虽不是这样，但也在企划中定下了 pillar<ul><li>高速脑髓直连型的爽快动作战斗</li><li>自定义手与脚的武器</li></ul></li></ul></li></ul><blockquote><p>将主干内容分享给团队并保证企划书中有主干</p></blockquote><ul><li>制作 <code>早期测试版</code> 对于动作游戏的好处<ul><li>导演最起码的工作是要做出让人觉得有趣的核心</li><li>导演要为团队创造良好氛围</li></ul></li></ul><h3 id="游戏导演对测试版的理解"><a href="#游戏导演对测试版的理解" class="headerlink" title="游戏导演对测试版的理解"></a>游戏导演对测试版的理解</h3><ul><li><p>测试版是实现企划内容 还是会往里增加更多的新内容</p><ul><li>理想情况是在提案阶段就制定详尽计划</li><li>实际确实会反复试错 <ul><li>根据自己的感觉和信念测试</li></ul></li></ul></li><li><p>在测试版完成时，导演是否可以看清整体概况</p><ul><li>因为 BAYONETTA 是白金工作室第一部作品 所以更专注确保品质<ul><li>所以相比于制作周期，更关注如何让游戏更有趣，以保证其商业竞争力，来获取商量周期的交涉余地</li></ul></li></ul></li></ul><h3 id="制作人对于测试版及开发进程的看法"><a href="#制作人对于测试版及开发进程的看法" class="headerlink" title="制作人对于测试版及开发进程的看法"></a>制作人对于测试版及开发进程的看法</h3><ul><li><p>实际开发过程可能有很多情况</p></li><li><p>游戏创作者应该要专注于近/中期目标</p><ul><li>也就是不要寻求全局最优，先优先寻求局部最优</li></ul></li><li><p>创造性的工作是不可能像工业制品一样流水线生产的</p></li><li><p>流程的制定并不会带来负面影响，但不建议被束缚于此</p></li><li><p>制作人是要对制作周期负责的，要预想好最终判断的时机，但不意味着必须完全遵守，重要的是如何调整，从而整体赶上日程</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221106 - Presentation Are All About Speed</title>
      <link href="2022/11/06/20221106-presentation-are-all-about-speed/"/>
      <url>2022/11/06/20221106-presentation-are-all-about-speed/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习创意表达！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/nkNSNGJvFXk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="A02-Presentation-Are-All-About-Speed"><a href="#A02-Presentation-Are-All-About-Speed" class="headerlink" title="A02 - Presentation Are All About Speed!"></a>A02 - Presentation Are All About Speed!</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106144403.png"></p><ul><li><p>这适用于任何创意工作者需要进行创意传达的时候</p><ul><li>直击要点 - memorable<ul><li>忘掉辩解（justifications）或是任何调整（alternatives）</li></ul></li><li>使用图形，且保持简洁 - snappy</li><li>迅速 但不一定等同于短 - quick<ul><li>尽可能利用时间，让事情一直向前推进</li></ul></li></ul></li><li><p>总结</p><ul><li>quick</li><li>snappy</li><li>memorable</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221106 - BAYONETTA - 优秀关卡设计可以提高玩家游戏体验</title>
      <link href="2022/11/06/20221106-bayonetta-level/"/>
      <url>2022/11/06/20221106-bayonetta-level/</url>
      
        <content type="html"><![CDATA[<h2 id="优秀的关卡设计可以提高玩家游戏体验"><a href="#优秀的关卡设计可以提高玩家游戏体验" class="headerlink" title="优秀的关卡设计可以提高玩家游戏体验"></a>优秀的关卡设计可以提高玩家游戏体验</h2><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a>要点总结</h3><ul><li><p>BAYONETTA 关卡设计</p><ol><li>关卡设计准则：让玩家享受动作战斗的乐趣</li><li>神谷流游戏制作：边享受动作快感，边解谜突破关卡</li><li>BAYONETTA 的目的是要反复通关，在游玩过程中提高玩家操作技巧，体验更爽快的游戏世界</li></ol></li><li><p>关卡设计与剧情关联性</p><ol><li>关卡设计也会涉及剧本创作。敌人、机关、剧情的展开都要调整在最佳的时机出现</li><li>导演负责剧本创作的话，更方便根据关卡设计的实际情况调整剧情及演出效果</li></ol></li><li><p>高潮感与高潮情境</p><ol><li>BAYONETTA 游戏中非常重视给玩家带来的 <code>高潮感</code>。<code>高潮情境</code> 要放在每个关卡的关键位置</li><li><code>高潮情境</code> 需要强大敌人和有危机感的场景舞台</li><li>神谷流游戏制作：制作 <code>高潮情境</code> 的步骤为 导演罗列情境 - 挑选有趣部分 - 绘制分镜 - 与成员讨论制作</li></ol></li><li><p>关于加入别的类型的游戏元素</p><ol><li>制作游戏过程中，制作者需要享受这份制作的快乐，才能提升游戏质量</li><li>同时要相信自己的感觉，可以根据自己的经历适当地在游戏中加入不同玩法不同类型的小游戏</li></ol></li><li><p>关卡设计重要性</p><ul><li>稻叶敦志建议<ol><li>利用各种开发工具不断试错调整就是提升关卡设计制作的能力的捷径</li><li>关卡设计中不要出现无意义的内容</li></ol></li><li>神谷英树经验<ol><li>不要只在开发工具上尝试，要通过关卡设计考虑到游戏中某一关卡的视觉画面、机关等多方面整体设计，以此保证关卡整体质量</li><li>作为游戏导演，要掌握游戏开发全过程，然后在其中找出自己擅长的领域</li></ol></li></ul></li></ul><h3 id="游戏的关卡设计定义"><a href="#游戏的关卡设计定义" class="headerlink" title="游戏的关卡设计定义"></a>游戏的关卡设计定义</h3><blockquote><p>关卡设计：关卡中敌人、机关、地形等的整体设定</p></blockquote><h3 id="关于-BAYONETTA-的关卡设计"><a href="#关于-BAYONETTA-的关卡设计" class="headerlink" title="关于 BAYONETTA 的关卡设计"></a>关于 BAYONETTA 的关卡设计</h3><ul><li>BAYONETTA 设计准则<ul><li>为了让玩家享受动作战斗的乐趣</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106131310.png"></p><ul><li><p>希望玩家能边享受动作快感 边解密</p></li><li><p>因为 BAYONETTA 是想让玩家多周目游玩的游戏 所以在设计时就考虑到要充分利用动作要素</p><ul><li>让玩家在反复游玩中提高技巧 更顺利地解谜</li><li>也要让玩家在重复解谜中也可以有新的乐趣产生</li></ul></li></ul><h3 id="关卡设计与剧情关联性"><a href="#关卡设计与剧情关联性" class="headerlink" title="关卡设计与剧情关联性"></a>关卡设计与剧情关联性</h3><blockquote><p>需要展开剧情的设计需要尽早确定</p></blockquote><ul><li>导演自己负责剧情设计 vs 剧作家负责剧情设计<ul><li>导演自己负责<ul><li>更容易把控剧情和关卡结合性，根据变化调整剧情及演出效果  </li><li>若是出现开发实现困难，更容易进行调整</li></ul></li><li>剧作家负责<ul><li>如果涉及调整，需要导演进行详尽沟通</li><li>若碰上开发实现困难，较难进行调整</li></ul></li></ul></li></ul><h3 id="如何设计出-“高潮感”"><a href="#如何设计出-“高潮感”" class="headerlink" title="如何设计出 “高潮感”"></a>如何设计出 “高潮感”</h3><ul><li><p>高潮感</p><ul><li>定义<ul><li>为了给玩家华丽的游戏体验</li></ul></li><li>不是单纯想让玩家进行动作体验</li><li>也想做到包括进行动作战斗的情景在内，游戏整体给玩家一种华丽壮阔的体验</li></ul></li><li><p>高潮感</p><ul><li>动作游戏的基础<ul><li>战斗舞台<ul><li>在其中加入有表演性的元素<ul><li>不只是单纯与敌人战斗</li><li>整个情境都有很强烈的高潮感</li><li>例子<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134031.png" alt="序章钟楼掉落战斗场景"></li></ul></li></ul></li></ul></li></ul></li><li><p>高潮情境 </p><ul><li>设计在关卡的关键部分 </li><li>怎么融合进关卡设计<ul><li>在思考关卡整体构成同时 考虑如何加入高潮情境</li><li>玩家应该在本就危机（指所处情境）的情况下面对异常强大的 BOSS 从而让玩家兴奋</li></ul></li><li>图解<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134322.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134412.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134438.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134502.png">  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134537.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134606.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134629.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134654.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106134724.png"></li></ul></li><li><p>高潮情境在工序中的位置</p><ul><li>基本是事后确定的<ul><li>测试版时并没有<ul><li>箱庭环境中的战斗</li></ul></li><li>打磨时 发现缺少刺激性 这时还是较初期的版本 所以考虑是否要从根本上进行调整</li><li>在高潮情境之前想到的是 <code>魔女漫步</code><ul><li>即玩家可以在不同墙面上移动</li><li>后来觉得这还不够 才诞生了高潮情境</li><li>此时关卡设计雏形已经完成</li></ul></li><li>所以考虑将 BOSS 站设置为高潮情境<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135544.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135603.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135630.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135653.png">  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135709.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135726.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135749.png">  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135803.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135818.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135832.png"><br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106135853.png"></li></ul></li><li>最好在开始时就能在策划案中体现 然后根据策划案推进<ul><li>情境罗列-挑选-分镜-讨论制作</li></ul></li></ul></li></ul><h3 id="加入与-BAYONETTA-不太一样的游戏性的理由"><a href="#加入与-BAYONETTA-不太一样的游戏性的理由" class="headerlink" title="加入与 BAYONETTA 不太一样的游戏性的理由"></a>加入与 BAYONETTA 不太一样的游戏性的理由</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221106140348.png" alt="BAYONETTA 中的其他游戏类型元素"></p><ul><li>作为娱乐内容制作者的唯一目的就是想给玩家带来更多刺激性<ul><li>还是和之前所说的 <code>自己觉得有趣</code> 的感觉很重要</li><li>小时候玩的 FC 游戏中也有不少这样的风格 —— 想给玩家类似的惊喜<ul><li>当时一盘游戏卡带很贵 能在一个卡带中玩到多种游戏类型觉得很值得</li></ul></li></ul></li></ul><blockquote><p>制作者享受制作过程，才会产生高品质的游戏</p></blockquote><h3 id="关卡设计重要性"><a href="#关卡设计重要性" class="headerlink" title="关卡设计重要性"></a>关卡设计重要性</h3><blockquote><p>需要在开发工具上不断测试调整</p></blockquote><ul><li><p>需要注意的点</p><ul><li><p>关卡设计中没有无意义的内容</p><ul><li>无论是什么游戏的关卡设计，都不会有无意义的部分</li><li>一个像素点，单纯走动跑动的空间也是有意义的</li><li>不能抱着一个差不多的心态来做关卡设计</li><li>要在设计过程中不断为场景赋予意义 用开发工具试错</li><li>也不一定是开发工具内试错 也可以充分利用纸面原型等</li></ul></li><li><p>动手尝试是提升关卡设计能力最好的方式</p></li><li><p>最好不要只在 WHITE BOX 中做尝试</p><ul><li>即开发工具中</li><li>关卡整体不仅包括关卡本身，也包括视觉画面设计，机关设计等</li><li>可以将关卡分块分区来制作<ul><li>可以负担起关卡整体的责任</li><li>也能代入制作者对关卡的感情</li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221030 - Kirby&#39;s Adventure</title>
      <link href="2022/10/30/20221030-kirby-adventure/"/>
      <url>2022/10/30/20221030-kirby-adventure/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解 Kirby’s Adventure 诞生的故事！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/khJa2vIW0xY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="N02-Kirby’s-Adventure"><a href="#N02-Kirby’s-Adventure" class="headerlink" title="N02 - Kirby’s Adventure"></a>N02 - Kirby’s Adventure</h2><ul><li><p>Kirby’s Adventure 也是卡比系列的第二部作品</p><ul><li>其中也引入了卡比的复制能力</li></ul></li><li><p>初代卡比做完之际 公司濒临破产</p><ul><li>正是这个时期 公司要求樱井政博为 NES 平台制作 Kirby’s Dream Land<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030152305.png"></li><li>1992 年开始规划<ul><li>初代任天堂机器已经发售了一段时间<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030152409.png"></li><li>为什么不为 SNES 制作呢？<ul><li>为了能迅速制作完并且立马发售</li><li>如果在 SNES 上制作 会耗费更多的时间来设定开发环境</li></ul></li><li>虽然樱井政博认为新的卡比特性能在 SNES 上发挥得好 但却不一定能在旧的 NES 上表现亮眼</li><li>当时 NES 市场趋于成熟 樱井政博猜想已经不会有太多刚刚接触这个系统的玩家了 由此带来了一个独特挑战 —— 如何为新手玩家和熟练玩家制作一个他们都能享受乐趣的游戏<ul><li>最终提出了卡比的 复制能力</li></ul></li></ul></li></ul></li><li><p>卡比的复制能力</p><ul><li>在原本的 “利用敌人” 的想法上更进一步<ul><li>玩家不使用复杂机制的情况下 还是可以通过 吸入-吐出 敌人来通关</li><li>而熟手玩家可以通过复制能力来扩展他们的游戏体验</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030153059.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030153120.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030153140.png"></p><ul><li><p>复制能力也明显增强了卡比的角色特性</p><ul><li>变化过程充满乐趣</li><li>也让玩家对于所碰到的新敌人充满期待</li></ul></li><li><p>题外话</p><ul><li>GAME BOY 和 NES 的像素分辨率不同<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030153355.png"></li><li>卡比自己在两个游戏中都有相同的像素数<ul><li>所以在更大的 NES 显示器上 卡比看起来更小了<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030153456.png"></li><li>长宽比的不同使得它看起来也更宽了<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030153548.png"></li><li>因为屏幕变大了，它的飞行能力也变得比以往更强了<ul><li>甚至有可能飞过所有障碍</li><li>所以考虑过要不要完全移除飞行能力 但最终没有这么做<ul><li>通过减慢飞行速度做了平衡</li><li>取而代之的是底部的信息栏<ul><li>不仅限制了上下空间</li><li>让角色看起来更大</li><li>也让玩家能通过有趣图片一撇每一个复制能力<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030153930.png"></li></ul></li></ul></li></ul></li><li>也让 BOSS 战在一个屏幕中发生</li></ul></li></ul></li><li><p>此外 值得一提的是三按钮的 minigame</p><ul><li>这对于新手玩家也算是额外的乐趣点</li><li>提供乐趣的同时 不需要复杂的操作</li><li>因为入口都设立在世界地图中 所以如果玩家不感兴趣也可以直接跳过<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030154135.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030154301.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030154326.png"></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>别的不说 增加的 卡比复制能力极大凸显了卡比的角色特性，也让其变得更加受欢迎，也对后续作品产生了影响</li><li>对于樱井政博自己而言，也很高兴能为 NES 制作一款游戏</li></ul><blockquote><blockquote><p>这集看完后更加感觉游戏的制作是与时代紧密相关的！</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221030 - BAYONETTA - 打造玩家喜爱的游戏系统及难易度</title>
      <link href="2022/10/30/20221030-bayonetta-difficulty/"/>
      <url>2022/10/30/20221030-bayonetta-difficulty/</url>
      
        <content type="html"><![CDATA[<h2 id="打造玩家喜爱的游戏系统及难易度"><a href="#打造玩家喜爱的游戏系统及难易度" class="headerlink" title="打造玩家喜爱的游戏系统及难易度"></a>打造玩家喜爱的游戏系统及难易度</h2><h3 id="要点总结"><a href="#要点总结" class="headerlink" title="要点总结"></a>要点总结</h3><ul><li><p>关于任务制</p><ol><li>在广阔舞台不停探索、战斗，会影响游戏节奏，对策就是引入任务制</li><li>神谷流游戏制作：为了提高玩家游玩的乐趣，调动情绪，增加主动性，在每个任务都设有评价系统</li><li>制作者要边思考玩家游玩的感受，边玩自己的游戏。在玩游戏的过程中发现问题并修改完善</li></ol></li><li><p>评价系统</p><ol><li>制作者应在游戏中给予玩家反馈提高玩家体验，可以通过奖励机制和评价系统来实现</li><li>神谷流游戏制作：作为玩家给自己定目标与规则，制作游戏时将玩家的心态运用于系统设定。玩家体验对游戏制作有很大帮助，制作者首先要玩游戏</li></ol></li><li><p>难度设定</p><ol><li>开发团队容易沉浸于游戏中，导致难度调整偏离玩家水平。<br> 神谷流游戏制作：适当难度可增加游戏乐趣<br> 将适合开发者难度设为普通模式<br> 在此基础上加入简单等其他模式</li><li>神谷流游戏制作：作为游戏创作者，希望所有玩家都能体验到游戏乐趣<br> 新人玩家通过全自动简单模式，可以使出高级玩家的技巧，享受同样的快感</li></ol></li><li><p>难易度调整与平衡</p><ol><li>一般游戏制作：<br> 在制作中期开始提升游戏质量，确定技能，调整敌人<br> 神谷流游戏制作：<br> 将角色性能提到极限后再制作敌人<br> 在基础招式基础上提升玩家角色技能的同时提高敌人对应技能 形成平衡的敌我攻防</li><li>现在的游戏系统及难度也体现了制作者的特色</li><li>游戏难度关系到整体制作，制作者不应过分迎合玩家，要相信自己玩得最舒服的难度就是最佳</li><li>神谷建议：在游戏开发末期制定游戏评价系统</li><li>稻叶建议：制作者应设计不让玩家看穿并厌烦的游戏难度，并将不同难度的设定放到创作末期制作</li></ol></li></ul><h3 id="BAYONETTA-采用任务制的原因"><a href="#BAYONETTA-采用任务制的原因" class="headerlink" title="BAYONETTA 采用任务制的原因"></a>BAYONETTA 采用任务制的原因</h3><ul><li>BAYONETTA 整体采用任务制<ul><li>任务制其实开始于《鬼泣》</li><li>《鬼泣》 原本是作为 《生化危机》 系列诞生的企划</li></ul></li></ul><blockquote><p>探索区域过大<br>动作戏过多<br>会打乱游戏节奏</p></blockquote><ul><li>BAYONETTA 最开始就设定为任务制<ul><li>比起四处探索</li><li>更侧重线性地与敌人进行战斗 解开机关 最后到达目的地</li></ul></li></ul><h3 id="采用任务评价系统的原因"><a href="#采用任务评价系统的原因" class="headerlink" title="采用任务评价系统的原因"></a>采用任务评价系统的原因</h3><blockquote><p>用于提高玩家的通关动力</p></blockquote><ul><li>制作者在游玩过程中也应该不断思考<ul><li>怎么样让玩家玩起来更好玩</li><li>思考玩家感受</li></ul></li></ul><h3 id="只有游戏平台评价系统是不够的"><a href="#只有游戏平台评价系统是不够的" class="headerlink" title="只有游戏平台评价系统是不够的"></a>只有游戏平台评价系统是不够的</h3><ul><li><p>游戏平台评价系统</p><ul><li>如 XBOX 评价系统</li><li>PS 奖杯系统</li></ul></li><li><p>可以将玩家想象中的自我满足变为现实</p><ul><li>即无伤通关等</li></ul></li><li><p>平台奖励只是一些游戏外的奖励</p></li><li><p>游戏内的奖励系统可以给予一些游戏内奖励以激励玩家 </p><ul><li>通过达成目标，获取魔女的血泪，解锁一些隐藏要素<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030142345.png"></li></ul></li></ul><h3 id="评价系统的制作方法"><a href="#评价系统的制作方法" class="headerlink" title="评价系统的制作方法"></a>评价系统的制作方法</h3><ul><li>着手点<ul><li>从自己作为玩家时的心愿和自我满足出发，设计相应的评价标准</li><li>对玩家的努力进行评价</li></ul></li></ul><h3 id="对动作游戏难易度的思考"><a href="#对动作游戏难易度的思考" class="headerlink" title="对动作游戏难易度的思考"></a>对动作游戏难易度的思考</h3><ul><li><p>白金工作室的游戏被评价为有一定的难度</p></li><li><p>开发团队在开发过程中由于过于熟悉很可能会使得制作出的难度偏高</p></li><li><p>一定的难度才 可以实现攻略的快感</p></li></ul><blockquote><p>克服困难获得成功也是游戏乐趣的真谛</p></blockquote><blockquote><p> 适合开发者的难度会被设定为普通模式<br> 对于初次接触的玩家的恰到好处的难度是简单模式<br> 不擅长动作游戏的新手玩家也想要体会高手玩家才能做出的华丽连招，所以设计了全自动简单模式</p></blockquote><h3 id="全自动简单模式的执著"><a href="#全自动简单模式的执著" class="headerlink" title="全自动简单模式的执著"></a>全自动简单模式的执著</h3><ul><li>玩家只要一直按键，系统就会自动判定，出各种招式</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030143737.png"></p><ul><li>不擅长动作游戏的新手玩家<ul><li>不仅利于他们打倒敌人</li><li>也能让他们享受华丽连招的快感</li></ul></li></ul><h3 id="如何调整动作游戏难易度"><a href="#如何调整动作游戏难易度" class="headerlink" title="如何调整动作游戏难易度"></a>如何调整动作游戏难易度</h3><blockquote><p>制作中期，提升游戏质量，调整技能和敌人</p></blockquote><blockquote><p>前面提到过，先将角色性能提到极限，再制作敌人 </p></blockquote><ul><li><p>先让玩家接触基础内容，而后逐渐加入新机制</p><ul><li>分阶段学会操作</li></ul></li><li><p>不要上来就直接开放全部的操作</p><ul><li>从基础逐步解锁新动作与技能</li><li>把后期技能放到游戏商店中 让玩家逐渐购买解锁</li></ul></li><li><p>如果有想要加入的新动作或机制 但会使得前面的平衡调整付之一炬 如何抉择</p><ul><li>尽量将评价系统的主轴在开发末期进行</li></ul></li><li><p>原地复活与非原地复活</p><ul><li>没有优劣 需要结合具体游戏内容和机制</li><li>游戏系统和难度也体现了制作者的特色</li></ul></li></ul><h3 id="关于设定游戏难易度的建议"><a href="#关于设定游戏难易度的建议" class="headerlink" title="关于设定游戏难易度的建议"></a>关于设定游戏难易度的建议</h3><blockquote><p>游戏难度关系到整体制作</p></blockquote><ul><li>要相信自己对于游戏难度的感觉 要把自己的游戏玩透 自己玩得舒服的难度最佳</li><li>部分难度相关的内容可以让别的玩家试玩 根据反馈 迎合玩家意见调整<ul><li>敌人强度</li><li>机关设计</li><li>敌人是否容易被攻略</li></ul></li><li>但过于迎合玩家也会影响游戏趣味性 这时候还是要坚信自己的感觉</li></ul><blockquote><p>注意：千万不要让玩家感到不快</p><blockquote><p>看游戏类别，魂类一定程度上反过来利用了这点</p></blockquote></blockquote><blockquote><p>设计不让玩家看穿的游戏难度<br>不同难度的设定可以放在制作末期，先按一个难度把自己觉得有趣的游戏做出来</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030145743.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030145817.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030145851.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030145932.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221030145955.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221016 - Draw the Light Not the Asset</title>
      <link href="2022/10/16/20221016-draw-the-light-not-the-asset/"/>
      <url>2022/10/16/20221016-draw-the-light-not-the-asset/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解美术素材制作！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/FuAtKjEuck8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="F01-Draw-the-Light-Not-the-Asset"><a href="#F01-Draw-the-Light-Not-the-Asset" class="headerlink" title="F01 - Draw the Light Not the Asset"></a>F01 - Draw the Light Not the Asset</h2><h3 id="Draw-the-light-not-the-asset"><a href="#Draw-the-light-not-the-asset" class="headerlink" title="Draw the light, not the asset"></a>Draw the light, not the asset</h3><blockquote><p>Don’t draw the asset, draw the light it reflects.</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131112.png"></p><ul><li>我们看见的不是物体自己的光，而是它所反射出的光</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131215.png"></p><ul><li>不要在 texture 创作完后就停下来</li><li>如果有富足的算力 一般会加入 shader 和 Post-processing<ul><li>但这并不是通常情况</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131418.png"></p><ul><li>一般而言要尽可能多运用简单技术<ul><li>这样在相同算力情况下能绘制更多物体</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131518.png" alt="绘制了多次的树丛 - 不那么理想"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131608.png" alt="加上光 - 创造对比"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131705.png" alt="变换饱和度"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131800.png" alt="调节氛围 - 也能创造景深"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016131908.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>如果要创造一棵树，不要仅仅只是创造树本身</li><li>也要考虑环境，表现该 asset 在环境中的光的反射</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221016 - BAYONETTA -   好音乐才是真正的“视听盛宴”</title>
      <link href="2022/10/16/20221016-bayonetta-audio/"/>
      <url>2022/10/16/20221016-bayonetta-audio/</url>
      
        <content type="html"><![CDATA[<h2 id="好音乐才是真正的-“视听盛宴”"><a href="#好音乐才是真正的-“视听盛宴”" class="headerlink" title="好音乐才是真正的 “视听盛宴”"></a>好音乐才是真正的 “视听盛宴”</h2><ul><li><p>游戏配乐的制作方法</p><ol><li>游戏中配乐大致分类<ol><li>游戏流程音乐<ul><li>关卡音乐</li><li>BOSS 战斗音乐</li></ul></li><li>剧情展开音乐<ul><li>表现情感及氛围的音乐</li></ul></li></ol></li><li>游戏不需要全部配音乐，要依据场景加入合适的音乐音效<ul><li>游戏配乐的目的是为了给玩家最好的感官刺激</li></ul></li><li>两种音乐制作模式<ol><li>作曲家根据关卡和剧本雏形做出音乐，与导演探讨并调整修改</li><li>导演提出印象曲，由作曲家以此为基准创作符合导演想法的乐曲</li></ol></li></ol></li><li><p>BAYONETTA 中的音乐</p><ol><li>游戏配乐的意义是把控玩家情绪</li><li>BAYONETTA 配乐以爵士乐为主，加入女声、和声，体现出女性优雅的音乐</li><li>BAYONETTA 代表歌曲<ul><li>BAYONETTA 主题曲</li><li>《Fly Me to the Moon》 原曲</li><li>《Fly Me to the Moon》改编曲</li></ul></li><li>神谷流游戏音乐制作：<ul><li>乐曲用在令人印象深刻的开篇</li><li>并将其旋律用在其他配乐中</li><li>用该曲作为主旋律，出现在游戏全篇配乐中</li></ul></li></ol></li><li><p>制作人对游戏音乐的要求</p><ol><li>根据 BAYONETTA 世界观设定，音效要在现实基础上加入能体现魔女魔力的要素<ul><li>制作音效时，要注意体现出游戏世界观</li></ul></li><li>制作人要同时站在出品方和只做这角度思考音乐音效制作</li></ol></li></ul><h3 id="游戏配乐的制作方法"><a href="#游戏配乐的制作方法" class="headerlink" title="游戏配乐的制作方法"></a>游戏配乐的制作方法</h3><h4 id="游戏音乐"><a href="#游戏音乐" class="headerlink" title="游戏音乐"></a>游戏音乐</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016120858.png"></p><ul><li>确定好游戏推进形式、以章节形式来设计</li><li>两种类型的游戏音乐<ol><li>和游戏流程相关<ul><li>关卡音乐</li><li>BOSS 战斗曲</li></ul></li><li>和剧情展开相关<ul><li>表现情感</li><li>氛围</li></ul></li></ol></li><li>先从整体把握，将需要音乐的地方整理出来</li><li>单独考虑的情况<ul><li>同样的悲伤主题 程度和种类也不尽相同 所以有可能音乐和内容不够契合</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221016121430.png"></p><ul><li>《生化危机》系列中有时候会突然出现音乐停止的空白期<ul><li>是为了激起玩家的不安</li><li>突出表现场景</li></ul></li></ul><blockquote><p>配乐是为了给玩家最好的感官刺激</p></blockquote><h4 id="音乐制作过程"><a href="#音乐制作过程" class="headerlink" title="音乐制作过程"></a>音乐制作过程</h4><ul><li><p>先要有关卡和剧本雏形</p></li><li><p>把上述内容交给作曲家后与其探讨所需配乐</p></li><li><p>制作形式</p><ol><li>反复修改<ul><li>先让作曲老师尝试创作 - 不需要做得非常精细<ul><li>大概的和弦+曲调和节奏就可</li></ul></li><li>之后导演提出改动 反复调整</li></ul></li><li>导演先提出参考曲<ul><li>好处 - 接近导演印象</li><li>坏处 - 影响作曲家创作</li></ul></li></ol></li></ul><h3 id="关于-BAYONETTA-的音乐制作"><a href="#关于-BAYONETTA-的音乐制作" class="headerlink" title="关于 BAYONETTA 的音乐制作"></a>关于 BAYONETTA 的音乐制作</h3><blockquote><p>配乐要把控玩家情绪</p></blockquote><ul><li>动作游戏中和敌人战斗时需要激发斗志的音乐</li><li>女性主人公的游戏整体特征需要在音乐要素中体现出来</li></ul><blockquote><p>可以将现有音乐放到场景中测试是否符合游戏氛围</p></blockquote><ul><li><p>BAYONETTA 中的音乐元素 - 优雅</p><ul><li><strong>爵士乐</strong></li><li><strong>女声</strong></li><li>和声</li></ul></li><li><p>BAYONETTA 音乐目的</p><ul><li>不仅强调枪击要素及伤害敌人的充满暴力感的音乐</li><li>且带有女性要素 表现出以流畅的仿佛舞蹈一样的动作打倒敌人的音乐</li></ul></li></ul><h3 id="BAYONETTA-中的音乐"><a href="#BAYONETTA-中的音乐" class="headerlink" title="BAYONETTA 中的音乐"></a>BAYONETTA 中的音乐</h3><ul><li><p>为了表现女性特色 所以加入了人声</p><ul><li>更好地表现氛围 </li></ul></li><li><p>三首女性歌手演唱的歌曲</p><ul><li>主题曲 - 为 BAYONETTA 做的</li><li>以 《Fly Me to the Moon》 为原型<ul><li>一首原曲直接用在了游戏中</li><li>一首改编成 BAYONETTA 的战斗风格用于游戏中 </li></ul></li></ul></li><li><p>为什么 fly me to the moon</p><ul><li>能更好地强调突出世界观<ul><li>BAYONETTA 是魔女</li><li>背景设定上以月亮的力量来使用魔女能力</li></ul></li></ul></li><li><p>《One Of A Kind》</p><ul><li>特征<ul><li>有参考原型<ul><li>开篇高潮场景</li><li>很早就详细创作</li></ul></li><li>有特点的旋律<ul><li>在开篇的代表性画面中使用 给玩家带来深刻印象</li><li>以此旋律为原型 作为游戏中的其他画面的配乐主旋律</li><li>从而做出让人留下深刻印象的旋律 用在全篇的配乐中</li></ul></li></ul></li></ul></li></ul><h3 id="关于游戏的音效"><a href="#关于游戏的音效" class="headerlink" title="关于游戏的音效"></a>关于游戏的音效</h3><ul><li><p>有很多类型</p><ul><li>《红侠乔伊》<ul><li>画风是流行文化风格</li><li>所以用了很多所谓“游戏音”</li></ul></li><li>《BAYONETTA》<ul><li>偏写实<ul><li>枪声也需要以实际枪声为基础进行创作</li></ul></li><li>但也要考虑魔女的魔力要素<ul><li>所以做成了稍显科幻设定的声音</li></ul></li></ul></li></ul></li><li><p>重要的是</p><ul><li>将角色设定体现出来</li></ul></li></ul><blockquote><p>脱离现实的游戏常使用“游戏音”音效<br>非现实类游戏音效要适当 “夸张”</p></blockquote><h3 id="制作人对游戏音乐的要求"><a href="#制作人对游戏音乐的要求" class="headerlink" title="制作人对游戏音乐的要求"></a>制作人对游戏音乐的要求</h3><ul><li><p>制作之初确立游戏整体印象</p></li><li><p>最优先的是将想法具体化</p><ul><li>而不是卡在歌曲到底怎么做的问题上</li></ul></li><li><p>考虑角度</p><ul><li>商品角度 - 出品人</li><li>创作者<ul><li>在游戏中加入新类型新要素</li></ul></li></ul></li><li><p>有可能</p><ul><li>会基于某种类型制作<ul><li>即使用游戏发售时可能流行的音乐类型</li></ul></li></ul></li></ul><blockquote><p>最初全部使用现有音乐也可以</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221009 - Squeeze and Release</title>
      <link href="2022/10/09/20221009-squeeze-and-release/"/>
      <url>2022/10/09/20221009-squeeze-and-release/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解玩家的压力管理！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/TYh5SJb5gWk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="B02-Squeeze-and-Release"><a href="#B02-Squeeze-and-Release" class="headerlink" title="B02 - Squeeze and Release"></a>B02 - Squeeze and Release</h2><h3 id="stress-and-relief"><a href="#stress-and-relief" class="headerlink" title="stress and relief"></a>stress and relief</h3><ul><li><p>让游戏有趣的核心元素之一</p><ul><li>就是如何让你感到紧张 然后释放压力</li><li>如果能先紧紧“挤压”玩家 然后突然释放 能给玩家带来很大的满足</li></ul></li><li><p>flow</p><ul><li>apply stress</li><li>release the stress</li><li>prepare player for what’s next - reward the player<ul><li>比如更强力的技能</li><li>可以用于购买装备的货币</li><li>或者仅仅是让玩家继续推进<ul><li>但为玩家提供选项能让玩家更加满足</li></ul></li></ul></li></ul></li><li><p>不要仅仅只是模仿其他游戏在做的事情</p><ul><li>思考为什么他们那样做</li><li>这样才能让你自己做的东西更加有新意</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221009 - BAYONETTA -  凸显 BOSS 威猛的动作设计要素</title>
      <link href="2022/10/09/20221009-bayonetta-boss/"/>
      <url>2022/10/09/20221009-bayonetta-boss/</url>
      
        <content type="html"><![CDATA[<h2 id="凸显-BOSS-威猛的动作设计要素"><a href="#凸显-BOSS-威猛的动作设计要素" class="headerlink" title="凸显 BOSS 威猛的动作设计要素"></a>凸显 BOSS 威猛的动作设计要素</h2><ul><li><p>BOSS 敌人设计</p><ol><li>敌人强弱差应该按照世界观中背景设定的需求来做调整，适当的敌人强弱差可以增加游戏世界和理性</li><li>BOSS 可根据整合战斗场景以及玩家体验来设计<br>  不仅可以提高游戏难度<br>  还可以通过整体性乐趣可玩家特别的体验</li></ol></li><li><p>原型/测试版的重要性</p><ol><li>动作游戏制作过程中，原型极其重要。目的包括：<br> 与团队共享理念<br> 检测游戏是否有趣<br> 提高制作人员积极性</li><li>测试版分两种<ul><li>简单版<ul><li>给团队内部及专业制作人观看，共享设计理念</li></ul></li><li>完成度高版<ul><li>给公司经营者及客户观看</li><li>用于了解游戏整体印象 角色 世界观 动作等</li></ul></li></ul></li><li>神谷流动作游戏：先做出游戏标题画面，可传达作品基调，振奋人心</li><li>测试板必须优先制作出来</li></ol></li><li><p>制作原型的人数</p><ol><li>制作早期测试版至少需要：程序、动作模型、动画效果、音效</li><li>动作游戏音效的控制是带来打击感的关键之一</li></ol></li><li><p>制作人对动作游戏的感受</p><ol><li>游戏制作要有一个核心创意。这个核心创意需要有很强拓展性，因为这个创意将会伴随玩家度过一整个游玩体验</li><li>在拥有核心创意后，还需要能把其它拓展的创意与之相关联起来，创意不能是独立的</li></ol></li><li><p>给想做动作游戏的人的建议</p><ol><li>不要拘泥固有思想，坦率表达自己的感性与喜好。真是追求自己想要的游戏体验</li><li>动作游戏玩法不该脱离角色，结合角色特色的玩法才会带来独特游戏体验 </li><li>对其他游戏的模仿与改造是重要的起步方式，可以降低初期学习成本</li><li>改造虽然会有失败，但只要不断加入自己创意，在成功与失败中一定会慢慢理解到游戏本质</li></ol></li></ul><h3 id="BOSS-敌人要如何设计"><a href="#BOSS-敌人要如何设计" class="headerlink" title="BOSS 敌人要如何设计"></a>BOSS 敌人要如何设计</h3><ul><li><p>BAYONETTA 中的 BOSS 定义</p><ul><li>在剧情及关卡中 在重要场面出现的强敌</li><li>包含场景机关来攻略的敌人</li></ul></li><li><p>因为敌人是天使 所以应该很强大 </p><ul><li>所以在各个地方都设置了类似其他游戏中 BOSS 强度的 但在 BAYONETTA 中不算 BOSS 的敌人</li></ul></li></ul><blockquote><p>根据世界观强化了普通敌人</p></blockquote><ul><li>第一关的 BOSS - Fortitudo<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009104910.png"></li></ul><blockquote><p>BOSS 战要做整体设计<br>不仅是 BOSS 本身 还包括场景机关等</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009105038.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009105114.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009105146.png"></p><ul><li><p>注重的</p><ul><li>画面冲击力</li><li>与敌人的攻防战</li></ul></li><li><p>不仅是与 BOSS 的 1v1 战斗，也要让玩家有恢宏体验</p></li><li><p>以完善关卡整体体验为目标来制作游戏</p></li></ul><h3 id="早期测试版的必要性"><a href="#早期测试版的必要性" class="headerlink" title="早期测试版的必要性"></a>早期测试版的必要性</h3><h4 id="测试版的种类"><a href="#测试版的种类" class="headerlink" title="测试版的种类"></a>测试版的种类</h4><blockquote><p>两种测试版<br>简单的：内部共享理念<br>包装的：给外部说明</p></blockquote><h5 id="内部原型"><a href="#内部原型" class="headerlink" title="内部原型"></a>内部原型</h5><ul><li>为了让大家知道想法的原型 - 受众为制作团队内部<ul><li>用于体现游戏本质</li><li>目的<ul><li>与团队共享理念</li><li>提升团队积极性</li></ul></li></ul></li></ul><h5 id="外部原型"><a href="#外部原型" class="headerlink" title="外部原型"></a>外部原型</h5><ul><li>下一步会接触的测试版的受众 - 游戏投资者/发行商<ul><li>要求<ul><li>完成度更高</li></ul></li><li>目的<ul><li>了解游戏整体印象 世界观 角色设定 动作美感 支持的平台等</li></ul></li></ul></li></ul><h4 id="标题画面"><a href="#标题画面" class="headerlink" title="标题画面"></a>标题画面</h4><ul><li>把标题画面做出来也很重要<ul><li>让人能意识到接下来要制作的游戏的基调</li><li>也给人一种已经跨出了一大步的感觉</li></ul></li></ul><blockquote><p>标题画面能振奋人心，也可传达作品基调</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009110244.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009110304.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009110318.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009110346.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221009110357.png"></p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote><p>如果测试版无法挑起团队兴致，则视为失败<br>最原始的测试版最能体现游戏本质</p></blockquote><h3 id="测试版制作人数"><a href="#测试版制作人数" class="headerlink" title="测试版制作人数"></a>测试版制作人数</h3><ul><li>神谷英树的看法<ul><li>最低限度 4 人<ul><li>程序</li><li>动作模型</li><li>动画效果</li><li>音效<ul><li>有无音效天差地别</li><li>没有音效就感觉没打中一样</li></ul></li></ul></li></ul></li></ul><blockquote><p>动作游戏打击感的关键之一是音效</p></blockquote><h3 id="制作人对动作游戏的感受"><a href="#制作人对动作游戏的感受" class="headerlink" title="制作人对动作游戏的感受"></a>制作人对动作游戏的感受</h3><ul><li>看企划书时的评判标准<ul><li>新鲜且有趣的创意</li><li>看是否有发展性<ul><li>给人的刺激是否有不断增大的可能性</li><li>第一次玩要是就已经是刺激的巅峰 对于十几个小时的动作游戏而言会变为不可忍受的乏味</li><li>新创意不仅是支柱 也要将创意在开发过程中不断孵化 发展为新的进化</li></ul></li><li>创意间需要关联<ul><li>在一个场景中可以将所有的动作类要素全部表现</li><li>也要能将想到能做出的创意散落在游戏各处</li><li>最初有一个创意支柱 围绕支柱设计出有相互关联的要素</li></ul></li></ul></li></ul><blockquote><p>有拓展潜力的创意更重要<br>创意间需要关联起来</p></blockquote><h3 id="给想做动作游戏的人的建议"><a href="#给想做动作游戏的人的建议" class="headerlink" title="给想做动作游戏的人的建议"></a>给想做动作游戏的人的建议</h3><ul><li>神谷英树的建议<ul><li>坦率表现自己喜好，依照感觉做游戏<ul><li>某些意义上的无意义动作或角色行为（射击时偏头之类的） 会成为角色特性</li></ul></li><li>不仅追求玩法创作 更多思考这个角色该怎样做<ul><li>将对角色的思考加入到游戏制作思考中</li></ul></li></ul></li></ul><blockquote><p>不要脱离角色追求玩法<br>要代入角色思考玩法</p></blockquote><ul><li>制作人的建议<ul><li>推荐大家模仿和改造<ul><li>以玩家视角思考 - 如果能做到这样的话应该更有趣之类的/开挂</li><li>基于现有优秀的游戏系统，在此之上加入自己觉得好的创意</li><li>虽然 90%可能都会失败<ul><li>一般而言这样的要素没有被加入都会有其原因</li><li>但如果不自己去做是没法发现这个原因的</li><li>在他人基础上进行试错偶尔能出现合适方案<ul><li>此时再思考为什么这个没有失败 为什么会变得更有趣</li><li>思考该要素是如何和游戏系统融合的</li></ul></li></ul></li></ul></li></ul></li></ul><blockquote><p>在模仿中加入改造，理解游戏的本质</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221005 - Down with Lag!</title>
      <link href="2022/10/05/20221005-down-with-lag/"/>
      <url>2022/10/05/20221005-down-with-lag/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏延迟！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/gjoKKyskco4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="Down-with-Lag"><a href="#Down-with-Lag" class="headerlink" title="Down with Lag!"></a>Down with Lag!</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005141316.png"></p><h3 id="Player-Environment"><a href="#Player-Environment" class="headerlink" title="Player Environment"></a>Player Environment</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Oct-05-2022-14-20-19.gif"></p><p>这里指的延迟（lag）即按键输入后到角色实际做出反应之间的时间 </p><ul><li>如何发现延迟呢<ul><li>找到一个 responsive game 游戏<ul><li>即在你按下按钮后立马就能做出反应的游戏</li><li>一般 3d 游戏不是此类游戏的最好代表</li><li>可以就选 Kirby ！</li></ul></li><li>之后尝试按下跳跃键<ul><li>卡比在你按下按键的一瞬间就开始跳跃了吗</li><li>如果你感到了一些延迟 电视设定可能是罪魁祸首<ul><li>应该设定为 “低延迟模式/游戏模式”</li><li>并不是所有游戏都有这种设置 所以如果你经常玩游戏 记得调整！</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Oct-05-2022-14-26-53.gif"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Oct-05-2022-14-29-13.gif"></p><ul><li><p>有的时候也可能是声音有延迟</p><ul><li>即所谓音画不同步</li><li>如果使用的是家庭影院模式 可能会延迟听到击打声 </li><li>也可以通过采用低延迟模式来缓解该问题</li></ul></li><li><p>当然了 也有可能是设备兼容性问题</p></li><li><p>延迟可能以两个方式出现</p><ul><li>屏幕延迟（display latency）<ul><li>电视一般有不同的后处理效果 从而提高图像质量和清晰度</li><li>但通过使用游戏模式 可以消除那些后处理效果 来让游戏画面更快呈现</li></ul></li><li>反应时间延迟（response time）<ul><li>指的是 TV 需要花多长时间来对一个像素进行更改</li><li>现在一般没有这个问题了<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005143239.png"></li></ul></li></ul></li><li><p>如果是一名硬核游戏玩家 最好还是挑选具有游戏模式的电视！能很好地提升游戏体验</p><ul><li>如果没有相应模式 那就尝试找到提升画面的设定 然后将其关掉 也可以缓解延迟问题</li></ul></li><li><p>电视参数里面也会提到显示延迟 该数字越低越好</p><ul><li>如果是 60 fps 的视频输出 </li><li>16.67 ms 的延迟意味着一帧的延迟</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20221005 - BAYONETTA - 敌人设计的注意点</title>
      <link href="2022/10/05/20221005-bayonetta-enemy/"/>
      <url>2022/10/05/20221005-bayonetta-enemy/</url>
      
        <content type="html"><![CDATA[<h2 id="敌人设计的注意点"><a href="#敌人设计的注意点" class="headerlink" title="敌人设计的注意点"></a>敌人设计的注意点</h2><ul><li><p>普通敌人的设计</p><ol><li>神谷流动作游戏：<ul><li>小怪是动作游戏的颜面</li><li>要从最低等的敌人开始制作设计，且他们的设计最耗时耗力</li></ul></li><li>通过小怪的设计可拓展：<ul><li>主角战斗方式</li><li>玩家对应玩法</li><li>不同敌人的类型和存在形式</li></ul></li><li>游戏制作离不开大量测试，尝试不同方案才能得出最优结果</li><li>敌人设计需要达到的效果：玩家打倒敌人时充满了满足感与成就感</li></ol></li><li><p>关于敌人设计</p><ol><li>确定敌人种族后，要有固定要素增强统一感。但每个敌人要拥有各自特征才能给玩家带来新刺激</li><li>神谷流动作游戏：注重设计敌人角色独特性，先设计形象再考虑分类及动作</li></ol></li><li><p>制作人看敌人设计</p><ol><li>对于敌人角色设计， 制作人要与导演想法一致</li><li>设计师是以小怪为基准创作其他敌人角色，BOSS 就是小怪的特征极限化</li><li>小怪需要迎合大众且不会让玩家感到厌倦，因此设计上应该花费最多的劳力和时间</li></ol></li></ul><h3 id="普通敌人如何设计"><a href="#普通敌人如何设计" class="headerlink" title="普通敌人如何设计"></a>普通敌人如何设计</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005131210.png"></p><ul><li>BAYONETTA 中的小兵 Affinity 是花了很多功夫进行制作的<ul><li>动画等资源也用得最多</li><li>考虑<ul><li>在充实主角性能基础上 需要设计能与之匹敌的敌人</li><li>需要藉由这个最先出现的敌人来处理好贝优妮塔的战斗方式和敌人的存在形式</li><li>边测试边增加敌人的行动模式</li></ul></li><li>最初设计的 affinity 其实比贝优妮塔小 但最终是更大的<ul><li>太小的敌人玩家打败后没有成就感</li><li>不同大小其实做过很多测试</li></ul></li></ul></li></ul><blockquote><p>从等级低 出场率高的敌人开始制作<br>是否能飞可以区分空中战斗和地面战斗</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005131648.png"></p><blockquote><p>等级低的敌人是游戏的颜面</p></blockquote><blockquote><p>敌人太小 打败后玩家可能没有成就感</p></blockquote><h3 id="关于敌人的设计"><a href="#关于敌人的设计" class="headerlink" title="关于敌人的设计"></a>关于敌人的设计</h3><h4 id="基础设定"><a href="#基础设定" class="headerlink" title="基础设定"></a>基础设定</h4><ul><li>贝优妮塔的敌人是天使，其一般形象是<ul><li>包裹在光辉里</li><li>白色主色调</li><li>充满神圣感</li></ul></li><li>于是基于此开始了设计</li><li>而且因为天使是幻想 所以可以方便改动 充满可能性</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005132356.png"></p><ul><li>后来的想法延伸<blockquote><p>只要有光环就是天使</p></blockquote></li><li>希望建立共识 —— 一看到就知道是天使<ul><li>白色为基调</li><li>在装饰中加入金色作为配色</li><li>剩下的让设计师自由发挥</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005132620.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005132638.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005132603.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005132728.png"></p><ul><li>一开始担心不断出现的白色天使 玩家会不会感到无聊<ul><li>不能让玩家觉得 “又是这家伙”</li><li>所以会想办法让敌人形象多样化从而不断给玩家刺激<ul><li>虽然都是白色基调</li><li>但配饰装甲衣服等都有不同类型</li></ul></li></ul></li></ul><blockquote><p>敌人角色要多样化</p></blockquote><h4 id="BOSS"><a href="#BOSS" class="headerlink" title="BOSS"></a>BOSS</h4><ul><li>BOSS 是更巨大 有着更独特形象 给人一种捉摸不透的感觉的角色</li><li>和设计师沟通时强调<ul><li>先不管敌人会做的动作或者强度</li><li>先做出些独特设计</li><li>看了完成的设定稿后 <ul><li>感觉这个家伙可能会有这样的攻击 </li><li>那个家伙看起来很巨大 可以用来当 BOSS</li></ul></li></ul></li></ul><blockquote><p>先设计形象 再区分敌人类型</p></blockquote><ul><li>有多种敌人设计方式<ul><li>除了先设计形象 再补充设定的方法外<ul><li>贝优妮塔选择这种方式是想优先做出天使的异样感</li><li>这样的方法会增添很多可能性</li></ul></li><li>也有先进行设定 再根据设定来设计形象的办法</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133245.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133314.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133339.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133457.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133522.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133543.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133612.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005133741.png"></p><h4 id="开发秘话"><a href="#开发秘话" class="headerlink" title="开发秘话"></a>开发秘话</h4><ul><li>制作企划时为了让企划书更好看 想加入些天使图片<ul><li>不过现有天使只有丘比特那种普通无趣类型</li><li>于是拜托别人（二代导演桥本）画了一个像天使的怪物 很有趣</li><li>他原本是特效出身 但因为做的天使设计很有趣 所以被拉来帮忙做设计</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20221005134207.png"></p><h3 id="制作人对动作游戏中的敌人角色的认识"><a href="#制作人对动作游戏中的敌人角色的认识" class="headerlink" title="制作人对动作游戏中的敌人角色的认识"></a>制作人对动作游戏中的敌人角色的认识</h3><ul><li>是少有的制作人和导演保持相同意见的部分</li><li>应该注意<ul><li>小怪最重要<ul><li>就像是高达里的扎古<ul><li>很普通很基础的存在</li><li>但设计师要以此为基础创造更多机型</li></ul></li><li>要设计既不会太不起眼 也不会过于张扬却有着自己存在感的角色其实很难<ul><li>不仅要不同于主人公角色的存在感 </li><li>也要做到一直与之对峙也不让玩家厌倦</li><li>只要能做到 作为制作人就能信心满满地推出作品</li></ul></li><li>小怪不用担心剧透<ul><li>设计首先要迎合大众需求</li></ul></li><li>是导演和制作人都需要重视的东西</li><li>误区<ul><li>动作游戏中的动作设计是最难的</li></ul></li><li>其实做好基本的小怪角色才是最难的<ul><li>在这个部分应该花费最多的劳力和时间</li></ul></li><li>只要小怪做好 把一些特征调整到极限就成为了 BOSS</li></ul></li></ul></li></ul><blockquote><p>设计存在感比较平衡的角色很难</p></blockquote><blockquote><p>小怪调整到极致就成了 BOSS</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220924 - Game Development Isn&#39;t a Game</title>
      <link href="2022/09/24/20220924-game-development-isnt-a-game/"/>
      <url>2022/09/24/20220924-game-development-isnt-a-game/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解游戏设计这一职业！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/jlFkxfkICO8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="Game-Development-Isn’t-a-Game"><a href="#Game-Development-Isn’t-a-Game" class="headerlink" title="Game Development Isn’t a Game"></a>Game Development Isn’t a Game</h2><ul><li><p>对于“为什么做游戏”这一问题 樱井政博的回答是</p><ul><li>因为这是自己最擅长的</li></ul></li><li><p>一旦涉及到金钱利益 就不能再单纯将游戏制作视为爱好了 </p></li><li><p>在理想世界中 我们应该能自由制作任何我们想要制作的游戏</p><ul><li>这通常见于独立游戏中</li><li>也是一个值得鼓励的欣喜趋势</li></ul></li><li><p>但一旦独立游戏开发者开始准备以此挣钱 他们也就专业了（或者说职业化？）起来</p></li><li><p>being pro 意味着</p><ul><li>being light on your feet</li><li>ready to respond to demand</li></ul></li><li><p>工作内容和喜好有可能是没有办法完全契合的</p><ul><li>即使如此 面对工作 也应该尽量高质量地完成</li></ul></li><li><p>当然了 如何能从自己的工作中找到乐趣和得到满足也是每个人应该思考的问题</p></li><li><p>比如</p><ul><li>你希望成为一名最出色的开发者/导演<ul><li>如果你能从事与之相关的工作 那当然就能有更大的机会能实现愿望</li></ul></li><li>如果你真的成为了一名游戏设计师或是导演<ul><li>你当然有更好的机会来创作自己想要制作的东西</li><li>但 没有人能保证这能够发生</li></ul></li></ul></li><li><p>于樱井政博个人而言</p><ul><li>在制作游戏时他会把个人喜好放在一边<ul><li>虽然他是很有经验的游戏玩家<ul><li>但他也为新手玩家制作了星之卡比系列</li></ul></li><li>虽然他不擅长 block puzzle<ul><li>但他还是制作了 Meteos<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924131233.png" alt="Meteos"></li></ul></li></ul></li></ul></li><li><p>换言之 他没有为自己制作游戏</p></li><li><p>他将每次的游戏制作视为一次任务 从而创造特定品类的游戏</p></li><li><p>但重要的还是能从中找到乐趣</p></li><li><p>一旦理解了为什么游戏有趣</p><ul><li>就能够创建不局限于自己偏好的各种各样的体验</li></ul></li><li><p>无论我们创造什么类型的游戏 我们都应该谨记一个目标</p><ul><li>to entertian our players </li></ul></li><li><p>开发过程可能充满艰辛挑战 这个目标也能帮助我们不断向前</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220924 - BAYONETTA - 令人印象深刻的角色动作</title>
      <link href="2022/09/24/20220924-bayonetta-action/"/>
      <url>2022/09/24/20220924-bayonetta-action/</url>
      
        <content type="html"><![CDATA[<h2 id="令人印象深刻的角色动作"><a href="#令人印象深刻的角色动作" class="headerlink" title="令人印象深刻的角色动作"></a>令人印象深刻的角色动作</h2><ul><li><p>神谷流动作游戏制作</p><ol><li>直连脑髓：角色动作反映玩家反射神经 追求高速动作游戏 玩家需提高自身技巧攻略游戏</li><li>不同种类动作游戏有各自趣味 制作游戏要选择自己擅长的系统</li></ol></li><li><p>贝优妮塔特有动作的制作</p><ol><li>制作游戏过程中不可丧失导演理念的支柱</li><li>学会将灵感储存 制作游戏时的好创意需要作为素材存于脑中 活用于今后的游戏创作</li><li>游戏制作的过程是将点与点连成线 是创意与创意的化学反应</li><li>利用角色特性设计招式 增加游戏深度<ul><li>如魔女召唤魔兽</li><li>魔女使用拷问魔女的刑具攻击敌人等</li></ul></li><li>敌我形态上的差距可通过有冲击力的视觉效果的攻击弥补<ul><li>如召唤巨型魔兽对抗大型敌人</li></ul></li><li>游戏导演需要认真玩自己制作的游戏提高游戏技巧 便于发掘游戏深度 发现游戏的不足进而优化游戏系统</li></ol></li><li><p>贝优妮塔的武器设计</p><ol><li>先设定武器系统的模式 再设计各类武器</li><li>好的系统设定是制作团队创意的基础</li><li>设定武器时一定要考虑到玩家自定义</li></ol></li></ul><h3 id="神谷流-动作游戏的制作"><a href="#神谷流-动作游戏的制作" class="headerlink" title="神谷流 动作游戏的制作"></a>神谷流 动作游戏的制作</h3><ul><li>BAYONETTA 的标准<ul><li>高速动作游戏</li><li>直连脑髓型<ul><li>希望能做到让玩家握着手柄无需多加思考 角色就能遵循玩家想法做出行动 —— 及时反馈</li><li>直接反映玩家的反射神经 - 充分给予玩家操作自由 若是失败了就能鼓励玩家不断磨练技术<ul><li>先将贝优妮塔的角色性能提到极限 让其动作能做到让玩家随心所欲控制 </li><li>再去做能与之对抗的敌人</li></ul></li></ul></li></ul></li><li>对比<ul><li>《恶魔城》的跳跃设计<ul><li>只要按下跳跃键 会做出固定距离跳跃 中途无法再调整动作 只能等待落地 也无法在跳跃时向后方发起攻击 </li></ul></li><li>《超级马里奥》跳跃设计<ul><li>根据按键时长改变跳跃距离 或在跳跃途中减速刹车</li></ul></li></ul></li><li>要根据自己的游戏类型和规则对动作进行设计</li></ul><h3 id="贝优妮塔独有的动作是如何制作出来的"><a href="#贝优妮塔独有的动作是如何制作出来的" class="headerlink" title="贝优妮塔独有的动作是如何制作出来的"></a>贝优妮塔独有的动作是如何制作出来的</h3><ul><li>pillar 需要能在游戏中体现导演的中心思想</li></ul><blockquote><p>充分利用潜意识来创造专属于自己游戏的 pillar 吧！<br>可以参考 游戏设计艺术设计里面的这一章 <a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap7/">20210813 - The Art of Game Design - Chap7 - The Game Begins with an Idea</a></p></blockquote><h4 id="魔女时间"><a href="#魔女时间" class="headerlink" title="魔女时间"></a>魔女时间</h4><ul><li>之前的探索<ul><li>其实在《红侠乔伊》里面尝试过这样的慢动作表现<ul><li>按键后整个世界变慢</li></ul></li><li>《大神》中也有类似探索<ul><li>整个世界变慢</li><li>但主人公能快速移动</li><li>当时就觉得这个很不错 可以加以扩展</li></ul></li></ul></li></ul><blockquote><p> 保存灵感 记录游戏制作中的优秀创意</p></blockquote><blockquote><p>游戏制作的过程是将点与点连成线 所以要注重日常储备</p></blockquote><h4 id="和敌人的战斗"><a href="#和敌人的战斗" class="headerlink" title="和敌人的战斗"></a>和敌人的战斗</h4><h5 id="处刑攻击"><a href="#处刑攻击" class="headerlink" title="处刑攻击"></a>处刑攻击</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-24-2022-11-48-53.gif"></p><ul><li>可以突显主人公的人物性格和特点<ul><li>只在剧本中描绘的角色特性在游戏系统中也能得以表现</li><li>女性主人公也正好能做出一些别的游戏没有的特色</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924122008.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924122033.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924122119.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924122150.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924122212.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924122253.png"></p><h5 id="魔发编织和大魔兽召唤"><a href="#魔发编织和大魔兽召唤" class="headerlink" title="魔发编织和大魔兽召唤"></a>魔发编织和大魔兽召唤</h5><ul><li>制作理由<ul><li>面对不断变强的代表神之力量的天使敌人贝优妮塔的视觉表现力会变弱</li><li>想要给贝优妮塔加上一些有冲击力画面感的技能<ul><li>想到她是魔女 所以想增加一些召唤恶魔之类的技能</li></ul></li></ul></li></ul><blockquote><p>有冲击力的招式可以改善与敌人体型上的差距</p></blockquote><ul><li>单纯召唤的话魔女形象不够丰满 也不够有趣<ul><li>想做成贝优妮塔特有的召唤方式<ul><li>想到了她的头发</li></ul></li></ul></li></ul><blockquote><p>以头发为媒介 召唤魔兽 深化角色形象</p></blockquote><ul><li>设计时 不仅要考虑视觉表现 <ul><li>也要结合世界观 角色性 </li><li>深度挖掘设定 产生更有说服力和特点的方式</li></ul></li></ul><h4 id="dodge-offset"><a href="#dodge-offset" class="headerlink" title="dodge offset"></a>dodge offset</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-24-2022-12-36-21.gif"></p><ul><li><p>是操作较好的玩家才可以体验的硬核系统</p></li><li><p>该系统出现之前的问题</p><ul><li>发动魔发编织前 如果进行了闪避 会打断连击</li></ul></li><li><p>触发方式</p><ul><li>在连击途中继续长按攻击键 既进行了闪避 又能保持连击</li></ul></li><li><p>所以最终既兼顾了连击 又考虑了闪避</p></li></ul><h3 id="贝优妮塔的武器"><a href="#贝优妮塔的武器" class="headerlink" title="贝优妮塔的武器"></a>贝优妮塔的武器</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906115302.png"></p><ul><li>重要特征是手脚都可以装备武器<ul><li>所以武器装备槽在手足上共四个</li><li>自然会想到 得到了武器就想装备上去</li><li>所以最终结果就是<ul><li>手脚都可以装备武器</li><li>玩家可以自定义更换手脚的武器</li></ul></li></ul></li></ul><blockquote><p>好设定是团队成员创意的基础</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220924124642.png"></p><blockquote><p>从根本上考虑武器系统的模式更重要</p></blockquote><ul><li>而不是拘泥于到底用什么武器比较好</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220924 - 射击游戏设计一把枪有多复杂</title>
      <link href="2022/09/24/20220924-yyy001-gundesign/"/>
      <url>2022/09/24/20220924-yyy001-gundesign/</url>
      
        <content type="html"><![CDATA[<h2 id="射击游戏设计一把枪有多复杂"><a href="#射击游戏设计一把枪有多复杂" class="headerlink" title="射击游戏设计一把枪有多复杂"></a>射击游戏设计一把枪有多复杂</h2><h3 id="视频地址"><a href="#视频地址" class="headerlink" title="视频地址"></a>视频地址</h3><ul><li><a href="https://www.bilibili.com/video/BV1V7411o77S?spm_id_from=333.337.search-card.all.click&vd_source=2a7309dd68e8e66352cd01e962ce7993">射击游戏设计一把枪有多复杂？【游戏设计手册05】</a></li></ul><h3 id="mindmap"><a href="#mindmap" class="headerlink" title="mindmap"></a>mindmap</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/%E5%B0%84%E5%87%BB%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%8A%8A%E6%9E%AA%E6%9C%89%E5%A4%9A%E5%A4%8D%E6%9D%82.png"></p><h3 id="早期（传统）射击游戏核心要素"><a href="#早期（传统）射击游戏核心要素" class="headerlink" title="早期（传统）射击游戏核心要素"></a>早期（传统）射击游戏核心要素</h3><p>武器设计<br>地图路线设计<br>交战区域设计</p><h4 id="非传统射击游戏"><a href="#非传统射击游戏" class="headerlink" title="非传统射击游戏"></a>非传统射击游戏</h4><ul><li><p>加入 X 要素并强调该要素</p><ul><li>通常会削弱传统的核心要素</li></ul></li><li><p>世界观和剧情 - 冒险</p><ul><li>COD</li></ul></li><li><p>成长线 - RPG</p><ul><li>无主之地</li></ul></li><li><p>技能搭配</p><ul><li>守望先锋</li></ul></li><li><p>环境变化和利用环境</p><ul><li>绝地求生<ul><li>削弱了地图路线和交战区域</li></ul></li></ul></li><li><p>建造 &amp; 花式道具</p><ul><li>堡垒之夜</li></ul></li></ul><h3 id="武器设计"><a href="#武器设计" class="headerlink" title="武器设计"></a>武器设计</h3><h4 id="考虑"><a href="#考虑" class="headerlink" title="考虑"></a>考虑</h4><h5 id="生产线"><a href="#生产线" class="headerlink" title="生产线"></a>生产线</h5><ul><li>策划<ul><li>完成设计文档</li><li>与程序完成原型<ul><li>确保开发进度</li></ul></li><li>与美术沟通<ul><li>确保美术风格细节和特效达到要求</li><li>不超过性能上限</li></ul></li><li>QA<ul><li>完成测试</li></ul></li></ul></li></ul><h4 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h4><h5 id="伤害（单发子弹）"><a href="#伤害（单发子弹）" class="headerlink" title="伤害（单发子弹）"></a>伤害（单发子弹）</h5><h6 id="单发伤害衰减曲线"><a href="#单发伤害衰减曲线" class="headerlink" title="单发伤害衰减曲线"></a>单发伤害衰减曲线</h6><ul><li>常数曲线</li><li>分段曲线</li><li>连续下降曲线</li></ul><h6 id="不同部位伤害倍率"><a href="#不同部位伤害倍率" class="headerlink" title="不同部位伤害倍率"></a>不同部位伤害倍率</h6><ul><li>头<ul><li>x2</li></ul></li><li>躯干<ul><li>x1</li></ul></li><li>四肢<ul><li>x0.7</li></ul></li></ul><h6 id="特殊效果（debuff）"><a href="#特殊效果（debuff）" class="headerlink" title="特殊效果（debuff）"></a>特殊效果（debuff）</h6><ul><li>持续伤害</li><li>减速</li><li>麻醉</li><li>…</li></ul><h5 id="子弹"><a href="#子弹" class="headerlink" title="子弹"></a>子弹</h5><h6 id="每次发射数量"><a href="#每次发射数量" class="headerlink" title="每次发射数量"></a>每次发射数量</h6><ul><li>大多一次一颗</li><li>连发</li><li>n 颗</li><li>考虑<ul><li>一次射击最多能造成多少伤害</li></ul></li></ul><h6 id="射速"><a href="#射速" class="headerlink" title="射速"></a>射速</h6><ul><li>玩家感受<ul><li>一分钟内能射出多少子弹</li></ul></li><li>考虑<ul><li>每两次射击之间的最小时间间隔</li><li>决定了单位时间里的最大输出量</li></ul></li></ul><h6 id="弹夹容量"><a href="#弹夹容量" class="headerlink" title="弹夹容量"></a>弹夹容量</h6><ul><li>限制一把枪单次输出上限</li><li>也和输出容错率有关</li></ul><h6 id="换弹时间"><a href="#换弹时间" class="headerlink" title="换弹时间"></a>换弹时间</h6><ul><li>霰弹枪<ul><li>一颗一颗</li></ul></li><li>其他<ul><li>一次一个弹夹</li></ul></li></ul><h6 id="换弹后摇"><a href="#换弹后摇" class="headerlink" title="换弹后摇"></a>换弹后摇</h6><ul><li>换完弹匣后拉下枪栓能够再次射击的时间</li></ul><h6 id="手动模式-自动模式"><a href="#手动模式-自动模式" class="headerlink" title="手动模式/自动模式"></a>手动模式/自动模式</h6><ul><li>手动模式<ul><li>每次只有重新按下鼠标才能发射</li></ul></li><li>自动模式<ul><li>释放鼠标之前会持续射击</li></ul></li></ul><h6 id="子弹飞行速度"><a href="#子弹飞行速度" class="headerlink" title="子弹飞行速度"></a>子弹飞行速度</h6><ul><li>不追求真实的游戏会忽略</li><li>开发更消耗资源</li></ul><h6 id="子弹下坠速度"><a href="#子弹下坠速度" class="headerlink" title="子弹下坠速度"></a>子弹下坠速度</h6><p>不追求真实的游戏会忽略<br>开发更消耗资源</p><h6 id="子弹类型"><a href="#子弹类型" class="headerlink" title="子弹类型"></a>子弹类型</h6><p>增加真实<br>增加限制</p><h5 id="手感"><a href="#手感" class="headerlink" title="手感"></a>手感</h5><h6 id="后坐力"><a href="#后坐力" class="headerlink" title="后坐力"></a>后坐力</h6><p>游戏中的准心移动<br>每次发射子弹镜头上抬了多少角度<br>向左/向右旋转了多少角度（单位）</p><ul><li><p>回正速度/回中速度</p><ul><li><p>释放鼠标后准心回到正中的速度</p></li><li><p>例子</p><ul><li><p>基础做法</p><ul><li>回中速度为 10 即 1 秒可以回复 10 个单位</li><li>如果后坐力为 1 即每发子弹向上移动一个单位</li><li>连续开枪一秒 共发射 10 发子弹 向上偏移为 10</li><li>则 1s 后 回复到正中</li></ul></li><li><p>进阶做法</p><ul><li>让首颗子弹偏移量 * 系数 使得每把枪的偏移量有所区别</li><li>上下偏移也引入随机数 而不是固定偏移量</li><li>在范围里取随机数时用正态分布而不是均匀分布</li><li>给不同持枪状态设定不同偏移量和回中速度</li></ul><p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220914135539.png"></p></li></ul></li><li><p>左右和上下类似</p><ul><li>但区别是左右是区间<ul><li>在区间立产生随机数进行偏移</li></ul></li></ul></li></ul></li></ul><h6 id="准星扩散"><a href="#准星扩散" class="headerlink" title="准星扩散"></a>准星扩散</h6><p>持续射击准星会变大<br>子弹在准星范围内随机射出<br>准星越大 命中目标概率越低</p><ul><li>考虑<ul><li>最小半径</li><li>最大半径</li><li>每发子弹增加的量</li><li>回中速度</li><li>不同持枪状态下的准星区别</li></ul></li></ul><h6 id="吸附"><a href="#吸附" class="headerlink" title="吸附"></a>吸附</h6><h6 id="瞄准-开镜速度"><a href="#瞄准-开镜速度" class="headerlink" title="瞄准/开镜速度"></a>瞄准/开镜速度</h6><h6 id="开枪倍率"><a href="#开枪倍率" class="headerlink" title="开枪倍率"></a>开枪倍率</h6><h6 id="持枪呼吸晃动"><a href="#持枪呼吸晃动" class="headerlink" title="持枪呼吸晃动"></a>持枪呼吸晃动</h6><h6 id="切枪速度"><a href="#切枪速度" class="headerlink" title="切枪速度"></a>切枪速度</h6><h6 id="持枪移动速度"><a href="#持枪移动速度" class="headerlink" title="持枪移动速度"></a>持枪移动速度</h6><h6 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h6><ul><li>压枪<ul><li>通过肌肉记忆 在连续射击时将鼠标向下移动与偏移系数相对应的距离</li></ul></li><li>开枪节奏<ul><li>在射速和准星扩散命中降低之间找平衡点</li></ul></li></ul><h5 id="配件"><a href="#配件" class="headerlink" title="配件"></a>配件</h5><p>通过配件调整数值<br>一般建议调整下限不低于 10%<br>依据游戏本质是想让玩家玩枪还是玩配件</p><ul><li><p>设计武器考虑</p><ul><li>能加什么配件</li><li>配件都有些什么效果</li><li>理论最大数值能达到多少</li></ul></li><li><p>设计配件考虑</p><ul><li>能加在哪些武器</li><li>加在不同武器上会不会有不同提升</li></ul></li><li><p>例子</p><ul><li>pubg（20%）<ul><li>枪口<ul><li>子弹散布</li></ul></li><li>枪托握把<ul><li>后坐力</li><li>开镜速度</li></ul></li><li>弹夹<ul><li>容量</li><li>换弹时间</li></ul></li><li>消音/倍镜<ul><li>功能影响</li></ul></li></ul></li></ul></li></ul><h5 id="获取成本"><a href="#获取成本" class="headerlink" title="获取成本"></a>获取成本</h5><p>物以稀为贵</p><ul><li>通常做法<ul><li>资源捆绑</li><li>概率捆绑</li></ul></li></ul><h6 id="资源捆绑"><a href="#资源捆绑" class="headerlink" title="资源捆绑"></a>资源捆绑</h6><ul><li>例子<ul><li>CS<ul><li>狙击枪价格 &gt; AK 价格 &gt; 手枪价格</li><li>需要玩家思考如何分配资源</li></ul></li></ul></li></ul><h6 id="概率捆绑"><a href="#概率捆绑" class="headerlink" title="概率捆绑"></a>概率捆绑</h6><ul><li>例子<ul><li>pubg<ul><li>八倍镜 《 二倍镜</li><li>好枪往往在仅有的几个空投里开出来</li><li>如果有一个地点有非常强力的配件 玩家行为也会受到相应影响<ul><li>前往该地的高手玩家变多</li><li>初期战斗更加频繁</li><li>依托该点进行偷袭等战术就会出现</li></ul></li></ul></li></ul></li><li>影响<ul><li>整局对战节奏</li><li>高手和普通玩家的落点分布 游戏体验</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220917 - Risk and Rewards</title>
      <link href="2022/09/17/20220917-risk-and-rewards/"/>
      <url>2022/09/17/20220917-risk-and-rewards/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解风险与回报！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/FXqEykD5Ub4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="Risk-and-Reward"><a href="#Risk-and-Reward" class="headerlink" title="Risk and Reward"></a>Risk and Reward</h2><h3 id="什么是-Game-Essence"><a href="#什么是-Game-Essence" class="headerlink" title="什么是 Game Essence"></a>什么是 Game Essence</h3><ul><li>于樱井政博而言 就是 Push and pull 或者 Risk and Reward</li></ul><h3 id="例子-1-Space-Invader"><a href="#例子-1-Space-Invader" class="headerlink" title="例子 1 Space Invader"></a>例子 1 Space Invader</h3><ul><li>例子<ul><li>space invader - 1978<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917123400.png"></li></ul></li></ul><h4 id="Risk-no-Reward-no"><a href="#Risk-no-Reward-no" class="headerlink" title="Risk-no Reward-no"></a>Risk-no Reward-no</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917123638.png"></p><ul><li>自身加农炮和敌人武器只有直线弹道 —— 不去打敌人就不会被打</li></ul><h4 id="Risk-increase-Reward-almost-in-reach"><a href="#Risk-increase-Reward-almost-in-reach" class="headerlink" title="Risk-increase Reward-almost in reach"></a>Risk-increase Reward-almost in reach</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917123848.png"></p><ul><li>离敌人的水平距离越近，越有可能被击中每次进行攻击也有被击中的风险 </li></ul><h4 id="Risk-Increases-further-Reward-Enemy-can-be-defeated"><a href="#Risk-Increases-further-Reward-Enemy-can-be-defeated" class="headerlink" title="Risk-Increases further Reward-Enemy can be defeated"></a>Risk-Increases further Reward-Enemy can be defeated</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917123924.png"></p><ul><li>水平距离更靠近，风险进一步提升，但也有机会消灭敌人</li></ul><blockquote><p>take risks to get rewards - the core of game essence</p></blockquote><blockquote><p>这也会影响玩家策略</p></blockquote><blockquote><p><code>Game Essence</code> = The <code>fun</code> of managing risks. getting rewards - 与机制相关<br><code>Strategy</code> = <code>How</code> you manage risks/ get rewards - 与玩家相关</p></blockquote><h4 id="strategy"><a href="#strategy" class="headerlink" title="strategy"></a>strategy</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917124412.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917124443.png" alt="因为敌人移动 所以攻击区域其实不是完美矩形"></p><ul><li>高风险策略</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917124542.png"></p><ul><li>相同风险，但是更高回报</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917124626.png"></p><ul><li>所以 space invaders 的最佳策略应该是在水平方向上反向靠近敌人，而不是沿着敌人移动方向进行追逐</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917124749.png"></p><ul><li>自身水平范围和游戏平衡强相关——决定了风险有多高</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917124817.png"></p><blockquote><p>mechanics that vary risk also contribute to game essence<br>    比如可以半躲在屏障后 同时进行射击</p></blockquote><blockquote><p>think carefully about risk and reward when making a game</p></blockquote><h4 id="Wall-of-Death-Nagoya-Attack"><a href="#Wall-of-Death-Nagoya-Attack" class="headerlink" title="Wall of Death / Nagoya Attack"></a>Wall of Death / Nagoya Attack</h4><ul><li>如果 invader 接触到屏幕底端 无论你还有多少条命都会失败<ul><li>意味着在最后的这种阶段 风险是非常高的  </li></ul></li><li>但是这阶段敌人的攻击不会打到你，所以该阶段的玩家自身不受敌人风险的影响</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917125237.png"></p><ul><li><p>即是说 <code>Wall of Death</code> 是 <code>Ultimate Risk</code> 和 <code>Ultimate Reward</code> 的一种并存状态</p><ul><li>一旦没能成功打死敌人就失败</li><li>但是你自己这个阶段是无敌的</li></ul></li><li><p>但是… invader 游戏中的 wall of death 好像是个 bug</p><ul><li>因为离得太近时 敌人攻击会因为直接避开了玩家的碰撞盒而无法造成伤害</li><li>即使这是个 bug，但这一时代的游戏已经有如此优雅的设计仍让人十分惊喜<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917125650.png"></li></ul></li></ul><h3 id="例子-2-Super-Mario-Bros"><a href="#例子-2-Super-Mario-Bros" class="headerlink" title="例子 2 Super Mario Bros."></a>例子 2 Super Mario Bros.</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917125925.png"></p><ul><li><p>跳击敌人并利用它击倒其他敌人是超级马里奥的经典乐趣之一</p></li><li><p>fun 是一种主观体验，这里假设 这种机制是有趣的</p></li></ul><h4 id="risk-变化"><a href="#risk-变化" class="headerlink" title="risk 变化"></a>risk 变化</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917130111.png" alt="low risk"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917130143.png" alt="high risk"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917130218.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917130238.png" alt="chance to attack"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917130308.png" alt="这也是唯一能打败 Koopa Troopa 的方式"></p><p>之后甚至可以追着龟壳来连续得分甚至加命<br>但也要小心它碰到障碍物然后回弹 —— 风险与机遇并存</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917130559.png" alt="各类游戏都有其风险和回报机制"></p><p>需要注意的是，风险与回报只是一种思考方式，不应局限于此</p><ul><li>分享一个理论<ul><li>随着 <code>game essence</code> 的增加，<code>Broad Appeal</code> 会减少<ul><li>比如初代卡比中，故意将难度降低了，以迎合更广泛的受众</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220917 - BAYONETTA - 如何编写引人入胜的故事</title>
      <link href="2022/09/17/20220917-bayonetta-story/"/>
      <url>2022/09/17/20220917-bayonetta-story/</url>
      
        <content type="html"><![CDATA[<h2 id="如何编写引人入胜的故事"><a href="#如何编写引人入胜的故事" class="headerlink" title="如何编写引人入胜的故事"></a>如何编写引人入胜的故事</h2><ul><li><p>剧情与关卡</p><ol><li>动作游戏的剧情要为游戏服务。过于复杂的设定会影响玩家体验</li><li>动作游戏可章节化结构，并在章节之间的衔接处加入剧情亮点，吸引玩家持续游玩</li><li>剧情 关卡 密不可分。剧情 关卡搞定之后 再填充细节</li></ol></li><li><p>剧本写作</p><ol><li>没做过长篇写作训练的导演可以尝试用表格写作，便于把控整体统一性</li><li>表格写作剧本需要注意<ol><li>先将骨干整体写好再填充细节</li><li>各角色台词用颜色区分便于回顾</li><li>适当插入图片，使角色对话及场景一目了然</li></ol></li></ol></li><li><p>导演和编剧</p><ol><li>游戏导演和编剧若为同一人，在游戏创作各方面上都有加成</li><li>导演和编剧为不同人，当出现冲突时需要调节，费时费力</li></ol></li><li><p>过场影像</p><ol><li>在制作过场影像时，导演需要绘制分镜，将自己所想用分镜表达出来</li><li>为提高游戏过场影像品质，可以选择专业导演制作</li><li>为不影响过场影像导演的发挥，游戏导演无需给出过多指示</li><li>BAYONETTA 的过场影像为真人分镜影像+动作捕捉</li></ol></li><li><p>声优</p><ul><li>导演要带着自己对角色的想象创作剧本</li><li>导演需要亲自选拔声优 比起自己 对角色声音的想想与构思 在录音现场 对声优表现的判断更重要</li></ul></li><li><p>制作人与导演</p><ol><li>作为制作人，要相信导演的剧情创作及剧本写作能力</li><li>RPG：看完全部剧本 并给出建议而非修改命令；ARPG：比起剧情更注重游戏流程，注重可以吸引玩家持续游玩的关键点</li><li>导演应该具备综合多方建议，并将其运用于制作游戏的素材之中的能力</li></ol></li></ul><h3 id="为动作游戏服务的剧情是怎样的"><a href="#为动作游戏服务的剧情是怎样的" class="headerlink" title="为动作游戏服务的剧情是怎样的"></a>为动作游戏服务的剧情是怎样的</h3><ul><li>就 bayonetta 而言，剧情本身就是为游戏服务的</li></ul><blockquote><p>动作游戏的剧情不能喧宾夺主</p></blockquote><ul><li>动作游戏不适合插入太多的故事情节<ul><li>所以将贝优妮塔设定成了失忆的魔女</li><li>让她自己在故事中慢慢恢复记忆</li><li>这样也能让玩家随游戏推进与主角一起了解过去和背景</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917114445.png"></p><blockquote><p>加入剧情亮点 -&gt; 各章首尾加入剧情亮点 -&gt; 引人入胜</p></blockquote><ul><li>贝优妮塔是章节构成<ul><li>所以要让每一章都有亮点</li><li>开头要吸引人</li><li>结尾要留悬念</li></ul></li></ul><h3 id="剧情与关卡密不可分"><a href="#剧情与关卡密不可分" class="headerlink" title="剧情与关卡密不可分"></a>剧情与关卡密不可分</h3><blockquote><p>调动玩家闯关时的情绪<br>剧情与关卡需要同时推进</p></blockquote><ul><li>关卡要给玩家带来多种类型体验</li><li>剧情要吸引玩家不断推进</li></ul><blockquote><p>设定好剧情构成及关卡再填充细节</p></blockquote><ul><li>例子<ul><li>首先排好想要做的六个关卡</li><li>在某一关卡设定与某个角色相遇的情节</li><li>在之后的关卡中让这个角色神秘消失</li><li>最后的某章中又让这个角色回来再提及一些背景故事 </li></ul></li></ul><h3 id="用表格写剧本的原因"><a href="#用表格写剧本的原因" class="headerlink" title="用表格写剧本的原因"></a>用表格写剧本的原因</h3><ul><li><p>因为没有接受过正式的写作培训 如果从头开始写长篇故事 很难做到对故事的全面把控 </p><ul><li>比如故事进行到后期 需要提到某角色在前期所作所为 并基于此 来设定此时的角色行为</li></ul></li><li><p>把角色台词用颜色区分<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917115604.png" alt="用不同颜色区分不同角色台词"></p></li></ul><blockquote><p>插入图片 让角色对话和场景一目了然</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917115711.png"></p><h3 id="同一人担当游戏导演和编剧"><a href="#同一人担当游戏导演和编剧" class="headerlink" title="同一人担当游戏导演和编剧"></a>同一人担当游戏导演和编剧</h3><blockquote><p>游戏导演和编剧为同一人，在创作中有加成</p></blockquote><ul><li>神谷英树在《生化危机 2》编剧那里学到了很多，这也成了他后来写作中最重要的基础</li><li>从《鬼泣》开始，自己写剧本</li></ul><blockquote><p>导演和编剧出现冲突时需要调节，费时费力</p></blockquote><h3 id="关于-BAYONETTA-的过场影像"><a href="#关于-BAYONETTA-的过场影像" class="headerlink" title="关于 BAYONETTA 的过场影像"></a>关于 BAYONETTA 的过场影像</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917120658.png"></p><blockquote><p>为发挥导演的潜能，所以并未给出非常详细的指示</p></blockquote><ul><li>V 分镜<ul><li>让真人演员们在实景中表演分镜动作 制作了真人视频版的分镜</li><li>在此基础上再商讨 增加细节内容 之后做动捕<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917120858.png"></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121026.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121045.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121056.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121111.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121131.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121145.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121213.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121229.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121243.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121258.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220917121314.png"></p><h3 id="声优录音"><a href="#声优录音" class="headerlink" title="声优录音"></a>声优录音</h3><blockquote><p>带着对角色的想象写剧本</p></blockquote><ul><li>角色在什么情况 以怎样心境 怎样想法说的台词需要明了</li><li>声优们以超越导演目标的质量进行了配音<ul><li>因此就更重视声优对于角色的表演</li></ul></li></ul><h3 id="制作人对于游戏剧情的要求"><a href="#制作人对于游戏剧情的要求" class="headerlink" title="制作人对于游戏剧情的要求"></a>制作人对于游戏剧情的要求</h3><blockquote><p>前提是相信导演的写作能力</p></blockquote><ul><li>要根据游戏类型给出判断标准<ul><li>ARPG/RPG<ul><li>会先读完已写成剧本的故事</li><li>提出对细节的意见及建议</li><li>但不是提出修改的命令及要求</li><li>而是通篇认真看过后思考剧本整体起承转合 提出建议</li></ul></li><li>动作游戏<ul><li>制作人对剧情剧本的确认应该是到初期测试版为止</li><li>更注重游戏流程 注重吸引玩家持续游玩的亮点</li><li>是否让玩家有继续游玩的动机</li><li>更重视系统的审查</li><li>剧情流畅自然 让人想一口气玩完能否体现出来比较重要  —— 游戏动机成立就足够</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220913 - BAYONETTA - 打造大人气主人公的秘诀</title>
      <link href="2022/09/13/20220913-bayonetta-character/"/>
      <url>2022/09/13/20220913-bayonetta-character/</url>
      
        <content type="html"><![CDATA[<h2 id="打造大人气主人公的秘诀"><a href="#打造大人气主人公的秘诀" class="headerlink" title="打造大人气主人公的秘诀"></a>打造大人气主人公的秘诀</h2><h3 id="贝优妮塔的诞生"><a href="#贝优妮塔的诞生" class="headerlink" title="贝优妮塔的诞生"></a>贝优妮塔的诞生</h3><ul><li>最早敲定<ul><li>女性+魔女</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913133507.png"></p><ul><li>魔女的初期人设<ul><li>黑衣</li><li>尖顶帽 -&gt; 后来变为高高束起的头发</li><li>长袍 -&gt; 袖口变为了敞开设计</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913133727.png"></p><h3 id="陷入瓶颈后的解决办法"><a href="#陷入瓶颈后的解决办法" class="headerlink" title="陷入瓶颈后的解决办法"></a>陷入瓶颈后的解决办法</h3><ul><li>追加细节时陷入瓶颈</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913133843.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913133922.png"></p><ul><li>高层认为 “女性主角 + 黑色装束” 作为商品的卖点不够</li><li>解决办法<ul><li>回到原点</li><li>重新审视初稿</li><li>发现一开始的想法其实就挺好 不用再重新寻找风格 而是应该以此为基础想办法突出其魅力</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913134206.png"></p><h3 id="给设计师的指示应该做到何种程度"><a href="#给设计师的指示应该做到何种程度" class="headerlink" title="给设计师的指示应该做到何种程度"></a>给设计师的指示应该做到何种程度</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913134411.png"></p><ul><li>一开始其实很笼统<ul><li>只有一个 “一身黑衣”的想法<ul><li>这个其实也算是一个挑战</li><li>因为原来的主机表现力不足 很难把黑色主角在画面中凸显出来</li></ul></li><li>思考 如何将黑色合理表现 以让玩家能接受</li><li>所以还是和设计师强调要将黑色要素保留</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913134810.png"></p><ul><li><p>虽然是黑色 但其实也分为很多部分 不会再与背景同化</p><ul><li>头发</li><li>衣服材质</li><li>有光泽/无光泽等等</li></ul></li><li><p>虽然是先有设计稿才会制作游戏</p><ul><li>但也要考虑到制作到游戏内的合理性<ul><li>比如需要考虑角色动作的合理性<ul><li>是否流畅等</li></ul></li></ul></li></ul></li></ul><h3 id="角色定稿的方式"><a href="#角色定稿的方式" class="headerlink" title="角色定稿的方式"></a>角色定稿的方式</h3><ul><li>一开始有多位设计师参与外观设计<ul><li>提前给设计师们方向 vs 让设计师们自由发散<ul><li>最终采用了多人竞稿的方式<ul><li>稿件无需做到完美</li><li>但可以从中窥见完成时的感觉</li></ul></li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913135256.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913135321.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913135350.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913135411.png"></p><ul><li>从竞稿中选出之后<ul><li>导演指出大概方向后就不会再影响设计师的想法</li><li>之后需要考虑如何将心中的模糊概念传达给设计师来引出设计师心中的感性想法</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913135555.png"></p><h3 id="导演在制作游戏时需要自信来支撑"><a href="#导演在制作游戏时需要自信来支撑" class="headerlink" title="导演在制作游戏时需要自信来支撑"></a>导演在制作游戏时需要自信来支撑</h3><ul><li>制作 BAYONETTA 时优先考虑了自己的想法<ul><li>为什么要将成熟女性的优雅融入到战斗中 也纯属是自己的偏好</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913135855.png"></p><ul><li>不要被他人的意见左右<ul><li>若是自己心中没有坚定信念和看法 就无法在设计时提出想法时进行决策</li></ul></li></ul><h3 id="如何在角色设定中加入导演的兴趣爱好"><a href="#如何在角色设定中加入导演的兴趣爱好" class="headerlink" title="如何在角色设定中加入导演的兴趣爱好"></a>如何在角色设定中加入导演的兴趣爱好</h3><ul><li>完全融入个人喜好的角色其实是配角贞德<ul><li>配角更适合加入个人兴趣要素<ul><li>设计主角时还是要适当分开看待</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913140204.png"></p><ul><li>不可舍弃的眼镜配饰也是出于个人喜好的设计<ul><li>认为眼镜是成熟女性的一种标志性符号</li><li>正因如此之后也才有了推眼镜的动作设计 - 能够展现角色性格</li><li>甚至想把所有登场角色都加上眼镜相关的元素<ul><li>路卡胸前有挂眼镜</li><li>罗丹的墨镜</li><li>贞德头上的眼镜</li><li>…</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913140310.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913140457.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913140839.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913140919.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913141008.png"></p><h3 id="制作人对角色设定的看法"><a href="#制作人对角色设定的看法" class="headerlink" title="制作人对角色设定的看法"></a>制作人对角色设定的看法</h3><ul><li>角色设计方面 特别是原创角色方面 不应该过多考虑商业性话题</li><li>角色本身在确定之前会花费大量时间 <ul><li>公布时也会遭遇大量批评</li><li>BAYONETTA 也是差不多过了 10 年才有 COSER 愿意扮演 角色才受到广泛认知 也出现在别的游戏中</li></ul></li><li>制作人角度认为<ul><li>最重要的是自己是否认为这个角色足够有型</li><li>如果自己不喜欢 就不能推向市场</li><li>所以在角色设计 特别是原创角色方面 制作人也不该有过多干涉 也要理性看待大家和测试玩家的看法<ul><li>过分在意外部声音可能只会与导演对立</li><li>背负着不是自己的想法来和导演对峙</li><li>不该以这样的方法制作游戏</li><li>毕竟作品是饱含了导演想法的东西</li></ul></li><li>游戏角色 特别是主角 <ul><li>导演首先会考虑是否帅气<ul><li>但自己觉得漂亮和自己喜欢的女性可能是不同的</li><li>自己觉得帅气的男性服装和自己想要穿的服装可能也是不同的</li></ul></li></ul></li></ul></li></ul><blockquote><p>制作人需要调和个人喜好和市场需求</p></blockquote><ul><li><p>在此基础上也要考虑</p><ul><li>玩家游玩时是否顺畅</li><li>角色是否能很好融入世界观中</li><li>毕竟制作人是站在向市场推出游戏的立场上进行思考</li></ul></li><li><p>当角色以静态图展示时 玩家是否能体会到角色特点</p></li><li><p>100 个玩家中是否能让 90 个玩家记住角色特征</p></li><li><p>单纯的好看/帅气是不足以成为游戏主角的</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913141837.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220913141910.png"></p><blockquote><p>制作人优先考虑的要点：能留下印象的角色特征</p></blockquote><ul><li>最理想的是这些特点也能在世界观中找到原因</li><li>游戏中也能聚焦到这些特点上</li></ul><blockquote><blockquote><p>即陈星汉所提的 “有三个原因才能引入设计”<br>也是《游戏设计艺术》所提的优雅透镜</p></blockquote></blockquote><blockquote><p>系列作品的第一部其实很难获得成功</p></blockquote><ul><li>充分发挥这些特点再加上大家的爱和对角色的习惯才能让作品逐步走向成功</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220911 - Frame Rates</title>
      <link href="2022/09/11/20220911-frame-rates/"/>
      <url>2022/09/11/20220911-frame-rates/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解帧率！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><p><a href="https://www.youtube.com/watch?v=Rjdmi7628GM">Frame Rates</a></p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="Frame-Rates"><a href="#Frame-Rates" class="headerlink" title="Frame Rates"></a>Frame Rates</h2><h3 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h3><p>指的是计算机每秒所渲染显示的画面数量</p><p>如帧率（也被称为刷新率）为 60 即每秒有 60 个画面—— 60 frames per second (fps)</p><p>不同的帧率会影响所看到的画面的流畅度</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-11-2022-14-57-34.gif"></p><p>虽然 60 帧具有更好的视觉效果<br>但 30 帧也常见于电子游戏中</p><p>帧率在游戏中并不总是保持不变的，会和游戏平台以及游戏如何被编码有关</p><p>一些游戏会有动态帧率——当处理器忙不过来了就会降低帧率，但这个概念不该和 “slowdown” 概念混淆</p><p>游戏本身并没有减速，只是屏幕上有更少的画面在单位时间内被重绘了</p><p>一些 PC 和高端设备能支持 120 甚至 200 帧率——但如果显示器不支持也是没有意义的，二者需要互相匹配才行</p><hr><h3 id="NES-SNES-Nintendo-64"><a href="#NES-SNES-Nintendo-64" class="headerlink" title="NES SNES Nintendo 64"></a>NES SNES Nintendo 64</h3><p>回望 NES，SNES，和 Nintendo 64 时代</p><p>当时主要为具有 CRT 显像管的电视制作游戏，当时有两个标准 NTSC 和 PAL</p><ul><li>NTSC<ul><li>主要是北美和日本</li><li>以 30 帧率重新渲染画面</li><li>借助隔行扫描技术 可以实现 60 的运行帧率</li></ul></li><li>PAL<ul><li>主要是欧洲和澳大利亚</li><li>以 25 帧率重新渲染画面</li><li>同样利用隔行扫描技术 所以运行帧率为 50 </li></ul></li></ul><p>至少樱井政博自己在当时为这些平台所做的游戏都是利用了光栅中断的数量作为 Unit of time，也就是说 在 PAL 运行的游戏的运行速率是 NTSC 的 5/6，所有东西动得都要稍慢一些 </p><p>然而从 Nintendo 64 之后，游戏都利用了 <code>polygon processing</code> ，这使得绘制更少的帧率以及让游戏按预期运行变得更加简单了，也就减少了一些不必要的开销。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>帧率和时间、图像数量、分辨率有关<br>fps 60 是一个通用标准</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220911 - BAYONETTA - 如何建立完美的游戏世界观</title>
      <link href="2022/09/11/20220911-bayonetta-worldview/"/>
      <url>2022/09/11/20220911-bayonetta-worldview/</url>
      
        <content type="html"><![CDATA[<h2 id="如何建立完美的游戏世界观"><a href="#如何建立完美的游戏世界观" class="headerlink" title="如何建立完美的游戏世界观"></a>如何建立完美的游戏世界观</h2><h3 id="世界观的诞生"><a href="#世界观的诞生" class="headerlink" title="世界观的诞生"></a>世界观的诞生</h3><ul><li>因为 beyonetta  的定位是高速动作游戏 所以想构建以女性主人公华丽动作为基础的世界观<ul><li>因为主角会做出惊为天人的动作或行动 所以希望游戏世界可以尽可能贴近现实世界<ul><li>利用现实场景世界观突出与主人公设定的反差</li><li>结合中世纪魔女狩猎的历史设计一个可能在历史上真的出现过的虚拟城市</li><li>魔女与天使的对抗是本作的特点   </li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220911134117.png"></p><ul><li>天使与魔女 正邪对调 产生了意外感</li></ul><h3 id="另一大特征"><a href="#另一大特征" class="headerlink" title="另一大特征"></a>另一大特征</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220911135040.png"></p><p>战斗发生在了三界通道的炼狱内——与现实世界不同的异次元内<br>这样对于现实世界的人而言，战斗的 bayonetta 和天使都是不可见的——对于现实世界中的人而言就是发生了某些超自然现象，会受到惊吓而逃跑</p><p>这样的设定能更轻松地解释舞台，也更能让人信服</p><ul><li>减少开发者工作量</li><li>无需制作路人受波及的场景</li></ul><h3 id="世界观设定要做到何种程度"><a href="#世界观设定要做到何种程度" class="headerlink" title="世界观设定要做到何种程度"></a>世界观设定要做到何种程度</h3><p>需要制作详细设定来引导团队成员创作</p><ul><li>世界历史</li><li>背景</li><li>过去发生过的事件</li><li>文化的形成</li><li>居民的生活</li><li>…</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220911135808.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220911135839.png"></p><ul><li>世界观的细节设定可以以“档案”的形式进行呈现</li></ul><h3 id="与《鬼泣》的联系"><a href="#与《鬼泣》的联系" class="headerlink" title="与《鬼泣》的联系"></a>与《鬼泣》的联系</h3><p>二者可能是同一个世界的不同地方<br>两人也许会在某处相遇 也许两个人会认识彼此<br>这些东西不会出现在游戏中 也不会落实到游戏中 只会在制作人脑中出现<br>与主创传达制作思想时也可以将这些思考记录下来</p><blockquote><p>但丁也在 BAYONETTA 的世界里活着</p></blockquote><h3 id="制作人眼中何为优秀的世界观"><a href="#制作人眼中何为优秀的世界观" class="headerlink" title="制作人眼中何为优秀的世界观"></a>制作人眼中何为优秀的世界观</h3><ol><li>作为商品 这个世界观是否有足够魅力，足以做成一个成型游戏，要传递给玩家一种“味道”——属于该游戏本身的特殊乐趣</li></ol><p>优秀的世界观吸引人，让人信服</p><ol start="2"><li>有趣且有信服力</li></ol><p>设计时会追求优秀玩法，有趣内容<br>与此同时也需要有说服力，能让人信服</p><p>有时因为硬件、工期、游戏设定规定等会有很多限制<br>因此会出现很多问题，会导致出现两种结果</p><ul><li>玩家可以接受这样的世界观</li><li>玩家一下对游戏失去了热情</li></ul><p>完美游戏世界观既要有趣、也要有信服力</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220906 - BAYONETTA - 手把手教你做游戏企划</title>
      <link href="2022/09/06/20220906-bayonetta-design-document/"/>
      <url>2022/09/06/20220906-bayonetta-design-document/</url>
      
        <content type="html"><![CDATA[<h2 id="游戏企划书-（策划案）"><a href="#游戏企划书-（策划案）" class="headerlink" title="游戏企划书 （策划案）"></a>游戏企划书 （策划案）</h2><h3 id="游戏创作契机"><a href="#游戏创作契机" class="headerlink" title="游戏创作契机"></a>游戏创作契机</h3><ul><li>契机<ul><li>制作完《鬼泣》7 年之后，不知道当时的自己能做出什么样的游戏</li></ul></li></ul><h3 id="制作企划书的核心"><a href="#制作企划书的核心" class="headerlink" title="制作企划书的核心"></a>制作企划书的核心</h3><ol><li>将最重要的内容放在企划书开头</li><li>在最短时间传达游戏最精彩的部分</li><li>从失败迷茫中总结经验教训</li><li>将团队成员想法整理之后留下精髓 —— 简单明了表达游戏整体核心</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906104554.png"></p><p>将想要表达的游戏主干放在企划书的开头 —— 第一页就需要有亮点，让人能了解这是个怎样的游戏，之后只需要追加一些说明内容就好<br>如果在最开始无法展现游戏全貌，既不是合格企划书，也不会是成功游戏</p><p>不该把亮点放在最后 —— 无法把想法传达给别人</p><p>游戏也是，在开场如果无法吸引玩家，可能玩家就不会玩下去了</p><p>最开始写动作的部分</p><ul><li>利用这些动作到底想做些什么</li><li>是怎样的角色</li><li>使用的是什么能力</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906114126.png"></p><ul><li>之后进行追加说明</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906114324.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906114540.png"></p><h3 id="如何落实灵感-——-如何做企划"><a href="#如何落实灵感-——-如何做企划" class="headerlink" title="如何落实灵感 —— 如何做企划"></a>如何落实灵感 —— 如何做企划</h3><ol><li>与团队成员以杂谈形式讨论</li><li>不要完全依赖他人，要从意见中获得灵感，从而完善自己想法</li></ol><p>先确定想做什么样的企划<br>开始做企划书时，尝试与伙伴交流<br>核心团队成员 3~4 人一起可以避免漏掉一些好的想法<br>把别人的话当做对灵感的刺激 丰富创意</p><p>考虑大概内容 奠定基调</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906115118.png"></p><p>之后思考主角要打败什么样的敌人，拥有怎样的能力</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906115218.png"></p><p>之后将动作特色融入世界观</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906115302.png"></p><h3 id="策划案需要注意的问题"><a href="#策划案需要注意的问题" class="headerlink" title="策划案需要注意的问题"></a>策划案需要注意的问题</h3><ol><li>开发游戏团队的潜力，活用成员的能力</li><li>要有核心轴贯彻始终</li><li>必须将想法落实到企划书，不能空想</li><li>以 “企划书是要给别人看的” 前提来制作，可提高企划内容精度</li><li>企划书禁忌使用 “装饰类” 语言，如 “宏大的舞台”</li></ol><p>好游戏诞生于自己也能乐在其中之时</p><p>做游戏一定要保证游戏核心主干不变 —— 枝叶可以随时变化 </p><p>闪现的企划灵感一定要马上记录下来 —— 要带着给别人看的前提来写企划书</p><p>最好不要写修饰词——太空洞，且容易产生歧义<br>应该用更具体的词汇来详细说明内容</p><ul><li>不要写<ul><li>爽快的动作</li><li>壮大的故事</li><li>宏大的舞台</li></ul></li></ul><h3 id="企划发表技巧"><a href="#企划发表技巧" class="headerlink" title="企划发表技巧"></a>企划发表技巧</h3><ol><li>不要惧怕批评与否定</li><li>将企划的设定原因实现总结整理用来对应他人针对企划书的提问</li><li>可以根据他人的提问和点评激发自己对游戏的更多思考</li></ol><p>让别人点评作品很重要<br>可以一直觉为基础做，但要能回答上各种问题 —— 要有充分的决策原因</p><h3 id="企划书参考"><a href="#企划书参考" class="headerlink" title="企划书参考"></a>企划书参考</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906131746.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906114126.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906114324.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906114540.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906131929.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906115118.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906115302.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906132008.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906132026.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906132053.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906132123.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220906115218.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白金游戏工作室：爆款游戏 创作心法</title>
      <link href="2022/09/06/20220906-bayonetta-toc/"/>
      <url>2022/09/06/20220906-bayonetta-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="白金游戏工作室：爆款游戏-创作心法-摘抄-笔记"><a href="#白金游戏工作室：爆款游戏-创作心法-摘抄-笔记" class="headerlink" title="白金游戏工作室：爆款游戏 创作心法 摘抄/笔记"></a>白金游戏工作室：爆款游戏 创作心法 摘抄/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>观看白金工作室在 B 站上的《爆款游戏创作心法》视频，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://www.bilibili.com/cheese/play/ep11042?csource=Hp_searchresult&spm_id_from=333.337.0.0">B 站</a>：</p><blockquote><p>日本殿堂级游戏大师稻叶敦志&amp;神谷英树 围绕动作游戏《BAYONETTA》，结合成功经验及大量设定资料，传授游戏创作的技巧心法全方位剖析打造爆款游戏的秘诀。</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol><li><a href="https://medill-east.github.io/2022/09/06/20220906-bayonetta-design-document">手把手教你做游戏企划</a></li><li><a href="https://medill-east.github.io/2022/09/11/20220911-bayonetta-worldview">如何建立完美的游戏世界观</a></li><li><a href="https://medill-east.github.io/2022/09/13/20220913-bayonetta-character">打造大人气主人公的秘诀</a></li><li><a href="https://medill-east.github.io/2022/09/17/20220917-bayonetta-story">如何编写引人入胜的故事</a></li><li><a href="https://medill-east.github.io/2022/09/24/20220924-bayonetta-action">令人印象深刻的角色动作</a></li><li><a href="https://medill-east.github.io/2022/10/05/20221005-bayonetta-enemy">敌人设计的注意点</a></li><li><a href="https://medill-east.github.io/2022/10/09/20221009-bayonetta-boss">凸显 BOSS 威猛的动作设计要素</a></li><li><a href="https://medill-east.github.io/2022/10/16/20221016-bayonetta-audio">好的音乐才是真正的“视听盛宴”</a></li><li><a href="https://medill-east.github.io/2022/10/30/20221030-bayonetta-difficulty">打造玩家喜爱的游戏系统及难易度</a></li><li><a href="https://medill-east.github.io/2022/11/06/20221106-bayonetta-level">优秀关卡设计可以提高玩家游戏体验</a></li><li><a href="https://medill-east.github.io/2022/11/13/20221113-bayonetta-schedule">开发进程：掌控游戏开发的全局</a></li><li><a href="https://medill-east.github.io/2022/11/20/20221120-bayonetta-quality">品质管理：打造经典游戏的完美收尾</a></li><li><a href="https://medill-east.github.io/2022/11/27/20221127-bayonetta-hideki-kamiya">神谷英树：游戏导演看业界</a></li><li><a href="https://medill-east.github.io/2022/12/04/20221204-bayonetta-inaba-atsushi">稻叶敦志：游戏制作人看业界</a></li><li><a href="https://medill-east.github.io/2022/12/11/20221211-bayonetta-future">白金游戏工作室的哲学：游戏业界的现在与未来</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Platinum-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220906 - How Games Move Us</title>
      <link href="2022/09/06/20220906-how-games-move-us/"/>
      <url>2022/09/06/20220906-how-games-move-us/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/HowGamesMoveUs.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Reading </tag>
            
            <tag> Mindmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220902 - Kirby&#39;s Dream Land</title>
      <link href="2022/09/02/20220902-kirby-dream-land/"/>
      <url>2022/09/02/20220902-kirby-dream-land/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，了解星之卡比诞生的故事！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><p><a href="https://www.youtube.com/watch?v=PBRt2D2YN44&list=TLPQMDEwOTIwMjJDTw1U5VeeTw&index=3">Kirby’s Dream Land!</a></p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="Kirby’s-Dream-Land"><a href="#Kirby’s-Dream-Land" class="headerlink" title="Kirby’s Dream Land"></a>Kirby’s Dream Land</h3><p>Kirby’s Dream Land 是星之卡比系列的首款作品，也是樱井政博首次执导的作品</p><p>当他构建初始提案的时候才 19 岁 （哇..），因为当时还在忙于其他项目，所以并没有立马进行开发</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220902140715.png"></p><p>当时并没有如现在这般认真考虑 “风险和回报” ，只是觉得如果玩家能够利用敌人会很有趣。</p><p>是什么如此有趣呢？简言之就是风险和回报，以及与之相关的敌人所拥有的双重身份</p><p>在 <code>Mega Man</code> 中，你可以利用被打败的 BOSS 们的武器，但这并不能称之为 <code>利用敌人</code>，而是一种击败敌人的奖励，这二者是有所不同的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220902141220.png" alt="Mega Man 中 BOSS 的飞叶武器"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220902141341.png" alt="Mega Man 击败 BOSS 后所获得的武器"></p><p>当设计星之卡比时，樱井政博认为应该有一种更容易的方式来利用屏幕上的敌人</p><p>一开始的设计其实是让卡比用舌头抓住敌人，但最终改为了让其吸入敌人而后吐出</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-02-2022-14-19-25.gif"></p><p>舌头的这个设计理念可能会让你想到马里奥中的恐龙耀西，但其实这个设计出现时耀西还未存在。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-02-2022-14-21-55.gif" alt="利用舌头吸入敌人的恐龙耀西"></p><p>卡比还有另外一个特性——飞翔</p><p>樱井政博为其设计这个能力的原因是他认为如果只是因为一次错误的跳跃就失去生命的话对玩家来说过于严苛了</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-02-2022-14-25-06.gif"></p><p>被敌人击中和掉下平台，这二者在樱井政博看来在游戏中都不是什么严重的错误，但是即使在拥有生命条的动作游戏中，坠落通常也意味着立即死亡。</p><p>所以樱井政博将 <code>坠落立即死亡</code> 改为了 <code>给予玩家飞行的能力以供他们越过这些沟壑</code>。玩家们当然也可以利用这个能力来越过敌人，但由于 Game Boy 的屏幕很小，他也不并不介意让玩家 “逃课”。</p><p>吸入敌人和飞翔，二者都减少了玩家们在游玩时可能面对的风险。这看起来可能会破坏游戏的乐趣，但他当时所想的是第一款卡比应该让新玩家们也能易于上手。</p><p>在开发过程中，人们会问，“你确定要这么做吗”，他的回复是 “当然了！”</p><p>当他初次加入游戏工业界并从事开发相关工作时，NES 已经到了其生命末期。NES 因为其包含了很多困难的游戏而臭名昭著，其中一个隐情是 NES 内存有限，所以只能放入有限的内容，如果一款游戏太过简单，那么玩家通关就会过快，这对于花费了大量金钱的玩家来说几乎是不可接受的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220902143751.png" alt="NES"></p><p>和经历重复战斗的 RPG 不同，动作游戏很难提供长期的游玩价值，但要是让一个游戏莫名的难，就会把新手玩家拒之门外。</p><p>这也引出了卡比系列诞生的原因——为游戏新手也提供一个合适的入门游戏</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220902144334.png"></p><p>如今，一些游戏在你通关之后就结束了，但其他一些游戏（如街机）却并不是那么容易通关的。如果它们足够有趣，你总是会重复游玩。</p><p>虽然初代卡比相对而言比较容易，但那些玩过的玩家总是会不断回来游玩，樱井政博愿将其称之为 Game Boy 上最好的动作游戏之一。</p><p>除此之外，你知道游戏中也有 <code>Sound Test</code> 吗？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220902144742.png"></p><p>从音乐 intro 结束后每个关卡开始的方式，到卡比标志性的胜利舞蹈，你可以看到我们也在音乐上面投入了很多心血和爱。</p><p>最后， Kirby’s Dream Land 仍是卡比系列中最畅销的作品，这也反映出该作品为游戏新手们所做的 “妥协” 是经得起时间考验的优秀决策。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>吸入敌人和飞翔，二者都减少了玩家们在游玩时可能面对的风险。这看起来可能会破坏游戏的乐趣，但从该作品的销量反观，这些为新手玩家们所做的 “妥协” 无疑是正确的。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220901 - Stop for Big Moments</title>
      <link href="2022/09/01/20220901-stop-for-big-moments/"/>
      <url>2022/09/01/20220901-stop-for-big-moments/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习停止特效！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><p><a href="https://www.youtube.com/watch?v=OdVkEOzdCPw&list=TLPQMDEwOTIwMjJDTw1U5VeeTw&index=2">Stop for Big Moments!</a></p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="Stop-for-Big-Moments"><a href="#Stop-for-Big-Moments" class="headerlink" title="Stop for Big Moments!"></a>Stop for Big Moments!</h3><h4 id="Stop-Effects"><a href="#Stop-Effects" class="headerlink" title="Stop Effects"></a>Stop Effects</h4><ul><li>don’t skimp on them!</li><li>不要吝惜！</li></ul><h4 id="Hit-Stop"><a href="#Hit-Stop" class="headerlink" title="Hit Stop"></a>Hit Stop</h4><ul><li>即在动作发生时的短暂停顿<ul><li>比如在击打到目标时</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-11-44-24.gif"></p><ul><li>是否有 Hit Stop 会完全改变击打的力度，所以它非常重要！</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-11-58-26.gif"></p><h5 id="Finish-Zoom-Effect-BOSS-Stop"><a href="#Finish-Zoom-Effect-BOSS-Stop" class="headerlink" title="Finish Zoom Effect /  BOSS Stop"></a>Finish Zoom Effect /  BOSS Stop</h5><ul><li>是 Hit Stop 的某种延伸</li><li>是击败 BOSS 时所看见的一种 Stop 特效</li><li>这对于让玩家感受到 “绝杀一击” 是很重要的</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-12-14-28.gif"></p><ul><li><p>当玩家失去生命的时候，画面中的角色动作也随之停止</p></li><li><p>考虑到 hit stop 的重要性，无论品类 它都应该在各处被使用</p><ul><li>比如在飞行游戏中，若是没有 hit stop，玩家很容易在 “不知不觉” 中死去<ul><li>玩家应该有清晰地 “受击感”，从而得知 “something’s wrong” </li></ul></li></ul></li><li><p>Fantasy Zone - 1986</p><ul><li>这款游戏中，当你受击时，屏幕会停止一秒</li><li>这虽然只是一个简单的暂停效果，但你却可以清晰地看到受击时刻，从而让你充分体会 “啊不是吧！” 的感觉</li></ul></li><li><p>包含的这种（能加强人们情绪体验的）东西越多越好</p></li><li><p>Fantasy Zone 从 Defender 汲取了很多灵感</p><ul><li>虽然受击是视觉特效的一部分</li><li>但在这里的 stop 效果是相同的</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-12-22-17.gif"></p><ul><li>感觉北美同时代的很多游戏都使用了类似的效果</li><li>让屏幕停止只是工具箱中的其中一种工具，以下是一些其他特效影响射击游戏的例子</li></ul><h5 id="特效对射击游戏影响的例子"><a href="#特效对射击游戏影响的例子" class="headerlink" title="特效对射击游戏影响的例子"></a>特效对射击游戏影响的例子</h5><h6 id="No-Effect"><a href="#No-Effect" class="headerlink" title="No Effect"></a>No Effect</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-12-27-55.gif"></p><h6 id="Stop"><a href="#Stop" class="headerlink" title="Stop"></a>Stop</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-12-29-18.gif"></p><h6 id="Stop-Shake"><a href="#Stop-Shake" class="headerlink" title="Stop + Shake"></a>Stop + Shake</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-12-30-42.gif"></p><h6 id="Stop-Shake-Slow-Motion"><a href="#Stop-Shake-Slow-Motion" class="headerlink" title="Stop + Shake + Slow Motion"></a>Stop + Shake + Slow Motion</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Sep-01-2022-12-31-45.gif"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在你的游戏中的重大时刻活用 Stop！<br>让你的玩家感受到这些成功或是失败的时刻<br>简单而有效，为什么不这么做呢？</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Masahiro Sakurai on Creating Games</title>
      <link href="2022/08/31/20220900-toc/"/>
      <url>2022/08/31/20220900-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="Masahiro-Sakurai-on-Creating-Games-摘抄-笔记"><a href="#Masahiro-Sakurai-on-Creating-Games-摘抄-笔记" class="headerlink" title="Masahiro Sakurai on Creating Games 摘抄/笔记"></a>Masahiro Sakurai on Creating Games 摘抄/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>观看 Masahiro Sakurai on Creating Games 的视频，学习游戏制作，特此记录。</p><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="A-Work-Ethic"><a href="#A-Work-Ethic" class="headerlink" title="A - Work Ethic"></a>A - Work Ethic</h3><ul><li><a href="https://medill-east.github.io/2022/09/24/20220924-game-development-isnt-a-game">A01 - Game Development Isn’t a Game</a> </li><li><a href="https://medill-east.github.io/2022/11/06/20221106-presentation-are-all-about-speed">A02 - Presentation Are All About Speed!</a></li><li><a href="https://medill-east.github.io/2023/01/08/20230108-try-telling-that-to-the-player">A03 - Try Telling That to the Player</a></li><li><a href="https://medill-east.github.io/2023/03/19/20230319-a04">A04 - Spec Changes</a></li><li><a href="https://medill-east.github.io/2023/05/28/20230528-a05">A05 - Writing Game Proposals</a></li><li><a href="https://medill-east.github.io/2023/05/28/20230903-a06">A06 - Prep Your Proposals Hot and Fast</a></li><li><a href="https://medill-east.github.io/2023/12/24/20231224-a07">A07 - You’ll Forget the Hardship, But the Game Will Endure!</a></li><li><a href="https://medill-east.github.io/2024/01/14/20240114-a08">A08 - Directors Need to Be Unique</a></li><li><a href="https://medill-east.github.io/2024/04/28/20240428-a09">A09 - Just Do It Already!</a></li><li><a href="https://medill-east.github.io/2024/09/01/20240901-a10">A10 - How I Stuck With My Column</a></li><li><a href="https://medill-east.github.io/2024/12/01/20241201-a11">A11 - Don’t Rely on a Plan B</a></li><li><a href="https://medill-east.github.io/2024/12/22/20241222-a12">A12 - Branching Tastes</a></li><li><a href="https://medill-east.github.io/2025/04/27/20250427-a13">A13 - Broad Input, Broad Output</a></li><li><a href="https://medill-east.github.io/2025/08/31/20250831-a14">A14 - Keep Your Internal Pressure High</a></li></ul><h3 id="B-Game-Essence"><a href="#B-Game-Essence" class="headerlink" title="B - Game Essence"></a>B - Game Essence</h3><ul><li><a href="https://medill-east.github.io/2022/09/17/20220917-risk-and-rewards">B01 - Risk and Rewards</a></li><li><a href="https://medill-east.github.io/2022/10/09/20221009-squeeze-and-release">B02 - Squeeze and Release</a></li><li><a href="https://medill-east.github.io/2022/11/27/20221127-b03">B03 - Game Essence in Role-Playing Games</a></li><li><a href="https://medill-east.github.io/2023/02/26/20230226-b04">B04 - Fun Beyond Game Essence</a></li><li><a href="https://medill-east.github.io/2023/06/18/20230618-b05">B05 - The Fiend’s Cauldron</a></li><li><a href="https://medill-east.github.io/2023/08/06/20230806-b06">B06 - Let Players Cheat the System</a></li><li><a href="https://medill-east.github.io/2023/12/10/20231210-b07">B07 - Falling Sells the Feeling of Flight</a></li><li><a href="https://medill-east.github.io/2024/01/21/20240121-b08">B08 - Do We Really Need Enemies?</a></li><li><a href="https://medill-east.github.io/2024/03/03/20240303-b09">B09 - Consider Rewards First</a></li><li><a href="https://medill-east.github.io/2024/04/21/20240421-b10">B10 - Do Competitive Games Have to Be Complex?</a></li><li><a href="https://medill-east.github.io/2024/05/19/20240519-b11">B11 - Game Essence in Falling-Block Puzzle Games</a></li><li><a href="https://medill-east.github.io/2024/08/24/20240824-b12">B12 - Dying Comes as a Relief?</a></li><li><a href="https://medill-east.github.io/2024/10/27/20241027-b13">B13 - Mountain Climbing Is More Than Just Climbing</a></li><li><a href="https://medill-east.github.io/2025/02/23/20250223-b14">B14 - Make Retries Quick</a></li><li><a href="https://medill-east.github.io/2025/05/11/20250511-b15">B15 - Is Your Game Appealing Enough to Start Over</a></li><li><a href="https://medill-east.github.io/2025/06/22/20250622-b16">B16 - Game Essence in Shooting Games</a></li></ul><h3 id="C-Planning-amp-Game-Design"><a href="#C-Planning-amp-Game-Design" class="headerlink" title="C - Planning &amp; Game Design"></a>C - Planning &amp; Game Design</h3><ul><li><a href="https://medill-east.github.io/2022/09/11/20220911-frame-rates">C01 -Frame Rates</a></li><li><a href="https://medill-east.github.io/2022/12/11/20221211-just-let-them-play">C02 -Just Let Them Play!</a></li><li><a href="https://medill-east.github.io/2023/02/05/20230205-c03">C03 - Keeping Rewards in Sight</a></li><li><a href="https://medill-east.github.io/2023/05/01/20230501-c04">C04 - Making a Living Making Games</a></li><li><a href="https://medill-east.github.io/2023/06/25/20230625-c05">C05 - A Small Window Into the World</a></li><li><a href="https://medill-east.github.io/2023/08/27/20230827-c06">C06 - The Potential of One Button</a></li><li><a href="https://medill-east.github.io/2023/10/15/20231015-c07">C07 - Desconstruct, Analyze, and Rebuild</a></li><li><a href="https://medill-east.github.io/2023/12/03/20231203-c08">C08 - Good Errands and Bad Errands</a></li><li><a href="https://medill-east.github.io/2024/03/10/20240310-c09">C09 - Learn to Count Frames!</a></li><li><a href="https://medill-east.github.io/2024/05/12/20240512-c10">C10 - Making Tutorials Feel Natural</a></li><li><a href="https://medill-east.github.io/2024/08/04/20240804-c11">C11 - Praise the Player!</a></li><li><a href="https://medill-east.github.io/2024/10/20/20241020-c12">C12 - Don’t Be Unresponsive!</a></li><li><a href="https://medill-east.github.io/2025/01/05/20250105-c13">C13 - Game Writing is Unique</a></li><li><a href="https://medill-east.github.io/2025/03/16/20250316-c14">C14 - The Fun in Picking Sides</a></li><li><a href="https://medill-east.github.io/2025/05/18/20250518-c15">C15 - Motion Sickness in 3D Games</a></li><li><a href="https://medill-east.github.io/2025/07/13/20250713-c16">C16 - Staying Organized with Hierachical Outlines</a></li></ul><h3 id="D-Design-Specifics"><a href="#D-Design-Specifics" class="headerlink" title="D - Design Specifics"></a>D - Design Specifics</h3><ul><li><a href="https://medill-east.github.io/2022/09/01/20220901-stop-for-big-moments/">D01 - Stop for big moments</a></li><li><a href="https://medill-east.github.io/2022/12/25/20221225-d02/">D02 - Giving “Weight” to Buttons</a></li><li><a href="https://medill-east.github.io/2023/05/21/20230521-d03/">D03 - Jump Physics</a></li><li><a href="https://medill-east.github.io/2023/07/30/20230730-d04/">D04 - Eight Hit Stop Techniques</a></li><li><a href="https://medill-east.github.io/2023/11/12/20231112-d05/">D05 - Don’t Anchor Your Center Point</a></li><li><a href="https://medill-east.github.io/2024/02/18/20240218-d06/">D06 - Say No to Slow!</a></li><li><a href="https://medill-east.github.io/2024/05/05/20240505-d07/">D07 - Units of Speed</a></li><li><a href="https://medill-east.github.io/2024/09/30/20240930-d08/">D08 - Behavior at ledges</a></li><li><a href="https://medill-east.github.io/2025/03/09/20250309-d09/">D09 - Maps Are Game Screens Too</a></li><li><a href="https://medill-east.github.io/2025/08/10/20250810-d10/">D10 - Unexpected Results</a></li></ul><h3 id="E-Team-Management"><a href="#E-Team-Management" class="headerlink" title="E - Team Management"></a>E - Team Management</h3><ul><li><a href="https://medill-east.github.io/2023/07/02/20230702-e01/">E01- Sharing Info Within a Team</a></li><li><a href="https://medill-east.github.io/2023/08/20/20230820-e02/">E02 - Jobs in Game Development</a></li><li><a href="https://medill-east.github.io/2023/11/05/20231105-e03/">E03 - Don’t Wait to Speak Your Mind</a></li><li><a href="https://medill-east.github.io/2024/06/02/20240602-e04/">E04 - Ten People Can Produce Seven People’s Work</a></li><li><a href="https://medill-east.github.io/2025/01/12/20250112-e05/">E05 - Explain Ideas to Everyone at Once</a></li><li><a href="https://medill-east.github.io/2025/04/06/20250406-e06/">E06 - Daily Report Suggestions</a></li><li><a href="https://medill-east.github.io/2025/07/06/20250706-e07/">E07 - Bug Testing Never Ends</a></li></ul><h3 id="F-Graphics"><a href="#F-Graphics" class="headerlink" title="F - Graphics"></a>F - Graphics</h3><ul><li><a href="https://medill-east.github.io/2022/10/16/20221016-draw-the-light-not-the-asset">F01 - Draw the light not the Asset</a></li><li><a href="https://medill-east.github.io/2023/03/26/20230326-f02">F02 - Emphasize Objects with Collision</a></li><li><a href="https://medill-east.github.io/2023/07/09/20230709-f03">F03 - Distinguishing Between Major and Minor Elements</a></li><li><a href="https://medill-east.github.io/2023/11/26/20231126-f04">F04 - Get the Sense of Scale Right</a></li><li><a href="https://medill-east.github.io/2024/06/23/20240623-f05">F05 - Supervising Art Through Retouches</a></li><li><a href="https://medill-east.github.io/2024/09/08/20240908-f06">F06 - An Up-Close Look at Smash Bros. Stages</a></li><li><a href="https://medill-east.github.io/2025/01/19/20250119-f07">F07 - The Basics of Pixel Art</a></li><li><a href="https://medill-east.github.io/2025/05/25/20250525-f08">F08 - Unifying Visual Style</a></li><li><a href="https://medill-east.github.io/2025/07/20/20250720-f09">F09 - A Fight Between Live Action and Animation</a></li></ul><h3 id="G-Animations"><a href="#G-Animations" class="headerlink" title="G - Animations"></a>G - Animations</h3><ul><li><a href="https://medill-east.github.io/2022/11/20/20221120-asinging-animations/">G01 - Assigning Animations</a></li><li><a href="https://medill-east.github.io/2023/03/12/20230312-g02/">G02 - Too Much is Just Right</a></li><li><a href="https://medill-east.github.io/2023/05/14/20230514-g03/">G03 - Breaking Down Attack Animations</a></li><li><a href="https://medill-east.github.io/2023/08/13/20230813-g04/">G04 - Making Lead-ins Instant and Impactful</a></li><li><a href="https://medill-east.github.io/2023/11/19/20231119-g05/">G05 - Attack Poses</a></li><li><a href="https://medill-east.github.io/2024/03/17/20240317-g06/">G06 - Follow-Throughs Make the Impact</a></li><li><a href="https://medill-east.github.io/2024/06/30/20240630-g07/">G07 - Exaggerate to Make Up for Information Loss</a></li><li><a href="https://medill-east.github.io/2024/11/03/20241103-g08/">G08 - Posing Suggestions</a></li><li><a href="https://medill-east.github.io/2025/03/23/20250323-g09/">G09 - Squashing and Scaling</a></li><li><a href="https://medill-east.github.io/2025/08/17/20250817-g10/">G10 - Damage Animations</a></li></ul><h3 id="H-Effects"><a href="#H-Effects" class="headerlink" title="H - Effects"></a>H - Effects</h3><ul><li><a href="https://medill-east.github.io/2022/12/04/20221204-make-it-pop">H01 - Make It “Pop”</a></li><li><a href="https://medill-east.github.io/2023/05/07/20230507-h02">H02 - Let Your Character Shine</a></li><li><a href="https://medill-east.github.io/2023/10/08/20231008-h03">H03 - Flash, Blast, and Smoke</a></li><li><a href="https://medill-east.github.io/2024/03/31/20240331-h04">H04 - Visual Effects in Slow Motion</a></li><li><a href="https://medill-east.github.io/2024/10/13/20241013-h05">H05 - Screen Shake</a></li><li><a href="https://medill-east.github.io/2025/06/01/20250601-h06">H06 - Hit Marks</a></li></ul><h3 id="I-Audio"><a href="#I-Audio" class="headerlink" title="I-Audio"></a>I-Audio</h3><ul><li><a href="https://medill-east.github.io/2023/02/19/20230219-i01">I01 - Make the Tempo Match the Game!</a></li><li><a href="https://medill-east.github.io/2023/04/16/20230416-i02">I02 - Strike a Balance with Sound Effects</a></li><li><a href="https://medill-east.github.io/2023/09/24/20230924-i03">I03 - Listen in Various Environments</a></li><li><a href="https://medill-east.github.io/2024/01/07/20240107-i04">I04 - Game Music and Ambient Sounds</a></li><li><a href="https://medill-east.github.io/2024/06/16/20240616-i05">I05 - Audio as Fiction and Non-Fiction</a></li><li><a href="https://medill-east.github.io/2024/11/17/20241117-i06">I06 - Voice Recording</a></li><li><a href="https://medill-east.github.io/2025/05/02/20250502-i07">I07 - Arranging Music</a></li><li><a href="https://medill-east.github.io/2025/09/14/20250914-i08">I08 - The Original Piece is Always Right</a></li></ul><h3 id="J-UI"><a href="#J-UI" class="headerlink" title="J - UI"></a>J - UI</h3><ul><li><a href="https://medill-east.github.io/2022/12/18/20221219-clarity-vs-style">J01 - Clarity vs. Style</a></li><li><a href="https://medill-east.github.io/2023/04/23/20230423-j02">J02 - Text Size</a></li><li><a href="https://medill-east.github.io/2023/09/30/20230930-j03">J03 - Modern Quality of Life Features</a></li><li><a href="https://medill-east.github.io/2024/03/24/20240324-j04">J04 - Loading Screens</a></li><li><a href="https://medill-east.github.io/2024/07/21/20240721-j05">J05 - Emphasizing Text</a></li><li><a href="https://medill-east.github.io/2024/12/15/20241215-j06">J06 - Menus Define Your World</a></li><li><a href="https://medill-east.github.io/2025/06/15/20250615-j07">J07 - Color-Coding Your Game</a></li></ul><h3 id="K-Programming-amp-Tech"><a href="#K-Programming-amp-Tech" class="headerlink" title="K - Programming &amp; Tech"></a>K - Programming &amp; Tech</h3><ul><li><a href="https://medill-east.github.io/2023/01/15/20230115-name-files-logically">K01 - Name Files Logically</a></li><li><a href="https://medill-east.github.io/2023/07/23/20230723-k02">K02 - Making Your Game Easy to Tune</a></li><li><a href="https://medill-east.github.io/2024/01/02/20240102-k03">K03 - Put Parameters in Brackets</a></li><li><a href="https://medill-east.github.io/2024/07/28/20240728-k04">K04 - Using Tickets to Manage Tasks</a></li><li><a href="https://medill-east.github.io/2025/03/02/20250302-k05">K05 - Family BASIC</a></li><li><a href="https://medill-east.github.io/2025/09/07/20250907-k06">K06 - Knockback in Super Smash Bros.</a></li></ul><h3 id="L-Marketing"><a href="#L-Marketing" class="headerlink" title="L - Marketing"></a>L - Marketing</h3><ul><li><a href="https://medill-east.github.io/2024/04/07/20240407-l01">L01 - Marketing is Multiplicative</a></li><li><a href="https://medill-east.github.io/2024/09/22/20240922-l02">L02 - Paint an Accurate Picture of Your Game</a></li><li><a href="https://medill-east.github.io/2025/03/30/20250330-l03">L03 - Game Demos</a></li><li><a href="https://medill-east.github.io/2025/08/24/20250824-l04">L04 - Official Websites</a></li></ul><h3 id="M-Grab-Bag"><a href="#M-Grab-Bag" class="headerlink" title="M - Grab Bag"></a>M - Grab Bag</h3><ul><li><a href="https://medill-east.github.io/2022/10/05/20221005-down-with-lag">M01 - Down with Lag!</a></li><li><a href="https://medill-east.github.io/2022/11/13/20221113-game-awards">M02 - Game Awards</a></li><li><a href="https://medill-east.github.io/2023/02/12/20230212-m03">M03 - Exercise While You Play!</a></li><li><a href="https://medill-east.github.io/2023/04/02/20230402-m04">M04 - The Price of Games</a></li><li><a href="https://medill-east.github.io/2023/06/04/20230604-m05">M05 - My Feline Friend Fukurashi</a></li><li><a href="https://medill-east.github.io/2023/07/16/20230716-m06">M06 - That was Then, This Is Now</a></li><li><a href="https://medill-east.github.io/2023/09/17/20230917-m07">M07 - Sora Ltd.</a></li><li><a href="https://medill-east.github.io/2023/10/22/20231022-m08">M08 - Team Digital or Team Physical?</a></li><li><a href="https://medill-east.github.io/2023/12/17/20231217-m09">M09 - Sora’s Work-From-Home Strategies</a></li><li><a href="https://medill-east.github.io/2024/01/28/20240128-m10">M10 - Competing with the Past</a></li><li><a href="https://medill-east.github.io/2024/04/14/20240414-m11">M11 - Games and Eye Strain</a></li><li><a href="https://medill-east.github.io/2024/05/26/20240526-m12">M12 - Mastering Up</a></li><li><a href="https://medill-east.github.io/2024/08/18/20240818-m13">M13 - The Family Computer (and the NES)</a></li><li><a href="https://medill-east.github.io/2024/09/17/20240917-m14">M14 - Development Secrets of the Original Kirby</a></li><li><a href="https://medill-east.github.io/2024/12/08/20241208-m15">M15 - Canceled Games</a></li><li><a href="https://medill-east.github.io/2025/02/16/20250216-m16">M16 - PRESS START</a></li><li><a href="https://medill-east.github.io/2025/04/13/20250413-m17">M17 - Games During My Childhood</a></li><li><a href="https://medill-east.github.io/2025/06/08/20250608-m18">M18 - The Team Behind Super Smash Bros. Brawl</a></li><li><a href="https://medill-east.github.io/2025/07/27/20250727-m19">M19 - Guidelines</a></li></ul><h3 id="N-Game-Concepts"><a href="#N-Game-Concepts" class="headerlink" title="N - Game Concepts"></a>N - Game Concepts</h3><ul><li><a href="https://medill-east.github.io/2022/09/02/20220902-kirby-dream-land/">N01 - Kirby’s Dream Land</a></li><li><a href="https://medill-east.github.io/2022/10/30/20221030-kirby-adventure/">N02 - Kirby’s Adventure</a></li><li><a href="https://medill-east.github.io/2023/01/02/20230102-kirby-super-star/">N03 - Kirby Super Star</a></li><li><a href="https://medill-east.github.io/2023/03/05/20230305-n04/">N04 - Super Smash Bros</a></li><li><a href="https://medill-east.github.io/2023/06/11/20230611-n05/">N05 - Super Smash Bros Melee</a></li><li><a href="https://medill-east.github.io/2023/10/29/20231029-n06/">N06 - Kirby Air Ride</a></li><li><a href="https://medill-east.github.io/2024/02/25/20240225-n07/">N07 - Meteos</a></li><li><a href="https://medill-east.github.io/2024/07/14/20240714-n08/">N08 - Sodatete! Kouchuu Ouja Mushiking</a></li><li><a href="https://medill-east.github.io/2024/11/24/20241124-n09/">N09 - Super Smash Bros. Brawl</a></li><li><a href="https://medill-east.github.io/2025/04/20/20250420-n10/">N10 - Kid Icarus - Uprising</a></li><li><a href="https://medill-east.github.io/2025/06/29/20250629-n11/">N11 - Super Smash Bros for 3DS &amp; Wii U</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> Masahiro-Sakurai-on-Creating-Games </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《悬灯与玄灯》 Demo 展示及制作复盘分析</title>
      <link href="2022/08/29/20220829-earnthenamebackforshadowpuppets-demo-showcase-analysis/"/>
      <url>2022/08/29/20220829-earnthenamebackforshadowpuppets-demo-showcase-analysis/</url>
      
        <content type="html"><![CDATA[<h2 id="《悬灯与玄灯》-Demo-展示及制作复盘分析"><a href="#《悬灯与玄灯》-Demo-展示及制作复盘分析" class="headerlink" title="《悬灯与玄灯》 Demo 展示及制作复盘分析"></a>《悬灯与玄灯》 Demo 展示及制作复盘分析</h2><h3 id="项目信息"><a href="#项目信息" class="headerlink" title="项目信息"></a>项目信息</h3><h4 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h4><p>这是 2022 年 6、7 月参与一个游戏制作比赛产出的 Demo，项目未进入复赛。除了进行 Demo 的展示外也会进行项目复盘和分析。</p><h4 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h4><ul><li><p><a href="https://www.bilibili.com/video/BV1EY4y1P7a1?share_source=copy_web&vd_source=ae6360fc02a06275c80f3c44e417c599">b 站视频链接</a></p></li><li><p><a href="https://www.youtube.com/watch?v=FdxJweyDG8A">YouTube 链接</a></p><iframe width="560" height="315" src="https://www.youtube.com/embed/FdxJweyDG8A" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></li></ul><h4 id="Itch-页面"><a href="#Itch-页面" class="headerlink" title="Itch 页面"></a>Itch 页面</h4><p><a href="https://haodongliao.itch.io/earn-the-name-back-for-shadow-puppets">https://haodongliao.itch.io/earn-the-name-back-for-shadow-puppets</a></p><p>因为当时用的插件（一下子想不起来是哪一个了，好像是 Wwise？）不支持 WebGL 的打包，所以就没法在线试玩了，但还是在 itch 页面上放了 Win 的下载包~</p><h4 id="截图展示"><a href="#截图展示" class="headerlink" title="截图展示"></a>截图展示</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829173738.png" alt="开始界面"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829173846.png" alt="新手教程"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829174031.png" alt="BOSS 战"></p><h3 id="项目展示（取自参赛-PPT）"><a href="#项目展示（取自参赛-PPT）" class="headerlink" title="项目展示（取自参赛 PPT）"></a>项目展示（取自参赛 PPT）</h3><h4 id="产品定位"><a href="#产品定位" class="headerlink" title="产品定位"></a>产品定位</h4><h5 id="品类定位"><a href="#品类定位" class="headerlink" title="品类定位"></a>品类定位</h5><p>这是一款设计灵感源自银河战士恶魔城品类的横版战斗闯关游戏。</p><p>玩家将扮演受“皮影悬灯”之托的皮影，一路探索击敌，最终打败“白莲玄灯”，为皮影正名。</p><h5 id="产品阐释"><a href="#产品阐释" class="headerlink" title="产品阐释"></a>产品阐释</h5><p>该游戏以非遗中的皮影戏作为灵感来源，用游戏作为媒介，演绎了皮影在清末被污名化为“玄灯戏”，但最终沉冤得雪的故事。游戏将皮影的操作方式游戏化，取材北京中轴线传说来源以及景德镇陶瓷等元素进行敌人、场景元素设计。以游戏化的创新方式对皮影的兴衰发展进行解构再创作，以期吸引当代年轻人关注皮影戏这一非物质文化遗产，从而实现传承和弘扬中华民族灿烂文明的目的。</p><h4 id="目标用户定位"><a href="#目标用户定位" class="headerlink" title="目标用户定位"></a>目标用户定位</h4><p>热爱传统文化，对皮影戏等非物质文化遗产感兴趣的年轻人。</p><h4 id="游戏创意点说明"><a href="#游戏创意点说明" class="headerlink" title="游戏创意点说明"></a>游戏创意点说明</h4><h5 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h5><ul><li><p>操控方式</p><p>  用鼠标点按滑动的特殊操作方式将皮影的“三杆操纵”方式游戏化</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829185252.png" alt="将皮影的“三杆操纵”方式游戏化"></p><ul><li><p>光影运用</p><ol><li>创建能量多-光照强的对应关系；</li><li>越靠近玄灯，场景越是昏暗，但随着玩家能量的增强，玩家自己便成为了光明的源头；</li><li>力图最终在屏幕上还原现实世界中的皮影幕布的呈现效果</li></ol></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829185401.png" alt="光影运用"></p><ul><li><p>玩家技能设计</p><p>  创意源于皮影的常用色彩“红黄绿黑白”，受戏剧人物“生旦净末丑”中各颜色引申义的启发，最终结合玩家身体各部分颜色，直观设计了“红色-头部-喷火”、“黄色-武器-剑气”、“绿色-身体-恢复”、“黑色-腿部-影马”、“白色-脚部-闪现”的配套技能</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829185422.png" alt="玩家技能设计"></p><ul><li><p>敌人技能设计</p><p>  参考非遗北京中轴线传说——共工怒触不周山故事中的相繇、王子夜、浮游、无支祁、共工设计了敌人，并为各自设计了与形象及其等级相符的技能</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829185442.png" alt="敌人技能设计"></p><ul><li><p>地图设计</p><p>  受类银河战士恶魔城游戏地图设计的“能力-锁”、“回溯”、“解锁新区域”等特点的启发，以“玄”的甲骨文作为探索场景大框架，以“玄”的汉字演化变体作为场景分割方式，以各式小游戏及其奖励作为新区域的探索奖励，对类银河战士恶魔城的地图设计方法进行解构再演绎</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829185506.png" alt="地图设计"></p><h5 id="美学"><a href="#美学" class="headerlink" title="美学"></a>美学</h5><ul><li><p>玩家形象设计</p><p>  游戏中玩家形象的设计灵感源于西安市明清皮影艺术博物馆的各类藏品，且均还原了真实皮影的十一部分构成——头、上身、下身、两腿、两上臂、两下臂、两手。</p></li><li><p>敌人形象设计</p><p>  游戏中的敌人形象取材自非遗北京中轴线的传说——共工怒触不周山，并参考相繇、王子夜、浮游、无支祁、共工进行敌人形象设计</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220829185716.png" alt="玩家和敌人形象设计"></p><ul><li><p>敌人等级区分</p><p>  敌人共有三种级别——黑影、半透明、全彩，分别对应皮影制作过程中的“制皮”、“镂刻”、“敷彩”阶段，以形象对敌人实力进行直观区分</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide14.jpeg"></p><ul><li><p>地图及其元素设计</p><p>  游戏以“玄”的甲骨文作为探索场景大框架，以“玄”的汉字演化变体作为场景分割方式，并参考皮影元素中的“云朵子”进行元素纹样设计</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide15.jpeg"></p><ul><li><p>场景道具设计</p><p>  参考景德镇陶瓷中的颜色釉瓷设计了场景中的可交互道具</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide16.jpeg"></p><ul><li><p>BOSS 形象设计</p><p>  参考“玄”字的甲骨文变体，以及皮影戏中“云朵子”的美术风格进行了 BOSS 形象的美学设计</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide17.jpeg"></p><h5 id="叙事"><a href="#叙事" class="headerlink" title="叙事"></a>叙事</h5><ul><li><p>皮影在清末的兴衰波折</p><p>  将皮影艺人在清末被误打为与白莲教“玄灯聚众”相勾结的“玄灯匪”，但最终沉冤得雪的故事以游戏的方式进行解构，将游戏中的探索化为一条“受悬灯之托-击败玄灯幻化的敌人-收集被玄灯夺走的悬灯之力-战胜玄灯-为悬灯正名”的正名之路</p></li><li><p>越靠近玄灯，场景越是昏暗，但随着玩家能量的增强，玩家自己便成为了光明的源头，也暗含“成为悬灯”之意</p></li><li><p>结尾点题：在击败玄灯后，将视角拉回现代，并以“道尽千古事，挥舞百万兵；观明兴亡业，期承虚实情”做结。前两句展现皮影人所演绎的皮影艺术的魅力，后两句则表达在玩家知晓皮影艺术的兴衰波折后，希望人们传承弘扬这一光影艺术的殷切期待</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide19.jpeg"></p><h4 id="核心玩法和乐趣点介绍"><a href="#核心玩法和乐趣点介绍" class="headerlink" title="核心玩法和乐趣点介绍"></a>核心玩法和乐趣点介绍</h4><ul><li><p>核心玩法</p><p>  以鼠标点按滑动模拟皮影的操作方式，配合特色技能进行战斗</p></li><li><p>玩法乐趣</p><ol><li>特殊的操作方式在游戏中模拟了现实中的皮影操作方式；</li><li>随着游戏推进，不断解锁的与颜色对应的新能力会让战斗爽快感大幅提升</li></ol></li><li><p>类银河恶魔城的地图设计带来的探索乐趣</p><p>  参考恶魔城“能力-锁”、“回溯探索”、“新区域解锁”的机制所设计的地图，让玩家在获得新能力之后不仅能体会到战斗能力变强的乐趣，也能体会到有可供探索的新区域的乐趣</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide21.jpeg"></p><ul><li><p>紧张刺激的小游戏</p><p>  游戏中在可通过能力解锁的新区域中设计了“躲避球”、“吹箭陷阱”、“保护火源”、“死里逃生”等小游戏，在常规战斗之余增添了别样乐趣</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide22.jpeg"></p><ul><li><p>激烈的 BOSS 战</p><p>  参考“玄”字的甲骨文变体，以及皮影戏中“云朵子”的美术风格设计了 BOSS 形象，并为其设计了三种阶段、五种技能，能让经历一路探索变强的玩家充分展示自身能力，享受畅快的战斗</p></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide23.jpeg"></p><ul><li><p>丰富音效</p><p>  游戏中为各式行为都专门设计了音效，极具表现力，别有一番乐趣</p></li></ul><h4 id="美术风格"><a href="#美术风格" class="headerlink" title="美术风格"></a>美术风格</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide24.jpeg"></p><h3 id="制作复盘"><a href="#制作复盘" class="headerlink" title="制作复盘"></a>制作复盘</h3><blockquote><p>因为时间已经过去将近两个月，很多细节可能记不太清了，所以会着重一些特殊节点和事件。</p></blockquote><h4 id="0-概览"><a href="#0-概览" class="headerlink" title="0 概览"></a>0 概览</h4><p>这里先回顾一下从团队构建到项目提交的整体过程，其中我全权负责或是部分参与的以 <code>蓝色人头</code> icon 进行了标识，我认为可以改进或是出现了问题的部分以 <code>橙色感叹号</code> icon 进行了标识。</p><p>整体而言，我以主策划和副程序的身份参与了此次项目。且认为可改进或有问题的部分有：</p><ul><li>会议探讨初版策划案的可能性（第一次选择方向）</li><li>针对各风险实现解决原型（第二次选择方向，后面都为第二次）</li><li>收尾时的各种迭代</li></ul><p>对于这部分的反思会放到最后。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202208301618production.png"></p><h4 id="1-初期关于非遗赛道的思考以及延伸的可能游戏想法"><a href="#1-初期关于非遗赛道的思考以及延伸的可能游戏想法" class="headerlink" title="1 初期关于非遗赛道的思考以及延伸的可能游戏想法"></a>1 初期关于非遗赛道的思考以及延伸的可能游戏想法</h4><p>以下基本都引自当时所写的设计文档</p><h5 id="关于非遗赛道的思考"><a href="#关于非遗赛道的思考" class="headerlink" title="关于非遗赛道的思考"></a>关于非遗赛道的思考</h5><blockquote><p>看了去年的获奖作品，其实让我有些偏向于选非遗赛道，因为特殊赛道作品同时也是可以参与主赛道评比的。所以选择特殊赛道其实多了一分“可能性”。</p><p>另一方面其实也是有些私心，我个人的观点是游戏不仅仅是一种娱乐方式，它在未来，甚至在当下的现在已经在成为一些人（特别是像我们这些爱玩游戏的玩家）看待世界，甚至与世界相处的一种方式。所以也希望所做出来的东西，能在某种程度上也反映自己对所知所学所认同的，对这个世界的一点点观感。我个人对于中国传统文化是很有感情的，所以，综合之下，确实会更倾向于非遗赛道。</p><p>非遗赛道设置的目的，不难猜想，传承与弘扬。</p><p>其中一种最直接的其实就是模拟类游戏，让玩家直观感受整个流程，参考游戏《超执刀》。这种类型的话其实大方向比较好定，就看对什么题材感兴趣，然后要怎么让这个过程好玩起来其实还是需要一些深入思考，但这种是最能直接回应赛道主题的方式。这种类型的话目标玩家的场景其实可以预设为博物馆或是教学场景我觉得没问题。</p><p>另一种需要对其中的行为本身进行解构，比如不是从推进流程的人本身，而是以被使用的工具的角度。这种类型的目标玩家的场景其实就会散一些，因为时间不足以进行大规模用户调研，可以假定为和我们自己类似的玩家（等方案差不多定下来后也可以参考身边朋友的意见，他们的反馈也会很重要！）</p><p>简言之，<strong>目标是做一个能让人们喜闻乐见地玩下去，并真正能从中了解到那个非遗本身的知识和文化的这样一个游戏</strong>。</p><p>进行创意构想的时候也可以简单参考一下卖点设计，即回答“游戏凭什么吸引玩家游玩”，其中会涉及一点，即与相似游戏（竞品）的区分点（优势）在哪里。</p><p>而玩法创意构想的时候主要针对怎样给玩家带来非线性体验，即让他们“心跳”起来。</p><p>再之外那就会涉及比如游戏之外的讨论效应和玩家群聚效应，但这暂时就不属于需要主要关心的部分了。</p><p><strong>主要关心的是玩法创意构想部分！</strong></p><p>下面会对一些我直观想到的可能玩法进行一下罗列，肯定不成熟，但可以参考。如果觉得一定程度上喜欢，可以在评论栏里写下 ID 和想法嗷。如果有想到新的玩法也可以写在评论里 (￣▽￣)”</p></blockquote><h5 id="当时想到-脑子里算是有了些画面感的项目（更多的项目想法看后两个-section）"><a href="#当时想到-脑子里算是有了些画面感的项目（更多的项目想法看后两个-section）" class="headerlink" title="当时想到 脑子里算是有了些画面感的项目（更多的项目想法看后两个 section）"></a>当时想到 脑子里算是有了些画面感的项目（更多的项目想法看后两个 section）</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830174251.png" alt="投票总表"></p><h5 id="功能型或是解构类"><a href="#功能型或是解构类" class="headerlink" title="功能型或是解构类"></a>功能型或是解构类</h5><blockquote><p>目前能直观想到的可能是以下两种大方向：</p><ol><li> 功能型，其实就是前面提到的类似流程型的游戏，这类游戏其实目标场景更容易想到，非常合适用于教学或是类似博物馆这样的场景。期望人们可以真正通过这款游戏来对相关非遗有一个直观的了解和认知。理想情况下，当然是又有趣好玩又能学到知识是最好的！</li></ol><ul><li> 可供参考的游戏：<a href="https://www.bilibili.com/video/BV1Zx411S73t/">超执刀</a>，以及模拟类游戏</li></ul><ol start="2"><li> 解构型，这种思路可能从涉及工具的非遗出发，比如成为工具本身。开始时其实玩家并不能直观知道全貌，直到最后才能得知。比如，玩家所操作的不是弹琴的人，而是琴本身，相应问题可能会是“琴为什么一定要被弹/为什么只能被弹”</li></ol><p>下面是一些可能的项目，说明，及玩法思考</p><p>这大类的游戏创意出发点会主要关注演奏方式/制作过程。</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830174718.png"></p><h5 id="叙事类或基于故事背景构建战斗-解谜"><a href="#叙事类或基于故事背景构建战斗-解谜" class="headerlink" title="叙事类或基于故事背景构建战斗/解谜"></a>叙事类或基于故事背景构建战斗/解谜</h5><blockquote><ol><li>叙事类</li></ol><ul><li>直接基于叙事相关的非遗来构建游戏世界 以小见大 期望让人们对故事本身 甚至背后更深的意义感兴趣</li><li>这类其实属于初一想貌似很好做开头，毕竟有现成故事，但是这类游戏要想做出彩，其实很考验叙事和剧情功底，另一方面就得考虑美术表现力了。</li><li>如果要做，估计也需要从其中挑选冲突性最强的故事出来。</li></ul><ol start="2"><li>基于故事背景构建战斗/解密</li></ol><ul><li>不过也不一定真的全篇叙事，也可以挑选其中一场最具冲突性的战斗来集中做一个战斗/解密关卡？这感觉也是一种很好的思路，不会太大，难以把控，也可以以点窥面。</li></ul></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830174840.png"></p><h5 id="目前的一些思考"><a href="#目前的一些思考" class="headerlink" title="目前的一些思考"></a>目前的一些思考</h5><p>即使现在反观，个人认为当时思考的大部分内容仍具有参考价值。总结而言就是需要一款以小见大的游戏，让人们能借助它来关注到背后的非遗本身，从而实现传承和弘扬的目的。</p><p>而对于这种基于特定文化主题的改编，当时提的几个大类也具有很好的概括性：</p><blockquote><ol><li> 功能型，其实就是前面提到的类似流程型的游戏，这类游戏其实目标场景更容易想到，非常合适用于教学或是类似博物馆这样的场景。期望人们可以真正通过这款游戏来对相关非遗有一个直观的了解和认知。理想情况下，当然是又有趣好玩又能学到知识是最好的！</li></ol><ul><li> 可供参考的游戏：<a href="https://www.bilibili.com/video/BV1Zx411S73t/">超执刀</a>，以及模拟类游戏</li></ul><ol start="2"><li> 解构型，这种思路可能从涉及工具的非遗出发，比如成为工具本身。开始时其实玩家并不能直观知道全貌，直到最后才能得知。比如，玩家所操作的不是弹琴的人，而是琴本身，相应问题可能会是“琴为什么一定要被弹/为什么只能被弹”</li></ol><p>这大类的游戏创意出发点会主要关注演奏方式/制作过程。</p><ol start="3"><li>叙事类</li></ol><ul><li>直接基于叙事相关的非遗来构建游戏世界 以小见大 期望让人们对故事本身 甚至背后更深的意义感兴趣</li><li>这类其实属于初一想貌似很好做开头，毕竟有现成故事，但是这类游戏要想做出彩，其实很考验叙事和剧情功底，另一方面就得考虑美术表现力了。</li><li>如果要做，估计也需要从其中挑选冲突性最强的故事出来。</li></ul><ol start="4"><li>基于故事背景构建战斗/解密</li></ol><ul><li>不过也不一定真的全篇叙事，也可以挑选其中一场最具冲突性的战斗来集中做一个战斗/解密关卡？这感觉也是一种很好的思路，不会太大，难以把控，也可以以点窥面。</li></ul></blockquote><p>倒是看到解构型的时候，突然想到了最近在看的《游戏情感设计：如何触动玩家的心灵》一书中提到的《火车》（Train）这一游戏，玩家们需要移动装满了乘客的火车车厢，把他们从一个地方运往另一个地方，途中会遇到障碍和挑战。到了游戏结束时，他们才知道火车的终点是奥斯维辛。</p><p>《火车》虽然是从叙事层面出发的，但实现的效果，和我之前所想的“直到最后知道真相然后恍然大悟”的感觉是一样的。感觉需要是一个玩家一看全貌就知道是什么，但对其内里不是很了解的这样一个事物。换言之，过程需要有“蒙蔽性”，结果需要有“恍然性”。</p><h4 id="2-中国皮影戏玩法设想"><a href="#2-中国皮影戏玩法设想" class="headerlink" title="2 中国皮影戏玩法设想"></a>2 中国皮影戏玩法设想</h4><h5 id="主要创意方向"><a href="#主要创意方向" class="headerlink" title="主要创意方向"></a>主要创意方向</h5><h6 id="功能型-展现皮影制作过程"><a href="#功能型-展现皮影制作过程" class="headerlink" title="功能型 - 展现皮影制作过程"></a>功能型 - 展现皮影制作过程</h6><blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831222325.png"></p><ul><li>  画稿</li><li>  过稿</li><li>  潮皮</li><li>  推平</li><li>  镂刻 - 推皮走刀 （这个也许是一个可以专门拿出来的点）</li><li>  上色</li></ul><p>如果要做偏这个方向，也许不用全貌展示（其中细节过多，需要太多资料），可以挑选其中的具有代表性的阶段进行深入拆解。比如镂刻。</p></blockquote><h6 id="功能型-展现皮影表演过程（作为表演者）"><a href="#功能型-展现皮影表演过程（作为表演者）" class="headerlink" title="功能型 - 展现皮影表演过程（作为表演者）"></a>功能型 - 展现皮影表演过程（作为表演者）</h6><ul><li>  道情    </li></ul><p>但这个方向其实可以融入到下一个方向里，主要是为了展现皮影的操作难度。</p><h6 id="解构型-叙事-玩家扮演皮影角色，演绎经典皮影剧目中的故事"><a href="#解构型-叙事-玩家扮演皮影角色，演绎经典皮影剧目中的故事" class="headerlink" title="解构型+叙事 - 玩家扮演皮影角色，演绎经典皮影剧目中的故事"></a>解构型+叙事 - 玩家扮演皮影角色，演绎经典皮影剧目中的故事</h6><ul><li>  和决战平安京的联动：<a href="https://www.bilibili.com/video/BV1ab4y1X7Ef?spm_id_from=333.337.search-card.all.click">【灯影戏梦】国风皮影戏纪录片《灯火人间戏》</a></li><li>经典剧目<ul><li>  《闹元宵》</li><li>  《鹤与龟》</li><li><a href="https://www.bilibili.com/s/video/BV1Mg411T7p8">《老鼠偷油》</a><ul><li>  真的很好笑，推荐大家都看看！</li></ul></li><li>  大闹天宫！</li><li>  皮影戏的演出，有历史演义戏、民间传说戏、武侠公案戏、爱情故事戏、神话寓言戏、时装现代戏等等，无所不有。折子戏、单本戏和连本戏的剧目繁多，数不胜数。常见的传统剧目有白蛇传、拾玉镯、西厢记、秦香莲、牛郎织女、杨家将、岳飞传、水浒传、三国演义、西游记、封神榜等等。从革命战争年代起到解放后，新发展出的时装戏、现代戏和童话寓言剧，常见的剧目有兄妹开荒、白毛女、刘胡兰、小二黑结婚、小女婿、林海雪原、红灯记、龟与鹤、两朋友、东郭先生等等。</li><li>  2017年，在第57届威尼斯双年展上，汪天稳及艺术家汤南南、邬建安、姚惠芬等人，合力创作了皮影表演作品《不息-移山填海》。这部讲述中华民族生命不止、奋斗不息的精神的作品，成为了那一年威尼斯双年展的焦点和中国馆的核心展示，更是在国内引起了一波关于传统艺术与当代艺术如何结合的热烈讨论。</li></ul></li></ul><h6 id="头脑风暴得出的相关元素"><a href="#头脑风暴得出的相关元素" class="headerlink" title="头脑风暴得出的相关元素"></a>头脑风暴得出的相关元素</h6><blockquote><ul><li>  近大远小（针对 3d）</li><li>光与影<ul><li>  可以延伸到 2d 与 3d 空间的变换 - 来源于去年的金奖作品《五维空间》 有光则有影 为 3d （皮状态） 无光则无影 为 2d（影状态）</li></ul></li><li>灯与萤火虫<ul><li>  萤火虫作为收集元素，其会成为玩家在虚实之间转化的力量来源（有光则能实，无光只能虚）</li></ul></li><li>特殊操作方式<ul><li>因为皮影操作一般为三杆 - 头、左手、右手，其实可以延伸出双人的合作操作模式，参考 <a href="https://www.bilibili.com/video/BV1Xs411x7Ak?spm_id_from=333.337.search-card.all.click">manual samuel</a><ul><li>  一人负责角色移动与头杆（比如手柄左摇杆控制前后移动，右摇杆控制头部）</li><li>  另一人负责左手与右手（比如手柄左摇杆为左手与右摇杆为右手）</li></ul></li></ul></li><li>特殊颜色<ul><li>  其实可以考虑 不单单制作最传统的配色，可以考虑为其增添发光效果，赛博皮影！听着都酷！</li></ul></li><li>虚实关系<ul><li>比如有两个状态：远离布（就是虚状态），靠近布（就是实状态）。<ul><li>  只有虚状态下人物才能转身，但虚状态下的攻击大幅降低（如只有 50%）</li><li>  实状态下人物攻击正常（100%），但只能向前攻击（前后上下移动都可以）</li></ul></li></ul></li></ul></blockquote><h6 id="可能构想及投票！"><a href="#可能构想及投票！" class="headerlink" title="可能构想及投票！"></a>可能构想及投票！</h6><blockquote><p>关键是要能发挥出皮影本身的特点（即上面提到的几个相关元素，尤其是光影以及操作方式），不然我觉得但是以皮影元素作为设计点就失去了意义。</p><p>我目前看了几个皮影戏，故事精简，有直观冲突并且便于设计主角的是<a href="https://www.bilibili.com/s/video/BV1Mg411T7p8">《老鼠偷油》</a>。但其实应该还有很多潜在可能性，选择的要点主要是：</p><ol><li> 有清晰故事脉络（方便设计玩家目的/获胜条件）</li><li> 有直观故事冲突（有对立，方便设计敌人）</li></ol><p>如果确实最终选择以这个方向开展，可能还需要再看看有没有别的合适的剧目。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830225746.png"></p></blockquote><h6 id="叙事型-讲述其历史起源"><a href="#叙事型-讲述其历史起源" class="headerlink" title="叙事型 - 讲述其历史起源"></a>叙事型 - 讲述其历史起源</h6><blockquote><ul><li>  历史起源</li></ul><p>皮影戏从有文字记载，已经有2000多年的历史，汉武帝爱妃李夫人染疾故去了，武帝的思念心切神情恍惚，终日不理朝政。大臣李少翁一日出门，路遇孩童手拿布娃娃玩耍，影子倒映于地栩栩如生。李少翁心中一动，用棉帛裁成李夫人影像，涂上色彩，并在手脚处装上木杆。入夜围方帷，张灯烛，恭请皇帝端坐帐中观看。武帝看罢龙颜大悦，就此爱不释手。这个载入《汉书》的爱情故事，被认为是皮影戏最早的渊源。</p></blockquote><h5 id="目前的一些想法"><a href="#目前的一些想法" class="headerlink" title="目前的一些想法"></a>目前的一些想法</h5><p>这个阶段的构想中其实有一部分比较好的想法未能在最终版本中体现，如想法 7 中的 </p><blockquote><p>两个状态：远离布（就是虚状态），靠近布（就是实状态）。<br>只有虚状态下人物才能转身，但虚状态下的攻击大幅降低（如只有 50%）<br>实状态下人物攻击正常（100%），但只能向前攻击（前后上下移动都可以）</p></blockquote><p>想要还原真实皮影的质感，个人感觉转身一定是需要特殊处理的，这也是皮影作为“光影艺术”的直接体现之一。</p><p>除了降低虚状态下的攻击，也可以对虚状态进行一些加强，如虚状态下能闪避攻击。这样能让玩家从“因为要转身不得不进入虚状态”变为“也可以因为想闪避攻击而进入虚状态”，从而增加玩法的策略深度。</p><p>另外几个想法也各有特色，应该是最后得票不够高被舍弃了…</p><h4 id="3-第一次集体选题分析反思"><a href="#3-第一次集体选题分析反思" class="headerlink" title="3 第一次集体选题分析反思"></a>3 第一次集体选题分析反思</h4><p>其实头脑风暴部分进行的还算顺利，只不过基本只使用了<code>基于给定元素的头脑风暴</code>方法。</p><h6 id="第一次头脑风暴"><a href="#第一次头脑风暴" class="headerlink" title="第一次头脑风暴"></a>第一次头脑风暴</h6><p>这里先放一下第一次头脑风暴的截图</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830161009.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830161106.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830161200.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830161307.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830161505.png"></p><p>最终票选结果最高的是这几个</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220830161547.png"></p><h5 id="第一次选题的初版策划案"><a href="#第一次选题的初版策划案" class="headerlink" title="第一次选题的初版策划案"></a>第一次选题的初版策划案</h5><h6 id="游戏描述-游戏概述"><a href="#游戏描述-游戏概述" class="headerlink" title="游戏描述 - 游戏概述"></a>游戏描述 - 游戏概述</h6><blockquote><ul><li>玩家人数：<ul><li>  单人</li></ul></li><li>游戏玩法类型：<ul><li>  探索+PZL+视角转换</li></ul></li><li>游戏描述<ul><li>故事描述<ul><li>  清末，原本作为“悬灯操影”的皮影艺人的你被打为了和白莲教勾结的“玄灯匪”。为了不让这一身技艺断送在自己手里，你踏上了躲躲藏藏的守护传承之路。而手中的皮影，似是感受到了你的一腔热情，也悄然发生了变化…</li></ul></li><li>玩法描述<ul><li>  玩家作为操纵皮影的“操影师”，主要活动在三维空间，而皮影主要活动在二维空间。三维空间中的光影关系能够对二维空间造成影响，而二维空间中的物体变化反过来也能影响三维空间。玩家需要巧妙利用不同空间的光影以及位置关系来一次次逃脱官兵的追捕。</li></ul></li></ul></li><li>一句话描述游戏，它为什么特别（让人印象深刻）：<ul><li>  两种维度，虚实相生逃一死；多样皮影，丰富变化解万难；</li><li>  玩家所操控的皮影具有多种变化，对应多种能力；维度的转换也十分烧脑，令人着迷。</li></ul></li><li>目标玩家群体：<ul><li>  和我们一样的同龄玩家</li></ul></li></ul></blockquote><h6 id="游戏描述-游戏玩法"><a href="#游戏描述-游戏玩法" class="headerlink" title="游戏描述 - 游戏玩法"></a>游戏描述 - 游戏玩法</h6><blockquote><ul><li>目标<ul><li>玩家获胜条件<ul><li>  在规定时间内，逃出房间。</li></ul></li><li>玩家失败条件<ul><li>  没有在规定时间内逃出房间。</li></ul></li></ul></li><li>路径<ul><li>  玩家如何达到目标</li><li>从玩法层面描述游戏怎么玩<ul><li>  玩家需要灵活运用三维空间的操影人和光影关系为二维空间中的皮影创造路径，从而能让二维空间中的皮影通过对二维世界中的物体进行改变来反作用于三维世界，从而为操影人赢得求生的机会。</li></ul></li></ul></li><li>挑战<ul><li>玩家在实现目标过程中可能遇到的障碍<ul><li>  需要在三维空间中找到合适的光影关系，从而为二维空间创造路径</li><li>  需要在二维空间中为三维世界找到合适的逃生手段</li></ul></li></ul></li><li>体验<ul><li>期望传达的目标体验是什么<ul><li>  限时逃生的惊险</li><li>  多样皮影的绚丽</li><li>  烧脑</li></ul></li></ul></li><li>玩法是否原创？其他同类游戏做了些什么？与他们相比，我们的区分点在哪里？<ul><li>  该玩法应该是属于某种视觉错位解密？并非原创</li><li>  同类游戏包括：笼中窥梦，纪念碑谷系列</li><li>  区分点：2d 和 3d 世界藉由光影关系相互影响，皮影人物及其能力的多样化</li></ul></li><li>3C<ul><li>操作方式<ul><li>  按键映射</li></ul></li><li>相机视角<ul><li>  游戏中一共会有三种视角</li></ul></li></ul></li></ul></blockquote><blockquote><ul><li>3D 空间<ul><li>  第一人称的正面视角，用于改变和观察当前光影关系</li></ul></li></ul></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831222413.png"></p><blockquote><pre><code>- 第三人称的 45 度 俯视角，便于与场景交互，以寻找光影关系的可能性</code></pre></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831222430.png"></p><blockquote><ul><li>2D 空间<ul><li>  由第一人称的正面视角推进后变为 2D 平面视角，皮影只能在该视角下进行操作和交互</li></ul></li></ul></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831222448.png"></p><blockquote><ul><li>卖点<ul><li>与同类作品的区分点在哪里/凭什么来吸引玩家游玩<ul><li>  皮影元素的引入</li><li>  2d 和 3D 世界藉由光影关系互相影响的视觉错位解密</li></ul></li></ul></li></ul></blockquote><h6 id="原型验证及风险评估-功能原型-需求"><a href="#原型验证及风险评估-功能原型-需求" class="headerlink" title="原型验证及风险评估 - 功能原型 - 需求"></a>原型验证及风险评估 - 功能原型 - 需求</h6><blockquote><ol><li> 需要想办法让阴影组成的 2d 平面可玩起来</li></ol><ul><li>  需要达成的目标：可以在阴影组成的 2d 平面进行角色移动</li><li>  需要考虑的因素：如何利用阴影构建 2d 世界</li></ul><p>我以前只试过单独制作 2d 游戏的交互，相当于是用的 tile map 那一套。先不考虑 3d 世界的变化对 2d 的影响，怎么让这个由阴影组成的 2d 平面可玩呢？目前想到的可能性是直接基于阴影制作 2d 关卡，所以是一种“伪实时操作”的阴影变化而形成的“新”关卡。</p><ol start="2"><li> 验证 3d 空间的改变对于 2d 空间的影响</li></ol><ul><li>  需要达成的目标：3d 空间改变后 用新的阴影构建 2d 平面关卡</li><li>  需要考虑的因素：实时阴影所带来的复杂性</li></ul><p>3d 空间中物体的移动改变阴影倒是简单，但是需要让这个改变在 2d 世界中“生效”。这需要获取阴影然后重新渲染 2d 关卡。听起来不太可能啊。除非是重新基于当前阴影来重新生成关卡，感觉好难。另一种简化方法是通过限定交互可选项（如一个物体只能被摆动到某个位置或者只能旋转特定角度）来为每一种交互可能单独构建 2d 关卡。这个需要讨论一下。有可能需要重新构思一下这部分玩法，甚至去掉 3d 空间的交互</p><ol start="3"><li> 验证 2d 空间的改变对于 3d 空间的影响</li></ol><ul><li>  需要达成的目标：2d 平面改变后 3d 空间物体做出相应改变</li><li>  需要考虑的因素：2d 空间物体的非常规变化以及 2d 3d 变化的空间映射关系</li></ul><p>2d 空间的改变对于 3d 空间的影响，目前想到的肯定是得绑定 2d 和 3d 中的物体（他们其实都是各自独立的 只是假装是一体），然后具体改变目前想到的有两种，一种是基础几何变换，比如平移，旋转，这个倒是直接改变绑定的 3d 物体的属性就可以；我想到的另一种变换其实是皮影本身的变换，比如皮影在这一关中获取到了变身的能力（比如变为梯子），那么就在 3d 世界中创建相应梯子就可以。感觉难点会出现在位置关系的映射上，最后的解决方案估计是做成某种伪映射。</p><ol start="4"><li> 用 direction light 模拟油灯效果</li></ol><ul><li>  需要达成的目标：实现 忽明忽暗的点光源效果（模拟油灯/蜡烛）</li><li>  需要考虑的因素：如果要做实时光照 貌似只能用 direction light</li></ul><p>我看了一下，spot light 和 point light 都不支持实时光照，只有 direction light 支持实时光照，可能得研究一下加遮罩之类的，一个是为了聚焦，也是为了模拟油灯效果（忽明忽暗倒是可以直接调整 intensity）</p></blockquote><h6 id="原型验证及风险评估-玩法原型"><a href="#原型验证及风险评估-玩法原型" class="headerlink" title="原型验证及风险评估 - 玩法原型"></a>原型验证及风险评估 - 玩法原型</h6><blockquote><p>说实话，要是功能原型能验证通过，玩法原型，即谜题设计会是可以预见的一大难点哈哈哈…</p></blockquote><h6 id="原型验证及风险评估-美术原型-需求"><a href="#原型验证及风险评估-美术原型-需求" class="headerlink" title="原型验证及风险评估 - 美术原型  - 需求"></a>原型验证及风险评估 - 美术原型  - 需求</h6><blockquote><p>可以先制作一个玩家可操控的人形皮影角色，需要能够行走，跳跃。</p></blockquote><blockquote><p>可以参考下面的西安市明清皮影艺术博物馆中的藏品介绍中的“身段”中的人物</p></blockquote><h6 id="原型验证及风险评估-美术原型-参考资料"><a href="#原型验证及风险评估-美术原型-参考资料" class="headerlink" title="原型验证及风险评估 - 美术原型  - 参考资料"></a>原型验证及风险评估 - 美术原型  - 参考资料</h6><blockquote><ul><li>  <a href="http://www.shadowpuppetart.com/p_yunyou.html">西安市明清皮影艺术博物馆</a></li><li>  <a href="http://www.leather-silhouette.com/ydy">中国西安数字皮影博物馆</a></li></ul></blockquote><h6 id="整体故事背景-“玄灯匪”的由来"><a href="#整体故事背景-“玄灯匪”的由来" class="headerlink" title="整体故事背景 - “玄灯匪”的由来"></a>整体故事背景 - “玄灯匪”的由来</h6><p>截取自《“西琴”东渐与本土艺术》</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831222700.png"></p><blockquote><p>白莲教属于民间秘密宗教组织,有自己的一套教规和仪式。因为白莲教入教仪式有“中棹设灯一盏，使观灯花，变化百出”，教徒称之为“玄灯”,故被封建统治者诬为“玄灯匪”。而演出皮影戏也要悬灯，“玄灯”与“悬灯”音同意不同。又由于民间传说白莲教起义是利用“纸人纸马”造反.白莲教利用通俗的民间戏曲形式演唱经卷。宣传教义，发动群众，组织群众，号召群众反抗官府。他们这种活动多在夜晚进行，所谓“天将晓，各教归”。而影戏也是在夜间聚会，中悬巨灯，用皮人皮马来演唱“影卷”，故才有影戏是“皮人皮马造反”的“悬灯匪”的说法，产生了影戏活动与白莲教秘密结社有关的嫌疑。</p></blockquote><h5 id="当时的一些思考"><a href="#当时的一些思考" class="headerlink" title="当时的一些思考"></a>当时的一些思考</h5><p>这个版本其实主要关注于空间解密，要是能做出来感觉会是类似《笼中窥梦》那样的感觉，但这种类型的解密说实话对谜题设计的要求很高，我自认暂时还没有这样的谜题设计能力，所以只得作罢。</p><p>另一个放弃的原因是当时考虑到如果要实现想象中的空间解密效果，需要实现 3D 阴影在 2D 平面上实时投射这样的效果，当时在实现上也有困难。</p><p>虽然可以将阴影的实时移动简化为非实时移动（即预设可能的移动方案），把它改为一种类似密室逃脱的空间解密游戏。然而当时受制于谜题设计难度，最终也没有选择这个方案。</p><h4 id="4-之后就是当前看到的这个版本了"><a href="#4-之后就是当前看到的这个版本了" class="headerlink" title="4 之后就是当前看到的这个版本了"></a>4 之后就是当前看到的这个版本了</h4><h5 id="当时的灵感来源"><a href="#当时的灵感来源" class="headerlink" title="当时的灵感来源"></a>当时的灵感来源</h5><p>当时的灵感其实来自于两个大的方向：</p><blockquote><ol><li>皮影操控+音乐<ul><li> 游戏角色是操作皮影的人,以控制皮影去做一些肢体动作去接触音符,</li><li> 最后的音符连串起来会是一首民间曲调</li></ul></li></ol></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831222743.png"></p><blockquote><ol start="2"><li> 特殊的光照方式</li></ol></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831222802.png"></p><h5 id="后续取舍"><a href="#后续取舍" class="headerlink" title="后续取舍"></a>后续取舍</h5><p>加入音符/节奏玩法的思路其实是参考了《节奏海拉鲁》，但后来考虑到相关音乐音效的制作难度太大，最终也放弃了音符/节奏元素的引入。</p><h3 id="可改进的点"><a href="#可改进的点" class="headerlink" title="可改进的点"></a>可改进的点</h3><h4 id="评审反馈"><a href="#评审反馈" class="headerlink" title="评审反馈"></a>评审反馈</h4><blockquote><p>选题有一定创意，同时核心玩法与题材有一定契合度。美术有一定风格，但素材量略微不足，场景和战斗表现较平、<br>同时作为横版格斗最重要的战斗完成度不足，打击感与操作精准度均有明显缺憾，尚需进一步打磨。</p></blockquote><h4 id="反馈思考"><a href="#反馈思考" class="headerlink" title="反馈思考"></a>反馈思考</h4><blockquote><blockquote><p>我更多会从设计角度进行反思</p></blockquote></blockquote><p>这里先补充一个后面会多次提到的概念——“三个原因”原则。</p><h5 id="设计决策要满足“三个原因”的原则"><a href="#设计决策要满足“三个原因”的原则" class="headerlink" title="设计决策要满足“三个原因”的原则"></a>设计决策要满足“三个原因”的原则</h5><p>设计决策应尽可能地遵循陈星汉所提过的 “三个原因” 的原则。</p><blockquote><blockquote><p>“三个原因” 的原则指的是在进行元素引入等设计决策时，应该至少满足三个引入原因，这样才能称得上是有力的设计。<br>《游戏设计艺术》<a href="https://medill-east.github.io/2022/07/11/20220711-theartofgamedesign-chap13/#toc-heading-1">第十三章 游戏机制必须平衡</a> 中所提到的 <a href="https://medill-east.github.io/2022/07/11/20220711-theartofgamedesign-chap13/#toc-heading-26">49 号透镜：优雅</a> 所说的也是同样的道理，即一个设计应该能够满足多个设计目的。</p></blockquote></blockquote><hr><p>评审反馈中指出的明显问题有：</p><ol><li>美术有一定风格，但素材量略微不足 —— 美术素材不足</li><li>场景和战斗表现较平 —— 关卡和战斗设计需要提高</li><li>战斗完成度不足，打击感与操作精确度均有明显缺憾 —— 战斗手感需要提高</li></ol><p>选题，核心玩法和题材都用了“一定”作为定语，也就是说勉强是个及格线，也并不出彩。</p><p> 这些问题其实并非没有意识到，战斗手感本来的打算是如果能进入复赛就重点调试，但未能如愿。时间资源本就是有限的，所以这暴露出的问题是优先级的排期不够合理。</p><h5 id="问题：需求优先级排期可以优化，即项目管理能力不足"><a href="#问题：需求优先级排期可以优化，即项目管理能力不足" class="headerlink" title="问题：需求优先级排期可以优化，即项目管理能力不足"></a>问题：需求优先级排期可以优化，即项目管理能力不足</h5><p>这次项目推进过程中美术同学的电脑送修了差不多一周，所以大头的美术资源（主角、敌人、结尾）虽然创作完成，但只有很少的时间留给了其余部分（拾取物素材），地图中的大部分素材其实是我这个外行来创作的，最终导致了反馈中所提到的美术素材不足的问题。</p><p>这其实就涉及 “如何在有限资源情况下更好地完成项目” 这一宏大的项目管理问题，往小了说就是需求的优先级排期问题。</p><p>这次项目推进的前中期需求排期主要是利用飞书表格进行的，后期快速迭代时则主要是利用的看板功能进行直观地分职能需求排期，对于我们这样一个较小的项目而言，个人感觉差不多是够用的。</p><p>在项目早期（差不多六月中）我其实已经以周为单位规划完了大致的需求完成节点，但在项目推进过程中还是多次出现了需求延期的情况，除开电脑送修这种非人为因素，其中其实还是有不少可以优化的地方：</p><h6 id="反思：需求沟通时，一定要摸清对方的沟通习惯，并且双向确认"><a href="#反思：需求沟通时，一定要摸清对方的沟通习惯，并且双向确认" class="headerlink" title="反思：需求沟通时，一定要摸清对方的沟通习惯，并且双向确认"></a>反思：需求沟通时，一定要摸清对方的沟通习惯，并且双向确认</h6><p>此次项目是线上组队，也是全程线上进行，所以事先对于大家的沟通习惯都不了解，所以这个问题还是出现了几次。</p><p>解决方案目前想到的其实就是双向确认，在我方描述完需求后，让需求承接方也复述一遍需求，以确保双方达成共识。且为了避免占用所有人的时间，需求复述这一环节可以采取 1v1 进行的方式，即统一的会议结束后，单独找需求承接方来进行 double check。</p><p>其实这样的问题本可以避免的，因为一直也在强调 “如果有任何不清楚的地方，一定要沟通” 云云，但很可能出现的情况就是对方觉得了解得很清楚了，但其实和发布的需求有偏差的情况。一方面当然是因为需求描述不够清晰，产生了歧义，但另一方面也是因为双方没有真正达成共识，这在团队协作中应该很常见？所以对于未来的长期团队而言，摸清每个人的沟通习惯也是很重要的。</p><h6 id="反思：提升自身积累，才能更清晰地描述需求，帮助项目更快更好地推进"><a href="#反思：提升自身积累，才能更清晰地描述需求，帮助项目更快更好地推进" class="headerlink" title="反思：提升自身积累，才能更清晰地描述需求，帮助项目更快更好地推进"></a>反思：提升自身积累，才能更清晰地描述需求，帮助项目更快更好地推进</h6><p>因为以前看过的资料中反复提到过需要根据对方的情况来调整需求描述的方法，如程序更喜欢清晰的输入输出关系以及流程图，美术更喜欢有直观的对照参考。此次项目推进中也在有意识地这么做，但仍有较大的提升空间。</p><p>做的不够好的很大原因是自身积累不足，尤其是美术需求。因为我自己就是副程序，所以和程序同学的沟通其实也较为顺畅。提音效需求的时候其实也大概能通过文字和语音沟通来明确需求。但对于美术和 UI 需求，此次只做到了给出大致的美术参考范围（甚至都不是精确的美术参考），剩下的都靠美术和 UI 同学自由发挥。</p><p>好在美术同学和 UI 同学自身专业水平过硬，产出的素材水平都较高。但最终由于时间有限和我对于下一步艺术资产迭代没有清晰想法的原因而没有能更好地进行迭代。</p><p>无论是从项目推进效率（能更清晰地描述需求就能减少不必要的时间浪费）还是从自我提升的角度而言，在未来都需要更多地提升自身的艺术涵养，否则还是会出现 “自己都不能清楚说出要的是什么” 的尴尬情况。</p><h5 id="问题：场景和战斗表现较平"><a href="#问题：场景和战斗表现较平" class="headerlink" title="问题：场景和战斗表现较平"></a>问题：场景和战斗表现较平</h5><p>这里所指的 “表现较平” 可以从四元素层面（技术层面按下不表）进行一下拆解。</p><blockquote><blockquote><p>因为此次项目设计中一共只有三个关卡，“新手教学-类银河恶魔城探索战斗-BOSS战”，其中第二部分“类银河恶魔城探索战斗”所占比例是最大的，这里也以该部分进行拆解反思。</p></blockquote></blockquote><ul><li>机制层面：应该是指关卡设计和战斗设计缺陷。</li><li>叙事层面：场景、战斗和整体叙事的契合度不够高。</li><li>美学层面：这个其实是前面提到过的美术素材不够的问题。</li></ul><h6 id="问题：场景和战斗表现较平-机制层面"><a href="#问题：场景和战斗表现较平-机制层面" class="headerlink" title="问题：场景和战斗表现较平 - 机制层面"></a>问题：场景和战斗表现较平 - 机制层面</h6><p>此次项目的关卡设计灵感其实来自于之前所看的 <a href="https://mp.weixin.qq.com/s/hG_s05ULXsl_5nxeuYQb4w">银河恶魔城入门指南</a> 一文，这里先对作者 Charlie Hou 表示感谢。</p><p>为什么选用了类银河恶魔城的关卡设计思路呢？还是以 “三个原因” 原则作答：</p><ul><li><code>回溯探索</code> 的特点能提高场景复用度</li><li><code>能力-锁</code> 的特点可以和皮影的用色结合以进行玩家能力设计</li><li><code>连通世界</code> 的特点可以更好地给予玩家 “操纵皮影” 的自由感</li></ul><h6 id="反思：关卡设计能力不足"><a href="#反思：关卡设计能力不足" class="headerlink" title="反思：关卡设计能力不足"></a>反思：关卡设计能力不足</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831172031.png"></p><p>此次地图设计中虽然有意识地想进行 <code>回溯探索</code> 地图特点的实践，但最终只在图中两个标蓝的地方很好地实现了该特点，究其原因是与回溯探索配套的相应奖励和探索内容（此次设计中主要以各式小游戏的形式对新区域进行了内容填充）做得还不够好。这会导致玩家在回溯途中感到无聊和挫败。</p><p><code>能力-锁</code> 的特点倒是实践得较好，玩家需要具有相应颜色的能力才能打开对应颜色的锁（其实就是特定路径上的门），也为开锁设计了相应的特效。</p><p><code>连通世界</code> 其实做得不太好，关卡整体还是线性推进的，只是右方的蓝圈部分设计了通往上方的传送点，增加了可探索范围。但其他地方其实算不上所谓连通世界。</p><p>这三个特点其实是互相配合的，需要通过能力-锁机制让玩家进行回溯探索，而连通世界的设定需要有相符的关卡内容填充才能让玩家的探索充满乐趣。</p><p>需要提升的方面还有很多：</p><ul><li>地图构建能力</li><li>内容填充能力</li><li>以及其他关卡设计相关能力</li></ul><h6 id="问题：场景和战斗表现较平-叙事层面"><a href="#问题：场景和战斗表现较平-叙事层面" class="headerlink" title="问题：场景和战斗表现较平 - 叙事层面"></a>问题：场景和战斗表现较平 - 叙事层面</h6><ul><li>叙事层面：场景、战斗和整体叙事的契合度不够高。</li></ul><p>这里虽然评审没有直接提到，但我个人觉得战斗设计和第二关中的敌人设计是值得优化的。</p><p>其中战斗设计会放在下个部分 “问题：操纵皮影的特殊手感未能成型” 部分展开，这里主要提一下敌人设计。</p><p>游戏中第二关的敌人设计思路其实来自于另一个非遗元素——北京中轴线。参考了相关传说——共工怒触不周山故事中的相繇、王子夜、浮游、无支祁、共工设计了敌人，并为各自设计了与形象及其等级相符的技能。</p><p>但这里其实要是不单独拿出来讲，玩家是肯定不会意识到这些怪物的来源的。</p><p>虽然在 “对抗玄灯” 的过程中引入 “共工怒触不周山” 的相关敌人看似有些突兀，但因为满足了 “三个原因”（见下方），并且也可以用 “白莲玄灯，千变万化，迷惑人心” 进行解释，所以个人觉得也不是一个不能接受的决策。</p><p>以 “三个原因” 的原则进行引入分析：</p><ul><li>因为“北京中轴线”也是非遗元素，引入中轴线相关的传说也算是和赛道主题契合</li><li>有据可考，方便为其设计相应技能</li><li>有据可考，方便美术寻找形象参考</li></ul><h6 id="思考：以碎片化或逐层揭露方法来补足叙事"><a href="#思考：以碎片化或逐层揭露方法来补足叙事" class="headerlink" title="思考：以碎片化或逐层揭露方法来补足叙事"></a>思考：以碎片化或逐层揭露方法来补足叙事</h6><p>有关这个部分的改进方案其实在后期迭代过程中有想过：</p><ul><li>比如以类似魂系游戏中的碎片化叙事方法，引入一些掉落物或收集物，以文字形式进行碎片化信息引入。</li><li>或者以类似《战神 4》中阿特柔斯的日记的方式，以游戏内角色的口吻，根据击败数量，逐层揭露怪物信息。</li></ul><h6 id="问题：场景和战斗表现较平-美学层面"><a href="#问题：场景和战斗表现较平-美学层面" class="headerlink" title="问题：场景和战斗表现较平 - 美学层面"></a>问题：场景和战斗表现较平 - 美学层面</h6><ul><li>美学层面：这个其实是前面提到过的美术素材不够的问题。</li></ul><p>第二关的场景框架其实是 “玄” 字横置，其中的关卡元素都是 “玄” 字的各式（甲骨文、金文等）变体，并在其中用皮影相关元素进行填充来进行设计的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831181343.png" alt="“玄” 字的古体变体"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide15.jpeg" alt="以 “玄” 字变体设计的地图框架及场景元素"></p><p>还是以 “三个原因” 原则进行分析：</p><ul><li>叙事层面，因为最终 BOSS 便是玄灯，此处以 “玄” 字变体作为场景设计的立意便是 “在玄灯的地盘上击败玄灯所化的敌人”</li><li>“玄” 的古体变种很多，有丰富的设计素材来源</li><li>美学层面上，以字体填充皮影纹样的方式能很好地体现场景风格</li></ul><h6 id="反思：美术设计能力不足"><a href="#反思：美术设计能力不足" class="headerlink" title="反思：美术设计能力不足"></a>反思：美术设计能力不足</h6><p>因为团队中只有一位美术同学，她更多需要关注别的核心美术资源的产出，所以地图部分的美术资源都是我产出的。此次反映出的问题根本是美术设计能力的不足，直观体现就是所产出美术资产较为“单薄” —— 虽然有一定风格，但产出速度慢，产出效率低，且不成体系，无法与其余美术资产形成契合的美术风格。</p><p>也正是由于所产出的地图资产不足，使得地图关卡的视觉表现大打折扣。</p><p>提升自己的美术设计能力估计没有那么容易，暂时而言还是优先考虑多提升美术鉴赏能力就好，有余力的话，就自己画画小东西吧，能形成自己独特的风格是最好咯，但不可强求。</p><h5 id="问题：操纵皮影的特殊手感未能成型"><a href="#问题：操纵皮影的特殊手感未能成型" class="headerlink" title="问题：操纵皮影的特殊手感未能成型"></a>问题：操纵皮影的特殊手感未能成型</h5><p>评审反馈中的最后部分 <code>战斗完成度不足，打击感与操作精确度均有明显缺憾</code> 其实讲的就是战斗手感问题。</p><p>在策划案中其实很早就定下了该项目最重要的几个特性：</p><ol><li>还原皮影特殊的 “三杆操作”，形成特殊的战斗手感与风格</li><li>还原皮影特殊的光照效果，营造特殊的关卡风格</li><li>充分结合皮影的其它特点（制作工艺、色彩运用等）进行细节设计</li></ol><blockquote><blockquote><p>皮影的 “三杆” 指的是常见的人型皮影中连接左手、右手和头部的三根杆。</p></blockquote></blockquote><p>其中第一个特性 “还原皮影的三杆操作” 主要就是为了打造操纵皮影的特殊手感。其设计预期是利用输入设备（键鼠/手柄等）来模拟皮影的真实操作过程，以形成特殊的战斗手感和风格。从结果反观，并不理想。</p><p>说实话这其实是很大的问题，而且是本应在原型验证和风险评估阶段就解决的问题。</p><p>预期的方案其实前后迭代了几个版本：</p><ul><li>利用<code>手柄的双摇杆+其他按键</code>配合来模拟皮影的三杆操作</li><li>因为没有强调手柄摇杆的重要性，也为了给键鼠做适配，改为了 <code>WASD + 小键盘方向键</code> 作为手柄双摇杆的模拟</li><li>后来调试着调试着就直接没做手柄部分的适配了，只留下了<code>键盘</code>的适配</li><li>后来有一天突然想到，鼠标的移动很像操纵皮影时手部的移动，所以改为了<code>用鼠标来模拟双杆中操纵皮影手部的两杆 + 键盘控制头部杆</code>的设计，即身体是类似晴天娃娃那样被惯性带着走的飘浮状态，这也和皮影本身的移动方式相似</li></ul><h6 id="反思：设计决策的转变要有理有据"><a href="#反思：设计决策的转变要有理有据" class="headerlink" title="反思：设计决策的转变要有理有据"></a>反思：设计决策的转变要有理有据</h6><p>其实迭代到这里已经有些偏离最能还原皮影操作的 <code>手柄双摇杆</code> 操作，这个决策转变甚至有些不明不白，这也启示我后续在进行设计决策迭代时需要明确决策的转变原因。</p><ul><li>最终版本其实是受限于技术实现的妥协，原本的设想是让角色手部移动实现和鼠标移动的实时映射，且模仿皮影的真实操作中的 “突刺” 动作来实现相应角色的攻防。以攻击为例，按下鼠标左键后，鼠标向攻击方向做出一次折返移动，便可完成一次攻击。<ul><li>原本的设想是角色手部能够随鼠标移动做出相符的实时骨骼移动（画小圆），但在实现过程中发现肩膀和手肘关节处的移动受限，最终只能围绕肩膀运动（画大圆），如此导致最终的呈现效果大打折扣</li></ul></li></ul><h6 id="思考：构建皮影特殊战斗手感的方法"><a href="#思考：构建皮影特殊战斗手感的方法" class="headerlink" title="思考：构建皮影特殊战斗手感的方法"></a>思考：构建皮影特殊战斗手感的方法</h6><p>要形成皮影的特殊战斗手感其实要做的迭代不少，比如：</p><ul><li>更好地利用骨骼动画，形成皮影特殊的以关节驱动的动作 “折顿感”</li><li>需要考虑一些细节层面的，比如物理惯性的匹配</li><li>因为该设计基于 “头部杆 + 手部杆”，所以一定要能很好地模拟和还原出由头部杆所牵引移动带来的那种类似晴天娃娃的身体垂坠感和惯性后滞，但手部杆的移动却是实时的</li><li>手部最好能实现和鼠标 “同步+任意范围” 的移动，即基于肩部关节绑定圆周范围内，随鼠标移动实时移动，如此才谈得上还原 “操纵皮影” 的感觉</li></ul><h4 id="其余思考"><a href="#其余思考" class="headerlink" title="其余思考"></a>其余思考</h4><h5 id="思考：立项之初几个初始特性的“三个原因”"><a href="#思考：立项之初几个初始特性的“三个原因”" class="headerlink" title="思考：立项之初几个初始特性的“三个原因”"></a>思考：立项之初几个初始特性的“三个原因”</h5><p>从 <code>三个原因</code> 原则出发，几个初始特性分别有如下设计目的：</p><ol><li><p>还原皮影特殊的 “三杆操作”，形成特殊的战斗手感与风格</p><ol><li>与现实中的皮影操作呼应，让玩家更真切地感受皮影艺术，也能一定程度上体会皮影艺人的不易</li><li>双摇杆操作常见于飞行射击游戏，在本项目的 2D 战斗中引入，做好了能让人眼前一亮</li><li>若能和美术做好相应配合，能让玩家体会到 “自己正在操纵皮影” 的奇妙感觉，从而与其他作品区分开来</li></ol></li><li><p>还原皮影特殊的光照效果，营造特殊的关卡风格</p><ol><li>技术层面上，实现难度应该不是很大</li><li>机制层面上，创建了 “能量多-光照强” 的直观对应关系</li><li>叙事层面上，与以下叙事目的契合：<ul><li>“越靠近玄灯，场景越昏暗，有靠近黑暗源头的感觉”</li><li>“随着玩家自身能量增强，自己便成为了光明的源头”</li><li>“击败玄灯后，完全收回了悬灯的力量，玩家自己成为了悬灯” </li></ul></li><li>若能在美学层面上还原皮影本身的幕布呈现效果，便能深化玩家 “操控皮影” 的感觉</li></ol></li></ol><h6 id="思考：光影机制的利用不够充分"><a href="#思考：光影机制的利用不够充分" class="headerlink" title="思考：光影机制的利用不够充分"></a>思考：光影机制的利用不够充分</h6><p>光影元素应该是皮影艺术的重要组成部分，本该和玩法有更深层次的结合，但当前版本中的光影机制更多只服务于了叙事和美学层面（并且最终也没能很好地还原皮影幕布的质感）。</p><p>可以考虑以下方式深化光阴机制与玩法的结合：</p><ul><li>添加虚实转身机制<ul><li>即玩家具有两个状态：远离布（就是虚状态），靠近布（就是实状态）。  只有虚状态下人物才能转身，但虚状态下的攻击大幅降低（如只有 50%）  实状态下人物攻击正常（100%），但只能向前攻击（前后上下移动不受限制）</li><li>以“三个原因”原则进行分析<ul><li>虚实转身机制深化了光影元素与玩法的结合，增加了玩家的可操作深度</li><li>在美学层面上，该机制契合皮影本身的现实呈现效果</li><li>该机制也符合玩家们对于皮影的直观认知</li></ul></li></ul></li></ul><ol start="3"><li>充分结合皮影的其它特点（制作工艺、色彩运用等）进行细节设计<ol><li>机制层面上，能结合皮影本身的用色特点对（玩家和敌人的）技能进行设计</li><li>叙事层面上，能结合皮影的制作工艺，对敌人进行等级和强度的区分</li><li>美学层面上，正是这些特点构成了 “皮影味儿”，让玩家能感受到皮影艺术的魅力</li></ol></li></ol><p>基本可以说，这几个立项之初所定下的特性是“站得住脚”的，可惜在后续实现过程中渐渐有些偏离。</p><h5 id="思考：制作推进过程中主要出现问题的部分（即复盘概览部分所提到的橙色感叹号部分）"><a href="#思考：制作推进过程中主要出现问题的部分（即复盘概览部分所提到的橙色感叹号部分）" class="headerlink" title="思考：制作推进过程中主要出现问题的部分（即复盘概览部分所提到的橙色感叹号部分）"></a>思考：制作推进过程中主要出现问题的部分（即复盘概览部分所提到的橙色感叹号部分）</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202208301618production.png"></p><ul><li>会议探讨初版策划案的可能性（第一次选择方向）</li><li>针对各风险实现解决原型（第二次选择方向，后面都为第二次）</li><li>收尾时的各种迭代</li></ul><h6 id="思考：多多讨论有潜力的-idea"><a href="#思考：多多讨论有潜力的-idea" class="headerlink" title="思考：多多讨论有潜力的 idea"></a>思考：多多讨论有潜力的 idea</h6><p>现在反观最开始头脑风暴的各种方案，其实还是有不少可以做的方向，当时选择皮影来作为主题的原因是美术同学表示了明确喜好。</p><p>这里并不是说当时决策有问题，而是提醒自己未来在进行想法收集和决策的时候要多多调动大家的积极性，对有潜力的方案进行更细致地讨论。</p><h6 id="思考：原型制作和风险评估做得不够好"><a href="#思考：原型制作和风险评估做得不够好" class="headerlink" title="思考：原型制作和风险评估做得不够好"></a>思考：原型制作和风险评估做得不够好</h6><p>第一次其实有意识地进行了原型制作和风险评估，但由于 “2D + 3D 的空间谜题设计很难” 这一问题有点劝退我，所以很快否决了这个方案，但其实这也是个很有潜力的方案。当时也不该执着于光影的实时运算这一特性，限定玩家决策空间也不失为一个好办法，也许当时逼一逼自己，空间关卡构建能力也能有所提升哈哈，当然了，这都是马后炮了。</p><p>而第二次原型制作和风险迭代说实话做得就没那么好，好几个原型都是部分满足了验证需求。比如当时就应该验证的 “手部实时移动” 特性在最后关头才发现没办法很好地实现，最后只能做一些技术妥协。</p><p>所以，贯彻落实敏捷开发原则！一定要做好快速原型制作和风险评估！</p><h6 id="思考：测试迭代做得不够好"><a href="#思考：测试迭代做得不够好" class="headerlink" title="思考：测试迭代做得不够好"></a>思考：测试迭代做得不够好</h6><p>按理说在整体制作过程中，自可玩版本发布的第一时间就应该让内外部人员积极测试。虽然内部多次鼓励大家参与测试，但效果不是很理想，也没有拉上朋友一起进行潜在玩家测试，这在未来的开发过程中是应该极力避免的。</p><h5 id="思考：玩家技能设计仍有提升空间"><a href="#思考：玩家技能设计仍有提升空间" class="headerlink" title="思考：玩家技能设计仍有提升空间"></a>思考：玩家技能设计仍有提升空间</h5><p>玩家技能设计的创意源于皮影的常用色彩“红黄绿黑白”，受戏剧人物“生旦净末丑”中各颜色引申义的启发，最终结合玩家身体各部分颜色，直观设计了“红色-头部-喷火”、“黄色-武器-剑气”、“绿色-身体-恢复”、“黑色-腿部-影马”、“白色-脚部-闪现”的配套技能</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831205700.png"></p><p>一开始其实并不是这五个技能，而是与京剧脸谱颜色所对应人物性格更强的一些技能，但思考过后改为了目前这版 “颜色-身体部位-与颜色相关的直观联想” 的技能设计。</p><p>但若以 “三个原因” 原则进行反思，这套技能方案虽然在美学层面上与皮影本身的配色方案相契合，但却没能在机制和叙事层面上达到多少效果。换言之，这套技能方案不太具有 “不可替代性”。比如，目前的红色所对应的身体部位是头部，所对应技能是喷火，那么，不是头部可以吗？——可以，不是喷火可以吗？——可以。</p><p>在进行皮影技能设计时，应该更多地结合皮影本身的特点：比如，设计一个技能为可以将手部关节像回旋镖一样掷出之类的。</p><p>颜色方案的设计难度虽然更低，但因为皮影配色并不是一个深入人心的生活常识，也许倒反没有这种 “可拆卸手部” 的直观视觉刺激来得强烈。</p><h5 id="思考：不同等级敌人的美学区分仍可优化"><a href="#思考：不同等级敌人的美学区分仍可优化" class="headerlink" title="思考：不同等级敌人的美学区分仍可优化"></a>思考：不同等级敌人的美学区分仍可优化</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide14.jpeg"></p><blockquote><p>敌人共有三种级别——黑影、半透明、全彩，分别对应皮影制作过程中的“制皮”、“镂刻”、“敷彩”阶段，以形象对敌人实力进行直观区分</p></blockquote><p>前面已经以 “三个原因” 原则进行分析，证明这一设计决策是能站住脚的。因为第一第二阶段的区分度不好把控，最终导致当前版本中的敌人区分度不够。</p><p>未来若是想进行迭代，需要重新对第一二阶段的美术呈现进行修正，如让第一阶段呈现完全的黑影，而让第二等级的怪物呈现大片留白镂空，只留下轮廓部分。</p><h5 id="思考：BOSS-美学设计仍可优化"><a href="#思考：BOSS-美学设计仍可优化" class="headerlink" title="思考：BOSS 美学设计仍可优化"></a>思考：BOSS 美学设计仍可优化</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Slide17.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220831213359.png"></p><p>这里指的优化主要是美学层面，可以看到这里的 BOSS 设计还是不专业的我操刀的哈哈…. </p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="未来版本的可能迭代方向"><a href="#未来版本的可能迭代方向" class="headerlink" title="未来版本的可能迭代方向"></a>未来版本的可能迭代方向</h4><p>这里主要将前文所提到的一些思考和反思进行总结：</p><ul><li>以碎片化或逐层揭露方法来补足叙事</li><li>构建皮影的特殊战斗手感<ul><li>看了樱井政博关于停止特效的视频后，学习到可以充分利用停止特效来加强战斗手感 —— <a href="https://medill-east.github.io/2022/09/01/20220901-stop-for-big-moments/">【Masahiro Sakurai on Creating Games】- Stop for Big Moments!</a></li></ul></li><li>深化对光影机制的运用</li><li>玩家技能设计仍有提升空间</li><li>不同等级敌人的美学区分仍可优化</li><li>BOSS 美学设计仍可优化</li></ul><h4 id="对未来项目的启示"><a href="#对未来项目的启示" class="headerlink" title="对未来项目的启示"></a>对未来项目的启示</h4><p>这里将前文所提到的一些思考和反思进行总结：</p><ul><li>项目相关<ul><li>需求沟通时，一定要摸清对方的沟通习惯，并且双向确认</li><li>提升自身积累，才能更清晰地描述需求，帮助项目更快更好地推进</li><li>设计决策的转变要有理有据</li><li>多多讨论有潜力的 idea</li><li>要重视原型制作和风险评估</li><li>要在项目推进过程中多多进行内外部测试</li></ul></li><li>设计能力相关<ul><li>需要提升自身关卡设计能力</li><li>需要提升自身美学鉴赏和美术设计能力</li></ul></li></ul><h4 id="头脑风暴方法"><a href="#头脑风暴方法" class="headerlink" title="头脑风暴方法"></a>头脑风暴方法</h4><p>这里也把项目中用到没用到的头脑风暴做一份总结。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/gamebrainstorming.png" alt="头脑风暴方法"></p><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>两个月，从构建队伍到最终拿出可玩的 Demo，还是碰到了诸多问题，也发现了许多不足。总归是毕业前的最后一个作品，不算满意，但也无憾了。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Avatar：The Game 拆解分析</title>
      <link href="2022/08/14/20220813-teardown-analysis-avatar-the-game/"/>
      <url>2022/08/14/20220813-teardown-analysis-avatar-the-game/</url>
      
        <content type="html"><![CDATA[<h2 id="《-Avatar-The-Game》-Teardown-Analysis"><a href="#《-Avatar-The-Game》-Teardown-Analysis" class="headerlink" title="《 Avatar: The Game》 Teardown Analysis"></a>《 Avatar: The Game》 Teardown Analysis</h2><h3 id="写在最前面"><a href="#写在最前面" class="headerlink" title="写在最前面"></a>写在最前面</h3><p>本拆解分析基于 PC 版进行，我自己只玩了 Na’vi 的主线，会结合网上的<a href="https://www.youtube.com/watch?v=RTLYtoWCdTM&t=16982s">通关视频</a> 进行 PC 版人类主线的分析。</p><h3 id="游戏概况"><a href="#游戏概况" class="headerlink" title="游戏概况"></a>游戏概况</h3><ul><li>开发公司：Ubisoft</li><li>上线时间：2009 年 12 月 1 日</li><li>类型：FPS + RPG</li><li>特色：<ul><li>双主线分支</li><li>多种可驾驶载具</li><li>可选的 3D 显示效果</li></ul></li><li>商业表现（翻译自 <a href="https://en.wikipedia.org/wiki/Avatar:_The_Game">Wiki</a>  页面）<ul><li>该游戏的销售起步缓慢，但最终在所有平台上销售 270 万台，超出预期。Ubisoft 首席执行官 Yves Guillemot 称该游戏是“对公司的积极贡献”，理由是这部电影的成功及其在 DVD 上的推出带来了销售额的增长。</li></ul></li><li>简介<ul><li>据 <a href="https://en.wikipedia.org/wiki/Avatar:_The_Game">Wiki</a> 页面上的信息显示，该游戏的故事设定在同名电影事件的前两年，即设定为电影的前传。（但其实玩下来感觉是平行世界设定的感觉）</li><li>考虑到其发售时期（12 月 1 日）是定在了电影上映前两周左右，若是假设该游戏最开始就是电影“造势”的一部分，那么可以假定该游戏要达成的核心目标之一是世界观的展现以及吸引玩家后续也成为电影的观众。</li><li>整体游玩过后，游戏确实也主要围绕叙事展开，故后续分析也会基于“该游戏的设计核心是叙事”这一前提进行。</li></ul></li></ul><h3 id="游戏截图展示"><a href="#游戏截图展示" class="headerlink" title="游戏截图展示"></a>游戏截图展示</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_2 6_39_44.png" style="zoom: 50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_3 5_11_57.png" style="zoom: 50%;" /><h3 id="Core-Loop-展示"><a href="#Core-Loop-展示" class="headerlink" title="Core Loop 展示"></a>Core Loop 展示</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202208080028AvatarCoreLoop.jpeg" alt="CoreLoop"></p><p>可以看到，《Avatar：The Game》（以下简称为 Avatar）中的玩家目标其实较为清晰，即通过不断完成任务来解锁新剧情、新玩法，以及不断让角色变强。但其实后两者最终都会服务于新剧情的解锁这一目标。</p><h3 id="机制相关（主要以-Na’vi-支线为例）"><a href="#机制相关（主要以-Na’vi-支线为例）" class="headerlink" title="机制相关（主要以 Na’vi 支线为例）"></a>机制相关（主要以 Na’vi 支线为例）</h3><h4 id="养成"><a href="#养成" class="headerlink" title="养成"></a>养成</h4><p>从 Coreloop 中可以看到，本作中的资源类型其实很少，能够称得上养成相关的资源只有经验值（XP）和策略点（Credits）。</p><h5 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h5><ul><li>XP</li></ul><p>其中 XP 的来源主要是任务，任务奖励通常为 6000 XP，后期会提升到 8000 XP。杀敌能获得的其实较少，并且杀敌获得的 XP 量基本是固定的。以 Na’vi 支线为例，击杀人类士兵， XP 通常为 50，击杀驾驶 AMP 的人类士兵，XP 通常为 150。印象中击杀所获取的 XP 量到了很后期有一次下调 （50 -&gt; 30，150 有没有下调有些记不清了），但基本可以说是全程不变的。</p><p>而 XP 积攒到一定量后就可以升级解锁新的装备/技能/武器了。</p><ul><li>Credits</li></ul><p>Credits 机制算是本作中值得一提的养成小机制。Credits 可以视作 XP 的一种等值获取物，每当获取了 XP 之后，相当于也自动获取了等量的 Credits。</p><p>Credits 的使用依托于各传送点。本作中的各个传送点处除了可以进行传送，还内置了 Conquest 小游戏，可以将其视为一个简单的回合制 SLG 。玩家可以通过使用 Credits 来换取相应的单位，以下部分译自 <a href="https://james-camerons-avatar.fandom.com/wiki/Conquest_(Mini_Game)">Fandom 页面</a> ：</p><blockquote><p>单位分为三类：<br>1）步兵（RDA 步兵和 Na’vi 战士）；<br>2）重型步兵（AMP 套装和 Thanators）；<br>3）空中单位（Samsons 和 banshees）。</p><p>在回合开始时，玩家可以购买升级并随心所欲地移动他们的部队。</p><p>小游戏中的星球被分成许多领土，每个领土都有自己的驻军，需要击败才能占领它。玩家决定他们希望投入多少单位进行战斗。战斗结果会自动计算。</p><p>单位先攻击对应的职业：例如，如果敌方有女妖，参孙总是会攻击女妖。攻击替代职业的单位会受到惩罚，因此建议仅使用相同类型进行攻击。在回合结束时，玩家需要至少剩下 500 名士兵才能征服领土。</p><p>对方也可能在他们的回合中进攻，因此在边界附近维持驻军很重要。</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_13 23_25_56.png" alt = "Conquest" style="zoom: 50%;" /><p>玩家通过在 Conquest 中占领土地可以获取主世界中多种属性的提升（即 coreloop 中的 Conquer Reward）：</p><ul><li>Critical Chance</li><li>Range</li><li>Health</li><li>Armor</li><li>Troops</li><li>XP</li></ul><h5 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h5><ul><li>是服务于叙事核心的简单养成体系</li></ul><p>还是回归最开始所假设的“以叙事为主”的核心目标，那么这样稍显简单的养成体系也就说得通了。我个人的游玩经验表明，在不利用 Conquest 机制所带来的属性提升的情况下也能顺畅地通关，所以说 Conquest 机制在我看来属于一种 pacing 调节手段，并不属于核心养成机制。</p><ul><li>可改进的点 1：养成路线是单一的</li></ul><p>特定 XP 能获取的奖励是固定的，甚至可以在特定菜单中提前预览，这样其实在很大程度上降低了玩家的期待感。</p><p>改进方式也容易想到，比如隐藏本可以被预览的奖励，以及构建商店体系和技能树体系，但后者可能会与叙事推进的核心目标有些许冲突。也许现有的这种以 “无需思考的养成路线 + 可供选择的辅助养成机制” 就是多方权衡后，可服务于叙事核心的较好方式。</p><h4 id="坐骑-Mount"><a href="#坐骑-Mount" class="headerlink" title="坐骑 - Mount"></a>坐骑 - Mount</h4><h5 id="展示-1"><a href="#展示-1" class="headerlink" title="展示"></a>展示</h5><ul><li>Direhorse</li></ul><p>即最常见也最常用的夜魇马，骑上之后是无法进行攻击的，但可以按键让其进入速跑模式。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_13 20_14_13.png" alt = "Direhorse" style="zoom: 50%;" /><ul><li>Mountain Banshee</li></ul><p>即 Na’vi 的主要飞行坐骑，主要在游戏前中期可以使用，也有几个涉及需要驾驶 Banshee 完成的任务，但在游戏中后期基本不再有需要专门驾驶 Banshee 的任务，我个人的任务线中也并未发现需要，甚至是可以骑乘 Banshee 的点。因为在传送点附近一般都只有夜魇马，不会有 Banshee 可供骑乘。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_13 20_15_56.png" alt = "Banshee" style="zoom: 50%;" /><ul><li>Thanator</li></ul><p>这是在中后期部分特殊任务中可供骑乘的强力坐骑，应该也是 Na’vi 支线中唯一在骑乘后依然可以攻击的坐骑。按键可以命令 Thanator 进行攻击，且攻击较高。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_3 4_35_20.png" alt = "Thanator" style="zoom: 50%;" /><ul><li>Great Leonopteryx</li></ul><p>其实就是影片中会出现的 Last Shadow，只在最终前往灵魂之井的路上可被骑乘（也就是只能骑一次，一小会儿）。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_3 7_38_08.png" alt = "Great Leonopteryx" style="zoom: 50%;" /><h5 id="感受-1"><a href="#感受-1" class="headerlink" title="感受"></a>感受</h5><p>整体而言，坐骑的解锁是随着任务推进自然展开的，没有什么特殊条件。</p><ul><li>可改进的点 1：剧情 bug</li></ul><p>Great Leonopteryx 部分也是我为什么说感觉玩下来之后觉得本作虽然设定是电影时间线的前两年，但却给我一种平行世界的感觉。因为影片中说 Rider of Last Shadow 已经多年未再出现，但明明在本作中我们已经成为了 Rider of Last Shadow。</p><ul><li>可改进的点 2：坐骑的驯服过程不如影片中激动人心</li></ul><p>让我稍感失望的是，我本以为驯服 Banshee 会引入类似 QTE 等交互机制才能完成，没想到直接是以剧情动画形式呈现的。包括最后部分骑上 Great Leonopteryx 也是，直接以剧情形式引入了，这使得这两个在片中很有象征意义的伟大时刻在本作中显得稍微有些平淡。</p><p>问题是由于没有驯服成本导致的，让玩家觉得获取得过于轻松。所以改进方案也可以从此着手，以如增加 QTE 驯服等机制来增加驯服成本（当然了，同类坐骑只需要在最开始的时候驯服一次）。这当然也会导致开发成本上升，所以有可能目前的呈现是各方妥协之后的结果。</p><h4 id="武器-Weapons"><a href="#武器-Weapons" class="headerlink" title="武器 - Weapons"></a>武器 - Weapons</h4><h5 id="列举"><a href="#列举" class="headerlink" title="列举"></a>列举</h5><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_13 20_53_12.png" alt = "Weapons" style="zoom: 50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220813170441.png" alt = "Weapons Detail" style="zoom: 50%;" /><h5 id="感受-2"><a href="#感受-2" class="headerlink" title="感受"></a>感受</h5><p>除去最上方的不可替换的弓武器，有三个武器槽可供替换。</p><ul><li><p>可改进的点：单次攻击判定使得战斗节奏不够流畅</p><ul><li> 1）以近战武器为例，本作中使用了单次攻击进行判定，即单次按键只能触发单次攻击，是否能攻击成功与当前的攻击方向以及武器攻击范围有关。</li><li>2）一共有两套攻击动作，但效果是相同的。</li><li>3）因为攻击动画是强制播放的，所以会出现若是当前攻击没有打对方向，就需要等攻击动画结束了重新发动攻击，在此期间看着敌人干着急的情况，使得战斗没有那么流畅。</li><li>4）在按下按键后改变攻击方向是无效的，也就是说如果你一开始攻击时方向有误，即使在攻击过程中调整了攻击路径也是无用的。</li></ul></li></ul><p>以上几点最终导致了近身作战的体验没有那么顺畅。</p><p>针对以上几点其实可以分别提出改进方案，这里只提出对于 4）的改进方案：即在攻击过程中保持攻击判定有效，即若是开始时攻击方向有误，按下攻击键后的攻击过程中若是成功调整了攻击路径，则判定攻击依然有效。如此就可大大减少战斗过程中的 “割裂感”。</p><ul><li>可改进的点：战斗深度较浅</li></ul><p>这个部分其实主要指的是近身战斗的武器战斗动画，也和敌人和武器的数值设计有关。</p><p>如上面 2）所说，本作中各武器的战斗动画其实较为简单，且动作间区分度不大。5 次连击后所引入的怒气攻击倒是提升了战斗深度（可操作性）。</p><p>此外，武器的属性数值以及敌人的生命设计也和战斗深度相关。各武器拥有不同的攻击（Attack）、攻击速率（Rate of Attack）和攻击范围（Range），但从游玩体验而言，Attack 的数值提升对于战斗体验的影响几乎没有？</p><p>无论是前期还是后期，感觉近战时普通士兵都是几刀一个，然后 AMP 都是需要连击接怒气攻击就可以击杀。前后期没有明显不同的战斗体验。</p><p>远程一般使用弓箭攻击，因为 crossbow 的弹药量实在太少。对于普通士兵，只要弓箭蓄力满，并且射击角度合适（我游玩时是用的手柄，所以还开了瞄准辅助），基本能做到一箭一个，这个倒是很爽快。不过远程武器很难对 AMP 这种皮糙肉厚的敌人造成有效杀伤，所以还是需要转为近战。</p><p>虽然对战斗系统的了解不多，但还是尝试着对该问题提出改进方案。</p><p>既然假定问题出现在 1）武器的战斗动画以及 2）数值设计。那么解决方案也便针对问题提出。个人感觉需要优先解决问题 2），即提供有梯度的敌人难度，同时辅以相应的武器成长（可能不仅是数值层面，特殊属性的增加可以极大提升玩家对于武器“力量感”的感知），这样能使得战斗更富于变化。</p><p>当然了，与此同时增添更多样化的武器战斗交互也能很好提升战斗深度，但在考虑叙事核心的前提下，这部分被作为 “锦上添花” 的部分被暂时砍掉也很合理。</p><ul><li>Club &amp; Axe 和 Fighting Staff 类武器区分度有限</li></ul><p>这两类大概可以称之为棒类和杖类武器，实际使用中感觉区分度很有限，即两类武器用起来没什么区别，无论是伤害，攻击速率和攻击范围，都区别不大，唯一的区别应该是样式？</p><p>改进方案：同样的，可以采取前面所提到的，可以为不同类型的武器增添独特的攻击特效和效果，从而提升区分度。如使用棒类武器有几率造成眩晕，如使用杖类武器有可能造成击退等。</p><h4 id="套装-Armor"><a href="#套装-Armor" class="headerlink" title="套装 - Armor"></a>套装 - Armor</h4><h5 id="展示-2"><a href="#展示-2" class="headerlink" title="展示"></a>展示</h5><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_13 20_58_16.png" alt = "Armor" style="zoom: 50%;" /><h5 id="感受-3"><a href="#感受-3" class="headerlink" title="感受"></a>感受</h5><p>套装也是随着游戏进程不断解锁的。</p><ul><li>后期套装缺少区分度</li></ul><p>套装的三项数值 Protection，Vitality 和 Mobility 基本随着所获取套装等级的提升也逐步提升，但是后期所获得的 IV 级套装除了样式上的差别，在数值上的区分其实并不太大。</p><p>改进方式也和武器的改进思路类似，可以考虑为不同套装增加特殊属性，比如对某些技能具有强化效果，如此便可以较低的代价大大提升套装之间的区分度，</p><h4 id="技能-Skills"><a href="#技能-Skills" class="headerlink" title="技能 - Skills"></a>技能 - Skills</h4><h5 id="展示-3"><a href="#展示-3" class="headerlink" title="展示"></a>展示</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220813164807.png"></p><h5 id="感受-4"><a href="#感受-4" class="headerlink" title="感受"></a>感受</h5><p>无论是 Na’vi 还是 人类，都是四个技能槽，后面的技能感受主要以  Na’vi 为例。</p><p>如图所示，技能类别大概可以分为攻击型，防御型（包括了治疗），BUFF 型，以及召唤型。</p><ul><li>做得好的点：技能定位差异做得好，可选多种搭配方案</li></ul><p>各个技能的定位其实都不太一样，所以这个部分其实提供了较高的玩法自由度，玩家可以根据自己的喜好来搭配技能。但治疗技能还是可以算必备技能。</p><h3 id="故事线展示"><a href="#故事线展示" class="headerlink" title="故事线展示"></a>故事线展示</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202208122310avatarstoryline.jpeg"></p><p>游戏最开始时玩家可以选择与性别绑定的形象。但无论选择如何，玩家在游戏中的角色都被称之为 Ryder。</p><p>简言之，开始阶段的故事围绕寻找潜伏在人类阵营中的“间谍”展开，找到后需要选择阵营。</p><p>若选择了人类阵营，则在上一阶段所操控的 avatar 会被剧情杀，从而只留有了人类之身。而后需要收集 unobtanium shards，获得 harmonics 从而找到 dormant Well of Souls。这可以帮助人类来切断纳美人与其祖先树的联系。在任务进行过程中，主角发现原来的指挥官 Falco 叛变了，他抢走了用于控制 Eywa （纳美人的蜂巢思想集群） 的模拟器，并带着模拟器自己前往了灵魂之井。玩家在前往灵魂之井地区，并帮助肃清了这个地区之后会与 Falco 当面对峙。Falco 无视玩家所说的 “要是胡乱启动模拟器，会使得这个星球上的所有生物都死去”，从而逼迫玩家杀死了 Falco。玩家自己启动了模拟器，切断了纳美人和祖先树的联系，使得人类阵营赢得了战争的胜利。但之后被告知 Eywa 在谋划些什么，也会有更多人类到来。游戏结束。</p><p>若选择了纳美人阵营，会被带到营地，然后原来的身体也会被设法运送到营地中，但在一次战斗中，人类身体仓被破坏，纳美萨满帮忙进行了意识转移，而后便成为了纳美人。之后是与人类分支对应的任务，即收集 shards，获得 harmonics，寻找 Well of Souls。在收集 shards 过程中，部分 shards 被毁，使得玩家在缺失 shards 的情况下 “不得不自己尝试激活” willow tree 并且成功了，这也使得纳美萨满认定玩家就是 the First Voice，是能与 Eywa 对话的传说纳美人。之后玩家前往灵魂之井地区，帮助 3 位纳美领导人守卫了该地区，并骑上了 a great leonopteryx 前往了灵魂之井，最终激活灵魂树，灵魂树释放了类似电磁脉冲的攻击，击落了人类飞机。玩家与纳美领导人于灵魂之树前相遇，并说更多人类将会到来。游戏结束。</p><p>我个人是花了差不多 8 小时单通了纳美人的直线（我也不知道为什么花了这么久…），但网上的通关演示差不多是分别花了 4 小时 40 分和 3 小时 40 分左右通关了纳美人和人类支线。可以说纳美人的支线比起人类支线会稍长一些。</p><h3 id="核心目标相关分析-叙事"><a href="#核心目标相关分析-叙事" class="headerlink" title="核心目标相关分析 - 叙事"></a>核心目标相关分析 - 叙事</h3><p>因为我并没有系统学习过有关游戏叙事设计的相关方法论，所以以下分析更多会基于个人主观看法，可能多有不足，欢迎批评指正。</p><p>还是回到最开始所提到的本作的核心目标——作为电影正式上映前的“开胃菜”，需要很好地展现世界观，以及吸引玩家后续也成为电影的观众。</p><h4 id="本作展现了什么样的世界观"><a href="#本作展现了什么样的世界观" class="headerlink" title="本作展现了什么样的世界观"></a>本作展现了什么样的世界观</h4><p>该部分分析参考了以下文章：</p><ul><li><a href="https://www.sohu.com/a/23171411_204728">设计一个好的游戏世界观需要哪些必备要素？ </a></li></ul><h5 id="世界背景"><a href="#世界背景" class="headerlink" title="世界背景"></a>世界背景</h5><p>即这是一个怎样的世界？</p><ul><li><p>时间：2152 年（电影中的时间线的两年前）</p></li><li><p>地点：南门二恒星系生态茂盛的潘多拉（Pandora）卫星</p></li><li><p>事件（部分译自 <a href="https://james-camerons-avatar.fandom.com/wiki/James_Cameron%27s_Avatar:_The_Game">Fandom 页面</a> 及电影的 <a href="https://zh.m.wikipedia.org/zh/%E9%98%BF%E5%87%A1%E8%BE%BE">wiki 页面</a>）：</p></li></ul><p>背景是扩张主义与生物多样性的对抗。</p><p>玩家扮演 Lance Corporal Able Ryder 的角色，他是一名来到遥远世界 Pandora 的 SecOps 信号专家，因为与 Avatar（人类 DNA 和潘多拉本土物种 Na’vi 的混合体）的基因型适配，所以从百万人中被挑选出来参加 Avatar Program。 莱德学会了驾驶自己的化身（Avatar）。 随着莱德进一步冒险进入潘多拉丛林，他更多地了解了潘多拉的许多生物，纳美人，以及他们为拯救潘多拉而与公司进行的斗争。 在这场冲突的爆发点上，莱德必须决定他真正效忠的地方：要么是 RDA，要么是纳美人。</p><ul><li>核心地点：</li></ul><p>人类阵营貌似没有所谓核心地点的设定，更多的是类似据点之类的地方。</p><p>而纳美人除了各个部落的子据点，还有所有纳美人的核心据点（home tree），也有本作中人类方要攻击的，用于纳美人与先祖沟通的灵魂之井（Well of Souls）</p><h5 id="人物设定"><a href="#人物设定" class="headerlink" title="人物设定"></a>人物设定</h5><ul><li>阵营：开采矿物和殖民的人类 vs. 要保护本地生态的土著纳美人</li></ul><p>人类自不必说，但是纳美人是与人类完全不同的种族，为此，纳美人的相貌（蓝色皮肤的瘦高种族），语言及文字（纳美语），生活习性（原始部族）都是经过精心设计的。</p><blockquote><blockquote><p>据电影的 <a href="https://zh.m.wikipedia.org/zh/%E9%98%BF%E5%87%A1%E8%BE%BE">wiki 页面</a> 上的说明，纳美人相貌的灵感来自于卡梅隆母亲很早以前做的梦中出现的身高 12 英尺的蓝肤女人。<br>虽然游戏中并没有语音旁白，但其中已经展现了奇特的纳美语文字。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220813010325.png"></p></blockquote></blockquote><p>其实人类阵营内还可以细分为 “希望尽可能保护纳美人利益” 的子阵营，但这部分会放在下面的势力设定阐述。</p><ul><li>势力设定：</li></ul><p>人类阵营中大致可以分为四支势力：1） 开矿公司势力；2）公司所聘请的军方势力；3）服务于公司的人类科学家势力；4）偏向保护纳美人的人类势力。</p><p>人类阵营中的所有势力明面上都是服务于开矿公司的，但貌似在游戏中玩家基本都是接受来自军方的任务。</p><p>纳美人阵营中也包含 1）主战派和 2）主和派。纳美人以部落形式散落在整个星球上的不同地方，但也有核心区域（home tree）。</p><ul><li><p>NPC 设定（译自  <a href="https://james-camerons-avatar.fandom.com/wiki/James_Cameron%27s_Avatar:_The_Game">Fandom 页面</a>）：</p><ul><li><p>人类</p><ul><li>Able Ryder，一个从地球带来的 RDA 咕噜加入阿凡达计划，并在潘多拉寻找一个圣地。他或她是游戏的主角。</li><li>Falco 指挥官是一名海军军官，也是 RDA 的安全负责人。他认为 Na’vi 只不过是对 Pandora 采矿作业的威胁，如果要实现 RDA 目标，就必须消除这种威胁。即使玩家与 RDA 结盟，他也是游戏的主要对手。</li><li>Kendra Midori，是 RDA 的主要联系人。她相信 RDA 的事业，并且不情愿地理解 Na’vi 和 RDA 之间的战争可能是不可避免的。如果莱德站在 RDA 一边，她也会对莱德有浪漫（如果玩家是男性）的感觉。</li><li>Victor Monroe 是一位尊重莱德但对法尔科感到不自在的科学家。</li><li>René Harper 博士是 RDA Avatar Program 的负责人。在潘多拉的所有岁月里，哈珀与许多纳美人建立了密切的联系。他了解他们的生活方式，并且看到了 RDA 采矿作业的破坏性。他很快就变成了纳美人的内奸，并试图说服玩家加入他们。</li><li>格蕾丝·奥古斯丁（Grace Augustine）是游戏中第一个出现的人。格蕾丝是阿凡达计划的一部分。她将莱德分配给哈珀博士，并且在整个游戏中只出现了 3 次——她的第一次出现是在游戏开始时，第二次是在选择了 RDA 的一方之后，当人们可以从地狱之门控制室听到她的信息时，如果站在 RDA 一边，最后一个在比赛的最后。</li><li>Trudy Chacon，在为 RDA 战斗时，在游戏的大部分时间里都是您的私人直升机飞行员。</li><li>Colonel Quaritch，是类似于电影的指挥官。他只在游戏快结束时出现（如果玩家站在 RDA 一边），接替 Falco 指挥官。他最终继续带领 SecOps 部队取得最终胜利，前提是玩家仍然与 RDA 结盟。</li><li>Winslow 是该领域的非裔澳大利亚 SecOps 指挥官。</li><li>Batista,，是 RDA 的精英炸药专家。尽管他经验丰富，但他对莱德的态度几乎是自大和悠闲的。</li></ul></li><li><p>纳美人</p><ul><li>Amanti，是 Torukä Na’rìng 的 Tipani 氏族的领袖。虽然性格平和，但她一直对 RDA 保持警惕，因为他们在氏族狩猎场的中心建造了一座大型建筑群。</li><li>Beyda’amo 是一名纳威战士，他认为与 RDA 没有和平的余地。他认为人类必须被淘汰——就这么简单，并怀疑莱德的才能，但在比赛接近尾声时开始尊重他。</li><li>Tan Jala 是一位希望与 RDA 和平相处的纳威战士。他相信张开手掌而不是拳头的对话，并与 Able Ryder 交朋友。</li><li>Marali 是 Bayda’amo 的伴侣，她和他一样相信 RDA 的存在对 Pandora 及其居民构成了真正的危险，但与她的伴侣不同的是，她并不讨厌人类，而且似乎信任 Ryder。</li><li>Swawta，是一位年轻的纳威战士，如果他加入纳威派系，他会与 Able Ryder 成为朋友。</li><li>Tsahìk Sänume，是蒂帕尼氏族的女族长。她相信 Able Ryder 可以帮助 Na’vi 阻止 RDA 的袭击。</li></ul></li></ul></li></ul><p>简言之，若是选择人类阵营，玩家体会到的可能是一种根据指示完成特定区域占领和推进扩张工作的感觉，所以接触的大多 NPC 都是指挥官或是合作的同事设定；若是选择纳美人阵营，则是会经历需要获取信任的阶段，所以有设定相应的 “刺头” NPC（Beyda’amo），其他基本都是主和派的纳美人，不会表现出与 Beyda’amo 相同的不信任。</p><h5 id="力量体系"><a href="#力量体系" class="headerlink" title="力量体系"></a>力量体系</h5><p>人类的力量来自于机械，除了一些大型飞行器和机械，还有类似高级外骨骼的机甲装备 AMP。这部分其实都比较好理解，也易于接受。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220813005154.png" alt="AMP"></p><p>而纳美人的力量则是在游玩过程中才逐渐揭晓的，它们可以通过神秘力量与潘多拉星球上的其他生物建立联系，甚至存在类似蜂巢思维的思维集合体 Eywa。并且主要使用刀杖弓弩等武器作为攻击方式。</p><p>这样一来，一个 “现代机械化人类军团 vs. 古老神秘力量原始部族” 的力量冲突背景就被描绘出来。</p><h5 id="主线故事"><a href="#主线故事" class="headerlink" title="主线故事"></a>主线故事</h5><p>这里在前面故事线展示部分已经描述过，不再展开。<br>简言之，玩家的阵营选择决定了主线展开是 “帮助人类阵营进行扩张，击退纳美人” 还是 “帮助纳美人保护星球，击退人类” 。直观清晰。</p><h4 id="本作是否实现了假定的展现世界观及吸引玩家成为观众的核心目标"><a href="#本作是否实现了假定的展现世界观及吸引玩家成为观众的核心目标" class="headerlink" title="本作是否实现了假定的展现世界观及吸引玩家成为观众的核心目标"></a>本作是否实现了假定的展现世界观及吸引玩家成为观众的核心目标</h4><p>本作清楚展现了在潘多拉星球开采资源的人类与希望保护本地生态的土著部落之间的利益冲突，也很好地展现了 “现代机械化人类军团 vs. 古老神秘力量原始部族” 的力量冲突。此外，在视觉层面展现很好地展现了奇妙的潘多拉星球（据  <a href="https://zh.m.wikipedia.org/zh/%E9%98%BF%E5%87%A1%E8%BE%BE">wiki 页面</a> 显示，潘多拉星球的地形地貌设定参考了张家界，令人欣喜），游戏中的 PANDORA-PEDIA 也为玩家提供了详实的图文资料以便玩家了解相应世界观设定。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/James Cameron's AVATAR™_ THE GAME 2022_8_13 20_18_36.png" alt = "PANDORA-PEDIA" style="zoom: 50%;" /><p>抛开前面所提到的关于 Rider of Last Shadow 的剧情相关 Bug 外，本作中展现出的世界观和电影中的世界观几乎是一一对应的，所以玩家在游玩后观影时不会感觉有世界观不一致的问题。</p><p>个人认为本作很好地实现了假定的展现世界观以及吸引玩家成为观众的核心目标，此外甚至也吸引了观众反过来成为玩家。这一点可以从其最终超出预期的市场表现看出。</p><h3 id="值得一提"><a href="#值得一提" class="headerlink" title="值得一提"></a>值得一提</h3><p>这里主要会提及一些在游玩过程中感觉让我印象深刻的点。</p><ul><li>让人印象深刻的纳美语</li></ul><p>剧情中有个部分提到了要去攻破人类的 sky tower，然后我们的主角说那里有爆炸性的盒子，然后就提到了纳美语对应 boom boom 的单词是 kxangangang，当时听到这个单词的发音确实觉得很有喜感。</p><p>这些考究的纳美语也很好地提升了玩家代入感，使玩家感到纳美人也是真实存在的！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/boomboom.jpg" alt="Boom Boom - kxangangang"></p><ul><li>孙子兵法</li></ul><p>在后期的一个任务中，纳美人采取了类似声东击西分散力量的战略，并提到了这是学习自孙子的书，那自然就是孙子兵法了。看到这里的时候还挺惊喜的哈哈。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220813194246.png" alt="Sun Tzu"></p><ul><li>缺少激动人心的 BOSS 战斗</li></ul><p>整体游玩之后感觉在一些关键节点，如坐骑的获取（特别是骑 Great Leonopteryx）等部分做的简化较多，可能会导致玩家对一些关键事件的印象不够深刻。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说，本作以较简化的养成机制服务于核心的叙事机制，为玩家们提前展现了奇妙的潘多拉世界，并最终赢得了还不错的市场表现。</p><p>综上，本文借助 Teardown Analysis 方法对游戏《Avatar: The Game》进行了分析。</p><p>感谢您的阅读，欢迎大家批评指正！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十五章 玩家通过界面玩游戏</title>
      <link href="2022/08/12/20220811-theartofgamedesign-chap15/"/>
      <url>2022/08/12/20220811-theartofgamedesign-chap15/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="20220811-第十五章-玩家通过界面玩游戏"><a href="#20220811-第十五章-玩家通过界面玩游戏" class="headerlink" title="20220811 第十五章 玩家通过界面玩游戏"></a>20220811 第十五章 玩家通过界面玩游戏</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220811005432.png"></p><p>一个界面的目的是让玩家感觉将他们的体验把控在手</p><h4 id="59-号透镜：控制"><a href="#59-号透镜：控制" class="headerlink" title="59 号透镜：控制"></a>59 号透镜：控制</h4><p>这个透镜的作用不只是用来检查你的界面，因为有意义的控制对沉浸式互动非常重要。问</p><ul><li>当玩家使用界面时，是否能尽其责？若不能，为什么</li><li>直观界面给人以控制感。你的界面容易还是难以掌握呢</li><li>玩家是否感觉他们对游戏的结果有强烈影响力？若不是，如何改变这种情况？</li><li>感觉强大=掌控感。你的玩家是否感觉强大？是否能设法使他们感觉更强大呢</li></ul><h3 id="条分缕析"><a href="#条分缕析" class="headerlink" title="条分缕析"></a>条分缕析</h3><p>为了避免混淆并正确理解界面，必须将其分解成组件</p><p>首先，我们知道我们有玩家和游戏世界</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220811005838.png"></p><p>从最简单的层面而言，界面是存在于玩家和游戏世界间的所有事物</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220811005938.png" alt="玩家藉由手柄等物理输入与游戏世界产生交互，并通过显示器等物理输出查看交互结果"></p><p>存在位于物理输出、物理输出和游戏世界之间的虚拟界面</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220811010112.png" alt="玩家藉由物理输入与世界产生的交互会反馈在虚拟界面上，同时也可以借助虚拟界面与游戏世界进行交互"></p><p>以下是一些对上图中的小数字所包含的映射逻辑的例子：</p><ol><li>物理输入-&gt;世界</li></ol><p>如果推摇杆可以让人物跑动，这个映射告诉我们它会跑得多快，以及如果放开的话多久会慢下来<br>如果更用力地推摇杆，人物会奔跑得更快吗<br>人物会一直加速吗<br>双击摇杆会让人物快跑吗</p><ol start="2"><li>世界 -&gt; 物理输出</li></ol><p>若是无法一下子看到整个世界，那可以看到哪个部分，它是怎样呈现的</p><blockquote><blockquote><p>即 3C 中的摄像机部分的设定</p></blockquote></blockquote><ol start="3"><li>物理输入 -&gt; 虚拟界面</li></ol><p>在一个基于鼠标的菜单界面中，单击会达到什么效果，双击呢？是否可以随意拖动界面的任意部分</p><ol start="4"><li>虚拟界面 -&gt; 世界</li></ol><p>当玩家操纵虚拟界面时，对世界有什么影响？<br>如果选中世界里的一件物品并使用弹出菜单对它实施了一个行为，这个行为会马上生效还是延迟起效</p><blockquote><blockquote><p>主要涉及打开菜单后，游戏世界的时间流速设定。<br>常见的做法有：1）继续正常流逝；2）暂停</p></blockquote></blockquote><ol start="5"><li>世界 -&gt; 虚拟界面</li></ol><p>世界里的变化如何在虚拟界面上显示<br>什么时候分数和能量条会变化<br>世界里的事件会导致界面中出现特殊弹出窗口、弹出菜单或模式改变吗<br>在玩家进入战斗后，特别战斗菜单会出现吗</p><ol start="6"><li>虚拟界面 -&gt; 物理输出</li></ol><p>会显示哪些数据给玩家，另外它们会在屏幕的哪里出现<br>显示什么颜色<br>什么字体<br>当生命力非常低的时候它是否会像心脏般跳动或发出声音</p><h4 id="60-号透镜：物理界面"><a href="#60-号透镜：物理界面" class="headerlink" title="60 号透镜：物理界面"></a>60 号透镜：物理界面</h4><p>玩家会和你的游戏产生物理互动。抄袭现有的物理界面是一个很容易跌落的陷阱。通过该透镜以确认你的物理界面是否适合你的游戏</p><ul><li>玩家捡起和触碰了什么东西？能否把这个过程做得更加令人愉悦？</li><li>游戏世界内的动作映射是怎样的？这种映射是否可以做得更加直接</li><li>如果不能创造一个定制的物理界面，当你将输入映射到游戏世界时使用哪种隐喻方式</li><li>在玩具透镜下，物理界面看上去是什么样的</li><li>玩家怎么看到、听到和触碰游戏世界？是否有方式可以集成某种物理输出设备使得整个世界在玩家的想象中变得更真实</li></ul><h4 id="61-号透镜：虚拟界面"><a href="#61-号透镜：虚拟界面" class="headerlink" title="61 号透镜：虚拟界面"></a>61 号透镜：虚拟界面</h4><p>虚拟界面做得不好会成为玩家和游戏世界间的阻碍。做得好，它们会放大玩家在游戏世界中的力量和控制。利用该透镜来确认你的虚拟界面在尽可能加强玩家体验：</p><ul><li>玩家必须接收哪些光靠观察游戏世界而无法明显获取的信息</li><li>玩家何时需要这些信息？一直？有时？只在每关结尾？</li><li>这些信息如何以一种不会打扰玩家与游戏世界互动的方式传递给玩家？</li><li>游戏世界里是否存在某些相比直接互动更容易通过虚拟界面互动的元素（比如弹出菜单）？</li><li>对于我的物理界面来说哪种虚拟界面更适合？比如弹出菜单对于游戏手柄来说是一种很差的匹配</li></ul><blockquote><blockquote><p>想到的是很多游戏中常见的，战斗时才显示人物相关信息（生命、魔法等），平时将这些信息隐藏，以尽可能增加玩家可视范围，增加临境感</p></blockquote></blockquote><h4 id="62-号透镜：透明"><a href="#62-号透镜：透明" class="headerlink" title="62 号透镜：透明"></a>62 号透镜：透明</h4><blockquote><p>无论你的界面多美丽，它总是越少越好。 —— 爱德华·塔夫特</p></blockquote><p>理想的界面对玩家来说是隐形的，它可以使玩家的想象完全沉浸在游戏世界中。为确保不可见性，问：</p><ul><li>玩家欲望是什么？界面是否让玩家做了他们想做的事</li><li>这个界面是否足够简单到玩家通过练习后可以不用思考直接使用</li><li>新的玩家是否觉得这个界面直观？若不是，它是否可以用某种方法做到更直观？如果让玩家可以定制操作方式会起到帮助还是伤害的作用</li><li>界面是否在所有情况下都工作良好，是否在某些情况下（靠近角落时，走得非常快，等等）它的行为会使得玩家迷惑</li><li>在紧张情况下玩家是否可以继续良好地使用界面，或者他们开始笨拙地摸索如何操控/遗漏了关键信息？若是这样，如何改善</li><li>界面是否有任何迷惑玩家的地方？6 个界面箭头中的哪个会有这种情况</li><li>当玩家使用界面时是否有沉浸感</li></ul><blockquote><blockquote><p>其实在看这里的时候想到了曾经学过的有关 tangible user interface （TUI） 相关的概念，这里放个 wiki 的图，简单来说就是一种物理交互设备，有与“世界”相匹配的交互方式<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220811012535.png"><br>设想一个情境，我们的任务是需要在地图中找到特定位置，而我们正好拥有一个形似地球仪的可转动的物理实体，可用于这一任务，想来会很过瘾<br>如此一来也可以简单想到，这一方法要普及要面临的第一个问题就是成本——与某些任务情境非常匹配的 TUI 必然是经过特殊设计的，这也意味着其与其他任务的匹配程度就会相对较低<br>突然想到市面上其实也有相关的成熟产品，即飞行模拟器或是汽车模拟器等等，也有钓鱼游戏专用的模拟钓竿等等<br>这里其实会设计到另外两个与人机交互相关的学术概念，Gulf of execution 和 gulf of evaluation，前者衡量用户理解系统当前状态的难易程度，如图形 &lt; 命令行（更难理解），后者衡量系统反馈的理解难易度，如进度条 &lt; 无显示 （更难理解）。但这部分有点太偏理论了，有兴趣的朋友可以自行查阅 (￣▽￣)”</p></blockquote></blockquote><h3 id="互动循环"><a href="#互动循环" class="headerlink" title="互动循环"></a>互动循环</h3><p>信息以环状流动。</p><p>从游戏返回到玩家的信息会极大影响玩家的下一步行动，这个信息一般被称为反馈。这种反馈的质量可以对玩家在游戏内发生的一切理解和享受程度产生巨大影响。</p><p>良好反馈的重要性会被轻易忽视。比如篮筐的网。这个网完全不影响也游戏玩法——但当球从框中落下时其减慢了球下落的速度，也让所有球员可以清晰看见甚至听见球进了</p><p>一个不那么明显的例子是速易洁，一个简单设备，设计理念是成为比传统扫帚/簸箕组合更好的清洁地板解决方式</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220812004406.png" alt="速易洁——可抛弃式擦布"></p><p>看起来速易洁的设计师使用了 14 号透镜 “陈述问题” 来发明了一个全新解决方案。如果我们用扫帚/簸箕的解决方案来审视其中的某些问题：</p><ul><li>问题 1 不可能把所有尘土扫进簸箕</li><li>问题 2 很难在站立的时候使用簸箕。弯着腰却很难使用扫帚</li><li>问题 3 扫帚无法扫到所有的尘土</li><li>问题 4 当你尝试把灰尘扫入簸箕时，你的手会弄脏</li><li>问题 5 将垃圾从簸箕转移到垃圾桶时很危险——它经常会倒得或吹得到处都是</li></ul><p>速易洁使用可抛弃式的擦布完美解决了这些问题</p><ul><li>解决方法 1 不需要簸箕</li><li>解决方法 2 使用速易洁时不需要弯腰</li><li>解决方法 3 速易洁擦布比扫帚能扫更多尘土</li><li>解决方法 4 你的手保持清洁</li><li>解决方法 5 擦布很容易清理</li></ul><p>它同时还具有一个超越这些实际事件的吸引力。它拥有一股强烈的精神吸引力——老实说，它用起来也很有趣。为什么？因为它的设计提出了一个常人不认为是问题的问题</p><ul><li>问题 6 用户几乎得不到关于他们将地板清洁到了什么程度的反馈</li></ul><p>速易洁将这个问题解决得很好</p><ul><li>解决方法 6 打扫完后你从地板上擦去的尘土在你的擦布上非常明显</li></ul><p>这种反馈让玩家迅速明白他们所做的在地面干净程度这件事上起到了很大作用</p><p>这会引发各种乐趣——因为做了有用的事而产生的满足感；净化的快乐；甚至还有掌握别人不知道的暗知识的喜悦感（这个指什么嘞）</p><p>虽然会泽中反馈直到任务结束才会到来，但玩家能够预见这一点并期待看到一件工作被不错完成后的具体证据</p><h4 id="63-号透镜：反馈"><a href="#63-号透镜：反馈" class="headerlink" title="63 号透镜：反馈"></a>63 号透镜：反馈</h4><p>一个玩家从游戏中得到的反馈有很多种：判断、奖励、直到、鼓舞、挑战。用该透镜确认反馈回路正在创造想要的体验，随时随地在游戏中问：</p><ul><li>在该时刻，玩家应该知道什么</li><li>在该时刻，玩家想要知道什么</li><li>在该时刻，想要玩家感受到什么？如何给出能够创造这种感受的反馈？</li><li>在该时刻，玩家希望感受到什么？对他们来说是否有机会创造一个能使得他们获得这种感受的情境</li><li>在该时刻，玩家的目标是什么？哪种反馈会帮助他们实现这个目标</li></ul><p>在游戏中每个时刻都使用该透镜会耗费巨大精力，但这是值得的，因为它会帮助确保这个游戏清晰，富有挑战性，并且是值得的。</p><p>通常按照经验来看，如果界面不会在十分之一秒内对玩家输入做出反应，他就会觉得你的界面出了问题</p><h3 id="有趣"><a href="#有趣" class="headerlink" title="有趣"></a>有趣</h3><p>回到打扫的例子：一条肮脏擦布并不是速易洁给用户的唯一反馈<br>考虑扫帚/簸箕组合带来的另一个问题</p><ul><li>问题 7 扫地很无聊</li></ul><p>将这里所谓的 “无聊” 进行划分，它所指的是</p><ul><li>扫地是反复的（机械重复同一动作）</li><li>需要你集中精神在某件不会带来惊喜的事上（如果不关注那堆尘土，它就会飞得到处都是）</li></ul><p>而速易洁也有对应的解决方案</p><ul><li>解决方法 7 使用速易洁是有趣的！</li></ul><p>这可能是速易洁最大的独立卖点</p><p>用 17 号透镜 “玩具” 观察一下，速易洁做得很好——它确实好玩，但为什么？它不就是一根棍上的一块布吗？但速易洁的清洁底座所展示的运动是二级运动，即起源于玩家动作的运动——玩家轻轻转动手腕，支撑擦布的底座就会明显转动</p><p>当一套系统展示大量一个玩家可以轻易控制的二级运动并且它会给予玩家许多力量与奖励时，我们称之为多汁系统——就像一颗成熟蜜桃，只要与其有一些互动，它就会回馈你连续不断的可口汁水</p><h4 id="64-号透镜：多汁"><a href="#64-号透镜：多汁" class="headerlink" title="64 号透镜：多汁"></a>64 号透镜：多汁</h4><p>将一个界面称之为“多汁”可能有些蠢，但在你开始使用多汁界面的那一刻起 多汁界面就很有趣，问</p><ul><li>我的界面对玩家的动作基于持续反馈了吗？若没有，为什么没有</li><li>二级运动是由玩家动作创造的吗？这个二级运动是否有利且有趣？</li><li>多汁系统以多种方式立刻奖励玩家。当我给予玩家一次奖励时，我同时以多少种方式在奖励他们？可以找到更多方式吗</li></ul><p>趣味通常伴随着意外的愉悦</p><h3 id="首要性"><a href="#首要性" class="headerlink" title="首要性"></a>首要性</h3><p>有一种界面形式，偏重于和多汁有趣联系在一起——手机和平板的触摸界面</p><p>为什么触摸界面容易上手——为什么触摸界面直观——为什么触摸界面容易理解——因为它们原始</p><p>直到触摸电脑的出现，每台电脑界面都采取了使用工具的形式。即与一些物理物体（键盘、鼠标、按钮控制板、打孔卡等）互动，以及会发生一些远程的（不在我手边的）反馈。渐渐地，人们逐渐学会这样的工作方式并习惯使用。但使用工具并不是最原始的交互方式。</p><p>动物在更长的一段时间里都是以本能来触摸物体的。</p><blockquote><blockquote><p>这里果然再次涉及到了之前提到的 gulf of execution 和 gulf of evaluation 的概念。简单来说就是人们使用触摸屏幕的时候是直接交互的，即手指的点击位置就是屏幕的交互位置，而若是使用键鼠，中间其实包含手-鼠标-屏幕上的光标的映射关系，多了一层手-鼠标，鼠标-光标的转换。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220812115414.png"><br>如图所示，其上包含另外两个概念，语音距离（articulatory distance）和语义距离（semantic distance）。<br>语义距离的关键在于用户是否能把意图转化为相应的界面语言（idea -&gt; input）<br>语音距离反映交互行为中为实现交互意图所做的操作（input）与其含义（output）之间的关系（input -&gt; output）</p></blockquote></blockquote><p>可以确定的是，能使用或涉及越多的大脑原始部分，人们会觉得你的玩法更直观有力，这也帮助说明了为什么那么多游戏包含以下元素：</p><ul><li>收集水果类元素</li><li>和有威胁的敌人作战</li><li>寻路以通过不熟悉的环境</li><li>克服困难去找到你的伴侣（科学家通常称之为“拯救公主”）</li></ul><h4 id="65-号透镜：原始性"><a href="#65-号透镜：原始性" class="headerlink" title="65 号透镜：原始性"></a>65 号透镜：原始性</h4><p>一些动作和界面是如此直观，连动物都在几亿年前就在做这些动作。为捕捉到原始性的力量，问：</p><ul><li>游戏中，哪些部分是如此原始，连动物都可以玩？为什么</li><li>在游戏中，哪些部分可以做得更加原始？</li></ul><h3 id="信息通道"><a href="#信息通道" class="headerlink" title="信息通道"></a>信息通道</h3><p>任何界面的一个重要目的是用来交流信息。</p><p>为搞明白在游戏中展现信息的最佳方式，尝试以下步骤</p><h4 id="步骤-1：列表与排列信息"><a href="#步骤-1：列表与排列信息" class="headerlink" title="步骤 1：列表与排列信息"></a>步骤 1：列表与排列信息</h4><p>一个游戏必须呈现大量信息，但它们并不同等重要</p><p>以红白机的《塞尔达传说》为例，一个没有优先度的玩家可能看到信息的列表如下：</p><ol><li>红宝石数量</li><li>钥匙数量</li><li>体力值</li><li>当下环境</li><li>远处环境</li><li>其他物品</li><li>当前五期</li><li>当前宝物</li><li>炸弹数量</li></ol><p>现在，按重要度重新排序：</p><p>每一刻都必须了解：<br>4. 当下环境</p><p>游戏过程中必须不时瞟一眼：</p><ol><li>红宝石数量</li><li>钥匙数量</li><li>体力值</li><li>远处环境</li><li>当前武器</li><li>当前宝物</li><li>炸弹数量</li></ol><p>有时必须知道：<br>6. 其他物品</p><h4 id="步骤-2：列出通道"><a href="#步骤-2：列出通道" class="headerlink" title="步骤 2：列出通道"></a>步骤 2：列出通道</h4><p>一个信息通道只是传递数据流的一种方式。</p><p>一些可能的信息通道：</p><ul><li>屏幕正上方</li><li>屏幕右下角</li><li>头像</li><li>音效</li><li>音乐</li><li>屏幕边界</li><li>逼近的敌人胸部</li><li>一个人物头上的对话气球</li></ul><p>列出你认为也许会用到的通道是个好主意。在《塞尔达传说》中，设计师用到的主要信息通道是：</p><ul><li>主显示区域</li><li>屏幕上方的信息控制面板</li></ul><p>他们决定玩家可以通过点击“选择”按钮激活“模式改变”，它的信息通道有所不同：</p><ul><li>辅助显示区域</li><li>屏幕底部的信息控制面板</li></ul><h4 id="步骤-3：将信息映射到通道"><a href="#步骤-3：将信息映射到通道" class="headerlink" title="步骤 3：将信息映射到通道"></a>步骤 3：将信息映射到通道</h4><p>每一刻都必须了解 —— 主显示区域<br>4. 当下环境</p><p>游戏过程中必须不时瞟一眼 —— 屏幕上方信息控制面板</p><ol><li>红宝石数量</li><li>钥匙数量</li><li>体力值</li><li>远处环境</li><li>当前武器</li><li>当前宝物</li><li>炸弹数量</li></ol><p>有时必须知道 —— 主屏幕和子屏幕<br>6. 其他物品</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220812121059.png"></p><p>要注意 7 个信息通道是如何分开的</p><ul><li>生命——如此重要，以至于占据了三分之一</li><li>红宝石、炸弹、钥匙——虽然作用不同，但都需要传递两位数信息，所以被归类到了一起</li><li>当前武器、当前宝物——如此重要，所以有小框包围，且有 “A”/“B” 提示按键</li><li>仓库——注意如何利用剩余空间给予玩家如何使用的提示</li></ul><h4 id="步骤-4：检验维度的使用"><a href="#步骤-4：检验维度的使用" class="headerlink" title="步骤 4：检验维度的使用"></a>步骤 4：检验维度的使用</h4><p>游戏中一条信息通道可以拥有许多维度</p><p>例如，如果决定把“对敌伤害”映射到“从敌人飞出的数字”，那么在该通道上需要处理的维度有：</p><ul><li>显示的数字</li><li>数字的颜色</li><li>数字的大小</li><li>数字的字体</li></ul><p>在一条通道上使用多维度来强调一则信息是使得该信息非常清晰（同时也多汁）的一种方法</p><p>也可以使用另一种方法将不同信息放在不同维度上。<br>如也许在数字上标识不同颜色来表示朋友（白色）和敌人（红色）<br>也许用数字大小表示人物还差多少会被击败——小号数字表示人物还剩大量体力，大号数字表示他们快死了</p><p>这种技巧可以是有效而优雅的。通过使用一个简单数字，传递了三种不同信息。风险在于需要教育玩家这一条信息通道所展示的不同维度内容。</p><h5 id="66-号透镜：通道和维度"><a href="#66-号透镜：通道和维度" class="headerlink" title="66 号透镜：通道和维度"></a>66 号透镜：通道和维度</h5><p>选择如何将游戏信息映射到通道和维度是设计游戏界面的核心。问：</p><ul><li>哪些数据需要在玩家这里往来</li><li>哪个数据是最重要的</li><li>可以用哪些通道来传输这些数据</li><li>哪些通道对于哪些数据最合适？为什么</li><li>这些不同通道上哪些维度可用</li><li>该如何使用这些维度</li></ul><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><p>简单来说，界面模式是界面图里映射箭头（1~6）其中之一的改变。比如，按下某个按键后，原本的交互方式发生了改变，就是模式切换。模式切换可以作为 6 个箭头中任意一组映射改变的结果出现。</p><p>模式是增加游戏多样性的好办法，但必须非常小心，如果玩家不能意识到模式切换了，就可能很疑惑</p><p>以下是一些避免让界面模式陷入麻烦的建议：</p><ul><li>模式建议 1：使用尽可能少的模式</li></ul><p>模式越少，玩家可能困惑的可能性就越小<br>同时拥有几个模式并不是坏事，但要谨慎添加模式，因为每个模式都需要玩家学习并理解</p><ul><li>模式建议 2：避免模式叠加</li></ul><p>简言之，同一个界面模式最好只干一件事<br>如果重叠模式不可避免，务必确认它们在使用界面的不同信息渠道</p><ul><li>模式建议 3：制作尽可能不同的差异模式</li></ul><p>换言之，用 63 号透镜 “反馈” 和 62 号透镜 “透明” 来观察你的模式<br>如果玩家不清楚身处何种模式，他们会沮丧和疑惑<br>vim 就是会让用户十分迷惑的其中一种界面模式</p><blockquote><blockquote><p>确实</p></blockquote></blockquote><p>以下是几种能让模式看上去不同的好办法：</p><ul><li><p>改变屏幕上巨大且可视的东西</p><ul><li>在《光晕》及大部分 FPS 游戏中，当你切换武器，是非常明显的。</li><li>此外，你剩下的弹药数量通过一条有趣通道给出——枪的背部</li></ul></li><li><p>改变人物所采取的行动</p><ul><li>在经典街机《丛林之王》中，从摆动藤蔓模式切换到游泳模式时，模式明显变化（头发颜色甚至都变了——可能有些过了）</li></ul></li><li><p>改变屏幕上的数据</p><ul><li>在《最终幻想》系列游戏以及大部分 RPG 中，当你进入战斗中，许多作战数据和菜单会突然出现，很明显，模式改变了</li></ul></li><li><p>改变镜头视角</p><ul><li>作为模式变化的一个标志经常被忽略，但它可以非常有效</li></ul></li></ul><h4 id="67-号透镜：模式"><a href="#67-号透镜：模式" class="headerlink" title="67 号透镜：模式"></a>67 号透镜：模式</h4><p>任何复杂度的界面都需要模式。为确保你的模式让玩家感到有力和控制感，且不使得他们疑惑或不知所措，问：</p><ul><li>游戏中需要什么模式，为什么</li><li>有些模式是否可以折叠或合并</li><li>是否有些模式重叠了？若如此，是否可以把它们放入不同输入频道</li><li>游戏改变模式后，玩家怎么知道？游戏是否可以用不止一种方式来传递模式改变的信息</li></ul><h3 id="其他关于界面的建议"><a href="#其他关于界面的建议" class="headerlink" title="其他关于界面的建议"></a>其他关于界面的建议</h3><p>以下是一些关于制作优秀游戏界面的常用建议</p><h4 id="界面建议-1：偷窃"><a href="#界面建议-1：偷窃" class="headerlink" title="界面建议 1：偷窃"></a>界面建议 1：偷窃</h4><p>更礼貌一点的说法是“自顶向下方法”。</p><p>可以从一个已知的成功作品开始着手，将其改变成适合你游戏中独特之处的界面，好处：</p><ul><li>节省大量设计时间</li><li>是对于玩家而言熟悉的界面</li></ul><p>小小的变化可以慢慢产生化学变化，避免克隆</p><h4 id="界面建议-2：定制"><a href="#界面建议-2：定制" class="headerlink" title="界面建议 2：定制"></a>界面建议 2：定制</h4><p>也被称为自底向上方法，是偷窃的对立面。</p><p>通过列出信息、通道、维度来从头设计界面：是一种让你的界面看上去独特以及对你的特别游戏专门适配的好办法</p><h4 id="界面建议-3：围绕物理界面设计"><a href="#界面建议-3：围绕物理界面设计" class="headerlink" title="界面建议 3：围绕物理界面设计"></a>界面建议 3：围绕物理界面设计</h4><p>不同的界面平台：触摸界面、动态界面、键鼠、游戏手柄、混合现实 HMD … </p><p>尝试设计一个独立于任何一类界面的游戏往往会产生一个无趣游戏</p><p>愤怒的小鸟的巨大成功一部分是因为它很好利用了触摸界面</p><p>如果游戏的核心互动是利用了某种物理界面独特性的独特玩法，它会得到足够多的注意而值得让你放弃其他平台</p><h4 id="界面建议-4：主题化你的界面"><a href="#界面建议-4：主题化你的界面" class="headerlink" title="界面建议 4：主题化你的界面"></a>界面建议 4：主题化你的界面</h4><p>用 11 号透镜“统一性” 来审视界面，寻找方法将游戏界面和游戏世界以及其他体验关联起来</p><h4 id="界面建议-5：将声音映射到触摸"><a href="#界面建议-5：将声音映射到触摸" class="headerlink" title="界面建议 5：将声音映射到触摸"></a>界面建议 5：将声音映射到触摸</h4><p>游戏中使用声音时，考虑的是创造一个音响范围来</p><ul><li>给予玩家一个场所感——草地上叽叽叫的小鸟</li><li>让动作看上去更真实——看见玻璃破碎同时听到声音</li><li>给予玩家关于他们在游戏内进度的反馈——捡起宝物时的声音</li></ul><p>但音乐上总有一些与界面直接有关的方面会被忽视：人脑会容易地将声音映射到触摸</p><p>在触感交互完全实现之前，使用音乐来模拟触感是很好的选择</p><h4 id="界面建议-6：用层级平衡选项和简单度"><a href="#界面建议-6：用层级平衡选项和简单度" class="headerlink" title="界面建议 6：用层级平衡选项和简单度"></a>界面建议 6：用层级平衡选项和简单度</h4><p>平衡：给予玩家尽可能多选项 vs. 将界面做得尽可能简洁</p><p>创造平衡的好方法：通过模式和子模式创造层级</p><h4 id="界面建议-7：使用隐喻"><a href="#界面建议-7：使用隐喻" class="headerlink" title="界面建议 7：使用隐喻"></a>界面建议 7：使用隐喻</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220812125220.png"></p><blockquote><blockquote><p>简言之就是，给一些玩家理解起来有困难的现象添加一个他们所熟悉的（通常也是游戏更早阶段已经出现过的）合理说法</p></blockquote></blockquote><h5 id="67-5-号透镜：隐喻"><a href="#67-5-号透镜：隐喻" class="headerlink" title="67.5 号透镜：隐喻"></a>67.5 号透镜：隐喻</h5><p>游戏界面经常模仿玩家熟悉事物的界面。为确保你使用的隐喻有助于玩家理解，不令玩家困惑，问</p><ul><li>界面是否已经是对其他事物的隐喻</li><li>若是隐喻，是否发挥了其最大作用，还是令其成为了阻碍</li><li>若不是隐喻，让它变成隐喻会更符合直觉吗</li></ul><h4 id="界面建议-8：若是看上去不同，行为也要不同"><a href="#界面建议-8：若是看上去不同，行为也要不同" class="headerlink" title="界面建议 8：若是看上去不同，行为也要不同"></a>界面建议 8：若是看上去不同，行为也要不同</h4><p>不要仅仅因为视觉多样性而增加变化，若是它们没有功能区别，会让玩家感到困惑和失望</p><p>同时也不要为完全相同的视觉符号增加多种不同含义，也会让玩家感到迷惑</p><h4 id="界面建议-9：测试，测试，测试！"><a href="#界面建议-9：测试，测试，测试！" class="headerlink" title="界面建议 9：测试，测试，测试！"></a>界面建议 9：测试，测试，测试！</h4><p>早期可以使用纸面原型等对界面进行测试，在此过程中了解玩家意图</p><h4 id="界面建议-10：打破不能帮助玩家的法则"><a href="#界面建议-10：打破不能帮助玩家的法则" class="headerlink" title="界面建议 10：打破不能帮助玩家的法则"></a>界面建议 10：打破不能帮助玩家的法则</h4><blockquote><blockquote><p>这一段主要讲的是不要囿于一些经验法则，有时候也需要做一些变通。<br>比如鼠标左键一般作为主键，经验法则是说右键一般不该做任何事，除非有特别目的。但是在简单游戏，如儿童游戏中，有些游戏完全不使用右键，一些设计师倾向于将其完全禁止，这样所有玩法都通过左键进行交互。但儿童使用鼠标时因为手小经常会误触，一些设计师打破了这条经验法则，为左右键映射了同样的行为，这样按下任意键后的操作都是正确的。<br>关键就是，天下文章一大抄，看你会抄不会抄吧哈哈</p></blockquote></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十四章 游戏机制支持谜题</title>
      <link href="2022/08/07/20220807-theartofgamedesign-chap14/"/>
      <url>2022/08/07/20220807-theartofgamedesign-chap14/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="20220807-第十四章-游戏机制支持谜题"><a href="#20220807-第十四章-游戏机制支持谜题" class="headerlink" title="20220807 第十四章 游戏机制支持谜题"></a>20220807 第十四章 游戏机制支持谜题</h2><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220807003235.png"></p><p>所有谜题的共同点：让玩家停下并陷入思考。</p><h3 id="谜题的谜题"><a href="#谜题的谜题" class="headerlink" title="谜题的谜题"></a>谜题的谜题</h3><p>谜题的一种定义：</p><blockquote><p>谜题就是有最优策略的游戏。</p></blockquote><p>从该观点看，谜题就是知晓答案后便失去乐趣的游戏。</p><p>游戏和谜题的核心都是拥有有待解决的问题——但谜题是一种微缩版的游戏，其目的就是找到最优策略。</p><h3 id="谜题死了吗"><a href="#谜题死了吗" class="headerlink" title="谜题死了吗"></a>谜题死了吗</h3><p>谜题并不是明日黄花，但随着游戏设计师的设计技巧愈加成熟，原来与游戏格格不入的谜题现在更好地融入到了游戏中</p><h3 id="好的谜题"><a href="#好的谜题" class="headerlink" title="好的谜题"></a>好的谜题</h3><p>以下是谜题设计的十个原则</p><h4 id="谜题原则-1：让目标变得简单易懂"><a href="#谜题原则-1：让目标变得简单易懂" class="headerlink" title="谜题原则 1：让目标变得简单易懂"></a>谜题原则 1：让目标变得简单易懂</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220807004406.png" alt="让人摸不清目的的谜题"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220807004426.png" alt="目标清晰的谜题——把套环取出"></p><p>如果玩家不清楚他们要做什么，他们会很快失去兴趣，除非他们知道要做的这件事实际上很有趣</p><p>有很多谜题把猜出谜题本身要做什么也变为了谜题的一部分——但必须谨慎使用，只有铁杆解密玩家才喜欢这类挑战</p><p>设计谜题时，确认你在通过 32 号透镜 “目标” 观察它们，且确定你清楚地告诉玩家谜题中的哪些事是和目标相关的</p><h4 id="谜题原则-2：让它容易上手"><a href="#谜题原则-2：让它容易上手" class="headerlink" title="谜题原则 2：让它容易上手"></a>谜题原则 2：让它容易上手</h4><blockquote><p>要设计一个好的谜题，首先要打造一个好的玩具。 —— Scott Kim</p></blockquote><p>拿出 17 号透镜 “玩具”。</p><p>当设计谜题的时候，好的玩具会让玩家清晰知道如何操作它。<br>不止如此，玩家会被吸引去操作它。</p><p>这也是魔方最成功的的原因之一——即使某些毫无意愿去解开魔方的人也会想知道，拿起魔方，手握魔方，以及旋转魔方到底是什么样的感觉</p><h4 id="54-号透镜：可达性"><a href="#54-号透镜：可达性" class="headerlink" title="54 号透镜：可达性"></a>54 号透镜：可达性</h4><p>当将一个谜题展示给玩家的时候（或任何一种游戏），他们应该可以清楚知道最开始几个步骤应该是什么样子的</p><ul><li>玩家怎么知道如何解开我的谜题或者玩我的游戏？我是否需要解释，或者它是显而易见的？</li><li>我的谜题或游戏是否和他们之前见过的东西相像？如果是，我怎样才能让他们注意到这些相似点？若不是，怎样让他们理解谜题或游戏的动作？</li><li>谜题或游戏是否吸引玩家并且让他们想感受它 操作它？若不是，如何改变它才能让它变得吸引人</li></ul><h4 id="谜题原理-3：给予进步感"><a href="#谜题原理-3：给予进步感" class="headerlink" title="谜题原理 3：给予进步感"></a>谜题原理 3：给予进步感</h4><p>谜题和谜语的一大区别就是进步感。</p><p>一个谜语其实就是一道需要答案的问题。只有对错的最终结果。</p><p>谜题也需要答案，但通常在解谜题的过程中，你能清楚知道你离答案越来越近，或者至少“有所进展”。</p><p>这种进步的感觉给予玩家即将找到答案的希望。</p><p>有方法可以使得谜语变成谜题——一种被称之为《二十问》的游戏。在该游戏中，玩家心中想着一件事/一个人，另一个玩家问 20 个只能用是或否作答的问题，以猜测第一个玩家心中所想之事。</p><blockquote><blockquote><p>我们通常将这个游戏叫做 “是/否/与此无关”<br>网上通常将其成为 “海龟汤”</p></blockquote></blockquote><p>《二十问》的伟大之处在于玩家获得的进步感。通过提出问题来逐步缩小可能的答案范围。</p><p>魔方能够给予玩家进步感，这也是能让玩家坚持解开魔方的众多原因之一。</p><p>研究表明，可见的进步（或者缺失）是工作中影响心情的最大因素</p><p>考虑通货膨胀：为什么物价和薪酬随着时间趋向于增长？这不是一个经济原理，这其实是个心理问题：人们希望每年都能涨薪，因为这能让人感到进步，这笔钱当然必须从某个地方生出来，所以物价会上涨</p><h4 id="55-号透镜：可见进步"><a href="#55-号透镜：可见进步" class="headerlink" title="55 号透镜：可见进步"></a>55 号透镜：可见进步</h4><p>玩家在解决难题的时候需要看见他们正在进步，为确保他们能够得到这个反馈，问</p><ul><li>在你的游戏或谜题中取得进步意味着什么</li><li>在我的游戏中有足够的成长吗？是否有方法能让我添加更多的中间步骤来让玩家逐步取得成功</li><li>哪些成长是可见的，哪些成长是隐藏的？是否能找到一种方法来揭示那些隐藏的成长</li></ul><h4 id="谜题原理-4：给予可解决感"><a href="#谜题原理-4：给予可解决感" class="headerlink" title="谜题原理 4：给予可解决感"></a>谜题原理 4：给予可解决感</h4><p>和进步感相关的是可解决感</p><p>如果玩家开始觉得你的谜题是无解的，他们会开始害怕自己是在无望中浪费时间，继而在厌恶中放弃解题。</p><p>需要说服玩家谜题是有解的。</p><blockquote><blockquote><p>这就是我之前在分析《艾尔登法环》为什么吸引我时得出的其中一个结论——它始终予我以胜利的希望。详见 <a href="https://medill-east.github.io/2022/07/30/20220730-why-i-think-elden-ring-is-attractive/">为什么《艾尔登法环》如此吸引我？</a></p></blockquote></blockquote><p>给予可见进步是个好办法，但这样等于坦率陈述你的谜题有一个答案。</p><p>还是以魔方为例，他用一种非常优雅的方式向玩家说明魔方是有解谜题——购买魔方时，它已经处在被解开的状态（各面都是同色）——玩家搞乱一般也就是转动几十次。此时魔方是必定有解的——只需要将弄乱它的操作反过来执行就好。</p><p>但当然，大部分玩家会认为解开魔方需要用到比弄乱它更多的步数。即使玩家会感到灰心，也从不会怀疑魔方确实可以被解开</p><h4 id="谜题原理-5：逐步增加难度"><a href="#谜题原理-5：逐步增加难度" class="headerlink" title="谜题原理 5：逐步增加难度"></a>谜题原理 5：逐步增加难度</h4><p>以常见的完成拼图的步骤为例：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220807011228.png" alt="常见的完成拼图谜题的步骤"></p><p>这种难度上的逐步提升便是拼图经久不衰的原因之一</p><p>一些新推出的拼图号称比普通拼图更难，通常就是通过改变拼图的性质以至于去掉 1-6 步中某些（或全部）的步骤来实现的</p><p>有一个能保证难度逐步升级的简单方法——给予玩家控制拼图步骤顺序的能力</p><p>玩家很大可能会从简单的做起，给予玩家自由选择的这一设计被称为平行性。</p><h4 id="谜题原理-6：平行性让玩家休息"><a href="#谜题原理-6：平行性让玩家休息" class="headerlink" title="谜题原理 6：平行性让玩家休息"></a>谜题原理 6：平行性让玩家休息</h4><p>谜题会让玩家停下来思考</p><p>若一个玩家无法通过思考来解决谜题，从而不能前进（卡关），就会彻底放弃游戏</p><p>一个好的解决办法是——同时给予他们好几个不同的相关谜题，要是他们被其中某些卡住了，还可以投身到其他谜题中去</p><h4 id="56-号透镜：平行性"><a href="#56-号透镜：平行性" class="headerlink" title="56 号透镜：平行性"></a>56 号透镜：平行性</h4><p>谜题中的平行性有益于提升玩家体验</p><ul><li>我的设计中存在瓶颈以致若玩家不能通过一个特定挑战就无法前进吗？若是，当玩家碰到这个挑战时，是否可以给玩家增加一个平行挑战</li><li>若平行挑战太相似，平行性则无益。每个平行挑战之间是否足够不同，可以给予玩家多样性的益处</li><li>我的平行挑战可以以某种方式联系起来吗？是否有办法使战胜挑战所取得的进步可以让解决另外的挑战变得更容易</li></ul><h4 id="谜题原理-7：金字塔结构会延长兴趣"><a href="#谜题原理-7：金字塔结构会延长兴趣" class="headerlink" title="谜题原理 7：金字塔结构会延长兴趣"></a>谜题原理 7：金字塔结构会延长兴趣</h4><p>平行性适用于的另一件事是金字塔谜题结构——给更大谜题提供线索的一连串小谜题。</p><h4 id="57-号透镜：金字塔"><a href="#57-号透镜：金字塔" class="headerlink" title="57 号透镜：金字塔"></a>57 号透镜：金字塔</h4><p>金字塔使我们着迷，是因为他有一个单一最高点。为赋予谜题古老金字塔的魅力，问</p><ul><li>是否有办法将谜题中的所有部分注入游戏最终的单一挑战中</li><li>巨大金字塔经常由小金字塔组成——是否可以拥有一个具有前所未有挑战性的谜题元素层次，逐步走向最终挑战</li><li>我的金字塔顶部的挑战是否有趣、吸引人、清晰？是否让人想要为了达到它而愿意去工作？</li></ul><h4 id="谜题原理-8：提示会延长兴趣"><a href="#谜题原理-8：提示会延长兴趣" class="headerlink" title="谜题原理 8：提示会延长兴趣"></a>谜题原理 8：提示会延长兴趣</h4><p>解开一个带提示的谜题也比完全解不开要好得多</p><p>提示也可以逐步增加提示深度，且可以为获取提示这一行为增加轻微惩罚（比如扣分或需要消耗资源购买）</p><h4 id="谜题原理-9：给出答案"><a href="#谜题原理-9：给出答案" class="headerlink" title="谜题原理 9：给出答案"></a>谜题原理 9：给出答案</h4><p>人们解开谜题的体验通常是由看到答案所触发的</p><p>若是自己解出了答案，会更快乐一点</p><p>但只要认真考虑了问题，正在解题的大脑会准备好迎接仅仅因为看到或者听到答案时产生的那种喜悦感</p><p>如果玩家真的在游戏中被难住了，比起让他们去网上找答案，何不为玩家省点麻烦，给他们一个能在游戏中自己找到答案的方法呢</p><h4 id="谜题原理-10：感知转移是把双刃剑"><a href="#谜题原理-10：感知转移是把双刃剑" class="headerlink" title="谜题原理 10：感知转移是把双刃剑"></a>谜题原理 10：感知转移是把双刃剑</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220807014006.png"></p><blockquote><blockquote><p>这里的感知转移（perceptual shift）怎么感觉就是一种直觉猜测嘞？</p></blockquote></blockquote><p>当玩家能够感知转移，就会感到解开谜题的巨大喜悦<br>但若他们没法做到感知转移，就什么也得不到</p><p>这种几乎不包括进展性质或阶段性难度增加——只有一直紧张又目不转睛地盯到灵感来临</p><blockquote><blockquote><p>确实，就是，一口气猜出答案嘛哈哈..</p></blockquote></blockquote><h3 id="最后一段"><a href="#最后一段" class="headerlink" title="最后一段"></a>最后一段</h3><p>该透镜用于检测游戏里是否有足够的正确谜题</p><h4 id="58-号透镜：谜题"><a href="#58-号透镜：谜题" class="headerlink" title="58 号透镜：谜题"></a>58 号透镜：谜题</h4><p>谜题使得玩家停下来思考。要确保你的谜题为达到你所塑造的玩家体验而全力以赴，问</p><ul><li>我的游戏中的谜题是什么</li><li>应不应该制作更多谜题，或者减少谜题？为什么</li><li>十条谜题原则中有哪些适用于我的谜题</li><li>游戏是否有任何不适宜的谜题，怎样才能把它们更好融入游戏？（使用 49 号透镜，优雅，来实现）</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220730 - Why I Think Elden Ring Is Attractive</title>
      <link href="2022/07/30/20220730-why-i-think-elden-ring-is-attractive/"/>
      <url>2022/07/30/20220730-why-i-think-elden-ring-is-attractive/</url>
      
        <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>几个月前打通了《艾尔登法环》的星星时代结局，当时在玩的过程中不断在问自己——“是什么支撑我一直不断打开它继续进行游玩呢”，换言之，“究竟是什么吸引了我呢”。前段时间算是给了自己一个回答，这里稍作整理。</p><p>因为自己心中觉得“以后肯定还要继续再玩二周目”，也希望届时若是有了新的体悟，能有所比对。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="《艾尔登法环》简介"><a href="#《艾尔登法环》简介" class="headerlink" title="《艾尔登法环》简介"></a>《艾尔登法环》简介</h3><p>这是一款开放世界第三人称动作角色扮演游戏。玩家需要在“交界地”这一世界中收集破损的法环碎片，通过众神的试炼，修复艾尔登法环，并最终成为艾尔登之王。</p><blockquote><blockquote><p>好像说了也等于没咋说哈哈哈，大家可以到 <a href="https://store.steampowered.com/app/1245620/ELDEN_RING/">Steam 页面</a> 自行查看。</p></blockquote></blockquote><p>以下将阐述个人对其卖点及其游戏魅力的思考总结，也会简单将其与《塞尔达传说：旷野之息》（以下简称旷野之息）进行对比。</p><h3 id="《艾尔登法环》卖点思考"><a href="#《艾尔登法环》卖点思考" class="headerlink" title="《艾尔登法环》卖点思考"></a>《艾尔登法环》卖点思考</h3><p>个人认为当我们分析游戏卖点时，其实是在分析它与其它游戏相比的差异化优势，换句话说，即希望玩家以怎样的方式认识它并最终促使玩家购买。这个过程其实发生在玩家实际游玩之前。</p><p>从这个角度出发，私以为艾尔登法环的卖点包含以下三个层面：1. 好美；2. 好难；3. 好过瘾。</p><h4 id="1-好美-出色的美学设计"><a href="#1-好美-出色的美学设计" class="headerlink" title="1. 好美 - 出色的美学设计"></a>1. 好美 - 出色的美学设计</h4><p>相信很多玩家在提到艾尔登法环时脑中第一时间浮现的就是绝美的黄金树及其极具史诗感的音乐。爱美是人的天性，而当这种美被一种朦胧所笼罩时，更为其增添了一丝神秘感。这种美和神秘感来自于精心打造的故事舞台：交界地。破碎的艾尔登法环以及围绕它的纷争为游戏营造了一种宏大的史诗感，也隐隐透露出蕴含在衰败中的猩红躁动。这些美学设计让玩家在一看到游戏流出的场景，一听到背景音乐时就有了许多想象空间。</p><h4 id="2-好难-出色的难度设计"><a href="#2-好难-出色的难度设计" class="headerlink" title="2. 好难 - 出色的难度设计"></a>2. 好难 - 出色的难度设计</h4><p>另一个不得不提的卖点是艾尔登法环的难度设计。作为宫崎英高的作品，“魂”的标签始终是人们绕不开的话题。本作被人广泛谈论的另一个重要原因就是其出色的难度设计：难得令人发狂，却又难得有迹可循。宫崎英高在接受美国著名杂志《纽约客》的采访时也说过，“我只想让更多玩家感受到克服困难带来的快乐”。这里面提到的“更多玩家”其实也从侧面反映出了本作在难度方面所做的妥协，这其实也是很多潜在玩家购买本作的原因之一，其中也包括以前从未玩过魂系列作品的玩家。</p><h4 id="3-好过瘾-兼顾丰富度和自由度的出色开放世界"><a href="#3-好过瘾-兼顾丰富度和自由度的出色开放世界" class="headerlink" title="3. 好过瘾 - 兼顾丰富度和自由度的出色开放世界"></a>3. 好过瘾 - 兼顾丰富度和自由度的出色开放世界</h4><p>不同于以往的魂系列作品，开放世界是本作的又一个重要标签。艾尔登法环不但为玩家提供了随意漫游的高自由度，更为之设计了与之匹配的丰富内容。单是商店展示页面中，玩家就能看到草原、城堡、崎岖山地、断崖、洞穴、矿洞、湖泊等多样地形，也能看到龙、人形 BOSS、异形 BOSS 等各种怪物。配合前面提到的出色的视觉美术以及场景音乐，本作传达给玩家的讯息就是：“你绝不会失望”。</p><p>综上，以上三个卖点让玩家在购买之前满怀期待，最终决定购买。</p><h3 id="《艾尔登法环》为何吸引我"><a href="#《艾尔登法环》为何吸引我" class="headerlink" title="《艾尔登法环》为何吸引我"></a>《艾尔登法环》为何吸引我</h3><p>前面所涉及的是“如何吸引玩家购买”，而下面则是关于“是什么支持玩家不断继续游玩”的思考。这里的思考是基于我个人的游戏体验而言的，所以难免偏颇，恳请包涵。</p><h4 id="1-于玩家角度而言，它提供了足够的-Hardfun-来源"><a href="#1-于玩家角度而言，它提供了足够的-Hardfun-来源" class="headerlink" title="1.    于玩家角度而言，它提供了足够的 Hardfun 来源"></a>1.    于玩家角度而言，它提供了足够的 Hardfun 来源</h4><p>第一次听到 Hardfun 一词，其实是最近听机核的有一期节目：“游戏为何能深深吸引玩家？一堂深入浅出的游戏理论课程”中张兆弓老师所说，谓其为人们进行游戏最本质的动力之一。之前一段时间我也在不断思考，让我一次又一次拿起手柄，让我不惜令好几年前买的游戏本风扇狂转才能勉强顺畅游玩，每次打开前还有巨长加载时间的这款游戏，究竟为什么吸引我？听了张兆弓老师对于 Hardfun 和《The Art of Faliure》的讲解后，我似乎有了答案。一言以蔽之，它够难，而且它难得千奇百怪，难得有迹可循，难得有起有伏。</p><blockquote><blockquote><p>之前也写了 <a href="https://medill-east.github.io/2022/06/02/20220601-gcores-playbeyondthegame/">20220601 - 机核 游戏理论系列播客笔记</a>，里面有关于 hardfun 更为详细的描述，感兴趣的朋友可以看看。</p></blockquote></blockquote><h5 id="（1）-难得千奇百怪"><a href="#（1）-难得千奇百怪" class="headerlink" title="（1）   难得千奇百怪"></a>（1）   难得千奇百怪</h5><p>游戏中的每一次成功，就预示着下一次新的失败即将来临。在我对交界地还不甚熟悉，甚至连地图都还不知道怎么开时，我总能碰到新的怪物，“学会”新的死法。而当我地图开了大半，以为游戏将尽，我已“看遍长安花”时，一个升降梯又把我带到了新的世界，令我兴奋不已。“洞窟”、“墓地”、“坑道”，即使是熟悉的名字也总能给我带来完全不同的体验。在交界地的每一天，都过得充实而又充满新鲜感。</p><h5 id="（2）-难得有迹可循"><a href="#（2）-难得有迹可循" class="headerlink" title="（2）   难得有迹可循"></a>（2）   难得有迹可循</h5><p>怪物。作为“小怪三刀带走你”的魂类游戏，交界地的怪物不出意外的具有很强的攻击能力，但这种几乎离谱的数值设计恰好反映了设计师的底气，因为他们为玩家们预留了一定能击败怪物的应对手段。怪物永远是那个怪物，虽然我一次次被其手刃，但我对其了解也不断加深。它们的每一次前摇，每一次抬手，从象征着我的死亡蜕变为象征着它的受伤。一来一回间，我成长了，它消散了。</p><p>宝物。从以往的“直奔主线”到交界地中的“犄角探险”，每个地方的崎岖蜿蜒都从原来的“无聊跑路”和“此路不通”变为了“兴奋探险”和“我不相信”，特别是当找到宝物的那一刻，一切困难都化为了心照不宣。</p><h5 id="（3）-难得有起有伏"><a href="#（3）-难得有起有伏" class="headerlink" title="（3）   难得有起有伏"></a>（3）   难得有起有伏</h5><p>局内节奏。尽管深知“贪刀就会败北”，选择了法爷的自己在前期靠着翻滚和最初始的辉石魔砾还是能一路几乎不假思索地莽过去，但到了红狮子城，双 BOSS 的设计第一次让我不得不慢下来沉着应对，这里让我重新想起了《只狼》中砍一刀就跑的那份谨慎与克制。节奏，就在我和 BOSS “二人转”的腾挪之间，而机会，稍纵即逝。每一次成功造成伤害，都是非线性体验的一个小波峰，而最终杀敌的那一声“噗”，也会将非线性体验拉高到极值。</p><p>局外节奏。每次在交界地漫步，除了感慨上一个 BOSS 的惊心动魄，周遭景色的美轮美奂，也会期待下一段未知的精彩以及旅途中点缀的小关卡。每一次攻克关卡都会使“松弛有度”的心弦更有韧性，这既能增加玩家本身对于下次挑战的期待，也反过来对设计者提出了更高的满足玩家期待的要求，或者说给设计者提供了进一步超出玩家预期的机会。显然，设计师们做得很好。</p><h4 id="2-于设计角度而言，其精巧而丰富的关卡设计着实令我倍感惊喜"><a href="#2-于设计角度而言，其精巧而丰富的关卡设计着实令我倍感惊喜" class="headerlink" title="2.    于设计角度而言，其精巧而丰富的关卡设计着实令我倍感惊喜"></a>2.    于设计角度而言，其精巧而丰富的关卡设计着实令我倍感惊喜</h4><p>最近有在接触关卡设计有关的内容，越了解越觉得艾尔登法环的设计之精妙。史东威尔之绕，永恒之城之巧，王城下水道之曲折，着实让我大开眼界，每每觉得无路可走之时，总能“柳暗花明又一村”。看似无解之局，其实皆有指引。玩家的每一次豁然开朗，其背后都是设计者的“煞费苦心”。作为一个将来的游戏从业人员，以及自己开发过小 Demo 的未入门的设计师，当看到玩家试遍所有他们觉得的可能性之后准备开始骂街之时，却又突然发现了一条以前从未试过，但其实就是设计者专门保留的路，这种快乐我已然尝到过。正因如此，更是折服于交界地中千奇百怪却又顺理成章的关卡设计。学无止境，希望终有一天，自己也能为万千玩家带来如此盛宴。</p><h3 id="有没有什么可以改进的点呢"><a href="#有没有什么可以改进的点呢" class="headerlink" title="有没有什么可以改进的点呢"></a>有没有什么可以改进的点呢</h3><p>“完美”当然是不存在的一种假设概念，自己在游玩过程中也对其一些可改进的点进行了思考。</p><h4 id="1-任务引导的缺失"><a href="#1-任务引导的缺失" class="headerlink" title="1.    任务引导的缺失"></a>1.    任务引导的缺失</h4><p>在早期随意“逛街”时期其实这一感觉还并不明显，但当我渐渐开始专注于主线时突然出现的一个问题就是 —— 不记得NPC 说了什么。这直接导致了我不知道下一步该去哪里，以及目标感突然丢失的怅然。虽然告诉自己“没事的，总会遇见”，但心中一旦有了挂念，就再也无法回到一开始的无忧无虑了。</p><p>当然了，反过来讲，玩家一旦意识到 NPC 真的“只说一次”之后，就会愈加慎重地对待每一次对话，或者像我一样开始做笔记，这反过来也强化了游戏的内生价值，让 NPC 们真正“活过来”了。作为易用性的改进，可以考虑增加一个对话回忆系统。</p><h4 id="2-部分剧情的缺失"><a href="#2-部分剧情的缺失" class="headerlink" title="2.    部分剧情的缺失"></a>2.    部分剧情的缺失</h4><p>这一点主要体现在当时推进菈妮线任务过程中发现某些 NPC突然魂归黄金树了（没错，说的就是魔法教授），并且后续据我目前所知在同一周目内没有任何办法知道到底发生了什么。这一设计按我目前的理解是增加了玩家进行多周目游玩探寻的动力，但也确实让我在游玩的当下感到有些摸不着头脑。作为改进，也许可以考虑在世界中再增加一些所谓记忆碎片，无论是被保留的影像，亦或只是其他人，甚至是记录在某些奇怪地方的只言片语，都能对此问题有些许缓解。</p><h4 id="3-部分怪物的击杀难度与奖励不对等"><a href="#3-部分怪物的击杀难度与奖励不对等" class="headerlink" title="3.    部分怪物的击杀难度与奖励不对等"></a>3.    部分怪物的击杀难度与奖励不对等</h4><p>生出这一想法的主要有两次，一次是通往王城的传送门前的巨大守卫，其死亡后竟然只有区区两千多卢恩奖励。另一次是通往王座前的女王闺房前的人形 NPC，千辛万苦将其击杀后，我现在甚至记不清有没有给卢恩奖励。</p><p>目前能想到的一种合理解释是我当时实力不济，其实是很好解决的敌人，所以本来也不该有高额奖励的期待。另一种解释是这些敌人本来也没打算让玩家攻克，只是为了把玩家“赶”到另一条设计好的路上。但除此之外，我暂时想不到做出“高难度-低奖励”这一设计的意图。改进方法目前想到的也很直接，提高奖励，或是换为机关都可。</p><h3 id="有没有什么可以新增的玩法呢？"><a href="#有没有什么可以新增的玩法呢？" class="headerlink" title="有没有什么可以新增的玩法呢？"></a>有没有什么可以新增的玩法呢？</h3><p>可以考虑增加一个和谏言系统相关联的言灵系统和善恶值系统。</p><p>谏言系统本身是艾尔登法环中异步联机的重要组成部分，玩家可以从固定词库中选择并留下可被其他世界玩家看到的谏言，其他玩家看到谏言后可选择给予好评或者恶评。自己的谏言被给予好评时能够恢复一半的血量。而收到大量好评的谏言会呈现金色。</p><p>言灵系统玩法如下：根据玩家谏言所获得的好评与恶评数量可以计算出玩家所具有的“谏言之力”，而当谏言之力达到一定分数后可获得相应能力——言灵，具有言灵之力的玩家所留下的谏言在点开前就能呈现明显的颜色（因为大量好评获得的金色言灵则呈现金色，因为大量恶评而获得的红色言灵则呈现红色）。玩家在触碰此类谏言时可使得言灵具象化，金色言灵之力会给玩家施加一个小型的卢恩弯弧之力，谏言之主可以部分获得玩家在接下来一段时间内通过击杀而获得的卢恩（抽成不影响玩家本身可以获取的卢恩量）。而红色言灵之力会成为类似入侵勾指的存在，但能力会一定程度上根据玩家进行平衡，击杀方可以有几率获取对方身上的任意一件物品（玩家的获取几率比红色言灵更高，双方的原有物品都不会消失）。言灵之力的每次成功触发都会使得谏言之主的善恶值发生变化，而善恶值会在一定程度上影响 NPC 对于玩家的态度，甚至最终能影响当前周目可推进的剧情走向。</p><p>希望给玩家带来的体验：相信不少玩家有过被谏言骗的经历，而言灵系统的设计是为了一定程度上强化谏言之善而抑制谏言之恶。善恶只在一念之间，无论是“善小”还是“恶小”，玩家均可为之，但都要考虑此举后果。与此同时，该玩法的设计也能更好地鼓励玩家使用谏言系统。</p><h3 id="所以对我而言最重要的游戏体验是什么呢"><a href="#所以对我而言最重要的游戏体验是什么呢" class="headerlink" title="所以对我而言最重要的游戏体验是什么呢"></a>所以对我而言最重要的游戏体验是什么呢</h3><p>对我而言最重要的游戏体验是代入感。基于此，玩家在游戏中不可避免地会涉及以下几个问题的探寻：我是谁，我在哪，我该干什么。</p><p>以艾尔登法环为例，在刚开始进入游戏时，采用了CG的方式帮助玩家了解“我是谁”这一问题的答案。并且在游玩过程中，与 NPC 对话的过程也能不断了解角色所发生的故事。此外，与 NPC 对话的方式是“间断式”的：此次对话完全结束后，再次和 NPC 对话便会触发新的对话内容，这一设计也很好地增强了玩家的代入感受，从而让玩家从“我在操控游戏角色玩游戏”的体验提升为“我成为了游戏角色在探索世界”，这能够很好地调动我作为玩家的积极性。</p><p>而至于“我在哪”这一问题的解答也能够让“进入游戏”的玩家拥有更好的角色代入感，从而能够让玩家感觉到自己不是一个无关的外来者，而是有血有肉地“活”在这个世界中。在艾尔登法环中，玩家可以通过与 NPC 对话时的只言片语，以及从各种道具中的晦涩文字中不断加深对自己所在的游戏世界的认知，从而知道“我在哪”这一问题的答案。</p><p>“我该干什么”这一问题一般与玩家的目标感相关，在没有任务指引的交界地中，需要依靠赐福之光来大概了解接下来的前行方向，此外地图上的标记记号也可以帮助玩家找到方向。但毕竟是开放世界游戏，即使不完全跟着主线走，世界也会在不经意间发生变化，随着任务的推进，玩家也能真实感受到自己的所作所为能对这个世界造成影响。所以在艾尔登法环中，我更多时候会问自己“我现在想干什么”，这种主动行为反过来也增强了代入感。</p><h3 id="《艾尔登法环》与《旷野之息》的养成系统有何不同呢"><a href="#《艾尔登法环》与《旷野之息》的养成系统有何不同呢" class="headerlink" title="《艾尔登法环》与《旷野之息》的养成系统有何不同呢"></a>《艾尔登法环》与《旷野之息》的养成系统有何不同呢</h3><p>之前也简单思考了老头环与开放世界标杆——旷野之息的些许区别，这里会从养成系统来进行描述。</p><h4 id="从设计思路分析"><a href="#从设计思路分析" class="headerlink" title="从设计思路分析"></a>从设计思路分析</h4><p>虽然两款游戏同属 RPG，可二者的核心玩法侧重点并不相同。简言之，艾尔登法环更加侧重于动作，而塞尔达更加侧重于冒险。</p><p>从这一点出发，艾尔登法环中的养成系统的设计目的是为了丰富玩家的战斗体验。</p><p>所以无论是卢恩系统，以供玩家选择多样化战斗玩法的加点系统，制作道具系统，骨灰及其升级系统，装备及其升级系统，圣杯瓶及露滴系统，多样化的战灰、法术、祷告、龙飨等，都是为了尽可能地拓宽战斗的可选策略和可能性。艾尔登法环的核心玩法就是战斗，那么其养成系统的设计过程中的核心诉求就是为了解决以下几个问题：</p><ul><li>“用什么战斗”（道具/骨灰/装备）</li><li>“战斗策略是什么”（战灰/法术/祷告/龙飨）</li><li>“战斗目标/奖励是什么”（卢恩/装备/骨灰/道具/露滴等）</li><li>“打不过怎么办” （加点/骨灰升级/装备升级/露滴）。</li></ul><p>而旷野之息中的养成系统的设计目的是为了丰富玩家的冒险乐趣。</p><p>所以无论是特殊道具系统，三维数值（尤其是精力系统），装备系统，食物系统，图鉴系统等，都是为了尽可能地让玩家在冒险过程中体会乐趣。所以旷野之息的养成系统在设计过程中的核心诉求就是为了解决：</p><ul><li>“为什么去”（图鉴/装备/道具等/或者说是为了乐趣本身？）</li><li>“能去哪里”（三维数值/装备/食物）</li><li>“怎么去”（特殊道具系统）。</li></ul><h4 id="从玩家体验分析"><a href="#从玩家体验分析" class="headerlink" title="从玩家体验分析"></a>从玩家体验分析</h4><p>个人认为艾尔登法环的养成系统所期望传达的核心目标体验是“对敌的希望”。</p><p>它的养成系统为每一位心中冒出“这样打不过，要不试试那样”念头的玩家保留了一份“下一次我一定能弄死它”的希望。正是这种希望让玩家能一次次面对死亡，这也和前面所提到的“难得有迹可循”相照应。</p><p>而旷野之息的养成系统所期望传达的核心目标体验是“冒险的可能性”。</p><p>“在路上”是玩家们在海拉鲁大陆上最常经历的状态，而旷野之息的养成系统让旅途充满了无限可能。用心的玩家们总能利用养成系统中的元素让旅途变得惊心动魄而又妙趣横生。</p><h4 id="从系统设计优劣分析"><a href="#从系统设计优劣分析" class="headerlink" title="从系统设计优劣分析"></a>从系统设计优劣分析</h4><p>艾尔登法环用其精巧而丰富的关卡和敌人设计为养成系统准备好了施展的舞台，而旷野之息用其精妙的“乘法法则”为养成系统提供了发挥的空间。两个系统都很好地满足了前面所提到“对敌的希望”以及“冒险的可能性”的目标体验。</p><p>两个养成系统都很好地服务于“部分开放，有限自由”的开放世界法则。</p><p>非要比较，艾尔登法环的养成系统更遵循于“无限引入，有限选择”的原则，在早期游戏过程中，玩家会不断接触到新的养成元素，而到了游戏后期，玩家更像是面对一个现成的武器库，从中挑选“趁手”的兵刃以及技法来进行作战，从而拥抱“下一次获胜的希望”。</p><p>而旷野之息的养成系统更遵循于“有限引入，无限创造”的原则，在游戏早期玩家基本就可以了解到游戏的所有养成机制，而往后的冒险就像老话所说——“师傅领进门，修行在个人”，玩家总是能轻易想到最直观的那一条冒险之路，但我相信每一个玩家心中都会留存着一分“有没有其他可能”的探索愿望。</p><p>如前所述，二者的设计都很好地符合了各自偏重战斗和偏重冒险的核心玩法，都是值得游戏从业者借鉴学习的优秀设计。</p><hr><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>虽说是整理，其实也就是把之前的一些文字拷贝到了一起。倒是后来新的思考是——为什么通关前满口说一定要二周目的我，到了几个月后的现在还是没有如此行事呢？</p><p>最重要的原因可能是“未知感”的削弱，新的周目虽然可以让自己有机会以全新的方式来进行游玩（以不同的 build 和探索不同地区之类的），但不可否认的是会经历大量重复内容（呵，贪图新鲜的人）。所以最好的解决办法还是——一周目通关后不要立马开二周目，接着探索未知区域好了！</p><blockquote><blockquote><p>想来以前打过二周目的游戏还真是屈指可数，《无主之地 2》倒是切实地打了二周目，但可能是因为 FPS 游戏本身所带来的战斗体验的特殊性减弱了重复感。</p></blockquote></blockquote><hr><p>寥寥数言，浅薄己见，看个乐 (￣▽￣)”</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十三章 游戏机制必须平衡</title>
      <link href="2022/07/11/20220711-theartofgamedesign-chap13/"/>
      <url>2022/07/11/20220711-theartofgamedesign-chap13/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="20220711-第十三章-游戏机制必须平衡"><a href="#20220711-第十三章-游戏机制必须平衡" class="headerlink" title="20220711 第十三章 游戏机制必须平衡"></a>20220711 第十三章 游戏机制必须平衡</h2><blockquote><p>诡诈的天平为耶和华所憎恶。 —— 《箴言 11：:1》</p></blockquote><p>平衡一个游戏，不过是调整游戏的各种元素，直到它们传达了你想要的体验。</p><h3 id="十二种最常见的游戏平衡"><a href="#十二种最常见的游戏平衡" class="headerlink" title="十二种最常见的游戏平衡"></a>十二种最常见的游戏平衡</h3><h4 id="平衡类型-1：公平"><a href="#平衡类型-1：公平" class="headerlink" title="平衡类型 1：公平"></a>平衡类型 1：公平</h4><blockquote><p>不对等的战斗毫无乐趣可言。 —— 卡武尔太太（出自电影《妈妈市场》）</p></blockquote><h5 id="对称游戏"><a href="#对称游戏" class="headerlink" title="对称游戏"></a>对称游戏</h5><p>给予所有玩家同等资源和能力。</p><p>如果想要玩家们互相直接竞争，并预期他们的技巧水平差不多，对称游戏是不错的选择。这种系统特别适合确定哪个玩家最强。</p><p>完美对称也不容易实现，会存在“先/后手优势”等问题，一般用抛硬币或投骰子等随机方式解决。<br>有时会把优势给劣势方可以弥补不对称，如“让年龄最小的玩家先来”。</p><h5 id="不对称游戏"><a href="#不对称游戏" class="headerlink" title="不对称游戏"></a>不对称游戏</h5><p>创造非对称游戏的可能原因：</p><ol><li><p>为了模拟真实世界情况</p></li><li><p>为了给玩家另一种方式来探索游戏空间<br>如格斗游戏中，用不同角色意味着不同玩法。</p></li><li><p>个性化<br>可以让玩家自由选择游戏方式</p></li><li><p>为了场上情况均衡<br>特别是当双方实力相差悬殊时，或有电脑对手在场<br>是否引入该方法，取决于游戏目的。是要对玩家技巧设立标准，还是为所有玩家提供挑战。</p></li><li><p>为了创建有趣情况<br>让多股不对称力量相互斗争很有趣，且能引发玩家深刻思考<br>游戏制胜策略往往不能一眼看出，玩家会思考哪方占优，游戏是否真正公平<br>例子：尼泊尔虎棋。一方控制五只老虎，另一方控制二十只山羊。老虎方吃五只山羊就胜利，山羊方移动山羊，使得所有老虎不能移动而取胜。有经验的玩家一般承认游戏公平，但新手玩家会花大量时间讨论是否公平，并反复游玩以确认。</p></li></ol><p>不对称游戏的平衡通常通过量化资源/能力，确保双方总值相等。</p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><h6 id="双翼飞机大战"><a href="#双翼飞机大战" class="headerlink" title="双翼飞机大战"></a>双翼飞机大战</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711004949.png"></p><p>此时不好判断平衡性，但若是将低中高分别量化为 123，那么可以得到</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005039.png"></p><p>好像复仇者优势明显。经过测试后，发现食人鱼和复仇者势均力敌，但骆驼总是输，所以推测火力比其他属性更有价值，同时将骆驼火力调高，从而得到新的表：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005225.png"></p><p>如果此时几方势均力敌，则说明模型正确，否则可能需要继续调整模型。</p><p>调整平衡和开发指导平衡的模型需要共同推进。<br>只有游戏可玩了，才能真正开始调整平衡。<br>经验之谈：一半的开发时间应该用来平衡游戏。</p><h6 id="石头、剪子、布"><a href="#石头、剪子、布" class="headerlink" title="石头、剪子、布"></a>石头、剪子、布</h6><p>还有一种平衡方式——克制关系。</p><h4 id="37-号透镜：公平"><a href="#37-号透镜：公平" class="headerlink" title="37 号透镜：公平"></a>37 号透镜：公平</h4><p>要使用公平透镜，从玩家视角思考游戏。考虑玩家技巧水平，找到方法让每个玩家都有机会获胜，且各自都认为公平。</p><ul><li>游戏应该对称吗，为什么</li><li>游戏应该不对称吗，为什么</li><li>哪点更重要？<ul><li>游戏应能有效衡量谁的技巧水平最高</li><li>游戏应该为所有玩家都带来有趣挑战</li></ul></li><li>如果想让不同水平玩家一起玩，会用什么手段，令游戏对所有人都具有趣味性和挑战性</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005807.png"></p><h4 id="平衡类型-2：挑战与成功"><a href="#平衡类型-2：挑战与成功" class="headerlink" title="平衡类型 2：挑战与成功"></a>平衡类型 2：挑战与成功</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711010326.png"></p><p>让玩家能持续体验心流，意味着平衡挑战与成功两种体验。由于玩家技巧水平不一，找到平衡很难。以下是找到平衡的一些常用方法：</p><ul><li>随着每次成功增加难度。<ul><li>一方面不断增强关卡难度</li><li>一方面也不要忘记“张弛有度”</li></ul></li><li>让玩家快速打通容易部分<ul><li>可以让熟练玩家快速遇到有意思的挑战</li><li>让技巧不那么熟练的玩家慢慢挑战之前的关卡</li><li>可以让每种类型玩家都快速进入游戏中能给自己带来挑战的部分</li></ul></li><li>创建“层层挑战”<ul><li>即结尾评分，如评分太差，就需要重玩</li><li>新手玩家一开始只要能拿 C，就能沉浸在过关喜悦中，但随着技术水平提高，他们也会对自己有更高评分要求</li></ul></li><li>让玩家自选难度<ul><li>一种是预设难度 —— 游戏开始前就定好了会遇到什么样的困难</li><li>一种是动态难度 —— 在游戏过程中根据玩家表现调整难度<ul><li>优点：可以让玩家找到相匹配的挑战难度</li><li>缺点：<ul><li>需要创建多个难度版本（这个是对应以前的游戏，随着人工智能的发展，动态难度这一问题相信会真正被攻克）</li><li>会削弱游戏“真实感”（书中说玩家会争论哪个版本才是“真的”，译者注里面写，作者解释说，这里的“真实”指的是令玩家认真对待幻想世界的真实感，因为如果有多个平行幻想世界，就提醒了玩家这些都是虚构的。有些幻想世界比别的感觉更真实。）</li></ul></li></ul></li><li>请各种玩家试玩<ul><li>让具有各种技巧水平的玩家都来试玩，确保游戏开头好玩，稍后好玩，后面依然好玩</li></ul></li><li>让失败者休息一下<ul><li>《马里奥赛车》中的道具机制是排名靠前的玩家拿到的道具就弱，排名靠后的玩家拿到的道具就强。这是很棒的设计。</li></ul></li></ul></li></ul><p>决定游戏难度怎样随时间增加，是调整游戏平衡的一大挑战。<br>作为设计师，应当问自己，“我想要百分之多少的玩家能打通游戏？”，然后朝这个目标去设计</p><p>不要忘记，学着玩一个游戏，本身也是挑战！因此，游戏前一两关通常非常简单。因为玩家需要理解“控制和目标”。在前期，一点点成功可以帮助玩家建立自信，自信的玩家是不会轻易放弃一款游戏的。</p><h4 id="38-号透镜：挑战"><a href="#38-号透镜：挑战" class="headerlink" title="38 号透镜：挑战"></a>38 号透镜：挑战</h4><p>挑战几乎是所有游戏玩法的核心。甚至可以说，游戏由其目标和挑战所定义。检查游戏中的挑战，问自己：</p><ul><li>游戏中的挑战是什么</li><li>太容易？太难？刚刚好？</li><li>这些挑战能否容纳各种技巧水平</li><li>随着玩家不断成功，挑战难度如何增长</li><li>挑战种类是否足够多样</li><li>游戏中最高水平挑战是什么</li></ul><h4 id="平衡类型-3：有意义的选择"><a href="#平衡类型-3：有意义的选择" class="headerlink" title="平衡类型 3：有意义的选择"></a>平衡类型 3：有意义的选择</h4><p>对玩家有意义的选择，会引导他们问自己如下问题：</p><ul><li>应该去哪里</li><li>应该如何运用我的资源</li><li>应该练习和完善什么技能</li><li>应该让人物穿什么</li><li>应该快速通关还是小心谨慎</li><li>应该集中进攻还是防守</li><li>该情况下应该是用什么策略</li><li>应该选择哪个能力</li><li>应该走保险路线，还是冒大风险</li></ul><p>好游戏给玩家的选择是有意义的。</p><ul><li>选项都差不多，那么多个选项就没有意义。</li><li>如果有选项明显优于其他选项（最优策略），那其他选项就没有意义。</li></ul><p>如果游戏中发现了最优策略，一定要调整平衡，削弱其地位。<br>玩家发现的隐藏最优策略一般叫做漏洞（exploits），因为玩家可以利用它绕开设计师意图，走捷径获得成功。</p><p>应该给玩家多少有意义的选择？Michael Mateas 指出，玩家想要的选择数量，取决于他们的欲望。</p><ul><li>选择 &gt; 欲望，玩家感到不堪重负</li><li>选择 &lt; 欲望，玩家感到沮丧</li><li>选择 = 欲望，玩家感到自由和满足</li></ul><h4 id="39-号透镜：有意义的选择"><a href="#39-号透镜：有意义的选择" class="headerlink" title="39 号透镜：有意义的选择"></a>39 号透镜：有意义的选择</h4><p>当做出有意义选择后，会觉得自己做的事情很重要。问自己：</p><ul><li>我要求玩家作何种选择</li><li>这些选择有意义吗？怎么做呢？</li><li>给玩家的选择数量对吗？加多些，是否会让他们更有力量感？减少些，是否让游戏更清晰？</li><li>游戏中是否有最优策略</li></ul><h5 id="三角形"><a href="#三角形" class="headerlink" title="三角形"></a>三角形</h5><p>玩家可做选择中最刺激有趣的就是小心行事小回报，还是放手一搏大回报。若是游戏平衡做得好，这个决定就很难下。</p><p>如果游戏原型“就是不好玩”，八成是缺少这样有意义的选择 —— 平衡的非对称风险，为其起名为三角形。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220719105747.png" alt="玩家 风险 和回报的三角形关系"></p><p>例子：《太空侵略者》</p><ul><li>大部分时间，射击靠近飞船的低分外星人，移动缓慢，容易打中</li><li>每间隔一段时间，屏幕顶端会飞过小型红色飞碟，虽然没有威胁，但分值很高，速度很快，很难打中。为了打到它，玩家必须转移注意力，很可能让自己暴露在危险中，但这正是这个选择有意义的地方。</li></ul><h4 id="40-号透镜：三角形"><a href="#40-号透镜：三角形" class="headerlink" title="40 号透镜：三角形"></a>40 号透镜：三角形</h4><p>让玩家选择小心行事获得小回报，还是放手一搏获得大回报，是很有效的方式。可以让游戏兴奋有趣。问自己：</p><ul><li>游戏中有三角形了吗，如果没有，怎么改进</li><li>我尝试构建的三角形平衡吗，换言之，回报和风险成比例吗</li></ul><p>一旦在各种游戏中寻找三角形，就会发现它无处不在。添加一点三角形，会让游戏变得令人兴奋而满足。</p><p>典型范例， Steven Levy 著的《黑客》（Hackers）一书中。<br>一台自动售货机被黑了，给顾客提供了一个选择：</p><ul><li>正常价格购买</li><li>冒险投一个虚拟硬币，让零食价格翻倍或免费</li></ul><p>要确保三角形平衡，可以用 35 号透镜，期望值。</p><p>街机游戏 Qix 就是用期望值平衡的有趣例子。游戏中要在空白地图上试图绘制矩形，围住底盘。同时，一团叫 Qix 的线段随机值屏幕上飘。如果 Qix 在你没画完某个矩形时碰到它，你就死了。但如果画完矩形，就得到了地图上的这片区域。获得 75%以上区域便可过关。</p><p>游戏设计者提供的明确选择 —— 快速移动可绘制蓝色矩形，半速移动可绘制橙色矩形（双倍积分）。<br>假设蓝色矩形绘制成功率 20%，等价 100 分，期望值为 100 * 20% = 20 分<br>半速绘制的橙色矩形成功率为一半 10 %，若想让期望和上面一样，分数应该是 200 分。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220719111449.png" alt="平衡的三角形选项"></p><p>难点其实在于成功率的确定，需要前期估算-后期迭代-反复调整。</p><p>《马里奥赛车》堪称三角形的交响乐。例子：</p><ul><li>手动还是自动？<ul><li>手动需要更多技巧，但用得好可以让速度提升更大</li></ul></li><li>卡丁车还是摩托车<ul><li>卡丁车基础速度更快</li><li>要是能在摩托车做抬轮（有风险，因为抬轮时不能转弯）动作，就比卡丁车快</li></ul></li><li>抢道具还是无视道具<ul><li>抢道具可能有撞车风险</li></ul></li><li>使用道具还是无视<ul><li>使用道具会分心</li></ul></li><li>持有手上道具还是丢掉换新道具</li><li>用不用加速区<ul><li>可以让你速度加快，但经常位于危险位置</li></ul></li><li>提早踩油门吗<ul><li>起跑线上，提早加速时机正确，会有速度增强</li><li>时机不对会延迟起步，令人烦躁</li></ul></li><li>左边还是右边<ul><li>许多赛道有低风险/高风险岔路，高风险岔路加速更多</li></ul></li></ul><h4 id="平衡类型-4：技巧与概率"><a href="#平衡类型-4：技巧与概率" class="headerlink" title="平衡类型 4：技巧与概率"></a>平衡类型 4：技巧与概率</h4><p>技巧游戏一般偏向体育竞赛，由裁判系统决定玩家强弱。<br>概率游戏比较轻松休闲，毕竟许多结果“不可控”。<br>为取得平衡，必须使用 19 号透镜“玩家”来理解对你的受众来说，多少技巧和多少概率才是正确数量。</p><p>偏好差异有时由年龄、性别甚至文化决定。例如，德国桌面游戏玩家似乎更喜欢尽量减少偶然性影响的游戏，远胜过美国等地的玩家。</p><p>平衡二者的常见方法是在游戏中交替使用概率和技巧。<br>如发牌是纯概率，出牌是纯技巧，投骰子看能走多远是纯概率，决定往哪里走是纯技巧</p><p>David Perry 建议，要设计令人上瘾的游戏，关键在于把游戏设计成玩家在其中随时做三件事：</p><ul><li>发挥一种技巧</li><li>冒各种风险（即以某种方式在挑战概率）</li><li>思考一种策略</li></ul><h4 id="41-号透镜：技巧与概率"><a href="#41-号透镜：技巧与概率" class="headerlink" title="41 号透镜：技巧与概率"></a>41 号透镜：技巧与概率</h4><p>问自己</p><ul><li>玩家是来接受评断（技巧）的，还是来冒风险（概率）的</li><li>技巧一般比概率更严肃，这是个严肃游戏，还是休闲游戏</li><li>游戏有没有乏味部分，如果有，加入概率能盘活吗</li><li>游戏中有没有感觉太随机的部分，如果有，将概率元素替换为技巧或策略元素，能让玩家感觉控制感更强吗</li></ul><h4 id="平衡类型-5：头与手"><a href="#平衡类型-5：头与手" class="headerlink" title="平衡类型 5：头与手"></a>平衡类型 5：头与手</h4><p>即脑与身体协调能力考验的平衡</p><p>经典例子——平台跳跃类游戏</p><p>了解目标市场喜欢游戏中出现什么很重要——思考更多，还是敏捷更多？</p><p>在游戏中清晰传达你选择了怎样的平衡也同样重要<br>例子：世嘉 MD 的《吃豆人 2：新的冒险》<br>其名字暗示这是一个和原版吃豆人一样，略带策略元素的动作游戏（嗯？怎么看出来的？可能是原文能看出来？）<br>但包装盒上的样子，像是一款和《超级马里奥兄弟》和《刺猬索尼克》类似的 2D 平台游戏，这意味着动作加上一点点解谜。<br>但真正玩起来，又不一样！虽然视觉上像是平台动作游戏，但其实全是奇怪地心理谜题。你要微妙地指引吃豆人进入不同情感状态，才能让它通过各种障碍。<br>本来期待大量动作和少量思考的玩家失望了，本来想找一个解密游戏的玩家又因为“动作游戏”的外表而拒绝了它</p><blockquote><blockquote><p>感觉像是宣发和游戏定位的偏差问题，现在很多玩家购入之前都会看测评，游戏商店页面也会有视频预览，所以一定程度上能缓解玩家因为“封面”就错过好游戏的问题。但要是一开始就做好二者的匹配，当然是最好的！</p></blockquote></blockquote><h4 id="42-号透镜：头与手"><a href="#42-号透镜：头与手" class="headerlink" title="42 号透镜：头与手"></a>42 号透镜：头与手</h4><p>Yogi Berra 曾经说过：“棒球是 90% 的精神，另一半是身体。”为确保心理和生理元素在游戏内获得真实平衡，问自己</p><ul><li>我的玩家想要无脑动作，还是智力挑战</li><li>游戏里更多地方包含解密，会更有趣吗</li><li>有没有地方可以让玩家放松大脑，只管玩，不用想事情</li><li>能不能给玩家一个选择——可以展示高度敏捷，也可以找到一个最不需要身体技巧的聪明策略</li><li>如果 1 分是纯身体，10 分是纯精神，游戏得几分</li></ul><p>此透镜与 19 号透镜 “玩家” 共同使用效果尤其好</p><h4 id="平衡类型-6：竞争与合作"><a href="#平衡类型-6：竞争与合作" class="headerlink" title="平衡类型 6：竞争与合作"></a>平衡类型 6：竞争与合作</h4><p>竞争与合作是动物基本本能<br>喜欢玩游戏的一大秘密原因是，其提供了社交安全的途径来探索周围人在压力之下的表现</p><p>有些游戏以有趣方式融合了竞争与合作。街机游戏《鸵鸟游戏》（Joust）中，玩家既可以单人闯关，也可以双人闯关。<br>竞争方面，玩家分数由击敌数量决定，玩家可以比拼。且存在角斗士关（gladiator wave），最先打败对方的玩家得 3000 分<br>合作方面，玩家如果协调攻击、互相保护，可以得到更高分数。且存在团队关（team wave），每个玩家都能过关，则每人得 3000 分</p><p>另一种组合方式：团队竞技</p><h4 id="43-号透镜：竞争"><a href="#43-号透镜：竞争" class="headerlink" title="43 号透镜：竞争"></a>43 号透镜：竞争</h4><p>确定某件事情上谁最优秀，是人的基本冲动。竞争类游戏能满足这种冲动。</p><ul><li>我的游戏对玩家技巧高低的衡量公平吗</li><li>人们是否想赢得我的游戏，为什么</li><li>在这个游戏中获胜是可以自豪的事情吗，为什么</li><li>新手可以在我的游戏中有意义地竞争吗</li><li>专家可以在我的游戏中有意义地竞争吗</li><li>专家们是否普遍肯定他们会打败新手</li></ul><h4 id="44-号透镜：合作"><a href="#44-号透镜：合作" class="headerlink" title="44 号透镜：合作"></a>44 号透镜：合作</h4><p>团队协作并取得成功是种特别快乐，可以创建持久社交纽带</p><ul><li>合作需要沟通。我的玩家有足够契机来沟通吗，如何加强沟通</li><li>玩家们已经是朋友，还是陌生人？如果是陌生人，可以帮助他们破冰吗</li><li>玩家们合作时有协同作用（1+1&gt;2）或是妨碍作用（1+1&lt;2）吗，为什么</li><li>玩家们都是相同角色，还是有特殊分工</li><li>如果只靠一个人无法完成某项任务，就嫩恶搞大大加强合作，游戏中有此类任务吗</li><li>强制沟通的任务会激发合作，我又强制沟通的任务吗</li></ul><h4 id="45-号透镜：竞争与合作"><a href="#45-号透镜：竞争与合作" class="headerlink" title="45 号透镜：竞争与合作"></a>45 号透镜：竞争与合作</h4><ul><li>如果 1 分是竞争，10 分是合作，我的游戏得几分</li><li>我能不能让玩家选择，是合作还是竞争</li><li>我的受众喜欢竞争、合作，还是两者混合</li><li>团队竞争适合我的游戏吗，我的游戏中，是团队竞争好玩，还是单人竞争好玩</li></ul><h4 id="平衡-7：短与长"><a href="#平衡-7：短与长" class="headerlink" title="平衡 7：短与长"></a>平衡 7：短与长</h4><p>每个游戏都需要平衡游戏长度。<br>游戏太短，玩家可能没有机会制定和执行有意义的战略。<br>游戏太长，玩家可能会厌烦，或因为需要投入的时间太多而避开这个游戏不玩</p><p>确定游戏何时结束的最主要因素是胜败条件。改变这些条件，就能大大改变游戏长度。</p><ul><li>例子<ul><li>街机游戏《间谍猎手》（spy hunter）中，玩家需要操控车辆在高速公路上行驶，并用车上的机枪向敌人射击。若是车辆损毁三次，游戏结束。<ul><li>问题<ul><li>新手玩家在早期车辆损毁过快，游戏时间很短，很沮丧</li></ul></li><li>平衡<ul><li>游戏前 90 秒，玩家车辆无限，90 秒后恢复到正常的 3 部车</li></ul></li></ul></li><li>《Minotaur》是一款四人联机游戏，玩家们跑过迷宫，收集武器和咒语，试图毁灭迷宫中的其他玩家，只剩一人时，游戏结束<ul><li>问题<ul><li>如果玩家们不互相交战，就会陷入僵局</li></ul></li><li>可能方案<ul><li>设定时限和分数排名</li></ul></li><li>最终平衡<ul><li>20 分钟后，钟声响起，“末日沙场”开始，所有幸存玩家突然被传送到一个充满怪物和各种危险的小房间，没人可能活很久。</li><li>这种方式保证游戏在 25 分钟内结束，颇具戏剧性，也能宣布一名玩家获胜</li></ul></li></ul></li></ul></li></ul><h4 id="平衡类型-8：奖赏"><a href="#平衡类型-8：奖赏" class="headerlink" title="平衡类型 8：奖赏"></a>平衡类型 8：奖赏</h4><blockquote><p>王宫贵族，赏必速，罚必缓。—— 奥维德（Ovid）</p></blockquote><p>玩家玩游戏，只为得高分，为什么？<br>玩家们来到游戏中，接受检验，并得到评判，且只喜欢得到好评。奖励就是游戏告诉玩家“你干得不错”的方式</p><p>许多游戏都会给予玩家几种常见类型奖励，目的都是满足玩家的愿望。</p><ul><li>赞美：最简单的奖励。任天堂游戏就因为通过声音、动画，在每次奖励的同时给玩家附加许多赞美而闻名<ul><li>明显声明</li><li>特殊声音效果</li><li>游戏人物对话</li></ul></li><li>分数<ul><li>许多游戏中，分数除了衡量玩家成功之外没有任何用处</li><li>有时候会有新的奖励——排行榜</li></ul></li><li>延长游戏<ul><li>在基于“生命数”而得以进行的游戏中，给予玩家生命奖励是非常有价值的</li><li>在“限定时间”类型的游戏中，延长游戏时长也是和上述同等类型的奖励</li><li>现代免费游戏中的“体力值”设定，也是生命系统的等价系统</li></ul></li><li>入口<ul><li>获得钥匙，解锁新区域，新关卡</li></ul></li><li>演出（spectacle）<ul><li>CG</li><li>但光靠这种奖励很少能满足玩家，一般都和其他类型奖励搭配出现</li></ul></li><li>表现<ul><li>特殊装饰</li></ul></li><li>能力——令你能以更快的方式达到目标<ul><li>新装备</li><li>新技能</li></ul></li><li>资源<ul><li>游戏内资源</li><li>虚拟货币</li></ul></li><li>地位<ul><li>排行榜排名</li><li>特殊成就</li></ul></li><li>完成<ul><li>完成游戏中的所有目标给玩家一种特别的结束感，这是很多游戏的终极奖励——当你到达此处，继续再玩这个游戏就不再有意义了</li></ul></li></ul><blockquote><blockquote><p>之前看的银河恶魔城类型的设计核心的“能力-锁”机制，就很好地利用了能力与入口的奖励</p></blockquote></blockquote><p>奖励的平衡，或者说，该给多少奖励？</p><p>心理学世界中得到的奖励窍门：</p><ul><li>物以稀为贵。玩家收到的奖励越多，就越习以为常。常见解决办法——增加奖励价值。</li><li>变化&gt;固定。变化奖励比起固定奖励能让玩家更享受。</li></ul><h4 id="46-号透镜：奖励"><a href="#46-号透镜：奖励" class="headerlink" title="46 号透镜：奖励"></a>46 号透镜：奖励</h4><p>要确定游戏是否在正确时间、以正确的量给出正确奖励，问自己</p><ul><li>我的游戏现在给出哪些奖励，还能给出其他的吗</li><li>玩家在游戏中得到奖励后，是激动还是无聊，为什么</li><li>收到奖赏却不理解，如同没有奖赏，玩家理解他们收到的奖赏吗</li><li>游戏中送出的奖赏是不是太有规律，能不能用更多变的方式送出</li><li>奖励之间有何联系，有没有办法让它们连接得更好</li><li>奖励逐渐累积的方式如何，太快，太慢，还是正好</li></ul><p>要想确认奖励对不对，量是否合适，时机是否合适，只能通过试错和迭代。也没有办法取悦所有玩家，要安心于“足够好”。</p><h4 id="平衡类型-9：惩罚"><a href="#平衡类型-9：惩罚" class="headerlink" title="平衡类型 9：惩罚"></a>平衡类型 9：惩罚</h4><p>出于以下一些原因，游戏可能会惩罚玩家：</p><ul><li>惩罚创造内生价值<ul><li>内生价值见 7 号透镜。</li><li>游戏中的资源若有可能被夺走，就更有价值</li></ul></li><li>冒险激动人心<ul><li>尤其是潜在奖励与风险平衡的话！</li><li>只有存在负面后果或者惩罚，才能冒风险</li><li>给玩家一个冒巨大风险的机会，才会让成功甜蜜许多</li></ul></li><li>可能的惩罚增加挑战<ul><li>若在游戏中失败就意味着倒退，游戏挑战性就增加了</li><li>增加来自于失败的惩罚是一种增加挑战的办法</li></ul></li></ul><p>以下是游戏中的一些常见惩罚，其中许多只是把奖励反过来而已</p><ul><li><p>羞辱</p><ul><li><p>赞美的反面</p></li><li><p>游戏只是简单告诉你打得太烂，仅此而已</p></li><li><p>可能弹出明显消息（视觉——“未命中”/“失败”）</p><blockquote><blockquote><p>只狼中的 “死” 也是一个道理哈哈哈</p></blockquote></blockquote></li><li><p>可能有令人沮丧的动画、声音效果、音乐等</p></li></ul></li><li><p>失分</p><ul><li>这种惩罚十分痛苦，乃至在电子游戏甚至传统游戏和体育运动中都相对罕见</li><li>也许痛苦事小，而可以失分造成玩家挣来的分数也会贬值事大</li><li>不能抢走的分数很有价值——而因为下一步走错会被扣掉的分数，其内生价值就较少</li></ul></li></ul><blockquote><blockquote><p>这个应该和所谓“损失厌恶效应”（<a href="https://zh.m.wikipedia.org/zh/%E6%8D%9F%E5%A4%B1%E8%A7%84%E9%81%BF">Loss aversion</a>）有关，即比起奖励，同等量级的损失会让玩家产生加倍厌恶心理（在一些地方看到的说法为 2.5 倍）</p></blockquote></blockquote><blockquote><blockquote><p>Dota 中的死亡损失是该惩罚在游戏中的一种很好体现</p></blockquote></blockquote><ul><li><p>缩短游戏</p><ul><li>在游戏中 “失去生命” 就是这种惩罚的一个例子。有些使用计时器的游戏会扣减时间来缩短游戏</li></ul></li><li><p>中断游戏</p><ul><li>“Game Over”</li></ul></li><li><p>倒退</p><ul><li>若一款游戏在死后要返回关卡开头，或者上一个存档点，这就是倒退惩罚。若游戏目的就是进行到底，那么用倒退做惩罚就很合乎逻辑。</li><li>平衡的难点在于精确确定存档点放在哪里，才能让这种惩罚感觉有意义，而非毫无道理。</li></ul></li></ul><blockquote><blockquote><p>倒是让我想起来，战神 4 中，若是在挑战除女武神王之外的女武神时死亡，重置点都被设置在进入房间之前稍远的地方，玩家在进入战斗场地之前还必须进行一次 “跳跃” 操作。<br>倒不一定真的会和直接设置在房间中有什么区别，但是个 “精确设置存档点” 的例子哈哈</p></blockquote></blockquote><ul><li>剥夺能力<ul><li>设计师在此处必须格外小心——玩家非常珍视自己挣来的能力，硬被抢走，他们会感觉非常不公平</li><li>在《网络创世纪》（Ultima Online）中，战死的玩家会变成鬼魂。要复活必须设法前往祭坛。若在半路耗得太久，就会失去花几星期赚来的宝贵技能点。<ul><li>许多玩家认为该惩罚太狠</li></ul></li><li>还有一种剥夺能力的方法较公平，即暂时拿走<ul><li>有些游乐园里有一种坦克碰碰车，可以互射网球，若是被对手击中位于坦克两边的标靶，自己的坦克就会原地失控旋转五秒，同时不能开炮</li></ul></li></ul></li></ul><blockquote><blockquote><p>倒是让人想起了魔兽 “跑尸”。没想到还有跑得太慢就丢技能点这么狠的惩罚，这万一一个不小心，不是直接让玩家心态炸裂哈哈哈…</p></blockquote></blockquote><ul><li>消耗资源<ul><li>游戏软货币的损失</li><li>或者是游戏内玩家属性的损失等</li><li>是游戏中最常见的一种惩罚类型</li></ul></li></ul><p>心理研究表明，奖励始终比惩罚更能起到推动作用。</p><p>如果需要激励玩家做些什么，只要可能，尽量用奖励而不是用惩罚。</p><p>《暗黑破坏神》（Diablo） 中的好例子是在游戏中收集食物。许多游戏设计师都试图引入“食物”——即如果不吃的话就会导致能力下降。暴雪最开始也是这么做的，但发现玩家反馈不好，而后转而实现了新系统——玩家永不会饥饿，但如果吃食物的话，能力就会暂时提升。如此一来，玩家高兴多了。</p><p>但若是惩罚是必须的，量的设定是个精妙问题。</p><p>开发《卡通城》（Toontown）在线版的时候，面对的问题是：面向孩子的轻度、欢乐的 MMORPG 中，最严厉的惩罚是什么呢？</p><p>最终决定 “死掉” 的惩罚是多种轻度惩罚的结合，在游戏中叫做 “伤心”。游戏中玩家是没有生命条的，只有 “欢乐（laff）条”，敌人目标也不是彻底杀死玩家，而是让其难过，不能像卡通人物一样开心。</p><p>在游戏中，若是欢乐条为 0，会发生：</p><ul><li>从战斗去被传送回一个操场区域（倒退）<ul><li>倒退很微小，距离一般只要走一分钟（怎么感觉一分钟也挺长的了哈哈..）</li></ul></li><li>所携带的道具全部消失（消耗资源）<ul><li>代价也很微小，道具价格都不贵，10 分钟就能赚回来（若是以 MMORPG 的角度来看，貌似也还能接受）</li></ul></li><li>角色可怜地垂着头（羞辱）</li><li>大约 30 s 内，人物走路很慢很慢，没法离开操场区域或参与到任何有意义的玩法内（暂时剥夺能力）</li></ul><blockquote><blockquote><p>倒是让人想起了很长一段时间内 Dota 中的死亡买活后有一段时间获取的资源（金钱 + 经验）会折半的机制<br>但该机制在近来版本中已经取消了，目的可能是为了提高新手友好度？</p></blockquote></blockquote><ul><li>欢乐条（生命）掉到 0 （消耗资源），玩家一般会等待其回复（在操场区域内会随时间增长）再去探索</li></ul><p>以上惩罚是多次平衡后的结果。</p><p>游戏中的所有处罚应当是玩家能理解的、能防止的。</p><p>如果玩家感觉惩罚是随机的，游戏就会被贴上 “不公平” 的标签，使得留存大幅下降</p><p>玩家不喜欢惩罚，思考有没有巧妙方式让玩家逃脱惩罚</p><p>Richard Garriott 的 《创世纪》（Ultima 3），虽然很受欢迎，却有很严格的惩罚。游戏要近一百小时打通，如果四个人物都在游戏中死去，记录会被抹掉，只能从头再来！</p><blockquote><blockquote><p>让人想起了 Diablo 3 中的专家模式哈哈…</p></blockquote></blockquote><p>玩家的应对方法是：在游戏将死之时，趁游戏没删掉存档赶紧关机，从而规避惩罚</p><p>当然了，也有特别钟情于极端难度的玩家，如喜欢《恶魔之魂》（Demon Souls）的玩家，因为打通如此困难的游戏令他们感觉特别自豪。但他们也有极限，如果找不出办法防止惩罚，他们很快也会评价这款游戏“不公平”</p><blockquote><blockquote><p>宫崎英高，真有你的 (￣▽￣)”</p></blockquote></blockquote><h4 id="47-号透镜：惩罚"><a href="#47-号透镜：惩罚" class="headerlink" title="47 号透镜：惩罚"></a>47 号透镜：惩罚</h4><p>惩罚要小心使用<br>适当平衡的惩罚可以让游戏中的一切更有意义，玩家在其中成功后也会有真正自豪感</p><ul><li>游戏中有什么惩罚</li><li>为什么要惩罚玩家？希望通过它来实现什么？</li><li>惩罚在玩家看来公平吗？为什么？</li><li>有没有办法把惩罚改成奖励，并收到同样或更好的效果</li><li>强力惩罚，有没有相应丰厚的回报来平衡？</li></ul><h4 id="平衡类型-10：自由体验与受控体验"><a href="#平衡类型-10：自由体验与受控体验" class="headerlink" title="平衡类型 10：自由体验与受控体验"></a>平衡类型 10：自由体验与受控体验</h4><p>游戏不该完全模拟现实生活，而应该比现实生活更有趣——这有时要剜去那些无聊、繁复、或不必要的决定与行动。</p><p>每个游戏设计师都必须考虑的简单游戏平衡就是在哪里给玩家自由，给多少自由。</p><p>在《阿拉丁的魔毯 VR 冒险》（Aladdin’s Magic Carpet VR Adventure）中，在 <em>神奇洞穴</em> 的最后一个场景中遇到一个很棘手的问题——要使坏人的冲突尽可能激动人心，游戏就得控制镜头，但不想因此削弱玩家在场景中的自由。</p><p>观察测试玩家后，发现了玩家们都想飞到坏人站立的山顶上去</p><p>经过多次试验，做出了一个大胆决定——在该场景中剥夺玩家自由，把玩家飞上山直面坏人的过程做到完美。</p><p>这与整个体验的其他部分形成了鲜明对比：玩家可以在其他地方没有限制地自由飞行。</p><p>在后续测试中，没有测试玩家注意到其自由被剥夺了，因为游戏已经教会他们可以任意前往想去的地方，而这个场景的排布让每个看到的人都想做同一件事。</p><p>该例子中，天平应该落在受控体验一边，因为能给玩家带来更棒的体验。</p><h4 id="平衡类型-11：简单与复杂"><a href="#平衡类型-11：简单与复杂" class="headerlink" title="平衡类型 11：简单与复杂"></a>平衡类型 11：简单与复杂</h4><blockquote><p>当再没有任何细节可以删除，而不是没有细节可以添加时，就是抵达完美这一境界了。 —— Antoine de Saint-Exupery</p></blockquote><blockquote><blockquote><p>如无必要，勿增实体 —— 奥卡姆剃刀</p></blockquote></blockquote><p>看看游戏中出现的不同种类的复杂性：</p><ul><li><p>固有复杂性</p><ul><li>游戏规则本身变得非常复杂</li><li>这种复杂性经常收获恶名，一般因为设计者试图模拟复杂现实情况，或加入额外规则而实现游戏平衡而实现</li><li>当看到一套规则集中有很多“例外情况”，该套规则就是固有复杂</li><li>这样的游戏学起来可能很难，但也有人很享受这种享受复杂规则集的过程</li></ul></li><li><p>自发复杂性</p><ul><li>是人人赞扬的复杂</li><li>例子：围棋</li><li>若一个游戏同时被称赞简单而又复杂，其赞扬的就是其自发复杂性</li></ul></li></ul><p>自发复杂性可能很难实现，但值得努力。</p><p>要验证自己是否实现了自发复杂性——重复玩、反复修改，直到惊喜开始浮现。30 号透镜：自发，也有帮助。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220805010354.png"></p><h4 id="48-号透镜：简单-复杂"><a href="#48-号透镜：简单-复杂" class="headerlink" title="48 号透镜：简单/复杂"></a>48 号透镜：简单/复杂</h4><p>使用该透镜，能使得游戏从简单系统中产生有意义的复杂性</p><ul><li>游戏有什么元素是固有复杂的</li><li>有办法令这种固有复杂性变为自发复杂性吗</li><li>游戏中是否会产生自发复杂元素，如果没有，为什么</li><li>游戏中是否有些元素太过简单</li></ul><h5 id="自然平衡与人工平衡"><a href="#自然平衡与人工平衡" class="headerlink" title="自然平衡与人工平衡"></a>自然平衡与人工平衡</h5><p>人工平衡——添加规则来得到希望出现的行为<br>自然平衡——游戏内互动中自然生出的可以得到希望出现的行为的情况</p><p>例子：《太空侵略者》的绝妙平衡——敌人数量越少，其移动越快</p><ol><li>游戏开始时随着缓慢进行，随着玩家击毁敌舰，敌人速度越来越快</li><li>开始时很容易击中目标，随着玩家不断成功，击中目标越来越难</li></ol><p>这两个属性不是固有规则规定的，而是从一条简单规则中自发出现且平衡良好的属性</p><h5 id="优雅"><a href="#优雅" class="headerlink" title="优雅"></a>优雅</h5><p>可以把复杂情况下仍表现健壮的简单系统称为优雅</p><p>优雅意味着游戏简单易懂，却又充满了有趣的自发复杂性</p><p>针对一个游戏元素，数数其服务多少目的，就能轻松评价其优雅程度</p><p>如《吃豆人》中的豆子主要服务以下目的：</p><ol><li>给玩家一个短期目标——吃掉附近豆子</li><li>给玩家一个长期目标——吃掉本关所有豆子</li><li>玩家吃豆时会稍微减速，这样便创造了优秀三角形（走没有豆子的路线则安全，有豆子的路线则冒险）</li></ol><blockquote><blockquote><p>年代太久远了，这一点竟然毫无印象了</p></blockquote></blockquote><ol start="4"><li>给玩家分数来衡量成功</li><li>给玩家分数，可以赚取额外生命</li></ol><p>简单的豆子，竟有 5 个不同目的！</p><blockquote><blockquote><p>想起了之前听机核对陈星汉专访时所说的 “一个设计应该至少要满足三个设计理由”</p></blockquote></blockquote><p>还有一条好莱坞传下来的经验法则：如果剧本中有一行的目的不足两个，就该砍掉</p><p>很多设计师一发现游戏感觉不对，第一反应是加点什么，而更好的问题往往是，该删掉些什么。</p><p>可以尝试在游戏中寻找那些只有一个设计目的的东西，然后考虑哪些可以合并起来。</p><p>例子</p><p>在制作《加勒比海盗：黄金争夺战》（Pirates of the Caribbean: Battle for the Buccaneer Gold）时，原计划由两个主要人物：开头有一友方主持人，唯一工作是解释游戏怎么玩；结尾有一个恶人，唯一工作是参与戏剧性的最后一战。这只是迪士尼乐园里的很短时间（5min）的游戏，把时间花在介绍两个人物上感觉很怪，而且时间紧迫，要很好地塑造两个人物，限制较多。</p><p>讨论是否要砍掉开头的教学或是最后的大战，但这会让游戏充实性大幅下降。</p><p>后来的想法：开头的主持人就是最后的恶人，理由：</p><ul><li>节省开发时间</li><li>节省游戏时间（因为只需要介绍一个任务）</li><li>角色因此更加有趣，更像海盗（因为他欺骗了玩家）</li><li>还创造了惊人的反转情节！</li></ul><h4 id="49-号透镜：优雅"><a href="#49-号透镜：优雅" class="headerlink" title="49 号透镜：优雅"></a>49 号透镜：优雅</h4><ul><li>我的游戏有哪些元素</li><li>每个元素的目的是什么？全部数出来，给每个元素一个优雅评分</li><li>有的元素只有一个或两个目的，能否合并一些或干脆剔除？</li><li>有的元素有多重目的，能否让它们承担更多目的？</li></ul><h5 id="性格"><a href="#性格" class="headerlink" title="性格"></a>性格</h5><p>优雅固然重要，但还有一个概念是过度打磨</p><p>比萨斜塔的标志性倾斜其实并没有目的——只是意外缺陷</p><p>优雅透镜会让我们去除比萨斜塔的倾斜，让其变得笔直无比，但这也使其失去了让人观看的兴趣——优雅了，但无聊了，会失去全部性格</p><p>《大富翁》中的棋子：帽子，鞋子，狗，雕像，战舰<br>这些和一款房地产游戏并无关系，可以说这些棋子应该被做成各种小地主的样子，但没有人这么做，因为这会剥去《大富翁》的性格</p><p>《马里奥》为什么是水管工？这和他做的事，他生活的世界几乎没有关系<br>但恰好是这种奇怪的不一致，赋予了他性格</p><h4 id="50-号透镜：性格"><a href="#50-号透镜：性格" class="headerlink" title="50 号透镜：性格"></a>50 号透镜：性格</h4><p>优雅和性格是对立的，就像缩小版的简单和复杂，也必须保持平衡<br>要确保游戏中有些可爱的怪地方能定义其性格</p><ul><li>游戏中有没有奇怪的东西，玩家会激动地讨论它们？</li><li>游戏有没有好玩的特性，令其与众不同？</li><li>游戏里有没有玩家喜欢的缺陷？</li></ul><h4 id="平衡类型-12：细节与想象"><a href="#平衡类型-12：细节与想象" class="headerlink" title="平衡类型 12：细节与想象"></a>平衡类型 12：细节与想象</h4><p>游戏不是体验——游戏仅仅是激活玩家脑中精神模型的结构。在此过程中，游戏提供一定程度的细节，也留下一些供玩家填补。</p><p>以下是关于提供哪些细节和哪些留给玩家想象的平衡的小提示：</p><ul><li><p>只做能做好的细节</p><ul><li>玩家的想象力丰富而精微</li><li>若有想表现的东西，但质量不如玩家想象，那就不做——让想象力来举重若轻！<ul><li>比如游戏中的对话。在没有预算请高质量配音演员或资源不足时，不如做字幕，而不是语音合成。<ul><li>玩家的想象会填进一个声音——远比能合成的好</li></ul></li><li>同样的想法适用于游戏内的一切<ul><li>风光、音效、角色、动画、特效…</li></ul></li></ul></li></ul></li><li><p>给出供想象力使用的细节</p><ul><li>玩家刚进入游戏时要学很多东西——给出任何清晰细节，只要能让游戏更易理解，都很讨喜</li><li>以国际象棋举例<ul><li>游戏背景设定在中世纪<ul><li>每个棋子都安排了中世纪宫廷里的角色<ul><li>但并没有很多细节——如国王没有名字，我们也对其政权一无所知，但没有关系</li><li>国王之所以是国王，只不过因为其是所有棋子中最高的，再加上移动方式，能唤起对真国王的一点点联想。此人很重要，一定要缓慢移动、小心保护</li><li>用马代表骑士也一样，可以帮助我们记住他们可以在棋盘上四处跳动</li></ul></li></ul></li></ul></li></ul></li></ul><blockquote><blockquote><p>这里虽然是这么写的，但是棋子的具体形状应该是在棋子功能敲定后才确定的？当然，也有可能是共同推进的结果</p></blockquote></blockquote><ul><li><p>熟悉的世界无须太多细节</p><ul><li>如果要创造的游戏要模拟玩家熟知的城市街道或是一座房屋内部，就没有必要模拟每个小细节，只需给出少许相关细节，他们会用想象力将其填充</li><li>但如果游戏目的是让玩家了解一个从没去过的地方，就有必要填入大量细节</li></ul></li><li><p>运用望远镜效应</p><ul><li>当观众带望远镜看戏剧或体育比赛，一般是在开头用来近距离观察各位运动员或演员。当特写存入记忆后，望远镜就能放一边了</li><li>电子游戏一直都在复制这种效应，经常在游戏开头放一个主角特写，然后在接下来全部体验时间，他都是一个一寸高的 sprite 了</li></ul></li><li><p>给出激发想象力的细节</p><ul><li>还是以国际象棋为例——给予了能够指挥皇家军队的所有成员的这种幻想</li><li>幻想与现实间只有细细的连线就可以</li></ul></li></ul><h4 id="51-号透镜：想象力"><a href="#51-号透镜：想象力" class="headerlink" title="51 号透镜：想象力"></a>51 号透镜：想象力</h4><ul><li>要玩我的游戏，玩家必须明白什么</li><li>用一些想象元素能帮助他们更好地理解吗</li><li>在这个游戏中，我们提供哪些高质量、真实的细节</li><li>哪些细节，如果由我们提供，质量会降低？可以改用想象力方法来填补差距吗</li><li>能给出些细节，让想象力一次又一次来使用吗</li><li>提供的哪些细节能激发想象力</li><li>提供的哪些细节会扼杀想象力</li></ul><h3 id="游戏平衡方法论"><a href="#游戏平衡方法论" class="headerlink" title="游戏平衡方法论"></a>游戏平衡方法论</h3><p>有些方法可以同时使用，有些则互相龃龉<br>需要通过试验来找到合适的方法</p><ul><li><p>使用问题陈述透镜</p><ul><li>先搞清楚问题是什么，再来想解决办法</li></ul></li><li><p>加倍与减半</p><blockquote><p>预知何者为足够，必须先知何者为多余。——William Black，《地狱谚语》</p></blockquote><ul><li>加倍与减半规则说明在调整数值去平衡游戏时会在微量调整上浪费很多时间——不如朝着预期方向直接大刀阔斧地改动</li><li>重点是要让修改的东西马上能被感知到差别</li></ul></li><li><p>通过精确猜测训练直觉</p><ul><li>游戏设计得越多，直觉就会越强</li><li>数值怎么定？做多了就有感觉了——也是这里所谓的直觉</li></ul></li><li><p>记录模型</p><ul><li>在调整平衡时，把考虑的事物间的关联写下</li><li>这有助于澄清想法，并能给你一个框架来记录游戏平衡实验的结果</li></ul></li><li><p>调整游戏的同时调整模型</p><ul><li>二者应该是相互印证的</li></ul></li><li><p>计划好平衡</p><ul><li>要知道调整的预期结果</li><li>能一边运行一边调整就好了</li><li>更好地 是有一个内容管理系统，让游戏在发售后仍能继续调整平衡<ul><li>迭代规则在游戏发售后仍然生效</li><li>在当今发在线发行游戏的世界里，你（也一定！）要在游戏发售后好好迭代</li></ul></li></ul></li><li><p>交给玩家</p><ul><li>有时候让玩家平衡游戏是个好主意（一般通过难度等级等选项）</li><li>但大部分时候，游戏平衡还是让设计师来调整比较好</li></ul></li></ul><h3 id="平衡游戏经济"><a href="#平衡游戏经济" class="headerlink" title="平衡游戏经济"></a>平衡游戏经济</h3><p>游戏经济由两个有意义的决定来平衡：</p><ul><li>怎么赚钱</li><li>怎么花赚来的钱</li></ul><p>上面的 “钱” 可以换为游戏中一切能交易的东西，技能点也是一种 “钱”。</p><p>玩家有了上述两个选择，就组成了经济。而让经济变得有意义的，是两个选择深度和意义。这两个选择通常构成循环——花钱方式会帮助玩家赚更多钱，又会给他们更多机会花钱。</p><p>调整经济平衡，很难，因为要同时平衡之前讨论的很多东西：</p><ul><li>公平：有玩家会通过买特定东西或以特定方式获利，得到不公平优势吗？（倒爷？或者 Bug 吧哈哈）</li><li>挑战：有玩家能买到一些东西，令游戏对他们来说太容易吗？挣钱来买他们想要的东西会太难吗</li><li>选择：玩家有足够方式赚钱吗？花钱呢？</li><li>概率：赚钱更基于技能还是概率</li><li>合作：玩家能以有趣方式集资吗？他们可以利用经济中的“漏洞”共谋吗</li><li>时间：赚到钱花费的时间是否太长或太短</li><li>奖励：赚钱这件事有奖励感吗？花钱呢？</li></ul><blockquote><blockquote><p>这点让人想到的是成就系统，比如达到特定总资产，或花费特定数目的资源后能获得的相应成就</p></blockquote></blockquote><ul><li><p>惩罚：惩罚如何影响一个玩家挣钱和花钱的能力？</p></li><li><p>自由：玩家能以希望方式买到想要的东西吗</p></li></ul><p>平衡游戏经济的目标与平衡其他游戏机制一样——确保玩家能够享受一款快乐又有挑战性的游戏</p><h4 id="52-号透镜：经济系统"><a href="#52-号透镜：经济系统" class="headerlink" title="52 号透镜：经济系统"></a>52 号透镜：经济系统</h4><p>给游戏一个经济系统，能让其自己产生令人惊讶的深度和生命。</p><ul><li>我的玩家可以怎样赚到钱？还应该有其他方式吗</li><li>玩家可以买什么？为什么？</li><li>钱会来得太容易吗？太难吗？怎样改变呢</li><li>有关赚钱花钱的选择有意义吗</li><li>在我的游戏里做一种通用货币是好主意吗？还是应该有特殊金币呢</li></ul><h3 id="动态游戏平衡"><a href="#动态游戏平衡" class="headerlink" title="动态游戏平衡"></a>动态游戏平衡</h3><p>这是一个美梦，蕴含很多让人吃惊的问题：</p><ul><li><p>其破坏了世界的真实性</p><ul><li>玩家愿意在某种程度上相信其所游玩的世界是真实的</li><li>但如果知道所有对手的能力是和玩家自身属性级别相关的，就会损害“对手是固定的挑战，需要提升自我来征服驾驭”的幻想</li></ul></li><li><p>它会被不当利用</p><ul><li>如果玩家知道在打得不好的时候游戏会便容易，可能就会主动玩得不好，让接下来的部分变简单，从而摧毁了平衡系统的设计目的</li></ul></li><li><p>玩家会通过练习来提高</p><ul><li>PS2 上的《神奇绿巨人》（The Incredible Hulk）曾引起过一些争议，因为如果被击败的次数超过一定数值，敌人会变简单</li><li>许多玩家会因此觉得受到侮辱</li><li>还有人感到失望——他们本想不断练习直到克服挑战，结果游戏抢走了这种乐趣</li></ul></li></ul><blockquote><blockquote><p>现在常见的一些做法是在失败次数过多后，提示玩家可以降低难度，将其变为一种主动选择而不是强制安排。<br>虽然侮辱意味仍在，但至少不会直接剥夺玩家攻坚的乐趣了</p></blockquote></blockquote><p>动态平衡并不是死胡同，但并没有想象中的那么简单。</p><h3 id="总览全局"><a href="#总览全局" class="headerlink" title="总览全局"></a>总览全局</h3><h4 id="53-号透镜：平衡"><a href="#53-号透镜：平衡" class="headerlink" title="53 号透镜：平衡"></a>53 号透镜：平衡</h4><p>游戏平衡有许多类型，每种都很重要，但不要迷失在细节中，问自己</p><ul><li>我的游戏感觉对吗？为什么对？为什么不对？</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220703 - Tools of Life</title>
      <link href="2022/07/04/20220703-toolsoflife/"/>
      <url>2022/07/04/20220703-toolsoflife/</url>
      
        <content type="html"><![CDATA[<h1 id="人生工具"><a href="#人生工具" class="headerlink" title="人生工具"></a>人生工具</h1><h2 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a>原文链接</h2><ul><li><a href="https://mp.weixin.qq.com/s/kKSk07ulNEXCt4SV1j4xGw">做出3亿用户的游戏，公司被腾讯收购，他感慨人生艰难，如何过得好一点？</a></li></ul><h2 id="本文的思维导图"><a href="#本文的思维导图" class="headerlink" title="本文的思维导图"></a>本文的思维导图</h2><ul><li><a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202207032052toolsoflife.html">思维导图</a><ul><li>需要将该文件下载到本地后然后用浏览器（Chrome 是可以的）打开就能看到可交互的思维导图了！</li></ul></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一，前言"><a href="#一，前言" class="headerlink" title="一，前言"></a>一，前言</h3><blockquote><p>“智者的目标不是追求幸福，而是远离痛苦。”——亚里士多德，《尼各马可伦理学》，公元前 330</p></blockquote><h3 id="二，工具箱"><a href="#二，工具箱" class="headerlink" title="二，工具箱"></a>二，工具箱</h3><blockquote><p>“ 我相信，通过适当的努力，很多不快乐的人是可以变得幸福、快乐的。” ——罗素，《幸福之路》，1930</p></blockquote><h4 id="工具箱由来"><a href="#工具箱由来" class="headerlink" title="工具箱由来"></a>工具箱由来</h4><ul><li>为了让人在外部功利世界和内部精神世界都能过得好一点<h4 id="工具箱功能"><a href="#工具箱功能" class="headerlink" title="工具箱功能"></a>工具箱功能</h4></li><li>让自己更好地做事获取成就</li><li>处理各种关系，包括社会关系与亲密关系</li><li>让自己感觉好过一些，并抵抗挫折<h4 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h4></li><li>工具箱不包括专业技能，但能告诉你如何快速提高各类技能</li></ul><h3 id="三，工具概述"><a href="#三，工具概述" class="headerlink" title="三，工具概述"></a>三，工具概述</h3><blockquote><p>“ ‘人生的智慧’，也就是如何安排我们的生活，然后享受最大程度的快乐和成功。你也可以说它是幸福论，因为它将教我们如何幸福地度过这一生。”——叔本华，《人生的智慧》，1850</p></blockquote><h4 id="六类工具概览（前两类是后四类基础）"><a href="#六类工具概览（前两类是后四类基础）" class="headerlink" title="六类工具概览（前两类是后四类基础）"></a>六类工具概览（前两类是后四类基础）</h4><ul><li><p>第1类，人性与社会的知识与经验。  </p></li><li><p>第2类，想事情的方法。会提高学习和专业技能速度，以及提高思考水平，提高生命效率。  </p></li><li><p>第3类，目标规划和执行 。实现目标的办法  </p></li><li><p>第4类 工作生活中做抉择的方法 ，包括了解和洞悉他人的办法  </p></li><li><p>第5类，处理关系的方法。包括亲密关系和功利关系。  </p></li><li><p>第6类，抵抗挫折，照顾自己心灵的办法。</p></li><li><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220702173841.png" alt="工具层次图"></p></li></ul><h3 id="四，第1类工具：社会和人的知识经验"><a href="#四，第1类工具：社会和人的知识经验" class="headerlink" title="四，第1类工具：社会和人的知识经验"></a>四，第1类工具：社会和人的知识经验</h3><blockquote><p>“真正高明的人，就是能够借助别人的智慧，来使自己不受蒙蔽的人。” —— 苏格拉底</p></blockquote><blockquote><p>“世界上最重要的事情就是要理解现实如何运行，以及如何应对现实。” ——瑞·达里奥，《原则 - 工作与生活》</p></blockquote><ul><li><p>推荐阅读</p><ul><li>《原则 - 工作和生活》，瑞·达里奥</li></ul></li><li><p>信息本身就是重要工具</p><ul><li>生活工作重大决策质量，取决于对社会和人性经验多寡</li><li>经验的积累途径<ul><li>处理过重大经济利益</li><li>处理过权力博弈</li><li>经历过复杂男女关系</li><li>向有以上三种经验的前辈学习间接经验 - 高人指点</li><li>多读书</li></ul></li></ul></li></ul><h4 id="需要理解四类概念"><a href="#需要理解四类概念" class="headerlink" title="需要理解四类概念"></a>需要理解四类概念</h4><ul><li>功利</li><li>社会脉络</li><li>人性</li><li>人格</li></ul><h5 id="4-1-功利"><a href="#4-1-功利" class="headerlink" title="4-1 功利"></a>4-1 功利</h5><ul><li>定义<ul><li>功名利禄。</li><li>物质利益，权利，地位，名望。</li><li>现实成就</li></ul></li><li>“为了挣到一块钱”也是功利目标，无关目标大小。</li><li>这里的功利不完全是贬义，只是代表现实生存必需获取的资源和成就目标</li></ul><h5 id="4-2-社会脉络"><a href="#4-2-社会脉络" class="headerlink" title="4-2 社会脉络"></a>4-2 社会脉络</h5><ul><li>定义<ul><li>当代人类社会围绕包括身体生存，权利，财富，繁衍（男女关系）等脉络在运转和博弈</li><li>靠近脉络的事情，往往功利回报丰厚<ul><li>（指的应该是拥有脉络资源？）<h6 id="4-2-1-身体导致的时间不平衡"><a href="#4-2-1-身体导致的时间不平衡" class="headerlink" title="4-2-1 身体导致的时间不平衡"></a>4-2-1 身体导致的时间不平衡</h6></li></ul></li></ul></li><li>“在《论人类不平等的起源》中，卢梭认为人类中间存在两种不平等，一种是生理上的不平等，包括在年龄、健康状况、体制强弱和智力或者心智上的各种差异；另一种是制度形成的统治特权阶层。” 这里关注第一种</li><li>有效时间——清醒时完成功利目标或者精神追求的时间<ul><li>时间对每个人都是不平等的，有些人的有效时间就是比另一些人多</li></ul></li><li>时间不平等的基础要素<ul><li>精力是否旺盛<ul><li>效率相同情况下，更有精力意味着能投入更多时间，自然能更快达成目标</li></ul></li><li>健康时间是否久<ul><li>体弱多病的比健康的人，能够正常工作和思考时间就更短</li></ul></li></ul></li><li>智力与天赋的重要程度比不上精力旺盛度和健康度。对人生最有影响的是智慧，智力与天赋的差别并不会影响大家得到相同的智慧</li><li>增加有效时间的办法<ul><li>增加精力 - 靠健身和饮食起居</li><li>提高效率 - 靠提升思维能力（第二类工具）<h6 id="4-2-2-权力"><a href="#4-2-2-权力" class="headerlink" title="4-2-2 权力"></a>4-2-2 权力</h6></li></ul></li><li>人类社会发展必然性<ul><li>能者居之</li><li>世界是少数人掌控的</li></ul></li><li>权力可以分配资源与控制他人，这不是本文关注的重点</li><li>对我们重要的是，在现代商业社会中的博弈过程中，将人对权力的追求放入预判因素中<h6 id="4-2-3-财富"><a href="#4-2-3-财富" class="headerlink" title="4-2-3 财富"></a>4-2-3 财富</h6></li><li>三种程度的财富<ul><li>必要的财富<ul><li>作用<ul><li>对抗现实复杂人生和世态炎凉的压力</li></ul></li></ul></li><li>介于上者和下者之间的财富水平<ul><li>也存在广阔人生体验</li><li>财富使用得当，也能帮助更多人<ul><li>对于有利他追求的人很重要</li></ul></li></ul></li><li>更大数量级的财富<ul><li>不意味着更大的幸福和快乐</li><li>意味着<ul><li>更多选择权</li><li>更多体验</li><li>“更长的命”</li></ul></li></ul></li></ul></li><li>对财富的三种态度<ul><li>对金钱的喜爱 - 成果的积累</li><li>对挣钱的喜爱 - 获得的过程</li><li>对花钱的喜爱 - 成果的展现</li></ul></li><li>了解自己对财富的态度可以帮助自己更好地进行决策，也能获得更多快乐</li><li>叔本华对于财富的论述<ul><li>“人类天生就是热爱金钱，这种热爱是不可避免的”；</li><li>“财富就像海水，越多喝越渴 ……我们之所以不满，就是因为我们的欲求越来越多，期望越来越高，却总也无法企及，永远不能满足”；  </li><li>“只有金钱才有绝对意义上的‘好’，它并不只是满足某一特定的具象的需求，金钱甚至可以满足一切抽象的需求”。<h6 id="4-2-4-男女"><a href="#4-2-4-男女" class="headerlink" title="4-2-4 男女"></a>4-2-4 男女</h6></li></ul></li><li>背后<ul><li>基本上是生理驱动心理过程</li></ul></li><li>带来幸福满足感的家庭基础<ul><li>深厚感情</li><li>和谐性爱</li><li>足够物质条件</li></ul></li><li>婚姻与养育后代是消耗性过程<ul><li>没有足够感情基础和物质条件，经不起消耗</li></ul></li><li>了解以下方面有助于预判一个男性在追求功利过程中的心理活动与行为<ul><li>对异性的渴望程度</li><li>在性吸引下的自控成都</li><li>在道德层面的看法</li></ul></li><li>男女和功利追求几乎同源同类，但男人追求功利的博弈更隐蔽，追求男女时没法那么隐蔽，所以相对容易看出这个人的特质</li><li>英雄难过美人关，过关都靠降睾酮</li></ul><h5 id="4-3-人性"><a href="#4-3-人性" class="headerlink" title="4-3 人性"></a>4-3 人性</h5><ul><li>引言<ul><li>“人是政治的动物。“ —— 亚里士多德，《政治学》，公元前四世纪</li><li>“人是处于神与野兽之间，时而倾向一类，时而倾向另一类“。—— 普罗提诺，公元3世纪</li><li>关于人性的判断，在我们日常生活的决策中至关重要，因为我们的日常互动能否成功，就取决于它。——霍华德·卡亨，《生活中的逻辑学》，1971</li></ul></li><li>定义<ul><li>人性是人类本性，人类本质心理活动属性。大致可以理解为人类共有的心理活动特征<ul><li>如善恶，感觉，道德等</li></ul></li></ul></li><li>意义<ul><li>若能了解别人心理活动，基本能推断这个人行为的大致情况<ul><li>有人抉择依赖感性直觉</li><li>有人抉择依赖理性思考</li></ul></li><li>若能某种程度预判他人行为与想法，在功利相关活动中，可以部分做到得心应手</li><li>若能某种程度给他人灌输自己想法，结合预判，大概率可以做到庖丁解牛</li></ul></li><li>精于此道的人<ul><li>商人</li><li>官员/管理者</li><li>绿茶/花心男</li></ul></li><li>以上三类人与现实生活中财富、权力、男女之事相关。即处理现实生活需要洞悉人性。方法是熟悉人类在处理金钱、权力，男女之事的普遍心理活动</li></ul><h5 id="4-4-人格"><a href="#4-4-人格" class="headerlink" title="4-4 人格"></a>4-4 人格</h5><ul><li>定义<ul><li>人格是一个人一贯的行为方式和内部心理过程</li></ul></li><li>了解自己和他人人格的意义<ul><li>对日子能过好一些有重要意义，《人格心理学》中会提到<ul><li>如何科学应对焦虑</li><li>为什么社恐</li><li>人的性格分类</li><li>判断自己与他人性格类别</li><li>提高获取成就可能性的心理偏好</li><li>容易抑郁的消极认知风格和抑郁化信息加工方式</li><li>可以帮你解决“我是什么样”这个问题</li></ul></li><li>对自己越了解，越能友善与适当地对待自己<ul><li>这不是一个自然就具备的能力</li></ul></li><li>有助于预测不同性格的人在遇到某些情况下的反应<ul><li>尤其适用于职场对合适雇员的筛选</li></ul></li></ul></li><li>心理学流派的特质流派中，人格维度的分类：“大七”<ul><li>精神质</li><li>外向性</li><li>求新性</li><li>亲和性</li><li>尽责性</li><li>独特性</li><li>不道德性</li></ul></li><li>对市面上常见的人格心理测试的结果应持保留态度，其作用有限<ul><li>九型人格</li><li>MBTI</li></ul></li></ul><h3 id="五，第2类工具：思考工具。会提高学习和专业技能速度"><a href="#五，第2类工具：思考工具。会提高学习和专业技能速度" class="headerlink" title="五，第2类工具：思考工具。会提高学习和专业技能速度"></a>五，第2类工具：思考工具。会提高学习和专业技能速度</h3><blockquote><p>“批判性思维不是任凭各种诱惑的摆布，不是轻易受情感，贪欲，无关考虑，愚蠢偏见等的干扰。批判性思维的目标在于作出明智的决定，得出正确的结论。“ —— Brook Noel Moore, 《批判性思维》第10版，2012</p></blockquote><ul><li><p>评价一个人“水平很厉害”所涉及的能力</p><ul><li>思维能力 - 办事的基础<ul><li>思考，表达，学习，说服，判断与抉择的水平</li></ul></li><li>办实际的事情和结果很厉害</li></ul></li><li><p>任何决策都会涉及思维能力，所以思维能力的提升可以提高思维质量，“水平变厉害”</p></li><li><p>人的思维过程</p><ul><li>产生想法 - 创造性思维<ul><li>得到想法探索新问题</li><li>及时发现已存在问题</li><li>创造新方法解决问题</li><li>做出判断 形成结论 作出决定</li></ul></li><li>对想法进行判断 - 批判性思维<ul><li>检视和评价前一步得到的想法</li><li>想法的论证</li></ul></li><li>诀窍<ul><li>无论什么想法，都用通用办法来提升想法质量，从而提升决策水平和学习效率</li></ul></li></ul></li></ul><h4 id="创造性思维与批判性思维"><a href="#创造性思维与批判性思维" class="headerlink" title="创造性思维与批判性思维"></a>创造性思维与批判性思维</h4><h5 id="创造性思维"><a href="#创造性思维" class="headerlink" title="创造性思维"></a>创造性思维</h5><ul><li>定义<ul><li>不仅涉及创造全新的想法和东西</li><li>也涉及日常生活方方面面<ul><li>对于同样的工作，如何更高效地完成也是创造性思维的应用</li></ul></li></ul></li><li>如何得到新想法 - 《批判性思维》<ul><li>采用新思路</li><li>设计或修改程序制度</li><li>发明新产品与功能</li><li>现有事物找到新用途</li><li>改进现有事物</li><li>创造或重新定义概念</li></ul></li><li>创造步骤<ul><li>寻找挑战</li><li>表述问题/争议</li><li>调查问题/争议</li><li>产生想法<h5 id="批判性思维"><a href="#批判性思维" class="headerlink" title="批判性思维"></a>批判性思维</h5></li></ul></li><li>溯源<ul><li>检视人类想法的做法，最早能上溯到苏格拉底<ul><li>这种思维被苏格拉底的学生们，包括柏拉图，亚里士多德所传承</li></ul></li></ul></li><li>在各时代产生的成果<ul><li>国富论</li><li>资本论</li><li>进化论</li><li>独立宣言</li></ul></li><li>检验思维会用到逻辑的方法<ul><li>三段论演绎推理 - 2500 年前亚里士多德开始研究</li></ul></li><li>《思考的艺术》中改进问题解决方案的步骤<ul><li>落实细节</li><li>找出瑕疵<ul><li>书中列出了包括明确性、安全性、便利性、效率性、经济性在内的多种瑕疵</li></ul></li><li>做出改进</li></ul></li></ul><h4 id="有效推理"><a href="#有效推理" class="headerlink" title="有效推理"></a>有效推理</h4><ul><li>对于本节开头“诀窍”的完整论证<ul><li> “因为推理是解决问题的主要手段，而生活中处处充满了要解决的问题，所以生活中处处需要推理。如果生活中能够更多的解决问题，就提高了生活质量，而提高生活质量是我们都追求的。所以就有必要提高推理的水平”。</li></ul></li><li>没有掌握逻辑思维容易“被人牵着鼻子走”</li><li>《生活中的逻辑学》第十一章《新闻的运作》中提到的常见的新闻歪曲事实的方法<ul><li>故事可以渲染，也可以淡化</li><li>采用误导，耸人听闻或是导向性的标题</li><li>通过形象让新闻倾斜</li><li>后续报道可以被忽略，或者淡化</li><li>观点可以通过卡通或连环画传递</li></ul></li></ul><h4 id="甄别谬误"><a href="#甄别谬误" class="headerlink" title="甄别谬误"></a>甄别谬误</h4><blockquote><p>同谬误作斗争就是在于一切相信真理的人联合 。—— 卡莱尔，《论英雄、英雄崇拜和历史上的英雄事迹》，1841</p></blockquote><ul><li>迅速识别和你说话的人有没有基础逻辑思维能力。如果没有，干脆就不要争论。因为对方很可能出现非形式逻辑谬误。</li><li>例子<ul><li>妻子：你该打扫车库了</li><li>丈夫：什么？又打扫？难道我就应该天天打扫车库吗？<ul><li>歪曲对方意思</li><li>扩大所指范围</li></ul></li></ul></li></ul><h4 id="维度思考法（格局）"><a href="#维度思考法（格局）" class="headerlink" title="维度思考法（格局）"></a>维度思考法（格局）</h4><h5 id="高度-涉及相同事物结果的更大规模"><a href="#高度-涉及相同事物结果的更大规模" class="headerlink" title="高度 - 涉及相同事物结果的更大规模"></a>高度 - 涉及相同事物结果的更大规模</h5><ul><li>例子<ul><li>俗语，站在领导的位置思考</li><li>一个方法能够驱动的事情规模更大，更重要，惠及更多人，影响更深远</li></ul></li></ul><h5 id="广度-涉及相关事物的丰富度"><a href="#广度-涉及相关事物的丰富度" class="headerlink" title="广度 - 涉及相关事物的丰富度"></a>广度 - 涉及相关事物的丰富度</h5><ul><li>定义<ul><li>指视野宽度和事物有关元素的广度</li></ul></li><li>例子<ul><li>专家往往比局外人掌握更多信息，视野更广</li><li>医院会诊制度</li></ul></li></ul><h5 id="深度-涉及事物因果"><a href="#深度-涉及事物因果" class="headerlink" title="深度 - 涉及事物因果"></a>深度 - 涉及事物因果</h5><ul><li>例子<ul><li>bug 出现后要溯源，思考问题出现原因，尽量从源头解决</li></ul></li><li>思考诀窍<ul><li>多问为什么</li></ul></li></ul><h5 id="远度-涉及事物发展脉络"><a href="#远度-涉及事物发展脉络" class="headerlink" title="远度 - 涉及事物发展脉络"></a>远度 - 涉及事物发展脉络</h5><ul><li>即时间轴<ul><li>把近期，中期，远期三个时间点加入考量，问题就会更清晰</li></ul></li><li>例子<ul><li>君子报仇，十年不晚<ul><li>想到了棉花糖实验</li></ul></li></ul></li></ul><h5 id="灵活度-即多换位多迭代，使得结果鲁棒性高"><a href="#灵活度-即多换位多迭代，使得结果鲁棒性高" class="headerlink" title="灵活度 - 即多换位多迭代，使得结果鲁棒性高"></a>灵活度 - 即多换位多迭代，使得结果鲁棒性高</h5><ul><li><p>常用方法</p><ul><li>换位思考</li><li>不断在各种高度，宽度，远度来回跳跃思考</li></ul></li><li><p>评价标准</p></li><li><p>方案/想法的鲁棒性，适用性</p></li></ul><h3 id="六，第3类工具：目标规划和执行-。定目标和实现目标的办法"><a href="#六，第3类工具：目标规划和执行-。定目标和实现目标的办法" class="headerlink" title="六，第3类工具：目标规划和执行 。定目标和实现目标的办法"></a>六，第3类工具：目标规划和执行 。定目标和实现目标的办法</h3><blockquote><p>“理想与现实之间，动机与行为之间，总有一道阴影。” —— T·S·艾略特</p></blockquote><blockquote><p>“有了这些知识，最终你将用 &lt;哈利波特&gt;大结局那几个字来形容你的生活 —— ‘一切都好’(All is well ) “ —— 《动机心理学》，Edward Burkley，2018</p></blockquote><h4 id="6-1-目标设定"><a href="#6-1-目标设定" class="headerlink" title="6-1 目标设定"></a>6-1 目标设定</h4><ul><li><p>目标设定的作用</p><ul><li>确立正确的目标作为行动目的<ul><li>没有绝对的“正确”，不要想着一次就能达成全局最优解，充分发挥敏捷开发的思想，小步迭代——及时根据需要和情况调整目标</li></ul></li><li>靠规划出目标让人生有效率前行<ul><li>有些目标动机在潜意识中，自己没有发现，涉及自动动机（应该指的是内在动机？）</li><li>当自动动机并不是对实现功利目标最有效时，生活工作的结果也就不会令人满意</li></ul></li></ul></li><li><p>要设定好目标并达成，需要目标设定本身具备的几个特征</p><ul><li>1 行为 = 期望x价值。<ul><li>我们需要制定价值高一些，让人非常有期许的目标。</li><li>求其上者得其中</li></ul></li><li>2 目标的难度要设定适度，不能太容易，也不能太难。<ul><li>过去公司培训我经常用“时刻在离你能力之外一点点的距离挑战你的极限“。这是提升能力的最佳办法。《心流》中对最佳体验的描述也符合这个规律。</li></ul></li><li>3 大目标的实现要拆分成多个具体的小目标，最好有层次。<ul><li>和 top-down 的开发思想如出一辙，层层规划</li><li>比如减肥，可拆分为增加消耗和减少摄入2个子目标。增加消耗又可以分为每天步行10分钟和一周2次健身房。减少摄入是每周轻食3天和不喝含糖饮料。</li></ul></li><li>4 目标要足够具体，有衡量的量化标准</li><li>5 目标分为短期，中期和长期目标。循序渐进。</li><li>6 为实现目标想出多个办法和路径。</li><li>7 经常同时去想一下：目标实现后的好处。以及当前要实现目标需要的行动元素。靠心理比较来推动</li><li>8 最后，先让自己动起来。这是最重要的一步。</li></ul></li></ul><h4 id="6-2-目标执行实现"><a href="#6-2-目标执行实现" class="headerlink" title="6-2 目标执行实现"></a>6-2 目标执行实现</h4><ul><li><p>《动机心理学》“自我奋斗”一章中提到的帮助我们坚持朝目标前进的办法</p><ul><li>1）设立标准<ul><li>能够让我们感受当前进展和目标的差距。</li><li>这是一种无形的激励。</li><li>减肥者每周拍图，对比瘦下来的一点点痕迹，也是很大的动力。</li></ul></li><li>2）监控行为<ul><li>是建立一种机制，不断去监控我们完成目标的行动，是不是出现偏差。</li><li>比如测量每日步行的app。在每天提醒当天走路步数是不是达到了标准。</li></ul></li><li>3）自制力量<ul><li>延迟满足感，是牺牲短期回报，获取长期回报。</li><li>在完成减肥目标的过程里，都需要主动牺牲掉一时的口腹之欲。换取长期的形体健美身体健康。</li><li>棉花糖实验</li></ul></li></ul></li><li><p>自我损耗理论揭示了人的自控力每天只有固定一管</p><ul><li>除完全被动的睡觉休闲娱乐外，大部分需要自主完成的事情都消耗自控力，这样剩下用于完成目标的自控力就不多了</li><li>心理学家建议，当今天有完成目标的计划时<ul><li>尝试减少一部分自控力消耗</li><li>或多喝糖水（据说补充脑子，当然糖水漱口据说也可能管用）</li></ul></li></ul></li><li><p>最后还有提高自控的办法</p><ul><li>尽量与有共同目标的人在一起<ul><li>结伴减肥</li><li>让已付费的私教喊你</li></ul></li></ul></li></ul><h3 id="七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法"><a href="#七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法" class="headerlink" title="七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法"></a>七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法</h3><blockquote><p>“人们面临权衡取舍。”——曼昆，《经济学原理》第7版，2015</p></blockquote><blockquote><p>“就决策结果而言，乐观的偏见可以说是认知偏见中最显著的一个。因为乐观偏见可以是福气，也可以是冒险，假如你是个乐观的人，你应该即快乐又担心。” ——— 丹尼尔·卡纳曼，《快思慢想》，2011</p></blockquote><blockquote><p>“我们在日常生活中所做的99%的事情，是‘洗烫衣服类决策’。指必须完成，并没机会比别人完成得更好且没什么太大价值的事。而那些给生活带来巨大改变的事，比如决定结婚，生子，工作，或者投资一只价值翻了20倍的股票。也就是说，我们的生活是被为数不多的事情所掌握的。” ——拉夫·瓦格纳</p></blockquote><h4 id="7-1-决策流程方法"><a href="#7-1-决策流程方法" class="headerlink" title="7-1 决策流程方法"></a>7-1 决策流程方法</h4><ul><li>《决策的艺术》中关联决策的方法示意图<ul><li>关联决策往往是现实中最复杂的决策之一，意思是一系列决策结果会成为今后几年，后续决策的前提</li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703191234.png" alt="关联决策"></li></ul></li><li>《思考快与慢》<ul><li>主要说人的思考具有很大一部分非理性。</li><li>人有两套思维体系<ul><li>直觉快速的判断<ul><li>快速但容易被情境因素误导</li></ul></li><li>理性认真慢速思考</li><li>思维体系冲突的例子——长得不像但其实一样长的横线<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703191510.png" alt="思维体系冲突的例子"></li></ul></li></ul></li></ul></li></ul><h4 id="7-2-决策依据的质量"><a href="#7-2-决策依据的质量" class="headerlink" title="7-2 决策依据的质量"></a>7-2 决策依据的质量</h4><ul><li>决策依据越充足准确，就越能做出优良决定，想出更好办法</li><li>在相对熟练的决策技能下，错误决策往往因为决策依据出了意想不到的问题</li><li>一件与自己切身利益与发展有关的事，需要<ul><li><ol><li>非常清晰事情到底是怎么样的。</li></ol><ul><li>也就是了解事情本质。</li><li>需要第二类工具</li></ul></li><li><ol start="2"><li>对事情所处人群的环境有深刻的理解。</li></ol><ul><li>比如同事或股东间，部门内，部门间，下属与领导，单位之间等</li><li>需要第一类工具</li></ul></li><li><ol start="3"><li>对相关人的想法，有比较靠谱的判断。</li></ol><ul><li>博弈论与想法洞察</li></ul></li></ul></li></ul><h4 id="7-3-理解与洞悉"><a href="#7-3-理解与洞悉" class="headerlink" title="7-3 理解与洞悉"></a>7-3 理解与洞悉</h4><ul><li>竞争社会中，人与人的能量等级分类<ul><li>专业技能</li><li>思维与实践能力</li><li>理解与洞悉他人想法能力</li></ul></li><li>大概有几个角度可以帮助我们提高理解与洞悉他人想法能力<ul><li>1， 掌握社会与人的知识。具备逻辑思维能力。</li><li>2， 对人普遍的社会行为心理机制熟悉，对决策心理熟悉。</li><li>3， 亲密关系中他人想法的预判，要熟悉一般人在两性关系中的心理活动。</li><li>4， 权力相关的，必须深入理解中国社会运转的规则，中国小农经济的差序格局，权力组成结构，官僚体系，社会治理核心逻辑等。</li><li>如果身边有个精于此道老谋深算的人可以学习。这个过程会更快。</li></ul></li></ul><h4 id="7-4-理解与洞悉方法建议"><a href="#7-4-理解与洞悉方法建议" class="headerlink" title="7-4 理解与洞悉方法建议"></a>7-4 理解与洞悉方法建议</h4><ul><li>建议每个人找到适合自己的方法论<ul><li>正面 —— 降低合作与交易成本</li><li>反面 —— 采取对自己最优的博弈策略（避免吃亏）</li></ul></li><li>给到的建议<ul><li>1， 明确对方在这件事中的角色和利害关系，以及人际关系</li><li>2， 尽量获取个人信息。<ul><li>从家庭背景，成长经历，教育背景，工作经验，个人爱好特长，喜好，三观，习惯等。越多越好。</li></ul></li><li>3， 分析出人格属性和社会心理属性。全面了解其个性与习性。</li><li>4， 透彻了解对方诉求。<ul><li>无非几种诉求的混合。利益诉求，权力诉求，功能诉求或者感情诉求。</li></ul></li><li>5， 用第一类和第二类工具分析以上信息，作为决策依据。再使用决策方法进行决策，进行利害取舍。</li></ul></li></ul><h3 id="八，第5类工具：处理关系的方法。包括亲密关系和功利关系"><a href="#八，第5类工具：处理关系的方法。包括亲密关系和功利关系" class="headerlink" title="八，第5类工具：处理关系的方法。包括亲密关系和功利关系"></a>八，第5类工具：处理关系的方法。包括亲密关系和功利关系</h3><blockquote><p>“齐景公问政于孔子。孔子对日:“君君，臣臣，父父，子子”， 《论语·颜渊》，孔子，春秋战国</p></blockquote><blockquote><p>“这就是你的爱情策略。享受激情，但不要把它们作为维持爱情关系的基础。培养与爱人之间的友谊。努力保持新鲜感；把握每一个与配偶共同进行新奇探索的机会…“ — Rowland S. Miller, 《亲密关系》第6版，2015</p></blockquote><h4 id="1-亲密关系"><a href="#1-亲密关系" class="headerlink" title="1 亲密关系"></a>1 亲密关系</h4><ul><li>大多数人对亲密关系的理解源自家庭</li><li>亲密关系可以从心理学途径学习，也需要练习维护</li><li>找到合适的对象，经营好恋爱关系与婚姻关系，是重要的人生工程，也是人生里最难的事之一</li></ul><h5 id="以爱之名"><a href="#以爱之名" class="headerlink" title="以爱之名"></a>以爱之名</h5><ul><li><p>《亲密关系》</p><ul><li>爱情三角论，爱情由以下三部分构成，三条边的长短组成了不同的爱情形态<ul><li>亲密</li><li>激情</li><li>承诺</li></ul></li><li>并对爱情能否持久给出了自己的答案。</li><li>书中对嫉妒，谎言与背叛都有详尽分析和体贴的应对建议。</li><li>对亲密关系间如何沟通，冲突的应对，权力和暴力，克服亲密关系解体，关系维持和修复，都有大量详细的论述。</li><li>书中还完美的回答了为什么存在痛苦而又依赖的关系。<ul><li>一个人对关系的依赖同时取决于对关系的满意度和可替代度。如果自己不满意，但没有更好的替代，打破依赖很难承受，于是就出现了痛苦但又依赖的关系。</li></ul></li><li>如果大家现实中存在自己依赖的亲密关系，但是又带来困扰和伤害，那么这一章能够彻底解决你的困惑。</li></ul></li><li><p>《进化心理学》</p><ul><li>使用进化论和生物进化解释大量跨文化的人类心理喜好倾向<ul><li>男女长期择偶心理机制和规律</li><li>为什么男性大多喜欢腰臀比小的女性</li><li>某社群中大众觉得好看的脸具备的特征</li></ul></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703193210.png" alt="女性长期择偶策略"></li></ul></li><li><p>《少有人走的路》(第一卷）分析了成熟心智的重要性，以及对“爱”的不同角度解读。</p></li><li><p>《家庭婚姻社会学》分析人类谈恋爱，结婚，离婚，再婚，家暴，老年婚姻等各个环节。</p></li><li><p>《性学入门》从生理和心理各方面解释了性爱。</p><ul><li>《亲密关系》中虽然有专门章节介绍，但李银河作为中国知名女性问题，婚姻问题专家，她的书更接我们国内文化的地气。</li></ul></li></ul><h5 id="原生家庭"><a href="#原生家庭" class="headerlink" title="原生家庭"></a>原生家庭</h5><ul><li>原生家庭影响着一个人的生活习惯，饮食习惯，性格的养成，价值观的形成，以及对婚姻观的态度等。</li><li>可以关注一些心理学公众号<ul><li>武志红</li><li>壹心理</li><li>徐慢慢心里话</li></ul></li></ul><h4 id="2-功利关系"><a href="#2-功利关系" class="headerlink" title="2 功利关系"></a>2 功利关系</h4><ul><li><p>工作的几种选择，都要和别人建立功利关系</p><ul><li>进单位 - 上下级</li><li>自由职业 - 甲乙方</li><li>创业 - 合伙人/客户/政府或其他组织的权力与利益相关人</li></ul></li><li><p>核心是信任基础上的利益权力资源交换</p></li><li><p>中国关系社会从过去宗族社会演变至今的格局</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703194540.png" alt="功利关系格局"></li><li>每个人都以自身为中心，向外围绕几个圈层<ul><li>每个圈层的法则秩序不同</li></ul></li></ul></li><li><p>如何不让关系成为自己发展的阻碍</p><ul><li>例子<ul><li>很多青年人都会有这么一个想法：“领导是傻x”。这里把领导换成“同事”或者“公司”也都行。毕竟我们学校毕业后唯一接触的社会环境就是单位职场。发生关系的也就是同事领导。这些人都是陌生人，你与他们是纯粹的功利关系。</li></ul></li><li>应对方法论<ul><li>从权力角度分析<ul><li>你所在组织是政府/国企/事业/体制内，还是私人企业/外企。组织内部特征是什么？<ul><li>比如是国企/体制内，这种组织运转规则是权力博弈。<ul><li>国企以政治权力和国家暴力机器做基础，来进行生产与经济活动。</li><li>组织内部规则肯定是政治权力主导。</li><li>员工要有一定工作专业能力，更重要能够在官僚/管理权力体系中审时度势站好山头，拉裙带关系，获取政治资源。</li><li>因为员工最终的发展是政治发展。</li><li>专业人员是工具人。</li><li>分配权力与利益的人是政治领导。虽然和领导一起干活难度因人而异。</li><li>但总得让领导把自己当“自己人“才有可能更好发展。</li><li>开拓和处理关系能力是关键。</li></ul></li></ul></li></ul></li><li>从金钱角度分析<ul><li>私企相对更简单一些。<ul><li>公司唯一目的是赚钱。</li><li>自由市场私人企业要活着发展，要看收入业绩，对专业人才依赖性很强。</li><li>专业能力为主，政治能力为辅。</li><li>领导是傻x，也许你专业上就是个傻x不自知。</li><li>或者他专业傻x，你比他给公司创造价值的能力确实强。</li><li>在专业为主政治为辅的环境下，专业够强，假以时日你取有出头之日可能性较大。</li><li>在哪个公司获取利益不重要。总能找到。</li><li>注意是给公司创造价值的能力强。不是某个技能强。</li><li>区分这两点很重要。</li><li>专业与管理技能的提升是关键。人际关系不绊脚就行。</li></ul></li></ul></li><li>从人性角度分析<ul><li>体制内领导的目标也是更高的权力。<ul><li>他需要政绩。</li></ul></li><li>私企领导要业绩。<ul><li>这样才能晋升和更多奖金。他们貌似傻x（其实不一定）的所有行径，目标都很明确。</li></ul></li></ul></li><li>所以领导是傻x，因为你没有被纳入领导获取自身利益博弈的棋子库。甚至成了绊脚石。就这么简单。<ul><li>他本人傻x与否并不关键。要让自己成为他工具（合伙）一起获取权力或利益。</li></ul></li><li>如果做不到。赶紧换环境。<ul><li>因为如果他确实傻x，没法带你升迁又过度压榨你，只能换领导。</li><li>如果他不傻x，你是绊脚石，也赶紧走。</li><li>如果迫于形式没法走，那就为下一步做准备。尽量降低领导傻x对你发展的影响。<ul><li>比如过去我的很多同事受不了另外一个部门的头，很不愉快，成批的离职。很多人后来做了自由职业者，或者自己创业。在工作和生活上都好了起来。</li></ul></li></ul></li></ul></li><li>从前述权钱人性角度分析，你和那种不做具体业务专门管人的领导，就是羊与牧羊犬的关系。<ul><li>专业做事的员工看管理者很容易特别傻x。<ul><li>类似要被割毛的羊看牧养狗，肯定不顺眼。</li><li>但狗才是主人最宠幸的好伴侣。</li><li>羊不好好吃草少割两斤毛，损失金钱是百十来块。</li><li>狗不好好干活一丢就是丢好几只羊。损失好几万块。</li><li>而且狗还会舔主人脚。</li></ul></li><li>大私企里也会存在很强的政治斗争氛围。但最终权力的基础是股东会，这不像体制内。<ul><li>能够给公司创造价值的能力是底层能力。<ul><li>前者要关注自由市场经济原理。</li></ul></li><li>类似能够给领导博取政绩的能力是体制内底层能力一样。<ul><li>后者要关注中国儒家权力意识形态传统。</li></ul></li></ul></li></ul></li></ul></li><li><p>至于功利社会关系里的男女关系。</p><ul><li>本质是一种资源兑换。</li></ul></li><li><p>唯一需要注意的是不要因为没有发现领导/同事在单位的亲密关系而误触雷区…… </p><ul><li>遇到这种道德瑕疵巨大的人，一定要小心。</li></ul></li></ul><h3 id="九，第6类工具：抵抗挫折，照顾自己心灵"><a href="#九，第6类工具：抵抗挫折，照顾自己心灵" class="headerlink" title="九，第6类工具：抵抗挫折，照顾自己心灵."></a>九，第6类工具：抵抗挫折，照顾自己心灵.</h3><blockquote><p>“人有悲欢离合，月有阴晴圆缺，此事古难全。但愿人长久，千里共婵娟。” —— 苏轼，《水调歌头·明月几时有》，1076</p></blockquote><h4 id="1-研究自己"><a href="#1-研究自己" class="headerlink" title="1 研究自己"></a>1 研究自己</h4><blockquote><p>人生最困难的事情是认识自己。——泰勒斯，科学与哲学之父，公元前6世纪</p></blockquote><blockquote><p>认识自己，方能认识人生。——苏格拉底，公元前4世纪</p></blockquote><ul><li><p>意义</p><ul><li>最终我们活得怎么样，只有我们自己感知得最清晰。所有好和不好的，也主要由自己承担。</li><li>对自己认识的越明白，越有可能在困境时帮助自己找到办法，保护心智和情绪。</li><li>另一个巨大作用是，把自己研究得明白一些，容易找到自我。</li></ul></li><li><p>社会心理学研究表明，人往往了解他人比了解自己要容易</p></li><li><p>认识自己最大的用处，可能并不是针对外界。而是对自己的关怀与安抚。</p></li><li><p>一些借助研究自己，灌溉心灵的方法</p><ul><li>1）毫不犹豫地接纳自己<ul><li>搞清自己的性格，特性，心理习惯</li><li>肯定自己的所有性格与特性</li><li>性格与心理特征没有好坏</li><li>性格与人格很难改变，有时候没必要试图改变自己<ul><li>关注行为的缺陷和具体事情的错误，或者道德缺陷即可</li><li>不要关注个性和人格</li></ul></li><li>鉴定自我认知，可以帮你抵御侵略性的强势权力控制和 PUA</li><li>别等到抑郁的时候再去研究自己</li><li>社会上的商业化人格测试只能起到小部分参考作用</li></ul></li><li>2）从道德观，价值观，和人生观研究自己<ul><li>经常考虑一些挂念和标准的问题，有助于我们在社会生存得舒适些<ul><li>自己的自私自利程度？</li><li>对同一件事情的看法为何与别人有分歧？</li><li>对一件事，自己的决策为何与别人不同，优劣如何？</li><li>决策取舍的标准是什么？</li><li>自己觉得最舒适的度过人生的状态？</li><li>一直这么过也会舒适吗？</li><li>我能一直保持现在满意的状态吗？</li></ul></li><li>对欲望的自制力也非常重要</li><li>修养，得撞墙</li></ul></li><li>3）原生家庭<ul><li>很多思维习惯和性格形成自原生家庭</li><li>根据儿时记忆，慢慢寻找家庭铸就你心灵的某些拼图</li></ul></li></ul></li></ul><h4 id="2-自信"><a href="#2-自信" class="headerlink" title="2 自信"></a>2 自信</h4><blockquote><p>“男人为什么明明看起来都那么普通，却还那么自信。” ——杨笠，脱口秀演员</p></blockquote><ul><li><p>社会心理学对“自我”的研究，表明健康心理的人， 对自我评价都在平均值之上。</p><ul><li>也就是大部分人都认为自己好过大部分人。</li><li>只有抑郁状态的人才会比心理健康的人更客观评价自己。</li><li>也有心理学研究表明女性自我评价比男性普遍要低，底层是进化心理学机制</li></ul></li><li><p>自信的概念</p><ul><li>在几乎没有具体根据的基础上，对自己的一种相信，需要勇气</li><li>能力已经被结果证明后，这个时候的“信心”只能说是一种对事实的认知。这种“信心”的精神力不足。</li><li>只有在尝试未知事情的时候，依然相信自己能够达成理想结果。才是真正的自信。<ul><li>“自己相信自己”，和“已经被结果证明的能力” ，这是两个概念。</li><li>后者可以逐步培养起前者。</li><li>但更多的人来自于原生家庭对自信培养的潜移默化。</li><li>所以在主流中国家庭的负面教育环境下，多数人很难有真正的自信。</li></ul></li><li>自信是从孩童时代，由父母灌注的。<ul><li>天生获得的优势（颜值，身高，IQ，出身）也会起到作用。</li><li>如果在负面教育环境成长，性格很容易在自卑和自负之间来回打转。</li><li>而只有天生的优势没有后天能力的依托，也很容易栽入低自尊境地。</li></ul></li></ul></li><li><p>成年人培养自信，只能从两个方面。</p><ul><li>一个是不断增长且被证明的能力。</li><li>一个是变得勇敢一点。</li><li>归根结底，还是靠不断证明的能力。<ul><li>这个过程很难很漫长。而且这种自信基础很弱。</li><li>基础不牢，稍微碰到能力比自己强的，又会回到过去那个低自尊无自信的自己。</li><li>这也是现在中国原生家庭心理解说如此盛行的原因之一。只批评少表扬的教育方式毁掉一代又一代孩子的自信。</li></ul></li></ul></li><li><p>为什么会这样，和中国讲究谦虚的集体主义传统文化有关。</p><ul><li>为什么有这种文化，又可以追溯到农耕经济和宗族文化，儒家文化，地缘与经济政治历史方面。</li><li>有兴趣的，费孝通，秦晖的书可以找来看看。</li></ul><h4 id="3-情绪自我安抚"><a href="#3-情绪自我安抚" class="headerlink" title="3 情绪自我安抚"></a>3 情绪自我安抚</h4></li><li><p>你的情绪都是正当的！</p></li><li><p>反观/分析/消解情绪的几种办法</p><ul><li>情绪正当性</li><li>抽离第三者旁观法</li><li>转换注意力法</li><li>理性逻辑思辨方法</li><li>运动</li></ul></li><li><p>一种应对负面情绪的简单办法</p><ul><li>1， 负面情绪突如其来的时候，先顺其自然。<ul><li>赶紧找个别人听不见看不到的地方，或者不影响他人的情况下，想骂就骂，想哭就哭。</li><li>注意不要当着其他人，尤其是相关人面前辱骂哭泣丧失控制。</li></ul></li><li>2， 如果有能力，一边宣泄情绪，一边想着一个自己的分身。站在旁边看着自己。<ul><li>只用看着就行。</li><li>如果还有能力，可以想想这些情绪是从哪里来的。</li></ul></li><li>3， 平静一点后，尽量先不去想具体事。尤其是导致负面情绪的事。<ul><li>想办法去吃点好吃的。</li><li>或者先去找个平时喜欢的运动，活动若干小时。</li><li>反正找点轻松喜欢做的事。</li><li>如果条件不允许，也可以带薪上厕所看会手机。</li><li>别让自己闲着。</li></ul></li><li>4， 过半天，最好一天，再去思考。<ul><li>如果事情紧急，则立刻投入具体事情中。</li><li>不管怎样，从情绪到思考，中间一定要给自己几个小时时间，做点别的。</li></ul></li><li>5， 使用前第一和第二类工具，从各个角度分析事情。<ul><li>注意分析的时候要尽量摆脱情绪。</li><li>实在摆脱不了，就可以先放放。</li></ul></li><li>6， 有情绪，冲动的时候，千万不要做任何决定。也不要和当事人说任何话！<ul><li>如果前 5条都做不到，做到第6条就好。</li></ul></li><li>7， 靠谱的心理咨询和心理治疗是非常管用的。<ul><li>但是找到很职业的心理咨询师很难。</li><li>中国对抑郁症和心理健康开始重视。大学都配备心理咨询服务。</li><li>发现自己不对劲，一定要想办法找到靠谱心理辅导与帮助。</li></ul></li></ul></li></ul><h4 id="4-应对焦虑与压力的具体方法"><a href="#4-应对焦虑与压力的具体方法" class="headerlink" title="4 应对焦虑与压力的具体方法"></a>4 应对焦虑与压力的具体方法</h4><ul><li><p>《人格心理学》中应对焦虑的方法</p><ul><li>主动的问題中心策略：  <ul><li>我尽可能多地获取到相关情况的信息。  </li><li>我制订了一个行动计划。  </li><li>我考虑了各种可供选择的办法，并权衡了利弊。  </li><li>我与一些有类似经历的人商量，  </li><li>我努力让事情好转。  </li><li>我向一些知道得比我多的人寻求帮助。  </li><li>我留出时间来解决这个问题。</li></ul></li><li>主动的情绪中心策咯：  <ul><li>我和朋友们讨论自己的情绪。  </li><li>我思考怎样从经验中吸取教训。  </li><li>我接受所发生的一切，并继续生活。  </li><li>我努力正确地看待事情。  </li><li>我努力寻求一线希望。  </li><li>我从宗教中寻求安慰。  </li><li>我向专业咨询师倾诉我的情感。</li></ul></li><li>回避策略：  <ul><li>我努力不去想这个问题。  </li><li>我假装问题并不存在。  </li><li>我喝酒或者服麻醉药使自己感觉好些，  </li><li>我努力把自己的注意力转移到其他活动上  </li><li>我回避那些让我想起烦恼的人和场景。  </li><li>我睡得比平时多。  </li><li>我拒绝承认问题的发生。</li></ul></li></ul></li><li><p>一般而言采用主动策略想对更好一点。</p><ul><li>回避策略虽然也有用，就是时效较短，有时候负面作用会更大。</li></ul></li><li><p>主动的问题中心策略和情绪中心策略，要针对不同性格和不同问题。</p><ul><li>一种没用就换一种</li></ul></li></ul><h4 id="5-通过目标给生活带来意义"><a href="#5-通过目标给生活带来意义" class="headerlink" title="5 通过目标给生活带来意义"></a>5 通过目标给生活带来意义</h4><ul><li><p>人生关键时刻，帮助你撑下来的是平时积累的精神能力</p><ul><li>增加精神能力的最大方法，是给自己的生活设立一些目标<ul><li>任何目标都可以</li></ul></li><li>如果暂时找不到目标，就把寻找目标作为目标</li></ul></li><li><p>目标最好是内部动机驱动的理论（SDT 自决理论）</p><ul><li>即不靠外界奖励元素推动的目标</li></ul></li><li><p>一个人若只有外部动机目标，人生会很痛苦</p></li><li><p>使用第三类工具的目标规划，让自己人生充实起来。</p><ul><li>不要在意别人的价值评判。</li><li>你只要有目标，它就是好的。</li><li>这里的关键在于，并不是目标本身有意义。而是目标制定和执行过程带来意义。</li></ul></li><li><p>值得一看</p><ul><li>《心流》</li><li>《少有人走的路》</li></ul></li></ul><h4 id="6-找到业余爱好"><a href="#6-找到业余爱好" class="headerlink" title="6 找到业余爱好"></a>6 找到业余爱好</h4><ul><li>业余爱好就是人生润滑剂</li><li>对于爱好的建议<ul><li>好的爱好追求的是心流<ul><li>持续挑战</li><li>能力与挑战动态匹配</li><li>全神贯注知行合一</li><li>忘我</li><li>时间流逝加速感</li></ul></li></ul></li><li>爱好分类<ul><li>主动爱好<ul><li>参与创造</li></ul></li><li>被动爱好<ul><li>作为观众，欣赏</li></ul></li></ul></li><li>找到能长久的爱好是重要的事，最好当成人生计划里不可缺少的目标来执行</li></ul><h4 id="7-规避习得性无助，了解抑郁的认知习惯"><a href="#7-规避习得性无助，了解抑郁的认知习惯" class="headerlink" title="7 规避习得性无助，了解抑郁的认知习惯"></a>7 规避习得性无助，了解抑郁的认知习惯</h4><h5 id="1）习得性无助"><a href="#1）习得性无助" class="headerlink" title="1）习得性无助"></a>1）习得性无助</h5><ul><li><p>定义</p><ul><li>人生某阶段，因相同原因反复碰到类似挫折，进而发展到对整个生活，工作和自我的否定</li><li>是生活打击让我们学习到的一种无助（丧失控制感）</li></ul></li><li><p>面对</p><ul><li>首先这是因为骂你的人傻x。但这个不重要。因为这类傻x到处都是。你无法规避。</li><li>其次是我们要积极采取措施。这个是最重要的。<ul><li>这个措施就是及时发现这种状态。</li><li>面对任何一个特定的打击后，要提醒自己这只是生活中一个局部。</li><li>这个傻x，和这件事，都无法否定你的全部。<ul><li>大不了走人不干了。或者及时补救。</li></ul></li></ul></li><li>如果无法补救，不能控制这件具体的事。就往前看。<ul><li>及时寻找到一件自己完全可控，会取得成就的事上。</li><li>哪怕是很小的事也可以。</li><li>用其他一件事的成就，来抵消这件事的负面影响。不要陷入对一切都完全无助的感觉。</li></ul></li></ul></li></ul><h5 id="2）抑郁的认知习惯"><a href="#2）抑郁的认知习惯" class="headerlink" title="2）抑郁的认知习惯"></a>2）抑郁的认知习惯</h5><ul><li>抑郁者心理的三种特征<ul><li>对自己的消极思维</li><li>对未来的悲观态度</li><li>以消极方式解释当前经历</li></ul></li><li>发现了端倪，及时找心理咨询师</li></ul><h4 id="8-利用前两类工具规避焦虑与抑郁状态"><a href="#8-利用前两类工具规避焦虑与抑郁状态" class="headerlink" title="8 利用前两类工具规避焦虑与抑郁状态"></a>8 利用前两类工具规避焦虑与抑郁状态</h4><ul><li>工作和生活中很多不如意之事，如果利用正确的逻辑思维，进行分析推理和判断。理解了内在逻辑，反倒心情容易看开。</li><li>理性情绪疗法的理论认为，错误的推理会导致不必要的焦虑。类似一个基于现实条件前提的无效三段论论证。而如果能够打破无效推理，则可以打破一些心结。</li></ul><h4 id="9-锻炼意识，锻炼身体"><a href="#9-锻炼意识，锻炼身体" class="headerlink" title="9 锻炼意识，锻炼身体"></a>9 锻炼意识，锻炼身体</h4><ul><li>最好的是：身、心一起锻炼。</li></ul><h3 id="十，工具使用的建议"><a href="#十，工具使用的建议" class="headerlink" title="十，工具使用的建议"></a>十，工具使用的建议</h3><ul><li><p>无论你当前处于什么时期，碰到什么挫折和困难。建议按照一定的次序去使用工具。</p></li><li><p>1， 使用目标规划的工具。</p><ul><li>明确长期目标，分解为短期目标。形成目标结构。</li></ul></li><li><p>2， 尽快能够打牢基础，学会逻辑思维。</p><ul><li>了解对功利，人性，与社会的必要认知。</li></ul></li><li><p>3， 使用决策工具，确定时间和精力的投入。</p><ul><li>找到可选项，做工作与生活必要的抉择。</li></ul></li><li><p>4， 进入目标实现阶段，利用“目标”，“监控”与自我约束力量来尽量达到近期，中期以及远期目标。</p><ul><li>并且在某个阶段，利用批判性思维手段，及时分析和调整明显发生问题的目标。</li></ul></li><li><p>5， 任何时候，如果你需要处理亲密关系，在学习《亲密关系》，《婚姻心理学》的基础上，尽快成熟心智，尝试调整自己沟通亲密关系的方式。</p></li><li><p>6， 当有了一定闲余精力，开始深入研究自己。</p><ul><li>以便为下一阶段提升生活，和抵抗挫折做准备。</li></ul></li></ul><h3 id="文中推荐阅读的书籍"><a href="#文中推荐阅读的书籍" class="headerlink" title="文中推荐阅读的书籍"></a>文中推荐阅读的书籍</h3><ul><li><p>四，第1类：社会和人的知识经验</p><ul><li>《原则 - 工作与生活》，瑞·达里奥</li><li>4-2 社会脉络<ul><li>4-2-2 权利<ul><li>《兴盛与危机》，金观涛<ul><li>讲述中国长程社会结构，权术是功利核心追求，从两千多年前秦延续至今</li></ul></li><li>《政治学》</li><li>《政治心理学》</li></ul></li><li>4-2-3 财富<ul><li>《经济学原理》</li><li>《行为经济学》</li></ul></li><li>4-2-4 男女<ul><li>《进化心理学》</li><li>《亲密关系》</li><li>《社会心理学》</li><li>《情爱关系中的选择》</li><li>《社会学》</li><li>《婚姻心理学》</li></ul></li></ul></li><li>4-3 人性<ul><li>《社会心理学》</li><li>《社会学》</li></ul></li><li>4-4 人格<ul><li>《人格心理学》</li></ul></li></ul></li><li><p>五，第2类：提升思维质量的工具</p><ul><li>《批判性思维》，Brook Noel Moore</li><li>创造性思维与批判性思维<ul><li>《思考的艺术》</li></ul></li><li>有效推理<ul><li>《生活中的逻辑学》</li><li>《批判性思维工具》</li></ul></li><li>甄别谬误<ul><li>《逻辑模型》</li><li>《金字塔原型》一书的总结</li></ul></li></ul></li><li><p>六，第3类：目标规划</p><ul><li>6-1 目标设定<ul><li>《心流》</li></ul></li><li>6-2 目标执行实现<ul><li>《动机心理学》</li></ul></li></ul></li><li><p>七，第4类：决策的方法</p><ul><li>7-1 决策流程方法<ul><li>《决策的艺术》</li><li>《思考，快与慢》</li></ul></li></ul></li><li><p>八，第5类：处理关系</p><ul><li>1 亲密关系<ul><li>《社会心理学》</li><li>以爱为名<ul><li>《亲密关系》，罗兰米勒<ul><li>彻底分析了人之间所有亲密关系的规律和维护的建议</li></ul></li><li>《进化心理学》<ul><li>使用进化论和生物进化解释了大量跨文化的人类心理细好倾向</li></ul></li><li>《少有人走的路》(第一卷）<ul><li>分析了成熟心智的重要性，以及对“爱”的不同角度解读。</li></ul></li><li>《家庭婚姻社会学》<ul><li>分析人类谈恋爱，结婚，离婚，再婚，家暴，老年婚姻等各个环节。</li></ul></li><li>《性学入门》<ul><li>从生理和心理各方面解释了性爱。《亲密关系》中虽然有专门章节介绍，但李银河作为中国知名女性问题，婚姻问题专家，她的书更接我们国内文化的地气。</li></ul></li></ul></li></ul></li><li>2 功利关系<ul><li>《乡土中国》，费孝通<ul><li>可以对中国特色的关系社会有快速全面的认知</li><li>但有两篇台湾清华大学社会学教授罗家德的论述，可能更加通俗易懂。</li></ul></li><li>《中国人的心理》，杨国枢</li><li>《人情与面子 ——中国人的权利游戏》，黄光国<ul><li>台湾是做本土心理学研究比较早的。另外提一句黄光国也是《自卑与超越》的译者。</li></ul></li><li>中国社会与权利形态的参考<ul><li>《潜规则》</li><li>《血酬定律》</li><li>《兴盛与危机》</li><li>《开放中的变迁》</li><li>《乡土中国》</li><li>《中国近代史》（台，徐中约,未删节）</li><li>《中国近代思想史》（李泽厚）</li><li>《中国现代思想史》</li></ul></li></ul></li></ul></li><li><p>九，第6类：抵抗挫折和照顾自己心灵</p><ul><li>1 研究自己<ul><li>1）毫不犹豫地接纳自己<ul><li>《自我》<ul><li>社会学精品译丛系列</li></ul></li></ul></li></ul></li><li>3 情绪自我安抚<ul><li>《情商》</li></ul></li><li>4 应对焦虑与压力的具体方法<ul><li>《人格心理学》</li></ul></li><li>5 通过目标给生活带来意义<ul><li>《心流》</li><li>《少有人走的路》</li></ul></li><li>8 利用前两类工具规避焦虑与抑郁状态<ul><li>《人格心理学》</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220622 - Building Narrative Games with Yarn Spinner</title>
      <link href="2022/06/22/20220622-gdc-yarnspinner/"/>
      <url>2022/06/22/20220622-gdc-yarnspinner/</url>
      
        <content type="html"><![CDATA[<h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><ul><li>Youtube 链接<br><a href="https://www.youtube.com/watch?v=549J0eHE88k&list=PL2e4mYbwSTbbjN6TTMo6toJfByWpKvEDH&index=10">Building Narrative Games with Yarn Spinner</a></li></ul><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p> ### DIALOGUE TOOLS<br> - Twine<br> - Ink<br> - Fungus<br> - Yarn Spinner<br> - Others/DIY</p><h3 id="Comparison-of-tools"><a href="#Comparison-of-tools" class="headerlink" title="Comparison of tools"></a>Comparison of tools</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220618131901.png"></p><ul><li>Twine<ul><li>很容易上手</li><li>但不容易扩展（只适用于小文本/轻叙事）</li></ul></li><li>Yarn Spinner<ul><li>介于二者之间</li><li>也易于上手</li><li>也具有较好扩展性</li></ul></li><li>Ink<ul><li>难于上手</li><li>高扩展性、多特性</li></ul></li></ul><h3 id="why-yarn-spinner"><a href="#why-yarn-spinner" class="headerlink" title="why yarn spinner"></a>why yarn spinner</h3><ul><li>用于对话的脚本语言</li><li>就像写剧本一样，有场景和演员提示</li><li>容易写多分支剧情线</li><li>一开始是为《林中之夜》（Night in the Woods）构建的</li><li>被用于多个游戏</li></ul><h2 id="how-to-use"><a href="#how-to-use" class="headerlink" title="how to use"></a>how to use</h2><h3 id="make-a-visual-novel"><a href="#make-a-visual-novel" class="headerlink" title="make a visual novel"></a>make a visual novel</h3><ul><li><p>什么是 visual novel</p><ul><li>常用于动画游戏、约会模拟、类 RPG 游戏</li><li>用于主要机制是基于对话/选择的游戏类型</li><li>十分适合用 yarn spinner 构建</li></ul></li><li><p>特点</p><ul><li>管理资源</li><li>构建场景</li><li>没有物理或移动</li></ul></li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="前置介绍"><a href="#前置介绍" class="headerlink" title="前置介绍"></a>前置介绍</h3><h4 id="goals"><a href="#goals" class="headerlink" title="goals"></a>goals</h4><ul><li>做一个小型 sci-fi 游戏</li><li>在 unity 配合使用 Yarn Spinner</li><li>在 vs code 里面编辑</li></ul><h4 id="已有素材"><a href="#已有素材" class="headerlink" title="已有素材"></a>已有素材</h4><ul><li><p>简单场景</p></li><li><p>3 个人物模型</p></li><li><p>一些纹理和动画</p></li><li><p>素材来源</p><ul><li>kenney.nl</li><li>github.com/thesecretlab/SpaceJourney</li></ul></li></ul><h4 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h4><ul><li>下载安装 yarn spinner</li><li>创建基本的 yarn 脚本并 hook it up</li><li>构建故事结构和逻辑</li><li>设置场景中的多个角色和地点</li><li>润色</li><li>用最终的故事来替代对话框里的内容</li></ul><h4 id="主要会涉及到的内容"><a href="#主要会涉及到的内容" class="headerlink" title="主要会涉及到的内容"></a>主要会涉及到的内容</h4><ul><li>分支对话</li><li>基于变量的选项</li><li>相机、角色和转场的自定义需求</li></ul><h3 id="开始动手"><a href="#开始动手" class="headerlink" title="开始动手"></a>开始动手</h3><h4 id="下载安装-yarn-spinner"><a href="#下载安装-yarn-spinner" class="headerlink" title="下载安装 yarn spinner"></a>下载安装 yarn spinner</h4><ul><li>到 <a href="https://github.com/YarnSpinnerTool/ExampleProjects">github 链接</a> 中跟随说明<ul><li>创建 unity 项目</li><li>加入 yarn spinner 包</li><li>导入素材的 unity package</li></ul></li><li>到 vscode 中安装相应插件 - Yarn Spinner</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220618140610.png"></p><h4 id="创建基本的-yarn-脚本并-hook-it-up"><a href="#创建基本的-yarn-脚本并-hook-it-up" class="headerlink" title="创建基本的 yarn 脚本并 hook it up"></a>创建基本的 yarn 脚本并 hook it up</h4><h5 id="导入素材"><a href="#导入素材" class="headerlink" title="导入素材"></a>导入素材</h5><p>前面已经导入了 space journey 的 unity 包</p><h5 id="创建并链接脚本"><a href="#创建并链接脚本" class="headerlink" title="创建并链接脚本"></a>创建并链接脚本</h5><p>打开 scene 文件夹下的 start point</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620213039.png"></p><p>来到 <code>Dialogue</code> 文件夹下，右键 <code>Create - Yarn Spinner - Yarn Script</code> 并命名为 <code>Space Journey</code></p><p>同一文件夹下，右键 <code>Create - Yarn Spinner - Yarn Project</code> 并命名为 <code>Space Journey Project</code></p><blockquote><p>在构建更大型的项目时，会用到多个 yarn script，建议使用多个脚本而不是只使用一个脚本来进行更大规模故事的构建</p></blockquote><p>将刚刚创建的 script 加入到 刚创建的 project 中并点击右下角的  <code>Apply</code></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620213742.png"></p><h5 id="添加对话系统"><a href="#添加对话系统" class="headerlink" title="添加对话系统"></a>添加对话系统</h5><p>找到 <code>Packages/Yarn Spinner/Prefabs/Dialogue System</code> 将其加入场景中</p><p>将之前的 project 赋值给 <code>Dialogue System</code> 的相应位置</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620214055.png"></p><h4 id="构建故事结构和逻辑"><a href="#构建故事结构和逻辑" class="headerlink" title="构建故事结构和逻辑"></a>构建故事结构和逻辑</h4><h5 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620212334.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620212837.png"></p><ul><li>在飞船上，可以和三人中的一个对话<ul><li>工程师 - 会抱怨</li><li>船员 - 谈论配给</li><li>队长 - 谈到应对危机的准备情况<ul><li>可以说服他你准备好了</li><li>或者没能说服</li></ul></li></ul></li><li>警报声 - 飞船遇袭<ul><li>要是前面说服队长你准备好了 - 就会派你去</li><li>否则会派船员去</li></ul></li></ul><blockquote><blockquote><p>前面这小部分在视频中被放到 <code>创建基本的 yarn 脚本并 hook it up</code> 前面了，但我觉得应该放这里比较合适</p></blockquote></blockquote><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p>用 vscode 打开脚本文件后开写！<br>注意设置 title 为 <code>Start</code><br>yarn 每次会读取一行</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620214722.png"></p><ul><li>预览<ul><li>回到 unity 中，deactive 场景中的 <code>UI</code> 和 <code>Title Canvas</code></li></ul></li><li>run!</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215038.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215100.png"></p><h5 id="构建脚本"><a href="#构建脚本" class="headerlink" title="构建脚本"></a>构建脚本</h5><p><code>-&gt;</code> 在 yarn 脚本中意味着不同的选项分支</p><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">title: Starttags:---Player: Another day in Space Fleet. Might go have a chat...&#x2F;&#x2F; pick a person to speak to-&gt; Go see the Engineer as per orders  Engineer: Hello! I am the Engineer.-&gt; Meet up with your friend  Crewmate: Hello! I am your Cremate.-&gt; Go and talk to the Captain  Captain: Hello! I am the Captain.&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215914.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215931.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215950.png" alt="选择第二项"></p><h5 id="采用-node-跳转"><a href="#采用-node-跳转" class="headerlink" title="采用 node 跳转"></a>采用 node 跳转</h5><blockquote><blockquote><p>个人感觉类似函数吧，可以让结构更加紧凑，调用更加方便</p></blockquote></blockquote><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">title: Starttags:---Player: Another day in Space Fleet. Might go have a chat...&#x2F;&#x2F; pick a person to speak to-&gt; Go see the Engineer as per orders  &lt;&lt;jump TalkToEngineer&gt;&gt;-&gt; Meet up with your friend  &lt;&lt;jump TalkToCremate&gt;&gt;-&gt; Go and talk to the Captain  &lt;&lt;jump TalkToCaptain&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToEngineer---Engineer: Hello! I am the Engineer.&#x3D;&#x3D;&#x3D;title: TalkToCremate---Crewmate: Hello! I am your Cremate.&#x3D;&#x3D;&#x3D;title: TalkToCaptain---Captain: Hello! I am the Captain.&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="添加谈话后的跳转-敌袭！"><a href="#添加谈话后的跳转-敌袭！" class="headerlink" title="添加谈话后的跳转 - 敌袭！"></a>添加谈话后的跳转 - 敌袭！</h5><p>添加新的 node <code>BridgeEnding</code> 然后在之前的每个谈话分支后面加上 <code>&lt;&lt;jump BridgeEnding&gt;&gt;</code></p><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">title: Starttags:---Player: Another day in Space Fleet. Might go have a chat...&#x2F;&#x2F; pick a person to speak to-&gt; Go see the Engineer as per orders  &lt;&lt;jump TalkToEngineer&gt;&gt;-&gt; Meet up with your friend  &lt;&lt;jump TalkToCremate&gt;&gt;-&gt; Go and talk to the Captain  &lt;&lt;jump TalkToCaptain&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToEngineer---Engineer: Hello! I am the Engineer.&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToCremate---Crewmate: Hello! I am your Cremate.&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToCaptain---Captain: Hello! I am the Captain.&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;title: BridgeEnding---&#x2F;&#x2F; everyone reports to the bridgeCaptain: Pirates!Player: Oh no!Captain: Cremate, go deal with those pirates!Cremate: Yes, Captain.&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620220910.png" alt="谈话结束后跳转到敌袭部分的文本"></p><h5 id="添加不同分支结局"><a href="#添加不同分支结局" class="headerlink" title="添加不同分支结局"></a>添加不同分支结局</h5><ul><li>若是选择和队长交谈 需要说服他你准备好了</li><li>这里引入了变量的用法 <code>$away_mission_readiness</code><ul><li>变量以 <code>$</code> 开头</li><li>数值变量初始值为 0 </li></ul></li><li>为节省篇幅，后面只展现有改动的部分</li></ul><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">&#x3D;&#x3D;&#x3D;title: TalkToCaptain---Captain: Hello! I am the Captain.Player: I want to talk to go on more missions.Captain: Do you think you are ready?-&gt; Yes    &lt;&lt;set $away_mission_readiness +&#x3D; 1&gt;&gt;  &#x2F;&#x2F; if so, ask again  Captain: Really?  -&gt; ..yes?    &lt;&lt;set $away_mission_readiness +&#x3D; 1&gt;&gt;  -&gt; Actually, no.-&gt; No&#x2F;&#x2F; now go to the ending&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>设置不同结局<ul><li>只有选择和船长谈话，并说服他你准备好了（变量值为 2）的情况下才会跳转到新结局</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">&#x3D;&#x3D;&#x3D;title: BridgeEnding---&#x2F;&#x2F; everyone reports to the bridgeCaptain: Pirates!Player: Oh no!&#x2F;&#x2F; now change who goes depending on player actions&lt;&lt;if $away_mission_readiness &lt; 2&gt;&gt;Captain: Cremate, go deal with those pirates!Cremate: Yes, Captain.&lt;&lt;else&gt;&gt;  Captain: Player, you were just telling me how ready for this you are. Go deal with those pirates!  Player: Hooray!&lt;&lt;endif&gt;&gt;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置场景中的多个角色和地点"><a href="#设置场景中的多个角色和地点" class="headerlink" title="设置场景中的多个角色和地点"></a>设置场景中的多个角色和地点</h4><h5 id="设置摄像机"><a href="#设置摄像机" class="headerlink" title="设置摄像机"></a>设置摄像机</h5><p>利用 yarn spinner 的 <code>command</code> 特性来安排摄像机</p><ul><li>在场景中创建新的 gameobject 并命名为 <code>VisualNovel</code></li><li>找到 <code>Scripts/VisualNovel</code> 并添加到刚创建的 obj 上</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620223309.png"></p><ul><li>打开 <code>VisualNovel.cs</code> 取消第二步处的注释即可定义 command</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622104806.png"></p><ul><li>到 <code>Space Journey.yarn</code> 中添加切换摄像机的代码</li></ul><p>场景摄像机最开始的位置应该在 Corridor 处，所以添加代码</p><pre class="line-numbers language-none"><code class="language-none">&lt;&lt;camera Corridor&gt;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622105302.png"></p><p>场景摄像机最后会在 Bridge 处，所以添加代码</p><pre class="line-numbers language-none"><code class="language-none">&lt;&lt;camera Bridge&gt;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622110028.png"></p><h5 id="设置角色"><a href="#设置角色" class="headerlink" title="设置角色"></a>设置角色</h5><p>可以看到 <code>VisualNovel.cs</code> 中有关于放置角色的代码，这部分代码可以帮助我们在场景中创建角色 并放置到预设的位置：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622110324.png"></p><p>然后需要在 <code>VisualNovel.cs</code> 的 <code>Awake</code> 部分中定义相关的 command，第一个 string 是你想要移动的角色模型，第二个 string 是想将其移动到的地点</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622110623.png"></p><p>之后在各场景中放置角色模型</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622111124.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622111148.png"></p><p>在使用之前 还需要为 Visual Novel 指定 Character List</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622111244.png"></p><h5 id="让角色在不同情境呈现不同状态（表情）"><a href="#让角色在不同情境呈现不同状态（表情）" class="headerlink" title="让角色在不同情境呈现不同状态（表情）"></a>让角色在不同情境呈现不同状态（表情）</h5><p>这样细粒度的操作需要从角色上的脚本着手，<code>Character.cs</code> 中包含了设置位置和表情的函数</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622121127.png"></p><p>这里对比了 yarn command 和 command handler 的区别<br>简言之就是 Yarn command 可以处理更细粒度的行为<br>command handler 更适用于处理更粗粒度 如场景中的整体变化</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622121154.png"></p><p>所以在相应函数之前加上 yarn commend 的定义语句</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622121438.png"></p><p>之后就可以在 yarn 脚本中调用了</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622122554.png"></p><h4 id="润色"><a href="#润色" class="headerlink" title="润色"></a>润色</h4><h5 id="用淡入淡出方式来切换场景"><a href="#用淡入淡出方式来切换场景" class="headerlink" title="用淡入淡出方式来切换场景"></a>用淡入淡出方式来切换场景</h5><p>因为 fadein fadeout 是全局行为，所以将其添加为 command handler</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622122833.png"></p><p>他们调用的是下面定义的相关函数</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622122854.png"></p><p>然后在 yarn 脚本中相应位置来调用 fade 函数</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-22-12-32-45.jpg"></p><p>记得把场景中之前 deactive 的 UI object 重新勾选出来</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622123607.png"></p><h5 id="加入标题"><a href="#加入标题" class="headerlink" title="加入标题"></a>加入标题</h5><p>在 yarn 脚本最开始部分引入 展示标题部分的代码</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124015.png"></p><p><code>wait</code> 函数是 yarn 自带的函数，功能如其名，等待，其参数单位为秒</p><p>记得把之前 deactive 的 title 重新勾选</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124138.png"></p><p>然后 play 时就可以看见帅气标题了</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124218.png"></p><h4 id="用最终的故事来替代对话框里的内容"><a href="#用最终的故事来替代对话框里的内容" class="headerlink" title="用最终的故事来替代对话框里的内容"></a>用最终的故事来替代对话框里的内容</h4><p>前面的都是机制教学 理解了前面的内容 就可以直接用他们构建好的故事来替代整个故事</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124539.png"></p><p>直接运行会有报错，对比了一下两个 yarn 文件 发现他们给的这个最终版本最前面少了一行 tags，加上之后就可以正常运行了：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132740.png"></p><h3 id="where-to-next"><a href="#where-to-next" class="headerlink" title="where to next"></a>where to next</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132829.png"></p><h3 id="find-yarn-spinner"><a href="#find-yarn-spinner" class="headerlink" title="find yarn spinner"></a>find yarn spinner</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132917.png"></p><h3 id="thanks"><a href="#thanks" class="headerlink" title="thanks!"></a>thanks!</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132955.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220619 - Making one of the Best Levels of It Takes Two</title>
      <link href="2022/06/19/20220619-gmtk-ittakestwo/"/>
      <url>2022/06/19/20220619-gmtk-ittakestwo/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>看了 GMTK 关于双人成行的一期视频后的笔记！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><p><a href="https://www.youtube.com/watch?v=QbMF1nCiIkQ&list=PLc38fcMFcV_sJ6-plRfKCHxIalXVotgHu&index=2">Making It Takes Two’s Best Level</a></p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="合作的三种类型"><a href="#合作的三种类型" class="headerlink" title="合作的三种类型"></a>合作的三种类型</h3><ul><li>parallel coop<ul><li>各自独立完成</li></ul></li><li>step-by-step coop<ul><li>依赖关系，后一步行为需要在前一步完成后才能进行</li></ul></li><li>simultaneous coop<ul><li>同时行动</li></ul></li></ul><h3 id="可能问题和相应解决方案"><a href="#可能问题和相应解决方案" class="headerlink" title="可能问题和相应解决方案"></a>可能问题和相应解决方案</h3><h4 id="玩家在关卡中可做的事太少"><a href="#玩家在关卡中可做的事太少" class="headerlink" title="玩家在关卡中可做的事太少"></a>玩家在关卡中可做的事太少</h4><p>通过 mini game 来调整 pacing</p><h4 id="mini-game-影响剧情连贯"><a href="#mini-game-影响剧情连贯" class="headerlink" title="mini game 影响剧情连贯"></a>mini game 影响剧情连贯</h4><p>将其藏起来，不要影响主线剧情推进，同时让其有了收集属性，会激发玩家探索热情</p><h4 id="双方在-simultaneous-coop-情况下-不都有事可做"><a href="#双方在-simultaneous-coop-情况下-不都有事可做" class="headerlink" title="双方在 simultaneous coop 情况下 不都有事可做"></a>双方在 simultaneous coop 情况下 不都有事可做</h4><p>让 AI 的行为倾斜，让无事可做的一方更忙<br>例子是对战蜜蜂时，May 需要等 Cody 先给蜜蜂“挂彩”才可以造成伤害，所以会有一个等待区间，所以让蜜蜂针对 May 的攻击性更强，让等待的 May 忙起来</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip2022-06-19_13-54-13.jpg"></p><h4 id="双方技能水平不对等"><a href="#双方技能水平不对等" class="headerlink" title="双方技能水平不对等"></a>双方技能水平不对等</h4><p>调整辅助瞄准机制等，让玩家关注于“好玩的玩法和机制”而不是“能不能射中”这种技术问题</p><h4 id="如何调节竞争与合作的整体感觉"><a href="#如何调节竞争与合作的整体感觉" class="headerlink" title="如何调节竞争与合作的整体感觉"></a>如何调节竞争与合作的整体感觉</h4><p>在整体合作氛围下加入对抗型的 mini game<br>并且要让 mini game 的双方都有获胜的可能（不仅仅设计技巧类的 mini game）</p><h4 id="如何平衡-story-和-gameplay"><a href="#如何平衡-story-和-gameplay" class="headerlink" title="如何平衡 story 和 gameplay"></a>如何平衡 story 和 gameplay</h4><p>让玩法也为叙事服务<br>比如磁铁 - 也象征着 吸引 attraction<br>时钟 - 也是剧情中提到过的 时间 </p><p>做到 emotional level 的玩法设计</p><h4 id="如何创造如此多的玩法-保持-variety"><a href="#如何创造如此多的玩法-保持-variety" class="headerlink" title="如何创造如此多的玩法 - 保持 variety"></a>如何创造如此多的玩法 - 保持 variety</h4><p>借鉴任天堂的超级马里奥 3D 的 <a href="https://www.youtube.com/watch?v=dBmIkEvEBtA">《4 步关卡设计法》</a></p><p>Koichi Hayashida - 超级马里奥 3D 的联合制作人</p><p>以每次跳跃都会导致场景面板翻转的蛋糕关卡为例</p><ol><li>introduction - 在安全环境中介绍机制 - 失败了也没有后果</li></ol><p>平地跳跃</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip2022-06-19_14-01-36.jpg"></p><ol start="2"><li>development - 进一步深化机制运用 - 去除保护</li></ol><p>跳错了就会落到平地，需要重新开始</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip2022-06-19_14-04-55.jpg"></p><ol start="3"><li>twist - 机制变化</li></ol><p>考察机制的掌握程度<br>或是做出变化，让你以新视角来感受机制 - 既需要注意跳跃行为带来的平台翻转 也要注意场景中的震波攻击（场景早期已经出现过）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619140904.png"></p><ol start="4"><li>conclusion - 结尾部分</li></ol><p>让玩家展示自己的技能水平</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-15-36.jpg"></p><p>设计人说他受到了中国诗词中起承转合的结构启发</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-18-09.jpg"></p><blockquote><blockquote><p>嗯？没想到以这种方式出现了 233</p></blockquote></blockquote><p>在游戏过程中就可以不断介绍机制（也许是以敌人的行为方式）</p><p>有时候甚至会在不同阶段引入新的机制</p><h4 id="玩法与其深度的抉择"><a href="#玩法与其深度的抉择" class="headerlink" title="玩法与其深度的抉择"></a>玩法与其深度的抉择</h4><p>depth 不一定就意味着好 —— 如果没有时间让其派上用场的话尤其如此<br>另一个双人成行的设计支柱是“finding good enough” - 找到一个玩法机制最符合直觉的最有趣的部分并将其引入</p><h4 id="策划需求-vs-程序-美术工作量"><a href="#策划需求-vs-程序-美术工作量" class="headerlink" title="策划需求 vs 程序/美术工作量"></a>策划需求 vs 程序/美术工作量</h4><p>策划最好要提前思考最后的成品效果，尽量避免无用功</p><h4 id="一个原型的迭代过程"><a href="#一个原型的迭代过程" class="headerlink" title="一个原型的迭代过程"></a>一个原型的迭代过程</h4><p>以树脂喷枪作为船的动力的机制为例</p><ol><li>第一阶段</li></ol><ul><li>原型<ul><li>射击，然后船就向射击反方向移动</li></ul></li><li>问题<ul><li>玩家看不到前进的方向</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-28-02.jpg"></p><ol start="2"><li>第二阶段</li></ol><ul><li>原型<ul><li>玩家操纵船尾的装置（就像快艇一样）</li></ul></li><li>问题<ul><li>当前方式（按下 Y 来操纵）和当前关卡的原则（kinetic+炸东西）不契合</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-31-55.jpg"></p><ol start="3"><li>第三阶段</li></ol><ul><li>原型<ul><li>喷枪喷到水里来作为反作用力推进器</li></ul></li><li>结果<ul><li>结合了功能与机制</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144332.png"></p><h4 id="游戏-pacing-的方法"><a href="#游戏-pacing-的方法" class="headerlink" title="游戏 pacing 的方法"></a>游戏 pacing 的方法</h4><p>其他游戏的方法 - 用带有变化的重复内容来填充<br>即 platforming - combating - platforming - combating …</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144409.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144423.png"></p><p>双人成行中，在有足够 variety 情况下需要调整 intensity<br>即所谓松弛有度 - 以免玩家无聊或太累</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144451.png"></p><h4 id="调节玩家双方的-pacing-和感觉"><a href="#调节玩家双方的-pacing-和感觉" class="headerlink" title="调节玩家双方的 pacing 和感觉"></a>调节玩家双方的 pacing 和感觉</h4><p>比如甲壳虫对战中<br>更强调作为 platformer + timing 的把控<br>减少对于 机制/aiming 的依赖</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144607.png"></p><p>比如生命系统的迭代</p><ul><li>方案一<ul><li>采用战争游戏中的救援机制，一方倒下，需要另一方来救援</li><li>问题<ul><li>玩家不总会在一起</li></ul></li></ul></li></ul><ul><li>方案二<ul><li>在屏幕中央共享生命</li><li>问题<ul><li>技术差的一方总会成为伤害的来源，导致二人一起死亡</li><li>而不是让强的玩家成为 carry </li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144630.png" alt="共享生命"></p><ul><li>最终方案<ul><li>倒计时机制<ul><li>只要有一方存活，就不算失败</li></ul></li><li>好处<ul><li>都可以直接想象到玩家间的对话“撑住，我马上就活了！”</li></ul></li></ul></li></ul><p>但同时也要保持难度上的适度<br>要让玩家能够死亡 - 从而让其感觉受到挑战 + stress + 还要再来<br>但也不能过难从而让玩家多次重复体验 - 会使得 variety 降低</p><h4 id="趣闻-甲壳虫的死亡"><a href="#趣闻-甲壳虫的死亡" class="headerlink" title="趣闻 - 甲壳虫的死亡"></a>趣闻 - 甲壳虫的死亡</h4><p>没想到玩家反应如此之大，设计团队当时只觉得这是一个一周的设计原型<br>没想到玩家最后具有很强的情感共鸣，觉得甲壳虫被抛弃了</p><h4 id="飞机部分的设计"><a href="#飞机部分的设计" class="headerlink" title="飞机部分的设计"></a>飞机部分的设计</h4><p>已经有故事板了 —— 知道后面有松鼠在追</p><ul><li>一种方式是落下飞机，然后反击</li><li>还有一种是能不能跳出堡垒，把它们打回去 —— 所以成了在飞机上的街霸</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144804.png"></p><h4 id="双人滑翔部分"><a href="#双人滑翔部分" class="headerlink" title="双人滑翔部分"></a>双人滑翔部分</h4><p>借鉴自《A Tale of Two Sons》，只不过是合作版本</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144720.png"></p><h2 id="take-aways"><a href="#take-aways" class="headerlink" title="take aways"></a>take aways</h2><ul><li><p>合作的三种类型</p><ul><li>parallel <ul><li>独立行动</li></ul></li><li>step-by-step<ul><li>依赖行动</li></ul></li><li>simultaneous<ul><li>共同行动</li></ul></li></ul></li><li><p>超级马里奥 3D 的 4 步设计法</p><ul><li>起承转合</li><li>introduction<ul><li>安全环境介绍机制</li></ul></li><li>development<ul><li>深入运用机制 - 去除保护</li></ul></li><li>twist<ul><li>为机制增添变化 - 比如引入敌人</li></ul></li><li>conclusion<ul><li>让玩家 showoff 机制的掌握</li></ul></li></ul></li><li><p>原型迭代的重要性！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> GMTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220617 - Stop Getting Lost： Make Cognitive Maps, Not Levels</title>
      <link href="2022/06/18/20220617-gdc-makecognitivemap/"/>
      <url>2022/06/18/20220617-gdc-makecognitivemap/</url>
      
        <content type="html"><![CDATA[<h2 id="原视频链接"><a href="#原视频链接" class="headerlink" title="原视频链接"></a>原视频链接</h2><ul><li>Youtube 链接<br><a href="https://www.youtube.com/watch?v=Q1Tczf8vxCM&list=PL2e4mYbwSTbbjN6TTMo6toJfByWpKvEDH&index=1">Stop Getting Lost: Make Cognitive Maps, Not Levels</a></li></ul><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="认知地图的来源"><a href="#认知地图的来源" class="headerlink" title="认知地图的来源"></a>认知地图的来源</h3><p>Tolman E C. Cognitive maps in rats and men[J]. Psychological review, 1948, 55(4): 189.</p><p>即著名的在迷宫中找奶酪的老鼠的实验。</p><p>在一个迷宫中的某位置放置奶酪，看老鼠能不能找到。<br>每次找到后将老鼠重新带回迷宫入口</p><p>随着实验次数增加，老鼠找到奶酪的速度越来越快</p><p>它们脑中也逐渐形成了认知地图 - 在过去经验基础上，在脑中形成的对某种情境/空间关系的图画</p><p>在后续实验中，实验人员将迷宫进行了改动，但老鼠们还是能凭借对地图的认知快速找到奶酪 - 它们选择与目的地方向相近的通道，而不是选择看起来“和前一次的正确道路”长得差不多的通道</p><h3 id="一种快速看到脑中认知地图的方法"><a href="#一种快速看到脑中认知地图的方法" class="headerlink" title="一种快速看到脑中认知地图的方法"></a>一种快速看到脑中认知地图的方法</h3><p>不借助任何工具，5 min 内绘制一幅家附近的地图</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Temp.jpg"></p><h3 id="认知地图五要素"><a href="#认知地图五要素" class="headerlink" title="认知地图五要素"></a>认知地图五要素</h3><p>《The Image Of The City》让许多人绘制了他们的认知地图，并提出了关于认知地图的五个要素：</p><ul><li>Paths</li><li>Landmarks</li><li>Districts</li><li>Edges</li><li>Nodes</li></ul><h4 id="path"><a href="#path" class="headerlink" title="path"></a>path</h4><p>处于路上的时候不易察觉到路本身<br>它具有时间属性 - 现在所在位置是之前所在位置以及两者之间的部分，并不是孤立存在的点，而是点连成的线</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617213432.png"></p><ul><li>path 的作用<ul><li>引导玩家前往某地区</li><li>帮助 lost 的玩家找到路 - 因为他们偏离了道路 而不是在路中</li><li>建立关卡中的玩家走向</li><li>连接更大的区域</li></ul></li></ul><h4 id="landmarks"><a href="#landmarks" class="headerlink" title="landmarks"></a>landmarks</h4><p>具有独特视觉辨识度的物体<br>有让人拍照的冲动</p><ul><li><p>作用</p><ul><li>帮助玩家定位</li><li>创建新的期待 - 是否意味着到了新的区域</li></ul></li><li><p>note</p><ul><li>通常是静态的，动态的大型移动物体一般不能视为地标，发挥的作用不一样</li><li>具有方向性的话更容易被记住<ul><li>在雕塑背后 vs. 我看见了塔</li></ul></li><li>会被多次作为参考系使用 - 这样才能帮助玩家建立认知地图</li></ul></li></ul><h4 id="district"><a href="#district" class="headerlink" title="district"></a>district</h4><ul><li><p>定义</p><ul><li>被分为不同块的区域</li><li>一般具有不同的特征（颜色、规模）</li><li>具有边界</li></ul></li><li><p>如何判断是好的 district 设计 - 眯眼大法</p><ul><li>眯起眼之后能区分出不同区域</li></ul></li><li><p>相似元素的簇分布</p><ul><li>可以帮助区分不同 district </li><li>也可以让具有相似元素的区域更容易被记住</li></ul></li></ul><h4 id="edge"><a href="#edge" class="headerlink" title="edge"></a>edge</h4><ul><li><p>定义</p><ul><li>线性</li><li>非路径</li></ul></li><li><p>跨越边界应该要有意义</p><ul><li>可以是叙事/机制/美学层面</li></ul></li><li><p>bold edge 比起模糊的边界更容易被人记住</p></li></ul><h4 id="node"><a href="#node" class="headerlink" title="node"></a>node</h4><ul><li><p>定义</p><ul><li>是 path 的交界处</li><li>大多会作为交通枢纽存在</li></ul></li><li><p>作用</p><ul><li>让 path 的指向有所意义 - all roads lead to Rome</li><li>可以被重用</li><li>可以作为目的地</li></ul></li><li><p>note</p><ul><li>一个好的 note 应该是可以被深入体验的，而不仅仅是经过</li></ul></li></ul><hr><h3 id="投入实践"><a href="#投入实践" class="headerlink" title="投入实践"></a>投入实践</h3><ul><li><p>audit<br>让自己的地图设计是清晰的 - 不要有模棱两可的“好像是 landmark”之类的设计</p></li><li><p>organize<br>用这些清晰的元素来构建关卡</p></li><li><p>test without HUD/Minimap UI<br>尽量在没有 UI 的情况下来进行地图测试 - 这样才能真正测试到地图本身<br>否则就会只缘身在此山中 - 以中心视角而不是世界视角来形成认知地图</p></li></ul><p>egocentric 视角：自我中心视角，就像拿着手机地图前往目的地，探索路径是被分割的 - 向前 100 米，向左 100 米 - 不利于形成认知地图<br>allocentric 视角：世界中心视角，作为个体行走在环境中</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617210507.png"></p><h3 id="外部参考"><a href="#外部参考" class="headerlink" title="外部参考"></a>外部参考</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617210526.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617210535.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十二章 有些元素是游戏机制</title>
      <link href="2022/06/08/20220608-theartofgamedesign-chap12/"/>
      <url>2022/06/08/20220608-theartofgamedesign-chap12/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十二章-有些元素是游戏机制"><a href="#第十二章-有些元素是游戏机制" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h2><p>游戏的骨架是由游戏机制定义的。<br>游戏机制是游戏真正的核心。剥离美学、技术和故事后，剩下的互动和关系，就是游戏机制。</p><p>游戏机制分类不明确的原因：</p><ul><li>简单游戏的玩法机制，也颇为复杂，难以解析。尝试将其简化到完美数学理解，就会产生各种描述，且不完整。</li><li>一方面，游戏机制是客观地、有明确规定的规则集。另一方面，游戏机制又设计一些比较神秘的东西（头脑中的某些心理模型）。</li></ul><p>下面是本书中尝试提出的机制分类。</p><h3 id="机制-1：空间"><a href="#机制-1：空间" class="headerlink" title="机制 1：空间"></a>机制 1：空间</h3><p>每个游戏都发生在某种空间里（space）。定义了游戏中可以存在的各个地点和它们之间如何关联。</p><p>一般而言，游戏空间：</p><ol><li>是离散或连续的。</li><li>具有一定数量的维度。</li><li>具有连接或不连接的有界区域。</li></ol><p>什么叫“离散”呢？<br>以九宫格为例，九宫格中只有九个离散空间有实际意义。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612001245.png" alt="标记占据了九宫格九个离散空间之一"></p><p>某种意义上说，九宫格其实是 9 个零维的格子，在一个二维网络中互相连接：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612001359.png"></p><p>每个圈代表一个零维空间，每条线表示相连的空间。在九宫格游戏中，没有在空间中的移动，相邻关系非常重要。<br>没有相邻关系，只有 9 个孤立的点。<br>有相邻关系，就变成离散 2D 空间，有着清晰边界——三格宽、三格高</p><p>思考大富翁棋盘，乍一看可能觉得是一个离散二维空间。但其实，只要一维空间就可以代表它——四十个离散点的一条线，头尾相连成一圈。<br>转角的格子和其他格子其实功能一样，每个格子都是零维空间。多个棋子可以停在一个格子内，但同一格内的相对位置无意义。</p><p>并非所有游戏空间都离散。桌球台就是连续二维空间的范例。但其实并非严格二维，因为有时候可以通过跳球的方式进行游玩，此时它暂时具有三维空间的属性。</p><p>对于抽象功能空间的描述并没有一定之规。<br>把游戏剥离成只有空间功能的目的是让你不受美学或是现实世界的干扰，可以更容易思考。</p><p>若考虑把足球场地边界修改成新样式，可能会从二维连续空间角度来思考：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002005.png"></p><p>若是想修改球门高度，或改变限制球员能将球踢多高的规则，又或者在场上加入起伏地面，那么当做连续三维空间来考虑就比较有利。</p><p>还有些时候，甚至可以把足球场当做离散空间考虑——将其分为九个主要区域，左右各多一个区域当做球门。分析各位置的配合玩法时，这样的思考模式会有帮助。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002216.png"></p><p>重点是找到最能帮助自己理解游戏中各种关联关系的一种。</p><h4 id="互相嵌套的空间"><a href="#互相嵌套的空间" class="headerlink" title="互相嵌套的空间"></a>互相嵌套的空间</h4><p>许多游戏空间更为复杂，具有嵌套空间。比如幻想角色扮演游戏（CRPG），此类游戏多包含二维连续“户外空间”。在该空间中旅行的玩家会遇到各种图标，代表市镇、洞穴或城堡等。玩家可以进入这些完全分隔的空间，其中除了出入口图标以外，与“户外空间”没有联系。</p><h4 id="零维度"><a href="#零维度" class="headerlink" title="零维度"></a>零维度</h4><p>每个游戏都一定在空间中进行吗？</p><p>思考这么一个游戏：一方（A）想出一个事物，另一方（B）提出能以“是”或“否”回答的问题。B 不断提问，并根据 A 的回答来猜测答案。</p><p>这里没有游戏盘，没有移动，只有二人对话，这个游戏中有空间吗？换一种思考方式就有：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002737.png"></p><p>A 脑中包含该事物，B 脑中包含对该事物是什么的判断，对话空间是信息交换的地方。每个游戏都有某种信息/状态,并且必须存在于某个地点。所以，就算一个游戏在一点上，或者在零维空间内发生，把它当做空间来思考也可以有帮助。</p><p>身为设计师，以功能抽象的视角来思考游戏空间是一大基础。这就是 26 透镜。</p><h4 id="26-号透镜：功能空间"><a href="#26-号透镜：功能空间" class="headerlink" title="26 号透镜：功能空间"></a>26 号透镜：功能空间</h4><p>要使用此透镜，请思考将所有表面元素剥离你的游戏之后，游戏究竟在什么空间内进行。</p><p>问自己以下问题:</p><ul><li>游戏空间是离散的还是连续的?</li><li>它有几个维度?</li><li>空间的边界在哪?</li><li>有没有子空间?空间如何互相联系?</li><li>是否有不止一种合理方式给游戏空间建立抽象模型?</li></ul><p>先专注空间，改造抽象空间布局满意后，再加以美学成分。<br>功能空间与 10 号透镜“全景设计”配合使用，效果很好。<br>如果能同时看清玩家将要体验到的抽象功能空间和美学空间，及它们之间的关联，就能充满自信地决定游戏世界的形态。</p><h3 id="机制2：时间"><a href="#机制2：时间" class="headerlink" title="机制2：时间"></a>机制2：时间</h3><p>游戏世界中的时间并非和现实一样，单向匀速前进，无法挽回。</p><h4 id="离散与连续的时间"><a href="#离散与连续的时间" class="headerlink" title="离散与连续的时间"></a>离散与连续的时间</h4><p>游戏中离散的时间单位即“回合”。</p><p>一般而言，回合制游戏中的时间并不重要。每一回合都是一个离散时间单位，回合之间并不存在时间。</p><p>很多游戏是在连续时间中进行。也有一些游戏使用混合时间系统，如国际象棋中采取回合制，但有连续计时器为每名选手规定时间限制。</p><h4 id="时钟与竞赛"><a href="#时钟与竞赛" class="headerlink" title="时钟与竞赛"></a>时钟与竞赛</h4><p>不同类型时钟在许多游戏中出现，用来给事物设定时间限制。如 Boggle （一种拼单词游戏）中的沙漏，美式足球中的计时钟，《大金刚》中马里奥跳跃的时长。设计目的在于通过绝对的时间计量对玩法作出限制。</p><p>时间也能嵌套。如篮球中会有总计时，但也有“24秒计时器”（美职业篮球比赛中规定，一方发起进攻后 24 秒内必须尝试进球得分，否则球权交给对方），来确保选手（玩家）们去冒更多风险，保证游戏过程好看。</p><p>也有偏相对性的方法来计量时间——一般称之为“竞赛”。竞赛情况下，没有固定时间限制，只有压力促使你比另一个玩家快。竞赛可能很明显，比如汽车赛，也可能比较隐含，如《太空侵略者》中，玩家需要在上方外星人碰到地面前将其全部击毁。</p><p>也有许多游戏中时间不是限制因素，但有意义。比如棒球中每局比赛没有时间限制，但如果比赛时间过长，投手就会耗尽体力，这让时间成为赛事的重要部分。</p><h4 id="操控时间"><a href="#操控时间" class="headerlink" title="操控时间"></a>操控时间</h4><p>游戏可以做到现实中无法想象的操控时间。<br>有多种引入方式：</p><ul><li>让时间完全停止<ul><li>体育比赛中的暂停（time-out）</li><li>游戏中的暂停（pause）</li></ul></li><li>加快时间<ul><li>《文明》中，几秒钟可以是游戏世界中的几年</li></ul></li><li>时间倒流<ul><li>游戏中的死亡回档</li><li>《时空幻境》（Braid）把操控游戏时间做成了游戏的核心机制</li></ul></li></ul><h4 id="27-号透镜：时间"><a href="#27-号透镜：时间" class="headerlink" title="27 号透镜：时间"></a>27 号透镜：时间</h4><p>俗话说“时间就是一切”。我们身为设计师的目标是创造体验，而体验如果太长、太短、太快、太慢，都很容易扫兴。要让你的体验长度刚刚好，可问自己以下问题:</p><ul><li>究竟是什么决定了我的游戏活动的长度?</li><li>我的玩家是否因为游戏结束太快，感到沮丧?我怎样才能改变这种状况?</li><li>我的玩家是否因为游戏时间太长，感到无聊?我怎样才能改变这种状况?</li><li>时钟和竞赛能不能让我的游戏玩法更激动人心?</li><li>时间限制也许会让玩家烦躁。我去掉时间限制会更好吗?</li><li>有层级的时间架构对我的游戏是否有益?或者说，几个小回合组成一个大回合好不好?</li></ul><p>要把时间调至合适的程度很难，但时间能成就一款游戏，也能毁掉一款游戏。听从以前歌舞艺人的格言“吊着他们的胃口 （leave’em wanting more）” ，一般不会错。</p><h3 id="机制-3：对象、属性和状态"><a href="#机制-3：对象、属性和状态" class="headerlink" title="机制 3：对象、属性和状态"></a>机制 3：对象、属性和状态</h3><p>游戏空间中，一切可见物/可操纵物，都属于对象。对象是游戏机制里的“名词”。技术上而言，有时需要把空间本身也当做对象。</p><p>对象一般有一个或一个以上属性，其中一个常见属性是游戏空间中的位置。</p><p>属性是有关一个对象的各类信息。如赛车游戏中的车有最大速度、当前速度等属性。每个属性都有当前状态。有些状态不会经常变动（如最大速度），有些状态会在游戏过程中不断改变（如当前速度）。</p><p>对象 - 游戏机制名词<br>属性、状态 - 游戏机制形容词</p><ul><li>属性<ul><li>静态属性，整个游戏中不变<ul><li>如棋子颜色</li></ul></li><li>动态属性（主要感兴趣）<ul><li>如西洋跳棋中的“移动属性”的三种状态：普通、成王、被吃</li><li>国际象棋中，国王的“移动模式”属性：自由移动、将军、将死</li><li>《大富翁》中，每块地产都可以被当做一个对象，有动态属性“房屋数量”：0、1、2、3、4、宾馆；还有“抵押”属性：是、否</li></ul></li></ul></li></ul><p>不一定要将每次状态改变都告知玩家。有些必须告知，有些最好隐藏。<br>标准：若两个对象的行为相同，就应该看起来相同。如果行为不同，看起来也要不同。</p><p>游戏 AI 可以通过构建属性状态转换图来帮助梳理逻辑和调试。如《吃豆人》中的怪物：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612005452.png"></p><p>状态图中会有起始状态（一般用两个圈表示）。<br>每个箭头代表依次可能的状态转化，由一个事件触发</p><p>对象有哪些属性，属性有哪些状态，取决于你。面对游戏设计的每一件事，在当时当景怎么最有效，就怎么去考虑，才是“正确”之路。</p><p>强迫玩家主义太多状态会让玩家不堪重负。下一种会讨论如何优化玩家需要处理的状态数量。</p><p>严格将游戏当做对象、属性、及其变化状态的结合，是一种有用视角：</p><h4 id="28-号透镜：状态机"><a href="#28-号透镜：状态机" class="headerlink" title="28 号透镜：状态机"></a>28 号透镜：状态机</h4><p>要使用此透镜，请思考你的游戏中哪些信息在改变。问自己这些问题:</p><ul><li>我的游戏中有什么对象?</li><li>这些对象的属性是什么?</li><li>每个属性有什么可能的状态?</li><li>每个属性中，是什么触发状态改变?</li></ul><p>玩游戏的过程就是做决定，决定是根据信息做出的。决定不同的属性、属性的状态、改变状态的事件，就是你游戏机制的核心。</p><h4 id="秘密"><a href="#秘密" class="headerlink" title="秘密"></a>秘密</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612112612.png" alt="知情者韦恩图"></p><ul><li>每个圈代表一个知情者，包括神、游戏、以及玩家 123 号。每个点代表游戏中的一些信息——一个属性的状态</li><li>A 是完全公开信息，如棋子在棋盘上的位置，或者明牌。所有玩家都了解</li><li>B 是玩家 23 共享信息，但 1 不知道的状态。也许 23 有机会看过同一张暗牌，但 1 没有。也可能 23 是玩家 1 的虚拟对手，算法让其共享信息，一起对抗玩家 1</li><li>C 是单一玩家私密信息，这里属于玩家 2，比如他的牌</li><li>D 是只有游戏本身知道，但玩家们都不知道的信息。比如桌面角色扮演游戏中的 GM（game master）。他不属于玩家。但知道有关游戏状态的大量私密信息，因为他可能是真正让游戏机制运转的人。大部分电脑游戏中，都有很多玩家不知道的内部状态。</li><li>E 是随机生成的信息，只有命运或神明之类的才知道</li></ul><p>秘密即能力。</p><h4 id="29-号透镜：秘密"><a href="#29-号透镜：秘密" class="headerlink" title="29 号透镜：秘密"></a>29 号透镜：秘密</h4><p>改变谁掌握哪些信息，就能彻底改变你的游戏。要使用此透镜，请思考“谁”知道“哪些”，又是“为什么。</p><p>问自己这些问题:</p><ul><li>哪些信息只有游戏本身知道?</li><li>哪些信息所有玩家知道?</li><li>哪些信息只有一些或一个玩家知道?</li><li>改变谁掌握哪些信息，可以改进我的游戏吗?</li></ul><p>游戏过程就是做决定的过程。决定则根据信息做出。决定不同的属性及其状态，以及谁了解它们，是你的游戏机制的核心。对谁知道哪些信息做一些小修改，可以极大地改变一个游戏一一或者强到飞起，或者低到尘埃里。谁知道哪些属性这件事甚至可以在游戏过程中改变——想在你的游戏中创造戏剧性，一大方法就是突然将一条重要的私密信息公开。</p><h3 id="机制-4：行动"><a href="#机制-4：行动" class="headerlink" title="机制 4：行动"></a>机制 4：行动</h3><p>行动是游戏机制的动词。</p><p>有两种方式可以回答“玩家能做什么”：</p><ol><li>基本行动<br>即玩家能做的基本动作，如在西洋跳棋中，玩家仅能执行三个基本操作：</li></ol><ul><li>向前移动棋子</li><li>跳过对手棋子</li><li>往回移动棋子（仅限王）</li></ul><ol start="2"><li>策略行动<br>这些行动只在游戏大局上有意义——它们和玩家怎么使用基本行动来达成目标有关。通常比基本动作要多。考虑西洋跳棋中的可能策略行动：</li></ol><ul><li>把一个棋子移到另一颗后面保护之，以免被吃</li><li>迫使对手跳出不想要的步子</li><li>牺牲一个棋子来欺骗对手</li><li>造一座桥来保护后排棋子</li><li>把一颗棋子移入成王排，令其成王</li></ul><h4 id="自发玩法"><a href="#自发玩法" class="headerlink" title="自发玩法"></a>自发玩法</h4><p>有意义的策略行动与基本行动的比例是衡量一款游戏有多少自发性的标尺。<br>一款优雅的游戏只允许玩家做少量基本行动，却能组合出大量策略行动。</p><p>打造自发玩法，即有趣的策略行动，其过程有点像打理花园——园中生命自发生长，但同时又弱不禁风，容易毁坏。当你注意到自己的游戏中显现了一些有趣的策略行动，一定要能识别出来，然后尽己所能加以培养，为其创造机会蓬勃发展。</p><p>以下的提示可以为游戏准备土壤，好播下自发玩法的种子。</p><ol><li><p>添加更多动词。<br>也就是添加更多基本行动。<br>当基本行动与基本行动之间、基本行动与对象、基本行动与游戏空间互相作用，策略行动就会出现。<br>若添加更多基本行动，这些互动也会更多，相应地，自发玩法就更有机会产生。<br>添加过多基本行动，特别是互相不能很好呼应的，也可能让游戏变得臃肿混乱。<br>策略行动与基本行动的比值，比基本行动的绝对数量更重要。<br>最好添加优秀的基本行动。</p></li><li><p>能与许多对象互动的动词<br>如果一把枪只能射击敌人，游戏十分简单<br>但若是枪还能射开门锁、打破窗户、猎取食物、甚至在墙上留字等，就让游戏世界充满了可能性。<br>一个基本行动射击，辅以更多有效的设计对象，有意义的策略行动也随之增多了。</p></li><li><p>用各种方式达成的目标<br>给玩家许多带有多个对象的动词，让他们在游戏实际中干各种各样的事。<br>如果让玩家射击各种东西，但目标只是“打死 BOSS”，那玩家也只能这样<br>但若是可以射击怪物；也可以打落铁链，令吊灯砸下来；甚至可以完全不射击，用非暴力手段阻止——就有了丰富多变的游戏玩法，事情发展有了各种可能。<br>此方法的挑战之处是，游戏会更难平衡。</p></li><li><p>许多主体<br>如果西洋跳棋只有一颗红子、一颗黑子，规则不变，游戏就会很无聊。正是因为玩家有许多棋子可以移动、互动、合作、牺牲，整个游戏才有趣起来。<br>策略行动的数量大致相当于“主体 x 动词 x 对象”，所以添加主体有可能令策略行动数量随之增加。</p></li><li><p>改变限制条件的额外效果<br>若是每次行动还会产生额外效果，改变你或对手的限制环境，有可能出现很有意思的玩法。<br>西洋跳棋，每次移动棋子，不仅改变自己可以吃到的格子，也同时改变你的对手和自己可以移动到的格子。不论本意如何，每一步都改变着游戏空间的性质。<br>设想允许多个棋子在一个格子里，西洋跳棋会变成一个怎样的游戏呢。<br>强制游戏多方面随着每一个基本行动而改变，就很有可能会突然出现有趣的策略行动。</p></li></ol><h4 id="30-号透镜：自发"><a href="#30-号透镜：自发" class="headerlink" title="30 号透镜：自发"></a>30 号透镜：自发</h4><p>要确保你的游戏有有趣的自发玩法，问自己这些问题:</p><ul><li>我的玩家有多少动词可选?</li><li>每个动词可作用于多少对象?</li><li>玩家要达成目标有多少种方式?</li><li>玩家控制多少主体?</li><li>额外效果如何改变限制条件?</li></ul><p>游戏与书籍、电影相比，最显著的一个区别是动词数量。<br>游戏通常把玩家所能做的行动限制在很窄范围内。<br>故事中，角色能采取的行动数量近乎无限。<br>18 章“间接控制”中会讨论如何填补这个“行动鸿沟”，让你既能将基本行动数目保持在可控范围内，又能给玩家无限可能的感觉。</p><p>游戏相似的一个原因是它们使用一样的行动集。<br>玩家可以进行哪些行动对定义游戏机制颇为关键。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220613004712.png" alt="可支持大量动词的文字冒险游戏的衰落"></p><p>你选择哪些行动，很大程度上定义你游戏的结构。</p><h4 id="31-号透镜：行动"><a href="#31-号透镜：行动" class="headerlink" title="31 号透镜：行动"></a>31 号透镜：行动</h4><p>要使用此透镜，请思考你的玩家能做些什么、不能做什么，分别为什么</p><p>问自己：</p><ul><li>游戏中的基础行动是什么</li><li>策略行动是什么</li><li>想要看到怎样的策略行动？怎样改变游戏，令其可能？</li><li>策略行动与基础行动的比例，满意吗</li><li>玩家在游戏中有什么想做但不能做的行动？能不能设法令其成为可能，无论作为基础行动或策略行动？</li></ul><p>没有行动的游戏就像是没有动词的句子一什么也不会发生。你身为游戏设计师要做的最基础的决定，便是确定你游戏中的行动。对这些行动进行微小改变也会对游戏造成一系列巨大影响，可能会创造出惊人的自发玩法，也可能让游戏变得波澜不惊又烦琐。要小心选择你的行动，学会听从你游戏的声音、玩家的声音，从中了解你的选择能带来什么。</p><h3 id="机制-5：规则"><a href="#机制-5：规则" class="headerlink" title="机制 5：规则"></a>机制 5：规则</h3><p>所谓规则绝对是最基础的机制。<br>规则定义时间、空间、对象、行动、行动结果、行动限制，以及目标。<br>规则令前述所有机制成为可能，并加上了游戏之所以为游戏的一大关键——目标。</p><h4 id="帕莱特的规则分析"><a href="#帕莱特的规则分析" class="headerlink" title="帕莱特的规则分析"></a>帕莱特的规则分析</h4><p>游戏历史学者 David Parlett 在分析游戏过程中各异的规则方面很有建树：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220616010630.png" alt="Parlett 的规则分析"></p><ol><li><p>操作规则<br>即“玩家玩游戏要干什么”。<br>玩家了解操作规则后，就可以玩游戏了。</p></li><li><p>基础规则<br>基础规则是游戏底层架构。<br>操作规则表述：玩家掷一枚六面骰子，获得结果所示数量的力量标记<br>基础规则表述（更抽象）：玩家力量值增加 1~6 之间的随机整数<br>基础规则是一种数学表达，讲述游戏状态及其变化时机、方式。<br>棋盘、骰子、标记、生命计等，都只是记录基础游戏状态的操作方式。<br>基础规则是操作规则的基础<br>实践中，设计师一般只根据必要需求考虑基础规则，很少需要用正式文档将全套基础规则完全抽象地记录</p></li><li><p>行为规则<br>是游戏过程中暗含的规则，大部分人将其视为“体育精神”一部分。如不应该干扰对手。<br>行为规则的存在，强调了游戏是一种玩家之间的社交联系。<br>这些规则也形成操作规则基础<br>Steven Sniderman 有一篇讨论行为规则的好文章 —— Unwritten Rules</p></li><li><p>书面规则<br>是游戏自带的说明书，是玩家必须读来了解操作规则的文档。<br>但只有极少数人会去读。<br>现代电子游戏也逐渐摒弃书面规则，改为互动式新手教学<br>设计师必须思考 —— 玩家如何学会玩我的游戏</p></li><li><p>赛事条例<br>只有严肃、竞争性场合，赌注大到感觉有必要明确记录有两体育精神的规则，或需要明确或修改官方书面规则，赛事条例才会形成。<br>《铁拳 5》（Tekken 5）在 2005 Penny Arcade Expo 上的赛事规则：<br>a. 单淘汰制<br>b. 可自带控制器<br>c. 标准 VS 模式<br>d. 100% 血量<br>e. 随机选关<br>f. 60s 倒计时<br>g. 五局三胜<br>h. 三盘两胜<br>i. 禁止使用 Mokujin</p></li><li><p>官方规则<br>是将书面规则和赛事条例合并的形式。会慢慢成为书面规则。<br>如国际象棋中若是下一步可能将死对方，需要喊出“将军”。这原来只是“赛事条例”，不是书面规则。但如今已经是官方规则的一部分</p></li><li><p>建议性规则<br>也被称为策略规则<br>是让你玩得更好的提示，从游戏机制角度看并非真正规则</p></li><li><p>房规<br>即反馈，玩家们在游戏过程中有可能会想要调整操作规则，增加游戏乐趣<br>一般会玩了几个回合后才制定</p></li></ol><h4 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h4><p>不同的游戏模式可能意味着完全不同的游戏机制，让玩家知道自己处在哪个模式很重要<br>很多时候，都有一种主模式以及几个子模式</p><blockquote><p>玩家永远不该花费太长时间在子游戏内，以致于忘记了在主游戏里做什么。 —— 席德·梅尔</p></blockquote><blockquote><blockquote><p>不知道这里的“子游戏”是否涵盖“支线任务”之类的呢<br>随着游戏体量增大，也会存在部分玩家其实是为了“主游戏”之外的部分而来的情况</p></blockquote></blockquote><h4 id="执法者"><a href="#执法者" class="headerlink" title="执法者"></a>执法者</h4><p>传统游戏中，由玩家自己/裁判来确保规则得以执行<br>电子游戏中，有时必须让电脑来执行规则，这也解放了玩家，他们只需要不断尝试即可，无需反复查看规则</p><p>某种意义上，曾经的“规则”现在成了游戏世界里的物理限制<br>许多游戏规则借由空间、对象、动作的设计来实施</p><p>要把复杂电子游戏的规则做得让玩家可以自然地发现、理解——而不是只能强行记忆</p><blockquote><blockquote><p>所谓“符合直觉”的设计</p></blockquote></blockquote><h4 id="可作弊性"><a href="#可作弊性" class="headerlink" title="可作弊性"></a>可作弊性</h4><p>游戏之所以需要一个执法者是为了防止作弊</p><p>如果玩家开始相信你的游戏是“可作弊的”（即使不是），设计师努力开发的内在价值就会消失<br>如果游戏能作弊，有些人就会试图作弊，大多数人便不再想玩</p><h4 id="最重要的规则"><a href="#最重要的规则" class="headerlink" title="最重要的规则"></a>最重要的规则</h4><p>游戏的一切的基础是一条规则：游戏目标</p><p>游戏就是实现目标，一定要能把游戏目标说得清楚明白</p><p>通常游戏不只有一个目标，而是目标序列——需要将每一项目标依次说明，且阐明关系<br>要是玩家理解不当，就不能继续有把握的行动</p><p>比如国际象棋的目标——吃掉对方国王</p><p>玩家越容易理解目标，就越能想象自己实现目标的样子，越有可能想玩你的游戏</p><p>要让玩家一直有事可做、满怀动力，架构一套清晰目标/任务极为重要。</p><p>优秀游戏目标的特征：</p><ol><li>具体<br>玩家清楚了解并能讲述自己应该达成什么</li><li>可行<br>玩家需要觉得自己有机会达成目标</li><li>回报丰厚<br>请使用 20 号透镜——愉悦来找出奖赏玩家、让玩家为成就而自豪的各种方法。<br>奖励达成目标的玩家固然重要，让玩家在达成目标之前就觉得这目标奖赏丰厚也非常，甚至更加重要<br>但注意不要把期望吊得太高，以免失望</li></ol><p>让游戏中每个目标都具有这些特质颇为重要<br>让游戏中短期、长期的各种目标达到平衡，也很重要。目标的平衡会让玩家感觉自己了解眼下该做什么，并最终能达成一件重大成就。</p><h4 id="32-号透镜：目标"><a href="#32-号透镜：目标" class="headerlink" title="32 号透镜：目标"></a>32 号透镜：目标</h4><p>为确保游戏目标适当且均衡，问自己：</p><ul><li>游戏终极目标是什么</li><li>终极目标对玩家明确吗</li><li>如果有一系列目标，玩家明白吗</li><li>不同目标是否以一种有意义方式互相关联</li><li>目标是否具体、可行、回报丰厚</li><li>短期和长期目标是否平衡</li><li>玩家有无机会决定自己的目标</li></ul><p>同时拿起玩具、好奇、目标透镜，观察游戏这些方面如何互相影响</p><h4 id="规则总结"><a href="#规则总结" class="headerlink" title="规则总结"></a>规则总结</h4><p>规则是一切游戏机制的基础。<br>不是规则定义了游戏。游戏即其规则。</p><h4 id="33-号透镜：规则"><a href="#33-号透镜：规则" class="headerlink" title="33 号透镜：规则"></a>33 号透镜：规则</h4><p>深刻观察游戏，直到能辨别最基础架构，回答：</p><ul><li>游戏中的基本规则是哪些，这些规则和操作规则有何不同</li><li>开发过程中有没有形成“条例”或“房规”，这些是否应该直接纳入游戏中</li><li>游戏中有不同模式吗？这些模式让一切更简单还是更复杂？减少一些模式会让游戏更好玩吗？还是增加模式？</li><li>谁来执行规则</li><li>规则是简单易懂，还是有晦涩之处？如果有晦涩之处需要修订，应该修改规则还是更清楚地解释规则？</li></ul><p>常见误解是以为设计师做下来写一套规则就能做出游戏。一般不是。游戏规则是在实验中逐步完善的。设计师的头脑一般都在“操作规则”领域里工作，偶尔在思考怎样调整、改善游戏的时候，才切换到“基础规则”视角。“书面规则”一般在游戏能玩之后，接近收尾时形成。确保规则覆盖到每一种可能情况，是设计师的工作。一定要在试玩的同时做好记录，因为正是试玩过程会暴露出规则漏洞——如果只是随便修修补补，不认真记录，同样的漏洞会再现。<br>游戏即其规则，不可不在规则上花费足够时间和思量。</p><h3 id="机制-6：技巧"><a href="#机制-6：技巧" class="headerlink" title="机制 6：技巧"></a>机制 6：技巧</h3><blockquote><p>成功的度量有许多种。 —— 西塞罗</p></blockquote><p>每个游戏都需要玩家实践特定技巧。若玩家技巧与游戏难度相符，玩家就会感到挑战，并能保持“心流”状态。</p><p>技巧可以大致分为三类：</p><ol><li><p>身体技巧<br>涉及力量、灵巧、协调性和耐力<br>是大多数体育的重要组成部分<br>有效操控游戏控制器也是一种身体技巧<br>很多游戏（如《舞力全开》）要求玩家拥有的身体技巧就更广泛</p></li><li><p>心智技巧<br>包含记忆、观察、解谜的技巧<br>少有不包含心智技巧的游戏<br>游戏之所以有趣就在于做出有趣决定<br>做决定也是一种心智技巧</p></li><li><p>社交技巧<br>包括阅读对手（猜测其想法）、愚弄对手、配合队友等<br>通常的社交技巧指交朋友、影响他人的能力<br>游戏中，社交和沟通技巧范围更广泛<br>扑克很大程度是一款社交游戏，因为太多内容基于隐藏自己想法、猜测别人想法<br>体育中也有使用技战术来“让对手紧张”的部分</p></li></ol><h4 id="真实技巧与虚拟机能"><a href="#真实技巧与虚拟机能" class="headerlink" title="真实技巧与虚拟机能"></a>真实技巧与虚拟机能</h4><p>讨论作为游戏机制的技巧时，说的是玩家必须拥有的真实技巧<br>玩家在游戏中所获得的技能等算是虚拟机巧——玩家假装拥有的技能</p><p>虚拟技能是让玩家有力量感的绝佳手段<br>但若是使用过度，可能也会落空——许多人批评 MMO 过于强调虚拟机能，对真实技巧重视不足<br>要制作好玩的游戏，关键在于找到真实和虚拟机巧的 完美搭配</p><h4 id="列举技巧"><a href="#列举技巧" class="headerlink" title="列举技巧"></a>列举技巧</h4><p>用一张表列出游戏中所需的全部技巧，可能非常有用。</p><p>你的列表可能很宽泛，可能很具体</p><p>列出技巧可能会很困难，如 RC Pro Am，NES 上的一款赛车游戏</p><ul><li>操作方式<ul><li>方向键（左手大拇指） - 操控车辆</li><li>A（右手大拇指） - 加速</li><li>B（右手大拇指） - 向敌人开火</li></ul></li><li>考察<ul><li>解决问题能力<ul><li>一般游戏中要想按 B 键一般会先松开 A 键</li><li>该游戏中若是松开 A 键敌人就会加速跑掉 —— 所以需要练习如何同时按下 AB 键</li></ul></li><li>其他技巧<ul><li>资源管理 —— 不要用光导弹/地雷</li><li>记忆赛道</li><li>急转弯</li><li>意外危险</li></ul></li></ul></li></ul><p>作为设计师，需要知道玩家需要什么技巧来解决你所设计的问题</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220621005953.png"></p><h4 id="34-号透镜：技巧"><a href="#34-号透镜：技巧" class="headerlink" title="34 号透镜：技巧"></a>34 号透镜：技巧</h4><p>不观察游戏本身，观察游戏要求玩家发挥的技巧。</p><ul><li>游戏需要玩家拥有何种技能</li><li>其中是否缺少某个类别技能</li><li>哪些技能占主导地位</li><li>这些技能是想要创造的体验吗</li><li>是否有一些玩家的这些技能远超其他玩家？是否会让游戏感觉不公平？</li><li>玩家能否通过练习提高技巧，从而感觉掌握了游戏</li><li>游戏需要的技巧水平合适吗</li></ul><p>发挥技巧可以让人很快乐——这是人们喜爱游戏的一大原因<br>当然了，技巧水平和难度需要处于“心流”区间<br>技巧很大程度上定义体验，技巧透镜和 2 号透镜“本质体验”结合使用，效果很好。</p><h3 id="机制-7：概率"><a href="#机制-7：概率" class="headerlink" title="机制 7：概率"></a>机制 7：概率</h3><p>这是七大机制中的最后一个，其中涉及前面所有机制：时间、空间、对象、行动、规则、技巧的相互作用。</p><p>概率意味着不确定性，意味着惊喜。<br>惊喜是人类愉悦的重要来源，乐趣的秘密原料。</p><p>永远不要以为概率理所当然。<br>优秀游戏设计师一定要对概率有敏感直觉、也要牢固掌握概率原理，按照意志塑造概率，令创造出的体验充满挑战性决策和好玩的惊喜。</p><h4 id="概率的发明"><a href="#概率的发明" class="headerlink" title="概率的发明"></a>概率的发明</h4><p>概率的发明是为了解释游戏设计的目的。</p><blockquote><p>他是个好人，可惜不是数学家。 —— 帕斯卡对费马评论安托万·贡博</p></blockquote><p>1654 年，法国贵族 Antoine Gombaud, the Chevalier de Mere 遇到一个问题</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220621140357.png"></p><h4 id="游戏设计师必知的十大概率原则"><a href="#游戏设计师必知的十大概率原则" class="headerlink" title="游戏设计师必知的十大概率原则"></a>游戏设计师必知的十大概率原则</h4><ol><li><p>分数=小数=百分数</p></li><li><p>从零到一就好了<br>即概率范围为 [0,1]</p></li><li><p>$概率 = \frac{想要的结果会出现的次数}{可能的结果的总次数}$</p></li><li><p>枚举<br>若是面对“丢一枚硬币三次，至少出现两次头的概率”这种问题，可以采取枚举的办法将所有可能列出（H 表示头，T 表示另一面），易知共有 $2^3 = 8$ 种可能情况：</p></li></ol><ol><li>HHH</li><li>THH</li><li>HTH</li><li>HHT</li><li>THT</li><li>HTT</li><li>TTH</li><li>TTT<br>所以针对出现两次头这一问题，其出现为 1234，即四种，所以概率为 4/8<br>枚举法只适用于可能性较少的问题</li></ol><ol start="5"><li>特定情况下“或”意为“加”<br>很多时候要确定“A 或 B 的概率”，如“从一幅牌中抽出人头或者 A 的概率”，此时只需要将“抽出人头的概率”和“抽出 A 的概率”相加就可。</li></ol><blockquote><blockquote><p>互斥事件，二者互不影响，不会同时发生</p></blockquote></blockquote><p>所以此时的概率为 $\frac{12}{52} + \frac{4}{52} = \frac{16}{52}$</p><p>但对于另一种问题，就不能直接加和。如“从一幅牌中抽出一个 A 或是一个方片的概率”，二者并不是互斥事件（有可能抽出的是方片 A），所以概率不能直接加和。</p><p>此时的概率的其中一种算法是 $抽出 A 的概率 + 抽出方片的概率 - 抽出方片 A 的概率 = \frac{4}{52} + \frac{13}{52} - \frac{1}{52} = \frac{16}{52}$</p><ol start="6"><li>特定情况下“和”意为“乘”</li></ol><p>该规则和前一条几乎正相反！如果要找出两事件同时发生概率，可以将概率相乘，但只有这两个事件不是互斥的才行！<br>如果想掷两次骰子，想得出两次都为 6 的概率，则为 $\frac{1}{6} * \frac{1}{6} = \frac{1}{36}$<br>对于上面提到过的，抽到方片 A 的概率，虽然自然能想到是 $\frac{1}{52}$ ，也可以用该规则检查一下 $抽到方片 A 的概率 = 抽到方片的概率 * 抽到 A 的概率 = \frac{13}{52} * \frac{4}{52} = \frac{1}{52}$ 也是一样的</p><p>此时思考游戏一</p><ul><li>游戏 1：掷一粒骰子四次，有一次为 6 则获胜<br>此时要算获胜概率，可以用这样的方法：<br>$$ 获胜概率 = 1 - 四次都不是六的概率 = 1 - \frac{5}{6} \times \frac{5}{6} * \frac{5}{6} * \frac{5}{6} = \frac{671}{1296} = 51.77% $$<blockquote><blockquote><p>哦 这是规则 7 要引入的方法哈哈，那规则六就截图一下好了</p></blockquote></blockquote></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625004524.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625004541.png"></p><ol start="7"><li>1 - “是” = “不是”</li></ol><p>思考第二个游戏，每次投两个骰子，一共  24 次，只要其中一次点数为 12 则获胜，则获胜概率为</p><p>$$获胜概率 = 1 - 24 次非 12 的概率 = 1 - (单次非 12 的概率)^{24} = 1 - (1-单次 12 的概率)^{24}$$<br>$$ = 1 - (\frac{1}{6}*\frac{1}{6})^{24} = 1 - (\frac{35}{36})^{24} = 49.14%$$<br>8. 多个线性随机选择的总和不是线性随机选择！</p><p>一个“线性随机选择”是一个随机事件，其中所有结果发生概率相同<br>掷一次骰子就是线性随机选择的例子<br>可若把多次投骰子的结果相加，所有可能结果发射的概率就不相等，如，投两个骰子，很大概率投出 7，很小概率得到 12：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625005650.png"><br>同时也可以画出其概率分布图：<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625005713.png"></p><p>新手游戏设计师常误将两个随机选择的数字相加，却对其后果浑然不觉。<br>设计师若想在游戏中运用概率机制作为工具，必须清楚想要怎样的概率曲线，还要知道怎么得出。概率分布曲线会成为工具箱中很有价值的工具。</p><ol start="9"><li>掷骰子<br>以上的所有概率都是理论概率，即数学上看什么理应发生。<br>还有一种实际概率，用于衡量什么已经发生。<br>如投骰子得到一个 6 的理论概率为 $\frac{1}{6}$ ，可以通过投一个 6 面骰子100 次，记录得到 6 的次数，找出实际概率。实验次数越多，实际概率就越接近理论概率。这就是“蒙特卡洛方法”，以那座著名赌场命名。<br>蒙特卡洛方法的优点：简单，不涉及任何复杂数学，只需要重复测试。</li></ol><p>计算机时代，计算机可以在短时间内进行大量模拟。可以运用 Joris Dormans 创造的 Machinations 系统，该系统专门设计来为游戏玩法系统建模，并通过反复模拟来展示结果规律。</p><ol start="10"><li>极客爱炫耀（贡博定律）<br>这可能是一切概率准则中最重要的一条。忘了别的也不能忘了这条。<br>碰到难搞定的概率问题，最简单的做法是找到自认是“数学神童”的人。<br>一般而言，这些人发现真有人需要他们的专业技能，都会很激动，并且使出浑身解数来帮你。</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625010607.png"></p><blockquote><blockquote><p>可真是让人哭笑不得 ￣▽￣”</p></blockquote></blockquote><h4 id="期望值"><a href="#期望值" class="headerlink" title="期望值"></a>期望值</h4><p>游戏中，一次数据处理的期望值等于所有可能结果的平均值。</p><p>如，一个桌面游戏规定，当一个玩家走上绿色方块，可以投六面骰子，得到结果所示的能量点数。该事件的期望值是所有可能结果的均值。要得到该案例中的均值，因为所有结果概率相等，将所有结果相加然后除以六就能得到 $(1+2+3+4+5+6)/6 = 3.5$ ，即 “每次有人走到绿色方块，平均能得到 3.5 点能量”，这一消息对于设计师而言很有用。</p><p>对于更复杂的情况，计算期望，需要把概率乘以各自的值，再相加。<br>如对于一个游戏，一个玩家投两个骰子，若是 7 或 11，则得 5 美元，其他结果输 1 美元，其期望为：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011506.png" alt="7 和 11 会赢"><br>若只有 7 会赢<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011800.png" alt="只有 7 会赢"><br>若只有 11 会赢<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011809.png" alt="只有 11 会赢"></p><h4 id="仔细考虑数值"><a href="#仔细考虑数值" class="headerlink" title="仔细考虑数值"></a>仔细考虑数值</h4><p>考虑一下三种攻击：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011950.png"></p><p>三者期望各是多少呢？<br>疾风：$4 * 1 = 4$<br>火球：$5 * 0.8 + 0 <em>0.2 = 4$<br>闪电：$40 * 0.2 + 0 * 0.8 = 20$<br>也许你会得出结论，玩家面对敌人肯定会使出攻击期望最高的闪电。<br>对于生命高达 500 的敌人，可能如此。但若是敌人只有 15 点生命，可能玩家就不会再选择使用闪电 —— 此种情况下，闪电造成伤害的期望为 $15</em>0.2+0*0.8=3$ ，低于另外二者</p><p>一定要随时注意衡量游戏中所有行动的真实价值。<br>如果什么东西给玩家的好处不能使用，或包含隐藏惩罚，计算中一定要考虑到</p><h4 id="人为因素"><a href="#人为因素" class="headerlink" title="人为因素"></a>人为因素</h4><p>期望值不能完全预测人的行为，因为人们会根据“感知期望”而不是实际期望来做决策。<br>比如他们用了几次闪电之后发现都 miss 了，可能就会得出“闪电根本打不中”，所以伤害期望为 0 的“感知期望”。</p><p>有时就算给出完美信息，玩家仍然不会选择期望值最高的选项。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625012632.png"></p><p>原因在于，期望没有考虑重要的人为因素：后悔。人们会趋利避害。</p><blockquote><p>当讨论到获利时的冒险，大家都保守。他们愿意确保获利，胜过可能获利。但我们也发现，人们面对选择，是小额必然损失还是大额可能损失时，他们会赌。</p></blockquote><p>这也是《智龙迷城》（Puzzle &amp; Dragons）成功的一大缘由：玩家在死亡后愿意付出现实里的小额金钱来复活，避免小额必然损失。</p><p>大脑对很多事情的概率估计是不准确的：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625013125.png"></p><p>作为设计师，不光要考虑实际概率，也要考虑感知概率。</p><h4 id="35-号透镜：期望值"><a href="#35-号透镜：期望值" class="headerlink" title="35 号透镜：期望值"></a>35 号透镜：期望值</h4><p>思考游戏内发生的各种不同事件，以及它们对玩家的意义</p><ul><li>某件事发生的实际概率？</li><li>其感知概率？</li><li>这件事的结果的价值？价值能否被量化？有没有没考虑到的无形价值？</li><li>把所有可能结果相加，玩家所有行为都有不同期望。对这些值满意吗？是否给玩家有趣的选择？会不会奖赏太多？或惩罚太多？</li></ul><p>期望值是分析游戏平衡的有力工具。难点是某些可能性的量化，如“拥有了传送门道具”，但还是可以猜。<br>调整参数就是调整对结果数值的估计。<br>量化这些偏无形的元素可能很有启发，因为这能让你接地气地思考对玩家有价值的东西是什么，以及为什么。<br>这些接地气的知识，能让你控制游戏平衡性。</p><h4 id="纠结的技巧和概率"><a href="#纠结的技巧和概率" class="headerlink" title="纠结的技巧和概率"></a>纠结的技巧和概率</h4><ol><li><p>估算概率是一种技巧<br>有无估算技巧的玩家，在游戏中感知到的概率或许差距甚大<br>如会算牌的和不会算牌的</p></li><li><p>技巧都有成功概率<br>游戏行为因为引入了人这一不确定因素，所以不完全由概率决定。设计游戏时要确保风险平衡</p></li><li><p>估计对手的技巧也是种技巧<br>预判对方行动<br>或者扮猪吃老虎<br>都是策略</p></li><li><p>预测纯概率是一种想象中的技巧<br>我们对规律的狂热往往促使我们寻找本不存在的规律<br>如“热手谬误”（已经连赢好几次了，下次也可能赢）<br>“赌徒谬误”（已经连输好几次了，下次一定会赢）<br>作为设计师，要想办法利用玩家的想象</p></li><li><p>控制纯概率是一种想象中的技巧<br>大脑不仅积极寻求规律，还拼命寻求因果<br>纯概率情况下，根本无法控制因果——但这并不能阻止大家用某种特定手法投骰子、佩戴护身符、或进行某种迷信仪式。虽然这些对于纯概率游戏毫无影响，但其实这些行为也是游戏乐趣的重要来源。</p></li></ol><blockquote><blockquote><p>想到了鸽子的迷信仪式实验 233</p></blockquote></blockquote><h4 id="36-号透镜：概率"><a href="#36-号透镜：概率" class="headerlink" title="36 号透镜：概率"></a>36 号透镜：概率</h4><p>专注于游戏中包含随机和风险的部分，时刻记住两者有不同之处<br>问自己</p><ul><li>游戏中真正随机的内容是什么？哪些部分只是感觉起来随机</li><li>随机性给玩家的，是刺激和挑战等积极情感，还是绝望和缺乏控制等消极情感</li><li>改变概率分布曲线能改进游戏吗</li><li>玩家能在游戏中冒各种有趣风险吗</li><li>游戏中，概率与技巧有何关系？有没有办法让随机元素感觉像是在发挥技巧？有没有办法让发挥技巧感觉像是在冒风险？</li></ul><p>风险和随机性就像香料。完全不加的游戏可能淡而无味，加多了又会遮盖游戏原本味道。要运用得恰到好处。<br>要运用，需要深入观察游戏，看看风险和随机性在何处自然浮现，然后决定如何驯服之，令其为你服务。<br>不要陷入思维陷阱，以为投骰子或者生成随机数才会产生概率相关元素。正相反，在玩家遭遇未知的每个时刻，你都能找到它们。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第十二章-有些元素是游戏机制-1"><a href="#第十二章-有些元素是游戏机制-1" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h3><ul><li><p> 《游戏机制:高级游戏设计技术》 （Game Mechanics: Advanced Game Design）Ernest Adams和Joris Dormans合著。本书包含大量精彩翔实的细节,讲解多种游戏机制如何互相影响。并介绍了如何使用优秀的Machinations系统模拟你的游戏设计。</p></li><li><p>《The Oxford Book of Board Games》 , David Parlett著。本书包含更多有关Parlett规则分析的细节,同时介绍了一些前几个世纪优秀但不为人知的桌面游戏。</p></li><li><p> 《Uncertainty in Games》 , Greg Costikyan著。此书深刻洞见了游戏中概率与不确定性的本质,令人叹为观止。我每次阅读都有新的所得。</p></li></ul><p> - 《The Unfinished Game: Pascal, Fermat, and the Unfinished Letter that Made the World Modern》 , Keith Devlin著。如果想要更细致地了解概率论发明的故事,读此书就够了。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十一章 玩家的动机驱使着玩家的脑</title>
      <link href="2022/06/05/20220605-theartofgamedesign-chap11/"/>
      <url>2022/06/05/20220605-theartofgamedesign-chap11/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十一章-玩家的动机驱使着玩家的脑"><a href="#第十一章-玩家的动机驱使着玩家的脑" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h2><p>先来面对一个残酷现实：<br>游戏根本不重要。</p><p>一切娱乐活动其实都是这样。</p><p>人类行事、决策总有动机，了解动机，可以帮助设计师们进行更有针对性地设计。</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608231724.png" alt="马斯洛需求金字塔"></p><p>若是低层次需求没有满足，人就不会去追求高层次需求。</p><p>许多游戏活动追求成就，要求练习以至精巧熟练，处于第四层，自尊。<br>但也有些满足低层次需求的游戏。</p><p>多人游戏吸引人的原因是——所满足需求比单人游戏更基础。</p><p>可以说《我的世界》（Minecraft）之所以成功，是其内容覆盖了金字塔的全部层次。这个游戏用幻想的环境覆盖最低两层（收集资源，建造安全居所），然后以成就和技巧主导的多人游戏覆盖上三层。</p><p>游戏若能让你感到与他人连接，也能带来成就感，使你得以创造事物来表达自己，满足上三层需求。从这个角度看，有在线社区工具来自行创造内容的游戏能长盛不衰，有其道理。</p><blockquote><blockquote><p>这也便是我之前读《乌合之众》后所想，即未来游戏对于“自己实现”的满足：<a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></p></blockquote></blockquote><h3 id="更多需求"><a href="#更多需求" class="headerlink" title="更多需求"></a>更多需求</h3><p>马斯洛之后，也有研究者提出关于需求的新观点。</p><p>Edward Deci 和 Richard Ryan 的研究与游戏尤其相关，二人对所谓“自我决定论”的发展有重大贡献。他们说，人类不仅有生理需求，也有心理需求——不仅是“想要”、“很想要”，而是真实的需求。而且他们精确提出了三大精神需求：</p><ol><li>胜任：我需要觉得自己擅长做些什么</li><li>自主：我需要按自己的方式做事的自由</li><li>关联：我需要和其他人建立联系</li></ol><p>游戏倾向于充分满足这三项需求。<br>游戏设计得可以让你感觉精通、可以驾驭<br>游戏让你自由发挥喜欢的玩法，你甚至可以随时退出<br>大部分游戏被设计为与他人一起玩，帮助你形成社会连接</p><h4 id="22-号透镜：需求"><a href="#22-号透镜：需求" class="headerlink" title="22 号透镜：需求"></a>22 号透镜：需求</h4><p>要使用此透镜，先不要考虑你的游戏本身，改为考虑它满足人类的哪些基础需求。<br>问自己这些问题:</p><ul><li>我的游戏主要运作在马斯洛层次的哪一层？</li><li>我的游戏是否满足“胜任、自主、关联”的需求？</li><li>我怎样让游戏在现有水平上，满足更多基础需求?</li><li>游戏已经满足的需求，怎样令其满足得更好？</li></ul><p>说游戏能满足人类的基础需求，虽有点奇怪，但人类的一切行为，都是在以某种方式满足这些需求。记住，有些游戏比其他游戏更能满足需求——所以你的游戏不能仅仅对需求做出承诺，而要切实满足。玩家本来以为玩你的游戏能够让自己感觉良好，或者和朋友交往更密，结果你的游戏没能满足需求，玩家就会改玩其他能满足的游戏了。</p><h3 id="内在动机、外在动机"><a href="#内在动机、外在动机" class="headerlink" title="内在动机、外在动机"></a>内在动机、外在动机</h3><p>另一种考量动机的方式，是观察其来源。</p><p>内在动机：自己想做，不在乎实质性奖励<br>外在动机：有外界原因（如物质奖励）导致自己去做</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608232936.png" alt="内在与外在动机"></p><p>内在与外在并非二元对立，存有过渡。动机来自“真实自我”越多，就越偏向内在。</p><p>游戏设计师需要清楚自己游戏中的各种动机的构成方式。外在动机会成为内在动机的 debuff。</p><blockquote><blockquote><p>可看 <a href="https://medill-east.github.io/2022/06/02/20220601-gcores-playbeyondthegame/">机核 游戏理论系列播客笔记</a> 里，“为什么玩游戏”部分里面有关内在动机和外在动机的实验例子。</p></blockquote></blockquote><h3 id="想做和得做"><a href="#想做和得做" class="headerlink" title="想做和得做"></a>想做和得做</h3><p>追求愉悦和规避痛苦，属于脑中两个不同的系统。而这不是从痛苦到愉悦的连续取件，而是两套不同的动机回路。人们经常把追求愉悦和规避痛苦都归类到“动机”里，不加思考。但一旦将二者分开考虑，能发现有趣的事情。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608233542.png"></p><p>很多游戏动机是追求愉悦，但不尽然。<br>还有很多游戏核心是规避痛苦。<br>躲避敌人，坚持不死，就处于痛苦回避模式。挖出星星，打出连招，则处于愉悦追求模式。两者都是有效动机，结合起来的效果也很好。</p><p>但这种结合有时会失衡。如一些 free to play 游戏，前期很爽快，在追求愉悦，但后来就会告诉你如果不连续上线就拿不到奖励，就变成了规避痛苦。</p><blockquote><blockquote><p>也想到了损失厌恶效应：面对等量收益和损失，用户对于损失十分厌恶。即用户倾向于避免损失，同量损失带来的负效用为同量收益的正效用的 2.5~3 倍。<br>比如来了给你 100，不来就扣你 100。人们会觉得来了得到的 100 其实还行，但被扣掉的 100 让人不能忍受。这反过来可能会被设计师利用来加强上线率哈哈。</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608233744.png" alt="人类动机的分类"></p><h4 id="23-号透镜：动机"><a href="#23-号透镜：动机" class="headerlink" title="23 号透镜：动机"></a>23 号透镜：动机</h4><p>每个游戏都是由动机组成的复杂生态系统。要细致地加以研究，请问自己这些问题:</p><ul><li>玩家因何种动机来玩我的游戏？</li><li>其中哪些动机是最内在的？哪些是最外在的？</li><li>哪些是追求愉悦的？哪些是规避痛苦的？</li><li>哪些动机互相支撑？</li><li>哪些动机互相抵触？</li></ul><h3 id="创新"><a href="#创新" class="headerlink" title="创新"></a>创新</h3><blockquote><p>毫无疑问，这世上最流行的东西就是新奇。 —— 马克·吐温</p></blockquote><p>渴求新奇是玩家持续进行游戏的一大动力——玩家相信，下一关会有新东西出现，才刺激他打通这一关。</p><p>创新中的最强的方式，是带来全新的思考方式。如《传送门》（Portal）的广告宣传就是“现在，你用传送门来思考（now, you’re thinking with portals）”。这个游戏的机制让你用全新方式思考世界。新思路可以扩展我们的大脑，让我们感觉无比畅快</p><p>但是要记得，世界上还有件事叫过犹不及。每个成功游戏都是新鲜与熟悉的混合体。许多优秀游戏因为超前于时代而失败。创新可以赢得口碑，推动早期销量，但如果没有坚实游戏本体，玩家们会来得快，去得快。</p><h4 id="24-号透镜：创新"><a href="#24-号透镜：创新" class="headerlink" title="24 号透镜：创新"></a>24 号透镜：创新</h4><blockquote><p>不同的未必总是好，更好的总是不同。 ——  斯科蒂·梅尔策(Scotty Meltzer)</p></blockquote><p>为了驾驭追求新奇的强大动机，请问自己这些问题:</p><ul><li>我的游戏有何新奇之处?</li><li>新奇之处是贯穿我的游戏，还是仅限于开头?</li><li>新奇和熟悉的混合感觉对吗?</li><li>新奇感褪去后，玩家还喜欢玩我的游戏吗?</li></ul><h3 id="评断"><a href="#评断" class="headerlink" title="评断"></a>评断</h3><p>马斯洛需求第四层，尊重，与游戏相连最紧密。为什么？所有人内心深处都有一个共同需求，就是需要他人评断（译者注：英文有俗语“don’t judge”，典出圣经，不要评断人，免得被评断。此处“评断”尤指擅自批评、干涉，因此作者有此语）。听起来好像不对劲，大家不是不喜欢被评断吗？确实——大家只是讨厌受到不公评断。内心深处，我们需要知道自己到底几斤几两。当评断让我们不开心，就会加倍努力，直到获得想要评断为止。游戏最吸引人的一点，就是可以系统且出色地给人客观评价。</p><h4 id="25号透镜：评断"><a href="#25号透镜：评断" class="headerlink" title="25号透镜：评断"></a>25号透镜：评断</h4><p>要了解你的游戏是否能评断好玩家，问自己这些问题:</p><ul><li>针对玩家，你的游戏都评价些什么?</li><li>游戏怎样传达这种评断?</li><li>玩家觉得评断结果公平吗?</li><li>他们在意评断结果吗?</li><li>评断结果是否让他们想要加强能力?</li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第十一章-玩家的动机驱使着玩家的脑-1"><a href="#第十一章-玩家的动机驱使着玩家的脑-1" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h3><ul><li><p> 《黏上游戏(Glued to Games) 》 , Scott Rigby和Richard M. Ryan著。这本书深刻介绍了自我决定理论,以及游戏之所以为游戏的原因。</p></li><li><p>《奖赏的惩罚(Punished by Rewards) 》 Alfie Kohn著。这本书很好地概括了对外在奖励之负面影响的许多研究成果。</p></li><li><p>《理解动机与情感(Understanding Motivation and Emotion) 》Johnmarshall Reeve著。如果你不满足于粗浅的理解,预备进一步钻研动机与情感的作用机制,这本大学教材可以充分介绍对这个主题的心理学研究。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220604 - Thinking after the reading of 《The Crowd - A Study of the Popular Mind》</title>
      <link href="2022/06/04/20220604-after-reading-the-crowd/"/>
      <url>2022/06/04/20220604-after-reading-the-crowd/</url>
      
        <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>看完《乌合之众》后，和老友的讨论引出了这寥寥千字。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="问题的引入"><a href="#问题的引入" class="headerlink" title="问题的引入"></a>问题的引入</h3><blockquote><p>著名思想家戈布莱·达尔维拉先生说，他不属于任何当代学派，那些学派的各种结论都有各种各样的谬误，与他得出的结论完全不同。如果自己属于某个学派，必然会受其观点和信念的影响，带着先入为主的意见和偏见看待各种事物的特征。<br>—— 古斯塔夫·勒庞</p></blockquote><p>即使到了现在，我仍旧不确定我将围绕什么来展开。</p><p>看完《乌合之众》之后，其实并没有太强烈的感受。这是我第二次看完，比起第一次，多了的应该说是中间观看过程中的联想。</p><p>因为想到了群体力量，所以去重看了《浪潮》；因为想到了群体无意识，所以去看了《漫画荣格》；又因为毕设中正好涉及到他人在场如何影响个体的社会促进效应，所以连带着看了一部分《社会认同过程》。目的都是为了能更好地找到合适角度来切入。</p><p>作为策划，当然应该试着以设计师的身份来解读其意义，即如何将人的社会性与游戏结合在一起，与老友的讨论最终导向了这么一个问题——群体语境下无归属玩家的个人叙事是否可能？</p><h3 id="概念定义"><a href="#概念定义" class="headerlink" title="概念定义"></a>概念定义</h3><p>首先对问题中所涉及的概念进行一下定义。</p><p>“群体”在这里指的是由社会范畴（social categories）所构建的人群划分。划分标准通常包括：民族、国家、种族、阶级、职业、性别、宗教等。游戏中的社会范畴可能包括：种族、队伍、门派、阵营等。</p><p>“无归属”这里指的是一种对其所属群体没有认同的心理状态，并非其真的没有群体归属。举个不那么恰当的例子，在游戏中，我虽然实际意义上属于某个阵营（即范畴所构建的群体），但我在心理上并没有对于该阵营的归属感或身份认同，却没有办法离开（可能因为阵营的设定是强制的）的情况。</p><p>“个人”在这里指的是由各种社会范畴所交叉界定的，归属于某些特定范畴的个体。游戏语境下自然就是一个个玩家。</p><p>“个人叙事”在这里指代的是荣格所提的“自己实现”的概念，即从集体无意识支配中的分化（也被称为个性化）过程。</p><blockquote><p>自我是意识中心，自己是心理中心（包含意识与无意识）。<br>按《漫画荣格：内心深处结构的解析》中所提，自己实现所指的是碰到问题，自我看到阴影，借此机会看到部分自己，而后摆脱这部分自己的过程，或者用其话语，即将这部分原本属于集体无意识中支配的部分分化的过程。</p></blockquote><h3 id="问题细化"><a href="#问题细化" class="headerlink" title="问题细化"></a>问题细化</h3><p>结合上面的概念定义，对于问题的更具体描述就是，在游戏情境下，被游戏内的范畴所界定的玩家，在对自己所属的群体没有身份认同的情况下，是否有自己实现的可能。</p><p>需要明确的是，对于这个问题的讨论，会基于两个大的不同语境：一个是着眼当下的游戏语境，另一个是放眼未来的游戏语境。</p><blockquote><p>未来的游戏语境：假设届时游戏与现实息息相关，某种程度上是另一个现实（another reality）。</p></blockquote><p>首先需要回答几个问题：</p><h4 id="身份认同相关"><a href="#身份认同相关" class="headerlink" title="身份认同相关"></a>身份认同相关</h4><ul><li>身份认同意味着什么？</li></ul><p>基于社会认同路径的观点：归属于某个群体（无论规模和分布如何）在很大程度上是一种心理状态（psychological state），这样的状态与个体茕茕孑立时的心理状态截然不同。</p><p>归属于一个群体就会获得一种社会认同 social identity，或者说一种共享的/集体的表征 representation，它关乎“你是谁”，“你应该怎样行事才是恰当的”。<br>与社会认同相关联的心理过程会形成明显的“群体”行为，如群体内部的团结，对群体规范的遵从，以及对外群的歧视。</p><ul><li>玩家身份认同对于游戏设计而言意味着什么？换言之，为什么需要关注玩家身份认同？</li></ul><p>如前所言，玩家若对自己的玩家角色具有身份认同，可以帮助他们回答“是谁”，“该如何行事”等问题，甚至会表现出群际行为（简言之为对内群的友好，对外群的敌视）。</p><p>自决理论（self-determination theory）将人类动机（放在游戏场景下即玩家动机）分为内在动机（如口头鼓励）和外在动机（如物质奖励）。研究表明，内在动机对最终决策的持续力和贡献力度上要胜于外在动机。放在游戏场景下，长远来看，玩家能够不断游玩/持续付费的底层原因是有足够的内在动机（可以想象，玩家身份认同是内在动机中的重要环节）。</p><p>设计师可以反过来利用玩家对于角色的身份认同，来驱动玩家以特定方式行事。<br>如驱使具有“正义”身份认同的玩家做出与自身身份认同相符的行为、促成不同阵营间的对立以及鼓励玩家继续游玩。</p><ul><li>玩家为什么对自己所属的群体没有身份认同？</li></ul><p>首先放到当下游戏语境，没有身份认同的其中一种表现形式（这个例子可能并不够恰当，但确实没办法想到更合适的例子）为：假设游戏中有两种阵营 A 和 B，玩家必须选择阵营之一，但其实玩家既不想选择阵营 A，也不想选择阵营 B，最终只能选择其中之一。这种情况下，可以说玩家对自己所属的群体并没有身份认同。</p><p>若是放到未来游戏语境，假设届时的游戏即为另一个现实，那么可以将那时玩家在游戏中对自己所属群体没有身份认同这一情况约等于现在的玩家在现实中对自己所属群体没有身份认同这一情况。<br>以当下现实生活没有身份认同举例，部分身在美国的华裔，其社会范畴由“美国人”和“中国人”共同界定，但其中一部分人群对两种身份都没有归属感，都没有身份认同。<br>而放眼未来的游戏语境，则可以假设存在部分玩家对其所属的范畴没有身份认同，且由于一些原因没有办法摆脱这些所属范畴。</p><ul><li>玩家没有身份认同意味着什么？</li></ul><p>放在当下游戏语境而言，玩家没有身份认同在某种层面上意味着玩家目标的丧失。反过来可以说是设计师对于玩家目标设计的失误。<br>对于单机游戏，可能的表现为玩家通关率（或是完成率）未能达到设计预期；对于网络游戏，可能的表现为玩家留存率的降低或是付费意愿的降低。</p><p>未来游戏语境中玩家身份认同的丧失一定程度上对应当下现实语境中对现实身份认同的缺失。最终导向的可能是虚无主义。</p><h4 id="自己实现相关"><a href="#自己实现相关" class="headerlink" title="自己实现相关"></a>自己实现相关</h4><ul><li>什么是自己实现</li></ul><p>如前所述，自己实现是自我（意识中心）在碰到问题时看到了阴影，因此看到了部分自己（意识+潜意识的中心），并借此机会摆脱这部分自己的过程。虽然书中所写的是“将这部分原本属于集体无意识中支配的部分分化的过程”，但我个人的理解是将这部分自己内化的过程，即将这部分原本属于集体无意识的部分纳入个人意识范畴的过程。</p><blockquote><p>阴影是隐藏在可以意识到的自己内在的人格的阴暗部分，也可以说是存在于我们的无意识中的未成熟的“另一个自己”。人在梦境中，有时会梦见强盗、小偷、敌人、恶魔等，有时也梦见自己身边的交往不愉快的人。如果自己感到很不顺心，或者感觉自己周围有不能愉快交往的同性，那很可能就是你自己的阴影造成的。</p><p>阴影不一定都是坏事，也蕴藏着创造性和未知的可能性。尽管人们在某种意义上难以解决自己的阴影，但是，在认识到自己阴影的同时就会有很大收获。如果再把阴影融合到意识当中，也许就会发现以前否定的东西中包含着其它的意义，可能还会弥补自己的不足，因此，认识到阴影，将对人格的发展起到非常重要的作用。</p><p>——《漫画荣格：内心深处结构的解析》</p></blockquote><ul><li>为什么要达成游戏中的自己实现？</li></ul><p>在当下的游戏语境下，游戏中的自己实现其实不是一个必须的东西，因为绝大部分游戏都难以做到这点。但一旦能做到，达成自己实现的这部分玩家会在很长一段时间内成为游戏的核心用户，甚至会对游戏厂商达成群体身份认同，即产生“我可是 xx 家的游戏玩家！”的自豪感，从而成为黏性极高的用户。</p><p>而放在未来，私以为这会成为届时的核心竞争力。即是否能给予玩家充分的障碍呈现方式（以增大发现阴影的几率），以及是否能给予玩家充分的交互自由度（即增大玩家发现阴影后，摆脱/内化它的可能性）。</p><ul><li>为什么游戏中的自己实现很难？</li></ul><p>放在当下的游戏语境中，在游戏中的自己实现的可能性受限于有限的游戏呈现方式和有限的玩家选择路径。简言之，就是受制于技术。<br>有限的游戏呈现方式，即玩家所能碰到的有限障碍，这降低了玩家发现阴影（属于自己的被群体无意识支配的部分）的可能性。<br>而有限的玩家选择路径，即玩家所能进行的有限交互方式，减少了玩家发现阴影后，摆脱（或者按我的理解，内化）阴影阴影的可能性。</p><p>放在未来的游戏语境中，技术不再成为限制自己实现的原因。这里假设，到那时，玩家的自己实现可能性会由于独立在场条件的难以达成而降低。</p><blockquote><p>这里的“独立在场”即无他人在场。<br>无他人在场中的“在场”，涵盖现实世界和虚拟世界。<br>而这里的“他人”，包括现实世界中的真人（在未来很可能涵盖现实世界中的 AI）、虚拟世界中由玩家操控的角色和虚拟世界中由 AI 操控的角色。<br>涵盖虚拟人（即 AI 操控的角色）的原因是，社会促进/抑制理论中已有部分研究表明人们对于 AI 的在场表现出了和人类在场同样的行为。<br>可以说，要满足成为“独立的”玩家的条件是苛刻的。并且在未来，随着 AI 在日常生活和游戏中的普及，这也许不再可能。</p></blockquote><p>为什么未来游戏语境中，玩家的自己实现可能性会因为独立在场条件的难以达成而降低呢？</p><p>根据社会促进/抑制理论（social facilitation/inhibition theory），非独立在场条件下，人们的行为会与独立在场条件下有区别，这种区别可能导致自己实现的可能性降低。</p><p>一旦有他人在场，范畴自然出现，即至少会划分为两个范畴（范畴都是依存存在的，可以说不存在单个范畴独立存在的情况）。而无论是《乌合之众》还是《社会认同过程》中已经向我们揭示了，群际关系中群际冲突存在的普遍性以及个体在群群体行为中所表现出的盲目性。在这样的情况下，个体能够发现并摆脱（用我的话说即内化）阴影的可能性会降低。</p><ul><li>为什么需要探讨没有群体身份认同的玩家的自己实现可能性？（为什么没有身份认同的玩家更难自己实现）</li></ul><p>前面已经提到，当下游戏语境下的游戏自己实现大多受制于技术，所以这个问题更多关注未来游戏语境。假设那时的游戏及游戏玩家满足以下条件：</p><ol><li>游戏技术不再受限。<br> 游戏能够为所有玩家提供均等的发现阴影可能性（具有足够内容丰富度）；<br> 且为所有玩家提供均等的摆脱/内化阴影可能性（具有足够交互自由度）。</li><li>所有玩家可能都无法满足独立在场条件。</li></ol><p>首先需要回答的问题是，同样是自己实现，为什么不探讨有群体身份认同的玩家的自己实现可能性呢？</p><p>因为有身份认同情况下，其群体无意识和阴影很可能具有更大可能的共通性，身处认同群体中的玩家很可能受到群体中的其他人的自己实现过程的启发来帮助自身发现阴影（但因为身处具有身份认同的群体之中的行为盲目性，摆脱/内化阴影的难度与没有群体身份认同的玩家相比可能更高）。</p><p>而在没有身份认同的情况下，玩家无法参考具有相同身份认同的其他人的自己实现过程，只能全凭个人摸索。这种情况下，没有身份认同的玩家发现阴影的可能性会降低，但最终摆脱/内化阴影的可能性相较具有群体身份认同的玩家可能更大。</p><h3 id="解决方案的探讨"><a href="#解决方案的探讨" class="headerlink" title="解决方案的探讨"></a>解决方案的探讨</h3><h4 id="当下游戏语境对问题的不完美答卷"><a href="#当下游戏语境对问题的不完美答卷" class="headerlink" title="当下游戏语境对问题的不完美答卷"></a>当下游戏语境对问题的不完美答卷</h4><p>如前所提，在当下的游戏语境中，“群体语境下无归属玩家的个人叙事是否可能”本身还没有成为一个问题，因为技术水平以及设计水平的限制，几乎没有游戏能够做到为大部分玩家提供足够丰富的游戏内容（以增加玩家们发现阴影的可能性）以及提供足够自由的交互度（以增加玩家们摆脱/内化阴影的可能性）。</p><p>但目前的游戏中也有对问题的不完美答卷，而我认为这也是未来游戏解决该问题的可行方向：</p><ol><li>提供玩家自组织的创建机会；</li><li>提供玩家自创内容的机会。</li></ol><ul><li>为什么提供玩家自组织的创建机会可以视为对问题的某种解答呢？</li></ul><p>提供玩家自组织的创建机会相当于给了玩家创造具有群体身份认同的“群体”的机会。结合前面所说，若是玩家们能够加入自己能够获得群体身份认同的群体，就能够增大发现阴影的可能性。对游戏厂商而言，便是玩家黏性增强所表现出的种种相关指标的增加。</p><ul><li>为什么提供玩家自创内容的机会可以视为对问题的某种解答呢？</li></ul><p>原因有三：</p><ol><li>提供玩家自创内容的机会的直接意义是丰富了游戏内容，这会增大玩家们发现阴影的可能性。</li><li>根据凯文·凯利的“涌现”概念，一旦这种 UGC 内容达到一定规模，便会产生某种质变，即从中涌现出某种群体思维。个人认为这种涌现出的群体思维可视为具有相似群体身份认同的玩家的集体无意识的部分模拟。这同样会增大玩家们发现阴影的可能性。</li><li>不仅如此，从另一个层面而言，玩家自创内容也可以视为某种摆脱/内化阴影的手段。并且这种手段比起以往由所设计的游戏内容能够提供的交互自由度都要更高。即最终也加强了玩家们摆脱/内化阴影的可能性。</li></ol><h4 id="未来的可能方向"><a href="#未来的可能方向" class="headerlink" title="未来的可能方向"></a>未来的可能方向</h4><p>如上所言，个人认为当下游戏语境中对于该问题的尝试性解答便是未来的可行方向。但其中有几点需要关注：</p><ul><li>玩家自组织在某种层面上而言也是服务于玩家自创内容的</li></ul><p>玩家自组织的创建是为了给更多不具有群体身份认同的玩家提供这样的机会。但不应该止步于此。需要明确，更多的玩家具有群体身份认同后的下一步是希望他们能够参与内容共建，共建的内容能够吸引相似的但还没有获得群体身份认同的玩家加入该群体，从而达到良性循环。</p><ul><li>玩家自创内容的限制应该尽可能少</li></ul><p>提供玩家自创内容这一功能，从根本上来说是为了提供玩家摆脱/内化阴影的手段，提供的是一种可能性。如果对于该功能的限制过多，那么就回到了原本的有限交互度局面（即玩家能够摆脱/内化阴影的可能性降低）。</p><ul><li>玩家自创内容需要具备规模</li></ul><p>由于群体无意识的隐秘性，玩家自创内容若不具备规模，则难以达到“涌现”的质变点，如此便难以实现“对具有相似群体身份认同群体的集体无意识的部分模拟”。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>综上，对于“群体语境下无归属玩家的个人叙事是否可能”这一问题的讨论的结论是：</p><ul><li>在当下，这一问题因为受限于技术，所以几乎不可能。但一旦能实现，即使是部分实现，该部分玩家都能在较长时间段内成为黏性极高的核心玩家；</li><li>当下游戏语境中其实已经在用两种手段尝试解答该问题：1. 提供玩家自组织的创建机会；2. 提供玩家自创内容的机会。这两个方向也是未来游戏语境下游戏核心竞争力的保证。</li><li>针对上面提到的两个方向，有几点需要关注：玩家自组织的创建最终服务于玩家自创内容；玩家自创内容的限制应该尽可能少；玩家自创内容需要具备规模才能最终帮助解决问题。</li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>参考资料：</p><ul><li>古斯塔夫·勒庞. 乌合之众: 大众心理研究[M]. 江苏凤凰文艺出版社，2020.4.</li><li>迈克尔·A·豪格, 多米尼克·阿布拉姆斯. 社会认同过程[M]. 中国人民大学出版社，2011.1.</li><li>渡边学. 漫画荣格[M]. 北京科学技术文献出版社，2003.9</li><li>Die Welle. Dir. Dennis Gansel. Alliance, 2008.</li></ul><p>部分想法和思路来源：</p><ul><li><a href="https://mp.weixin.qq.com/s/G5odgMmPAmmElWIjJaJJ9w">做社交=做创造玩家间需求与被需求关系的设计</a></li><li><a href="https://mp.weixin.qq.com/s/6QI6-iZvn40mGyPrWkrEdQ">玩家选择的价值：游戏世界观中的阵营设计</a></li><li><a href="https://mp.weixin.qq.com/s/rHe6KkGR47NA_eguC9Peiw">玩家们的这个变化，可能将彻底改变二次元游戏</a></li><li><a href="https://mp.weixin.qq.com/s/fqvLT7TzIHQ1tcvCbSxdfQ">你不会还以为“刘畊宏女孩”们只是在跳健身操吧？</a></li><li><a href="https://api.xiaoheihe.cn/v3/bbs/app/api/web/share?link_id=82121001">玩单机的我们是否会感到孤独？</a></li></ul><hr><p>寥寥数言，浅薄己见，看个乐 (￣▽￣)”</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220601 - 机核 游戏理论系列播客笔记</title>
      <link href="2022/06/02/20220601-gcores-playbeyondthegame/"/>
      <url>2022/06/02/20220601-gcores-playbeyondthegame/</url>
      
        <content type="html"><![CDATA[<h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>最近听了机核的游戏理论系列播客，对其中所涉及到的一些游戏理论和想法进行了记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://www.gcores.com/albums/119">机核播单</a>：</p><blockquote><p>由一直在高校从事游戏教育的张兆弓老师，为我们分享一些游戏研究理论。</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="什么是游戏"><a href="#什么是游戏" class="headerlink" title="什么是游戏"></a>什么是游戏</h3><h4 id="谈及游戏时-谈话的三个明显特征"><a href="#谈及游戏时-谈话的三个明显特征" class="headerlink" title="谈及游戏时 谈话的三个明显特征"></a>谈及游戏时 谈话的三个明显特征</h4><ol><li>指向不明确</li></ol><p>很可能双方讨论的概念并不一致</p><ol start="2"><li>讨论者中任何一方对自身对于游戏的理解特别笃定</li></ol><p>觉得自己的理解没问题，有些想当然</p><ol start="3"><li>其实将第二点 讨论者所笃定的理解开诚布公后 发现其实和真正定义相距较远</li></ol><p>很容易说不明白</p><h4 id="张兆弓老师对于游戏发展历程的分类"><a href="#张兆弓老师对于游戏发展历程的分类" class="headerlink" title="张兆弓老师对于游戏发展历程的分类"></a>张兆弓老师对于游戏发展历程的分类</h4><ol><li>无道具时期的游戏</li></ol><p>该时期的游戏偏向纯粹意识形态上的或是捉迷藏之类的游戏。<br>举例：石头剪刀布<br>剪刀石头布甚至作为分配物资等重要决策的依据<br>可以延伸，比如谈话也可以理解为一种无道具游戏，双方有来有回，都在参与</p><p>人们对于这一阶段的游戏的负面评价较少（或至少流传下来的很少）</p><ol start="2"><li>有物理道具的游戏</li></ol><p>如：跳皮筋，扔沙包，麻将，桌游</p><p>人们对这一阶段的游戏已经有了一些负面评价的声音，但也不多</p><ol start="3"><li>电子游戏</li></ol><p>如借由计算机作为媒介的游戏，往后还会有基于物联网的游戏</p><p>游戏在这一阶段能带来的变化与其媒介息息相关，如借由计算机大大提升了图形渲染能力和声音表达能力。</p><blockquote><blockquote><p>未来借由物联网等设备会逐渐在触觉等目前还未被充分利用的感觉方面发力。<br>写到这里，想起以前不记得哪里看到的一个说法，人越往后，越来越“忙”，眼睛要看东西，耳朵被耳机塞住，以后可能手要带上手套（目前其实已经有利用超声波技术来模拟触觉反馈的装置，如 <a href="https://www.ultraleap.com/">Ultraleap</a>）等等等等，感官没有一个闲下来的。<br>又想到《道德经》第十二章里写到：“五色令人目盲，五音令人耳聋，五味令人口爽，驰骋畋猎令人心发狂，难得之货令人行妨。是以圣人为腹不为目，故去彼取此。”过犹不及啊，还是让自己“闲”些好。</p></blockquote></blockquote><h4 id="不同时期学者对于游戏的不同定义"><a href="#不同时期学者对于游戏的不同定义" class="headerlink" title="不同时期学者对于游戏的不同定义"></a>不同时期学者对于游戏的不同定义</h4><h5 id="无道具时期的游戏"><a href="#无道具时期的游戏" class="headerlink" title="无道具时期的游戏"></a>无道具时期的游戏</h5><ul><li>柏拉图（公元前429年 - 前347年）<br>游戏是一场娱神的仪式。游戏作为神赐的能力，能够培育人们对美和善的感受能力和情感能力。</li></ul><h5 id="有物理道具的游戏"><a href="#有物理道具的游戏" class="headerlink" title="有物理道具的游戏"></a>有物理道具的游戏</h5><ul><li>西格蒙德·弗洛伊德（1856年5月6日 - 1939年9月23日）<br>游戏是“人借助想象来满足自身愿望的虚拟活动”，驱使儿童去游戏的，是心理生活的快乐原则。游戏与其他心理事件一样，都受快乐原则的自动调节。在儿童的游戏中，快乐原则表现为能满足儿童的愿望，掌握创伤事件和使受压抑的敌意冲动得到发泄。游戏的对立面不是真正的工作，而是现实。</li></ul><p>他认为游戏是严肃的，特别是参与到游戏中的人，是严肃的。</p><ul><li>赫伊津哈<blockquote><p>《游戏的人》（Homo Ludens）是荷兰学者约翰·赫伊津哈在1938年写的一本著作，它讨论了在文化和社会中游戏所起的重要作用。Homo Ludens，翻成中文为：人，游戏者，或简单称作“游戏人”，形式就像我们比较熟悉的 Homo sapien (智人)，是对“人”这种“生物”或“生活型态”做的概念化描绘。 Homo ludens 同时也是一个社会科学的理论模型，在此理论模型中阐明，一如在经济活动中，人们最主要透过游戏发展其技能。由于在游戏中有被规范的行动自由并要求独立思考能力，人类可以发现自己的特点并将从中所得到的经验转化入自己的人格塑造中。在此模型中指出，人类需要游戏来做为一种发展观念及意义的基本形式。作者在书中认为游戏同理性和制造同等重要。</p><p>“如果要总结游戏的形式特征，我们不妨称之为一种自由的活动，有意识脱离平常生活并使之“不严肃”，同时又使游戏人全身心投入、忘乎所以的活动。游戏和物质利益没有直接的关系，游戏人不能从中获利。游戏在特定的时空范围内展开，遵守固定的规则，井然有序。游戏促进社群的形成，游戏的社群往往笼罩着神秘的气氛，游戏人往往要乔装打扮或戴上面具，以示自己有别于一般的世人。”</p></blockquote></li></ul><p>游戏不严肃，参与游戏的人严肃。</p><ul><li><p>爱因斯坦（1879 年 3 月 14 日 - 1955 年 4 月 18 日）<br>爱因斯坦曾说过：“玩是最高级的研究（Play is the highest form of research）。”</p></li><li><p>Roger Caillois<br>他在其著作里《Man, Play and Games》（1961）提到了游戏的6个特征： </p></li></ul><p>1.free 自由<br>2.separate (from the routine of life) 非日常，与现实有明确界限<br>3.uncertain 不确定性，主要指由于玩家输入而带来的不确定结果<br>4.unproductive 不为功利性目的而存在<br>5.governed by rules 由规则控制<br>6.make-believe (pretend) 想象构建的虚拟世界，并投入其中</p><h5 id="电子游戏时期"><a href="#电子游戏时期" class="headerlink" title="电子游戏时期"></a>电子游戏时期</h5><ul><li><p>Brian Sutton-Smith<br>《Study of Games》由 Brian Sutton-Smith 和 Elliott M. Avedon 共同编写，是一本是对几乎所有游戏（棋盘游戏、纸牌游戏、策略游戏、儿童游戏和体育游戏）的综合研究著作。</p></li><li><p>Bernard Suits<br>《The Grasshopper: Games, Life and Utopia 》一书出版于1978年。作者在此书中不仅认为游戏可以被有意义地定义；他还认为，玩游戏是人类生存理想的核心部分。</p></li><li><p>Chris Crawford<br>Chris Crawford（1950年6月1日~）是美国电脑游戏设计师和作家。20世纪80年代，他设计并编程了几款重要的电脑游戏，包括《 Eastern Front (1941) 》和《权力平衡》。在开发者中，他以热衷于倡导游戏设计作为一种艺术形式而闻名，他创办了《计算机游戏设计杂志》，并与他人共同创办了游戏开发者大会（GDC）。<br>Chris Crawford 对于游戏的定义：游戏是一个独立闭合的、有明确规则的、从世界抽象而来的一个系统，这个系统从人的主观角度反映了现实世界的作用。</p></li></ul><p>Chris Crawford 关于游戏的三层分类法（可能并不严谨，但可从中一窥游戏的属性）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220531205047.png"></p><ul><li><p>Eric Zimmerman<br>他的观点是：游戏是一种系统，在该系统中玩家被吸引进入由规则定义的人为冲突，从而导致一定数量的结果。</p></li><li><p>Tracy Fullerton<br>他的观点是：游戏是一个独立闭合有明确规则的系统，这个系统吸引玩家参与到结构化的冲突中，并在冲突解决后产生不规则的结果。</p></li><li><p>张兆弓老师的观点<br>游戏是一套从世界抽象而来的系统，它包含4个特征：</p></li></ul><p>1.玩家自愿参与<br>2.有规则边界<br>3.玩家行为给世界带来变化从而导致不确定的结果<br>4.参与者在试图达成目标的过程中会遇到一些阻碍。</p><blockquote><blockquote><p>自愿、边界、不确定结果、阻碍</p></blockquote></blockquote><ul><li>英国作家大卫·帕列特（David Sidney Parlett）<br>他在他的著作《牛津桌面游戏史》（1999）里认为游戏这个词被过度泛用了，过多的歧义使得游戏难以被定义。</li></ul><h4 id="对游戏的不同定义中的共识特征"><a href="#对游戏的不同定义中的共识特征" class="headerlink" title="对游戏的不同定义中的共识特征"></a>对游戏的不同定义中的共识特征</h4><p>各种不同游戏定义中都提到的特征</p><ul><li>自愿参与</li><li>游戏本质：系统<ul><li>可能是开放的，可能是闭合的，可能是不同玩家间的碰撞与反馈</li></ul></li><li>人的参与会给游戏系统带来不确定的 outcome</li></ul><h4 id="关于游戏的严肃与非严肃的讨论"><a href="#关于游戏的严肃与非严肃的讨论" class="headerlink" title="关于游戏的严肃与非严肃的讨论"></a>关于游戏的严肃与非严肃的讨论</h4><p>游戏的严肃性体现在参与游戏的过程中，玩家玩游戏需要态度认真、全身心投入。<br>非严肃性体现在游戏的过程之外，从外观之，它与真实世界相隔离。</p><blockquote><blockquote><p>写到这里想到《游戏设计原型与开发》一书中其实也写到关于游戏与现实的边界讨论，其中将游戏规则统治的临时世界称为魔力圈（magic circle）：<br>    magic circle —— 《Homo Ludens》Johan Huizinga<br>    魔力圈——游戏规则统治的临时世界——《Rules of Play》Katie Salen, Eric Zimmerman</p></blockquote></blockquote><p>从严肃与非严肃也可以反观游戏设计，若是将游戏比作玩家需要解决的问题，那么可以问，设计师是否精心为玩家准备了“值得严肃对待的问题”。这其中也反映了设计师与玩家之间的信任关系，设计师准备了严肃的问题，相应的也需要玩家严肃对待。</p><blockquote><blockquote><p>想到之前写为什么艾尔登法环能打动我的时候，原因之一就是其对于 layout 和 pacing 的设计与玩家之间形成了某种默契。<br>于 layout 而言，它基本会让你每次“走入死胡同”时都有所收获，要么是假的死胡同，柳暗花明；要么是真的死胡同，但会有物质奖励。从而让玩家每一次行动都带着期待，并且愿意“扫荡”地图，而不是直接直冲下一个赐福点而去。<br>于 pacing 而言，要具体细分为局内和局外。局内 pacing 主要指的是对于战斗节奏的掌控，“不要做多余的动作”，以及“不要贪刀”这两点应该是魂类游戏向玩家成功灌输的两点，这两点对应的其实是局内节奏的松弛有度，“二人转”时的观察其实是一种“松”，挥刀时或者弹反的瞬间对应着“紧”，松紧之间，让玩家沉浸在了局内。<br>局外 pacing 其实主要指的是对于整体游戏走向和事件触发的掌控。按照之前听的网易对于游戏体验的说法，即游戏是为了打造玩家的“非线性体验”，即心境心情的高低起伏。从这个角度来说，游戏中的每次战斗会将玩家非线性体验拉到一个峰值，而当这一次峰值成为极值之后，其实对下一次战斗在某种程度上就提出了更高的要求：若是下一次战斗体验的体验只不过约等于这一次，甚至低于这一次，那最终会导致玩家兴趣逐渐走低。所以在我理解中，最完美的体验打造方式不仅是要打造非线性体验的峰值，而且要尽可能多地创造更多极值，这样会让玩家能体会到的乐趣不断加深。（反过来说，温水煮青蛙和先引入最强的体验的做法有可能值得商榷）我所知的艾尔登法环与玩家默契的结合点在于，玩家每次战斗过后，上一次战斗的余韵其实会隐隐加深玩家对于下一次战斗体验的期待（即期望峰值更高），这对于设计师而言既是机会也是挑战。显然，FS 的设计师们做得很好。<br>当然了，并不是说他们已经做得完美。艾尔登法环令人诟病的其中一点其实也正是局外 pacing 的设计。由于其高自由度的开放世界设计，局外 pacing （什么时候遭遇什么怪物或触发什么事件）完全由玩家自己掌控，所以也有一些玩家会出现“一直在逛街，也不知道该干什么”的情况，从而失去游玩兴趣。<br>解决的办法当时想到的是可以更多地加入一些大世界中的随机事件来一定程度上调控玩家的局外 pacing。当然了，若是能根据玩家所出发的事件流来作为数据支撑，那么这样的调控就更加有针对性了。</p></blockquote></blockquote><h4 id="关于游戏边界的讨论"><a href="#关于游戏边界的讨论" class="headerlink" title="关于游戏边界的讨论"></a>关于游戏边界的讨论</h4><p>在约翰·赫伊津哈的作品《游戏的人》中提到：游戏比文明，比人类都要诞生的早。人类对于游戏的探讨和研究从未停止，只不过是有意识和无意识的区别罢了。</p><ul><li><p>关于游戏边界的讨论</p><ul><li>赫伊津哈<ul><li>游戏具有仿真性，是对真实世界的仿真</li><li>游戏里涉及冲突，矛盾</li></ul></li><li>赫伊津哈，Roger Caillois，Brian Sutton Smith<ul><li>游戏涉及正规的、复杂的、关闭的系统</li></ul></li></ul></li><li><p>Chris Crawford</p><ul><li>game is a subset of the reality</li></ul></li></ul><h4 id="游戏与文化的关系"><a href="#游戏与文化的关系" class="headerlink" title="游戏与文化的关系"></a>游戏与文化的关系</h4><p>赫伊津哈《游戏的人》里写道：“游戏是文化本质的、固有的、不可或缺的、绝非偶然的成分，游戏就是文明，文明就是游戏。”</p><p>同样一个篮球，当它被漫无目的的拍打时它只是一个球，而当它被运用在篮球比赛里时它就成了游戏。</p><blockquote><p>游戏是伴随着人的发展文化的衍生所诞生的。</p></blockquote><blockquote><blockquote><p>人类现如今的很多行为即便起于游戏，但最终其实已经不再落于游戏。换言之，游戏成为了途径和手段。比如开黑，比如逛街，这些行为都具有很强的社交属性在其中（不仅限于 people fun 的层面，而是 social 层面）。</p></blockquote></blockquote><h4 id="玩本身就很重要"><a href="#玩本身就很重要" class="headerlink" title="玩本身就很重要"></a>玩本身就很重要</h4><blockquote><blockquote><p>其实我想到的是道家所讲无用之用。本就不该过于强调所谓严肃游戏的功能性，而忽视了玩本身这一行为所象征的人的某种本源渴望。<br>之前提到的陈丹青老师所说关于不用看懂艺术，和这里的玩本身就很重要其实是共通的。观看这一行为本身就已经是一种自然的，不假思索的对于外界的认知和探索，而玩这一行为本身，也是一种与世界交互，认知世界的方式。</p></blockquote></blockquote><h4 id="张兆弓老师谈游戏与学习"><a href="#张兆弓老师谈游戏与学习" class="headerlink" title="张兆弓老师谈游戏与学习"></a>张兆弓老师谈游戏与学习</h4><blockquote><p>游戏最本质的东西其实和学习很类似。</p></blockquote><ul><li>学习怎么一步步“游戏化”<ul><li>增加学习难度<ul><li>比如从 1+1 -&gt; 123+4324</li></ul></li><li>增加学习规则<ul><li>比如要求限时回答</li><li>比如增加犯错机会</li></ul></li><li>增加剧情<ul><li>比如增加故事背景<blockquote><blockquote><p>想到了小学应用题哈哈哈</p></blockquote></blockquote></li></ul></li></ul></li></ul><blockquote><p>设计游戏其实就是设计师为玩家设计一系列有趣问题</p></blockquote><h5 id="学者们对于游戏与学习关系的说法"><a href="#学者们对于游戏与学习关系的说法" class="headerlink" title="学者们对于游戏与学习关系的说法"></a>学者们对于游戏与学习关系的说法</h5><ul><li><p>柏拉图</p><blockquote><p>柏拉图把游戏等同于神圣，称神圣为游戏，这并未亵渎神圣，反而把游戏概念升华到最高的精神境界。游戏是一切幼子（动物的人的）生活和能力跳跃需要而产生的有意识的模拟活动。</p></blockquote></li><li><p>爱因斯坦</p><blockquote><p>爱因斯坦曾说过：“玩是最高级的研究（Play is the highest form of research）。”</p></blockquote></li><li><p>让·皮亚杰</p><blockquote><p>玩是关于所有新生事物如何诞生的答案。</p></blockquote></li><li><p>克里斯托弗·克劳福德</p><blockquote><p>乐趣是学习行为的情感反应。</p></blockquote></li><li><p>拉夫·科斯特</p><blockquote><p>游戏是为了帮助我们学习图式而建立的系统。<br>fun is just another word of learning</p></blockquote></li></ul><h5 id="认知科学与游戏"><a href="#认知科学与游戏" class="headerlink" title="认知科学与游戏"></a>认知科学与游戏</h5><blockquote><p>认知科学，是一门研究讯息如何在大脑中形成以及转录过程的跨领域学科。它研究何为认知，认知有何用途以及它如何工作，研究信息如何表现为感觉、语言、注意、推理和情感。其研究领域包括心理学、哲学、人工智能、神经科学、学习、语言学、人类学、社会学和教育学。它跨越相当多层次的分析，从低层次的学习和决策机制，到高层次的逻辑和策划能力，以及脑部神经电路。“认知科学”这个词是克里斯多福·龙格-希金斯在1973年评注一部关于当时人工智能最新研究的著作莱特希尔报告时创造的。同10年内，《认知科学期刊》和认知科学学会相继于美国加州成立。认知科学的基本要义是：理解思维的最好途径，是认识脑中的代表性结构，以及这些结构中发生的计算性过程。</p></blockquote><ul><li>认知学科中的解决问题领域：关注人是如何接受（识别）信息，怎么解决问题的。</li></ul><h6 id="让·皮亚杰的图式理论"><a href="#让·皮亚杰的图式理论" class="headerlink" title="让·皮亚杰的图式理论"></a>让·皮亚杰的图式理论</h6><ul><li>图式 schema</li></ul><blockquote><p>让·皮亚杰认为人在认识世界之中首先需要“图式”，在张老师看来类似于概念的封装。<br> 人实际上对于其概念的归纳并没有特别的意识，这可能是因为人类从非常小的时候就开始进行这样的活动。</p></blockquote><blockquote><blockquote><p>想到了完形心理学，即人对于事物的认知是基于整体，“整体不同于其部件的总和”。如对于一朵花的感知，并不仅仅只是其颜色、形状、气味等（某种意义上的外界）元素的呈现，还有过往对于花的经验和印象（某种意义上的自身元素），外界元素和自身元素整体构成了对于花的认知。</p></blockquote></blockquote><p>里面张老师也提到了计算机图像识别中怎么让计算机知道“这个”是狗，“那个”不是狗的问题哈哈。</p><ul><li>同化</li></ul><blockquote><p>当我建立“图示”之后，就开始有能力去认知其是否在自己归纳过的范围内，这就是“同化”，听上去有点像举一反三。</p></blockquote><p>如这个是狗，那个也是狗，是一种已有图式的匹配。</p><ul><li>顺应</li></ul><blockquote><p>当看到的事物超出了我的“图示”之后，我需要编辑新的“图式”来归纳新的事物。</p></blockquote><p>看到了一个好像狗，但其实不是狗的生物。是一种图式的更新。</p><p>新手教程阶段其实可以看作某种“建立图式”的过程。即玩家学习游戏的交互方式和系统功能。</p><h6 id="加涅的学习理论"><a href="#加涅的学习理论" class="headerlink" title="加涅的学习理论"></a>加涅的学习理论</h6><p>Robert Miles Gagné</p><p>他将人要学习的内容分为五个类别三个方向</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601133205.png" style="zoom:67%;" /><ul><li>五个类别（横向）<ul><li>言语信息</li><li>智慧技能</li><li>认知策略</li><li>动作技能</li><li>态度</li></ul></li><li>三个方向（纵向）<ul><li>辨别能力<ul><li>如区分水还是火</li></ul></li><li>概念（和图式很像）<ul><li>对同类事物共同本质特征的一个认识，基于此对事物分类</li></ul></li><li>规则<ul><li>技能的本质就是规则，是规则支配了人的行为</li><li>还有一个高级规则的说法<ul><li>加涅认为，高级规则是由各个规则单元组成的复杂结构。其实有点类似于“系统认知”。这些很多理论都与游戏十分类似。</li></ul></li></ul></li></ul></li></ul><p>三个方向在学习中存在一定程度互斥，如经典的颜色冲突实验。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601135546.png" style="zoom: 50%;" /><p>游戏设计过程中通常针对具体关卡，其对能力考查的偏重并不一致。若是考察的是不同方向的能力，会有些“说不上来的不舒服”。所以也启发制作人们在设计时要明确目标玩家体验，到底偏向对于什么能力的考察，尽量不要多个方向一起出现，会有些“设计混乱”。</p><p>张兆弓老师也举了相应例子：<br>以找茬游戏（考察的是认知能力）为例。</p><ul><li>第一关，从 20 个表情中找到一个不一样的；</li><li>第二关，增加总数，且增加图形复杂度；</li><li>第三关，增加复杂性，增加难度（让你找到最强的人，而不是直接告诉你找到“光头”）<ul><li>不仅考察辨别能力</li><li>也考察语言认知（需要理解“最强的人”的意义）</li></ul></li><li>第四关，如果场景里面增加了一个不断移动的需要点击才能继续交互的元素<ul><li>引入了动作方面的考察，其实和认知考察会有一点点冲突，所以会让人感觉有一些些“不适”</li></ul></li><li>第四关，如果每隔一段时间所有元素排位刷新一下<ul><li>和上一种加入动作考察的相比，其实还是深化考察了认知能力，所以玩家不会感觉“不适”</li></ul></li></ul><h6 id="加涅的九段式教学法"><a href="#加涅的九段式教学法" class="headerlink" title="加涅的九段式教学法"></a>加涅的九段式教学法</h6><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601174111.png" style="zoom:80%;" /><p>这个主要可以用于指导游戏机制教学的设计，不应该一直给玩家介绍新机制，而是在机制介绍完后，立马让玩家能用上，复习一下，这样能加深印象。</p><p>同样，在进行机制介绍的时候，最好也能循序渐进，比如先是应对普通坑的简单跳，然后是面对长距离坑的极限跳。尽可能把同类机制一起介绍。螺旋上升！</p><p>新手引导应该尽可能以抛出问题的形式来展开，如告诉玩家需要到达对岸，让玩家自己摸索跳跃机制，而不是直接告诉玩家按这个键是跳跃就结束了。</p><p>综上，就是要通过问题引导，循序渐进地教，然后及时让玩家能用上复习！也不能一直横向展开（完全新的机制），要适度纵向深入（同一机制的深入应用）！</p><p>里面也讲到了期望管理，其实也就是常说的玩家短中长期目标。一般来说，为玩家提供清晰的目标其实是一种 pacing 的调控机制，做得比较好的其实可以参考育碧《刺客信条》系列，其为玩家提供了较为清晰的目标规划可选项。而具有更高自由度的《塞尔达：旷野之息》和《艾尔登法环》其实玩家的短期目标没有那么明显，这两种情况下 pacing 其实更多由玩家自己掌控，其实在某种程度上更是考验设计师如何以更加自然，换言之，以更“不显眼”的方式来引入玩家目标。</p><h5 id="学习与游戏的不同"><a href="#学习与游戏的不同" class="headerlink" title="学习与游戏的不同"></a>学习与游戏的不同</h5><h6 id="有趣和无趣"><a href="#有趣和无趣" class="headerlink" title="有趣和无趣"></a>有趣和无趣</h6><p>前面也提过了，游戏定义之一是自愿参与，学习有时未必是，但若是也能以自愿参与心态快乐学习，那称之为游戏也未尝不可。</p><h6 id="游戏的封闭性"><a href="#游戏的封闭性" class="headerlink" title="游戏的封闭性"></a>游戏的封闭性</h6><ol><li>行为导向的成果不同。游戏里学到的东西不一定能在现实世界用上。学习的东西一般通用性较强。</li><li>和之前提到过的 magic ring 的边界性有关。只有参与游戏的人才能感受到游戏中的乐趣。举的例子是敲别人门的小孩觉得有趣，但被敲门的人会很烦（这也太真实了 233）；包括徒手攀岩也是，对于参与者本身可能是，但对于提心吊胆的家人就未必了。</li></ol><h6 id="游戏的不确定性"><a href="#游戏的不确定性" class="headerlink" title="游戏的不确定性"></a>游戏的不确定性</h6><p>玩家对于游戏的输入会带来不确定输出是游戏的重要特征之一。Rougelike 更是将随机性发挥到了极致。但对于学习而言，通常而言，并不是一个随机过程。</p><p>这里举了抛硬币的例子。<br>抛硬币直观而言是一种随机行为，但其实从硬币被抛出的瞬间，其结果可以说已经注定。</p><blockquote><blockquote><p>想到了大数定律。偶然的必然性。</p></blockquote></blockquote><p>随机其实是一种人类错觉，是由于观测能力有限导致的一种不可知状态。但正是由于这种不可知，某种方面也可以说引起了人们的好奇心，推动技术不断向前，想要突破这种不确定的不可知。</p><p>石头剪刀布胜率更高的策略（博弈论）：<br>赢的时候马上变换手势，输的时候，尽可能保持不变。</p><p>解决问题其实是某种“战胜”不可知的过程，如果做到了，算是学习到了新的技能，就会高兴兴奋。</p><p>游戏中，或者说计算机都是伪随机，真随机的模拟对于玩家体验来说很可能是非黑即白的。毕竟有可能出现怎么都能中，和怎么都不中。所以也才引入了所谓保底机制等。</p><h3 id="游戏乐趣的三个阶段"><a href="#游戏乐趣的三个阶段" class="headerlink" title="游戏乐趣的三个阶段"></a>游戏乐趣的三个阶段</h3><h4 id="游戏前的乐趣（motivation）"><a href="#游戏前的乐趣（motivation）" class="headerlink" title="游戏前的乐趣（motivation）"></a>游戏前的乐趣（motivation）</h4><ul><li>即想要参与其中的动机（下一个章节会提到）<ul><li>比如听说它好难，所以好想玩玩看（后面会提到的 hardfun）</li><li>比如题材吸引人（会和后面提到的 easyfun 相关），开不到真车，那在游戏里开车！</li><li>people fun</li><li>serious fun</li></ul></li></ul><h4 id="游戏中的乐趣"><a href="#游戏中的乐趣" class="headerlink" title="游戏中的乐趣"></a>游戏中的乐趣</h4><ul><li>心流<ul><li>挑战与技能水平近乎完美匹配的状态</li></ul></li><li>大多数游戏的核心玩法和关卡设计都是为了尽可能延长这一阶段</li></ul><h4 id="游戏后的乐趣"><a href="#游戏后的乐趣" class="headerlink" title="游戏后的乐趣"></a>游戏后的乐趣</h4><ul><li>和游戏化有关<ul><li>以游戏方式促成某些行为</li></ul></li><li>参与之后的乐趣<ul><li>比如游戏的社区效应或玩家群聚效应</li><li>比如会有成就感<blockquote><blockquote><p>游戏中也会涉及这一部分，比如你进入类似“练功房”之类的地方拼命刷级，过程其实很无趣，但最终等级得到提升的时刻是成就感，也就是乐趣来源</p></blockquote></blockquote></li></ul></li></ul><h3 id="为什么玩游戏（Motivation）"><a href="#为什么玩游戏（Motivation）" class="headerlink" title="为什么玩游戏（Motivation）"></a>为什么玩游戏（Motivation）</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213324.png" style="zoom:50%;" /><h4 id="四种玩家类型理论"><a href="#四种玩家类型理论" class="headerlink" title="四种玩家类型理论"></a>四种玩家类型理论</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213448.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213640.png" style="zoom:50%;" /><p>1996 年，理查德·巴图（Richard Bartle）在一篇名为《红心、梅花、方块、黑桃：MUD 游戏玩家分类》的文章中，提出了 MUD 玩家的四种分类方法。分别是：杀手型、成就型、探索型和社交型。该分类基于玩家的兴趣所决定。作者强调该分类其实只适用于 MUD，但没拦住大家扩散使用。后来该理论扩展到八种（x 内在动力/外在动力），但使用的人没有四理论多。</p><ul><li>杀手型玩家：其主要目的是对游戏环境造成破坏，发泄他们由现实社会造成的精神上的压力。 </li><li>探索型玩家：探索型玩家由思维的方式又可以进一步划分为，审美型玩家（以感性思维为主）和学习型玩家（以理性思维为主）。审美型玩家会跑到游戏的每一个角落，尝试各种不同的行为看会发生什么。学习型玩家的乐趣在于了解游戏内部的机制。 学习型玩家更倾向于通过插旗PK，来提高自己的技术，研究游戏的技能系统。 </li><li>社交型玩家：对社交型玩家而言，游戏本身只是一个背景，一个和其他玩家交互的平台，建立和别的玩家之间的关系是最重要的</li></ul><h4 id="马斯洛需求层次理论"><a href="#马斯洛需求层次理论" class="headerlink" title="马斯洛需求层次理论"></a>马斯洛需求层次理论</h4><p>游戏行业中对于玩家动机的解释很多基于马斯洛需求金字塔：</p><blockquote><p>马斯洛需求层次理论是亚伯拉罕·马斯洛于 1943 年提出，其基本内容是将人的需求从低到高依次分为生理需求、安全需求、社交需求、尊重需求和自我实现需求五种需求。 马斯洛需求层次理论是人本主义科学的理论之一，其不仅是动机理论，同时也是一种人性论和价值论。</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213823.png" style="zoom: 50%;" /><h4 id="自我决定理论-SDT"><a href="#自我决定理论-SDT" class="headerlink" title="自我决定理论 SDT"></a>自我决定理论 SDT</h4><p>现在使用更广泛的，用于解释玩家动机的理论是自我决定理论（Self-Determination Theory）：</p><blockquote><p>自我决定是一种关于经验选择的潜能，是在充分认识个人需要和环境信息的基础上，个体对自己的行动做出自由的选择。自我决定论（Self-Decide Theory）由美国心理学家德西和瑞安提出，强调自我在动机过程中的能动作用。自我决定论将人类行为分为自我决定行为和非自我决定行为，认为驱力、内在需要和情绪是自我决定行为的动机来源。</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529214311.png" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529214603.png" alt="SDT 关于动力来源的解释" style="zoom:50%;" /><p>SDT 中将动力分为三种：</p><ul><li>自我控制（Autonomy），即像主动技能一样的控制自己的能力</li><li>竞争（competence）</li><li>关联（relatedness）</li></ul><h4 id="Hard-Fun"><a href="#Hard-Fun" class="headerlink" title="Hard Fun"></a>Hard Fun</h4><blockquote><p>我们可能认为电子游戏很“有趣”，但在《失败的艺术》一书中，Jesper Juul 声称这几乎是完全错误的。当我们玩电子游戏时，我们的面部表情很少表现出快乐或幸福。相反，当我们失败、死亡或无法进入下一个阶段时，我们会皱眉、做鬼脸、沮丧地大喊大叫。人类可能有一种渴望成功并感到有能力的基本愿望，但游戏玩家选择参与一种他们几乎肯定会失败并感到无能的活动。那么，即使电子游戏让我们不开心，我们为什么还要玩呢? Juul 研究了这个悖论。在电子游戏中，就像在悲剧艺术、文学、戏剧和电影中一样，我们似乎想要体验不愉快，即使我们也不喜欢它。读者或观众对悲剧的反应通常被解释为一种宣泄，一种负面情绪的净化。</p></blockquote><blockquote><p>买游戏其实是买了个问题回家，消费者真正的目的是回避这个问题。 —— 《失败的艺术》</p></blockquote><p>页游其实极大降低了关于难度部分的设计，突出的是 competence 属性，即玩家间的竞争。</p><ul><li>Hard Fun<ul><li>越难越有乐趣</li><li>人为什么玩游戏的原因之一</li><li>游戏最本质动力之一</li></ul></li></ul><p>高尔夫球，被称为“绿色鸦片”，其上手难度极高（两万颗球入门），但入门后的玩家会被其深深吸引。</p><p>Hardfun 一词由 Nicole Lazzaro 提出。</p><blockquote><p>Nicole Lazzaro，XEODesign 公司的创始人和总裁。在面向大众市场的娱乐产品的玩家体验设计(PXD)方面拥有 20 年的经验。被广泛认为是电子游戏界最优秀的女性之一，也是移动和社交游戏界的领军人物，Fast Company 认为 Nicole 是高科技领域最具影响力的 100 名女性之一，Gamasutra 也将她选为电子游戏界 20 名女性之一。</p></blockquote><p>Nicole Lazzaro 所提出的 4fun2key：</p><ul><li>easy fun<blockquote><p>easy fun 在后面的解读中代指了所有种类的简单模式，并不单单指在游戏难度上简单，而是指整个过程是很简单的，能够轻而易举的完成这件事情。比如说一个男孩想要成为宇航员，但是不能完成这个梦想，于是家人给了他一套宇航服，他就获得了简单的快乐，那么这就是 easy fun。<br>比如有人要买一个杯子，但是他不喜欢白色的，所以就在被子上做了个 IP 联名，结果就买到了，就快乐了。这也是 easy fun。其实 easy fun 和声音画面等等很多方面都有联系，所以和游戏并不是强绑定的关系。</p><blockquote><p>其实和难度无关，我理解是一种对于期望的快速的“折中”满足方式</p></blockquote></blockquote></li><li>hard fun<blockquote><p>Hard fun 其实是一种很矛盾的体现，是因为游戏难，他不断的抗拒玩家，从而使玩家产生了一种对抗的激情，随着不断解决难题，玩家会从中不断的收获乐趣。<br>Nicole 的老公作为一个玩家的时候，如果表示这游戏很难，那么最后就会一直玩下去。一旦觉得这个游戏简单了，那么很快就会放弃。<br>《Getting Over It with Bennett Foddy》<br>《只狼》其实是利用了一套强制引导体系，使得玩家不得不利用一些一般动作类游戏中非必须的操作来完成游戏。</p><blockquote><p>hardfun 也是我之前思考为什么《艾尔登法环》能吸引我一次次拿起手柄进行游玩这一问题的最终答案</p></blockquote></blockquote></li><li>people fun<blockquote><p>people fun 的含义非常直接，就是人与人之间是相互需要的。有很多游戏沉迷于为玩家提供自组的空间，比如说《EVE》《传奇》。当玩家发现自己属于一个群体的时候，确实很容易产生满足感。</p></blockquote></li><li>serious fun<blockquote><p>serious fun 其实是指一种脱离纯粹娱乐性的快乐。而严肃游戏(Serious Game)，电子游戏的一种。最初被定义为“以应用为目的的游戏”，具体来讲，是指以那些以教授知识技巧、提供专业训练和模拟为主要内容的游戏。严肃游戏自上个世纪八十年代诞生以来，已经广泛应用于军事、医学、工业、教育、科研、培训等诸多领域。<br>开始的时候以娱乐性为目的自愿参与游戏，但在游戏进行或完成时一开始的娱乐性目的已经不重要了</p></blockquote></li></ul><h5 id="认知理论"><a href="#认知理论" class="headerlink" title="认知理论"></a>认知理论</h5><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529220832.png" style="zoom:50%;" /><p>Richard Garriott 在回答“人为什么玩游戏”这一问题时引入了很多认知理论。</p><blockquote><p>认知理论（theories of cognition）是关于有机体学习的内部加工过程，如信息、知识及经验的获得和记忆、达到顿悟、使观念和概念相互联系以及问题解决的各种心理学理论。持学习的认知观的理论家有德国格式塔学派的主要代表人物、瑞士的皮亚杰、美国的布鲁纳与奥苏伯尔。尽管他们彼此间存在很大差别，但在学习问题的观点上有一些共同特点。一是他们确认，有机体习得的是知觉或认知结构的形成与变化。即学习的基础是有机体内部的、有组织的结构的形成与改组，而不是刺激与反应联结的形成或行为习惯的加强或改变。二是他们相信，影响学习的主要变量是刺激情境的整体性、突然的理解或知觉、有意义的发现与接受、认知结构的特点、注意或心向，而不是刺激与反应的接近、强化、强化程式。这一理论与发展智力和培养创造能力的教育理论相符，对解释较高级的认知学习较适合。</p></blockquote><blockquote><p>认知理论是将人认知世界的方式方法用信息处理的方式进行描述。<br>即人类在接触任何知识时都有一个感知器（如眼耳口鼻），一个存储器（涉及长短期记忆），一个生成器（负责加工处理）</p></blockquote><ul><li>认知理论解释什么是感受</li></ul><blockquote><p>张老师的老师曾经给他讲过一个例子来解释感觉是什么，就是如果有一个身边的人，你很熟悉他，那么即便是在眼睛看不清正面的情况下也可以自觉的认知这个人的存在。而认知理论就是从科学的角度解释了感觉的存在。<br>其实是看见的瞬间完成了信息处理</p></blockquote><ul><li>认知理论解释游戏 —— 解决问题能力</li></ul><blockquote><p>解决问题能力是指人们运用观念、规则、一定的程序方法等对客观问题进行分析并提出解决方案的能力。 解决问题能力是指人们运用观念、规则、一定的程序方法等对客观问题进行分析并提出解决方案的能力。初级的能力表现在能够发现一般的显性问题，能够初步判断，可以简单处理；能力较强者，能在自己熟悉的领域或范围较容易发现隐藏的问题，有一定的发现问题的技巧，具备一定的分析能力，能够根据现象探求解决问题的途径，并找到答案，可以较好解决问题；更高层次的解决问题能力，实际是更早期地发现问题，感知外界对自己或工作生活地不良结合课堂，可以准确预测事情发展过程中的各种问题，并将其消灭在萌芽状态！同时能归纳总结问题发生的规律，可以指导提高他人发现问题的能力。</p></blockquote><blockquote><p>人类大脑将所有得到的信息都符号化、模块化（语言是典型模块化过程）、抽象化。所以，认知理论其实是从科学的角度解释了人为什么玩游戏这件事情，将其总结为解决问题的方式之一。问题是什么、行为参与、解决方法三个方面分别对应了游戏规则、操作、和为什么玩游戏三个方面。</p><blockquote><p>人脑对于各种信息的高度封装，即共识的形成</p></blockquote></blockquote><p>Chris Crawford 认为人玩游戏就是在解决问题，每次解决问题就会有随之而来的快乐。</p><p>借用认知理论对游戏分类，其实就是基于同品类游戏具有相似的内核，即同类游戏会让你解决相似的问题。</p><p>《Gossip》和《Her Story》就是设计师给玩家提供了大量信息，然后玩家需要从中思考事情来龙去脉（从而解决游戏所提出的问题）。</p><blockquote><p>Zachtronics 是一家美国的独立游戏开发公司，他们的游戏以充满创意的程序解谜元素著称，其代表作有《无限工厂》（Infiniminer Infinifactory），《太空化学》（SpaceChem），《巨著》（Opus Magnum）等。</p></blockquote><p>Hard fun 其实就是通过解决困难问题所带来的快乐。</p><h5 id="内在动力和外在动力"><a href="#内在动力和外在动力" class="headerlink" title="内在动力和外在动力"></a>内在动力和外在动力</h5><blockquote><p>内在动力是个体发自内心对于该项事物感到好奇，感到有兴趣，并认为能借由做这件事达成满足感与获得刺激。比如想去了解、想去达成、想获得刺激。</p></blockquote><blockquote><p>外在动力相对于内在动力则是与实际的赏酬有关系，对于做这件事所获得的内在与外在赏酬来决定是否做这件事。 外在赏酬指做这件事会获得外在奖励或酬劳，内在赏酬指做这件事会被夸奖或避免被责骂排挤，还有自我认同赏酬是认为做这件事对自己有帮助，尽管不一定有内在动机。统整以上三者之后，认为整体来说做这件事对自己有帮助，此行为的动机型态亦较趋近内在动机</p></blockquote><h6 id="索玛立方实验"><a href="#索玛立方实验" class="headerlink" title="索玛立方实验"></a>索玛立方实验</h6><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529223626.png" style="zoom:33%;" /><ul><li>实验概述</li></ul><p>索玛立方（Soma cube）是在 1933 年由皮亚特·海恩发明的智力游戏，索马立方是由七块多立方体组成的一个 3x3x3 的立方体，在不考虑旋转及反射的情形下，这七块索马立方可以组合成 240 个不同的形态。1969 年，当时还是卡内基美隆大学研究生的爱德华·德西（Edward L. Deci）邀请了多位大学生，要求他们在不同的奖励条件下破解索玛立方谜题，最终通过实验的结果来分析动机排挤效果及内在动机及外在动机的关系。</p><ul><li>实验描述</li></ul><p>实验房间内有一张桌子，其上有七块索玛立方、几张要求参与者完成的索玛立方谜题图片，以及《时代周刊》、《纽约客》、《花花公子》杂志。<br>主试坐在桌对面向被试说明要求，并监督被试破解谜题。<br>每次实验过程中，被试拼好三个谜题中的两个后，主试会暂停实验，借口离开 8 分钟，离开时告诉被试他会短暂离开，期间可以自由活动。而后主试到实验房间旁的房间观察 8 分钟自由时间内被试会做什么。<br>实验的评估标准即被试在这 8 分钟内的行为，是继续解密还是干别的事。</p><ul><li>实验分组</li></ul><p>实验设计为  between-subject，即每个被试只参与自己组别的实验。所有被试被分为 2 组，连续三天内，被试需要参与同等时间的实验。</p><p>第一天，两组解开谜题都没有任何奖励。<br>第二天，A 组被告知，8 分钟内每解开一个谜题，奖励 1 美元，B 组和第一天一样，没有奖励。<br>第三天，A 组被告知实验经费只够支付昨天一天的奖金，今天不再有奖金，B 组还是没有奖励。</p><ul><li>实验结果</li></ul><p>第一天，两组解开谜题都没有任何奖励，两组被试表现相似，都继续解题，平均每人继续解题了 3.5~4分钟。<br>第二天，被告知有外在现金奖励的 A 组的解密兴趣激增，平均每人在主试离开的 8 分钟内解题超过 5 分钟，B 组被试表现和第一天类似。<br>第三天，A 组被告知不再有奖励，A 组被试在 8 分钟内的解密时间急剧降低，B 组花费的时间比前两次甚至还要长。</p><h6 id="后续实验"><a href="#后续实验" class="headerlink" title="后续实验"></a>后续实验</h6><blockquote><p>爱德华·德西后来又在 1971 年前后做了两次相似的实验。第二次实验的目标大体上与索玛立方实验相近，不过德西把实验对象从明确受邀参加的大学生换成了不知情的在报社兼职打工的学生，实验的任务要求从解立方谜题变成了让学生为报纸写标题。德西依然采用给予现金奖励的手段观察被试者前后的反应。整个实验在非室内环境进行，为期长达10周。实验结果也基本和索玛立方实验一致。</p></blockquote><blockquote><p>第三次实验德西又回到了室内进行实验，第三次的内容和形式都与索玛立方实验基本一致，唯一变化的是第二天实验中的现金奖励变成了口头鼓励。最终实验的结果表明受到口头奖励的被试者在解谜上付出的时间和精力明显高于没有受到任何奖励的被试者。</p></blockquote><p>第二次是变体实验，但实验内核不变。<br>第三次将外在奖励变为了口头鼓励（提升内在动力），结果发现被试所花时间大大提升。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529232653.png" style="zoom:50%;" /><ul><li>takeaways<br>外在动力会成为内在动力的 debuff ，即会削弱内在动力<br>口头表扬最为外在奖励会增加人们的内在动机</li></ul><blockquote><p>这三次实验的结果证明了口头表扬作为外在奖励会增加人的内在动机。当一个人去完成一项任务时，像金钱这种实际的外在奖励被引入到这项任务中时，人会在认知上重新评估任务的重要性，基于有趣或快乐的内在动力会转移到外在的激励上，主要的关注点也会从享受任务转变过来为了获得实际的回报。然而，当口头表扬是在类似的情况下出现却会增加内在动力，人会在此影响下认为这项任务是一个愉快的任务，进而自主的去完成。</p></blockquote><h6 id="游戏之内也分了内外在奖励"><a href="#游戏之内也分了内外在奖励" class="headerlink" title="游戏之内也分了内外在奖励"></a>游戏之内也分了内外在奖励</h6><p>玩家出于自愿进行的游戏行为，本身没有外在动力。但在游戏之内，也分了外在与内在动力。如装备，经验等奖励就属于外在动力，而 NPC 的羁绊和鼓励等就属于游戏里的内在动力。</p><blockquote><p>游戏的核心玩法，即抛给玩家怎样的问题，一定要难住玩家，且通过内在动力来促使玩家不断向难题发起冲击</p></blockquote><h6 id="内外在动力与儿童教育"><a href="#内外在动力与儿童教育" class="headerlink" title="内外在动力与儿童教育"></a>内外在动力与儿童教育</h6><p>要鼓励不要奖励，鼓励孩子们去寻找自己的内在动力，即自己真正喜欢的东西</p><h6 id="换皮为什么行不通"><a href="#换皮为什么行不通" class="headerlink" title="换皮为什么行不通"></a>换皮为什么行不通</h6><blockquote><p>电子游戏作为一个相当多元的表现形式，它所能激发玩家产生内在动力的元素不一定只局限在游戏玩法本身，故事剧情、美术设计甚至是玩家社区的氛围都可能激发玩家的内在动力，进而让玩家们对游戏产生极大的热情。但如果仅仅通过游戏玩法这单一层面去分析游戏会受到欢迎的原因，得出的答案可能就会非常的缺乏说服力。</p></blockquote><blockquote><p>对于那些核心吸引力不在玩法设计上的游戏来说，想要通过机械的换皮去复制成功是非常困难的事情，缺乏那些原有的激发玩家内在动力的元素只会让整个玩法系统看上去僵硬无趣，玩家们也自然不会对这个“新皮”产生什么热爱。</p></blockquote><blockquote><blockquote><p>即使能“换”到外在动力，但与之相符的内在动力是换不来的</p></blockquote></blockquote><ul><li>游戏机制的来源</li></ul><p>许多游戏机制其实是对现实生活的抽象和组合（也可以理解为一种创造）</p><p>所以人们对事物的多维度感知，在换了环境（即换皮）之下，很可能无法复现，所以换皮无法成功。</p><blockquote><blockquote><p>这也让我想到陈丹青老师在《局部》里面所提到的，一件作品，能够被感知到的最完整的样子和感觉，需要结合其原本的特定放置环境。即除了作品本身，其被放置的环境，无论是挂的那面墙，还是打的光，都会产生影响。这也是为什么一些作品被外借展览的时候，好像，少了那么点意思的原因。</p></blockquote></blockquote><h4 id="反过来可以通过-信息密度-挑战难度-来对游戏进行分类"><a href="#反过来可以通过-信息密度-挑战难度-来对游戏进行分类" class="headerlink" title="反过来可以通过 信息密度-挑战难度 来对游戏进行分类"></a>反过来可以通过 信息密度-挑战难度 来对游戏进行分类</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529234953.png" style="zoom:33%;" /><blockquote><p>处于中间的基本都是神作，围棋处于右上角。</p></blockquote><p>游戏即是学习。</p><blockquote><p>人在玩游戏时必须要去接收游戏传递的信息，掌握游戏的机制和规则，这一切其实就是一个学习的过程。</p></blockquote><h3 id="对于游戏人才的培养"><a href="#对于游戏人才的培养" class="headerlink" title="对于游戏人才的培养"></a>对于游戏人才的培养</h3><p>其实是培养设计者观察归纳提取的能力</p><p>里面有讲到不同阶段对于培养学生的侧重点是不同的：</p><p>游戏迭代设计——培养工程意识<br>游戏叙事设计——着重培养观察和表达能力<br>表达自我—— find something beyond the game</p><p>最后这一部分其实听下来比较有感触。结合最近听到的关于腾讯 Next Studio 的叶梓涛前辈所做关于哲学游戏《The Shape of Time》的分享，感觉哲学，尤其是道家哲学的游戏化表达是我自己的 “something beyond the game”。</p><p>路漫漫其修远兮。革命尚未成功，同志仍需努力。</p><h3 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h3><ul><li><p>《艺术的故事》，贡布里希</p><ul><li>看任何的艺术作品，当看不懂的时候，回到其当时的历史语境下看<blockquote><blockquote><p>说起来看《局部》的时候，陈丹青老师也提了一个观点，看画，看艺术作品，无所谓看不看懂，不要在乎到底有没有看懂。关键是看，感受，至于懂不懂，没关系的。这可能已经有些返璞归真的感觉了。</p></blockquote></blockquote></li></ul></li><li><p>电子游戏诞生前</p><ul><li>《游戏的人》，赫伊津哈</li><li>《Man, Play and Games》，是 Roger Caillois 基于赫伊津哈的理论之后进一步讨论游戏的作品。</li><li>《The Study of Games》，Brian Sutton Smith，该书诞生于电子游戏早期萌芽期</li></ul></li><li><p>电子游戏诞生后</p><ul><li>《The Art of Failure》，Jesper Juul</li><li>《Rule of Play》，Erik Zimmerman</li><li>《The Art of Computer Game Design》，Chris Crawford，GDC 大会创始人之一，该书从艺术层面讲解游戏</li><li>《Theory of Fun》，Raph Koster</li><li>《Effects of Externally Mediated Rewards on Intrinsic Motivation》，Edward DECI</li><li>《Why We Play Games: Four Key to More Emotion Without Story》，Nicole Lazzaro</li></ul></li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://www.gcores.com/radios/101694">技法、观察、意识 — 中央美院与它的游戏设计教育</a></li><li><a href="https://www.gcores.com/radios/125339/timelines?pi=1">游戏为何能深深吸引玩家？一堂深入浅出的游戏理论课程</a></li><li><a href="https://www.gcores.com/radios/141533">重识游戏Vol.1 游戏是什么</a></li><li><a href="https://www.gcores.com/radios/141842">重识游戏Vol.2 游戏与学习</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> GCORES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十章 游戏在玩家的脑中</title>
      <link href="2022/06/01/20220601-theartofgamedesign-chap10/"/>
      <url>2022/06/01/20220601-theartofgamedesign-chap10/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十章-体验在玩家的脑中"><a href="#第十章-体验在玩家的脑中" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h2><p>其实潜意识牢牢中掌控者我们的一言一行。大部分时间，潜意识不露声色，令我们以为是“自己”在做决定。只是潜意识时不时会犯下可笑的错误，暴露其控制之广。</p><p>四项主要心理能力令玩游戏成为可能：建模、专注、想象、共情。</p><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>头脑并不直接处理现实，而是处理其模型。<br>建模过程发生在意识层面之下。所谓“意识”，不过是种幻觉。但幻觉和内在模拟有时会出错，比如视错觉。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608002354.png" alt="点的颜色并没有随着眼球移动而改变 但大脑让它们看起来像在变色"></p><p>大量有用信息——电磁频谱中可见光范围外的一切——都被排除在我们感知到的现实之外。</p><p>就连我们能看见的光，都经过了眼和大脑的奇怪筛选。<br>眼睛看到的颜色之间好像泾渭分明，但在现实中，波长是平滑渐变的，颜色没有明显分界线。眼睛演化成这样，是因为将波长分组有助于理解世界。“颜色”不过是错觉，并非现实——但确实有用模型，能反映现实。</p><p>想掌握精神模型，有一种办法是寻找那些“不加细想，都感觉很自然”的事物。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608003225.png"></p><p>乍一看，这张图片没有什么不对劲，但稍加思索，这根本不像真人。头身比不对，手指都是小包，而且由线段构成，但若不细想，人们不会觉得这张图片有任何不对劲。</p><p>虽然查理·布朗（即上图小男孩）不像我们认识的人，但因为他和我们内心模型相符，看起来还是很像真人。由于人脸传达许多情感，大脑会多储存一些头和脸部信息，所以我们能接受他的大脑袋；如果反过来，若是头小脑大，看起来就会滑稽，因为这与内心模型相龃龉。</p><p>组成他的线条呢？对大脑而言，从场景中挑选互相分离的物体其实很难，潜意识其实会在处理物体时“画线”，以帮助大脑进行区分。由线段构成的画面与内在模型相符，所以也很自然。</p><p>魔术师也是通过欺骗精神模型，并将其打破的方式来取悦观众。观众们的惊呼就是模型被打破的声音。</p><p>大脑每天做巨量工作，将复杂现实浓缩简化成精神模型，以简化记忆、思考、处理。</p><blockquote><blockquote><p>想到了认知理论中的图式。</p></blockquote></blockquote><p>身为游戏设计师，一定要对精神模型多加关注。每个游戏都有一套简单规则，如同查理·布朗，是预先简化过的模型，让人能轻松消化、处理。玩游戏能放松身心，是因为游戏剥离了许多复杂事物，大脑不必做现实中那么多工作。</p><p>游戏可以帮人演练现实，锻炼我们消化简单模型以及对其进行实验的能力，而后可以逐步进阶到现实世界的复杂事物。</p><p>我们体验和思考的一切都是模型——而不是现实。现实远在我们能理解和领悟的范围之外。我们能体验到的现实只是幻想，但我们永远不能超过这幻想去了解现实。</p><p>身为设计师，若能了解和控制这种幻想在玩家脑中如何形成，能创造的体验就和现实世界一样真实——甚至更甚。</p><h3 id="专注"><a href="#专注" class="headerlink" title="专注"></a>专注</h3><blockquote><p>时光有时候像鸟儿飞逝，有时像蜗牛爬行；但注意不到时间究竟是快是慢的时候，才是人最幸福的时候。 —— 伊万·屠格涅夫</p></blockquote><p>大脑理解世界的一项关键技巧是选择性地集中注意力——忽略一些事物，对另一些事物投入更多精神能力。</p><p>如“鸡尾酒会效应”：在嘈杂环境中能只关注于听到自己所想要听到的内容（比如突然听到自己的名字）。<br>“双耳分听研究”：实验中，被试戴上耳机，双耳收到不同听觉体验，如左耳读莎士比亚，右耳念数字。只要两个声音不太相似，被试一般能做到集中听一个声音并复述其内容。若是问另一个声音在说什么，被试一般都不清楚。</p><p>任意时刻，专注的内容是由潜意识欲望和清醒意志共同决定。创作游戏时，目的是创造有趣体验，足以令玩家尽可能长久而强烈地集中注意力。</p><p>心流：米哈里等人提出。忘记周遭，心无杂念。全神贯注，忘记时间。专注、快乐、享受的状态。其中一种定义是“完全专注于一个活动中，并感到高度乐趣和满足”。</p><p>想让玩家进入心流，有以下关键点：</p><ul><li>目标清晰：人有清晰目标，更容易集中精力于任务；目标不明确，就无法确定行为是否有效，就不那么沉浸。</li><li>没有干扰：干扰会吸引有限的注意力。心和手需同时参与游戏。只思考，手会闲；只用手，心会飘。</li><li>反馈直接：即及时反馈。</li><li>持续挑战：人类喜爱挑战，但人类喜爱感觉可以完成的挑战。即挑战与技能水平需要匹配。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608005206.png" alt="只有挑战和技巧匹配才能产生心流"></p><p>玩家技能水平会不断进步，这就要求与之相符的挑战（即游戏难题/困境）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608005440.png" alt="即网易所提“非线性体验”"></p><p>张弛有度，即网易所提“非线性”体验，能让玩家更加享受其中。</p><h4 id="21-号透镜：心流"><a href="#21-号透镜：心流" class="headerlink" title="21 号透镜：心流"></a>21 号透镜：心流</h4><p>使用本透镜前，请考虑是什么在吸引玩家的注意力。<br>问自己这些问题：</p><ul><li>我的游戏有清晰的目标吗？如果没有，怎样改好？</li><li>玩家目标和我所希望的一致吗？</li><li>游戏中是否有令玩家分心，以致忘记目标的部分？若有，能否减少这些干扰，或能否融入游戏目标内？</li><li>我的游戏是否稳定提供连串不太容易，也不太难的挑战？有没有考虑到玩家的技巧可能逐步提高？</li><li>玩家的技巧提高的速率和我的期望相符吗？若不是，应该怎样改进？</li></ul><p>必须学会识别心流。心流并不一定伴随外在情感流露，往往与沉默、退缩为伴。<br>单人游戏玩家进入心流后，一般会安静下来，不时轻声自言自语。因为太过专注，面对你的问题，他们有时反应很慢，有时还会烦躁；<br>多人游戏玩家进入心流后，经常热情交流，并一直专注游戏。</p><p>一旦发现你的游戏中有玩家进入新六，看仔细——他们不会永远处于该状态。务必注意关键时刻——可能某事发生，玩家就离开了心流。利用这些关键点来进行版本迭代。</p><p>也尽可能在自己的游戏设计中进入心流！</p><h3 id="共情"><a href="#共情" class="headerlink" title="共情"></a>共情</h3><p>即换位思考。每当这时，我们尽全力思他人所思，感他人所感。能做到这样是理解他人能力的一个特征，也是游戏不可分割的一部分。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608010123.png"></p><blockquote><blockquote><p>印象中，心理学中有讲到孩子习得情绪就是通过某种模仿，也是一种本源共情能力。</p></blockquote></blockquote><p>人甚至能和动物共情。</p><p>狗比其他动物面部表情更丰富，它们也和人一样，用眉眼表达情绪。这似乎是狗为了生存目的进化出的技能。做对表情，就可以激发人类共情。</p><p>大脑通过精神模型来完成这些行为——并不是与真人、真动物共情，而是与精神模型共情——于是很容易受蒙骗。</p><p>有时人所共情并不存在情感。照片、绘画、游戏人物，能轻易激发共情。艺术家们深知这点，于是加以利用。下次看影视作品，可以注意，自己在何处共情，为何共情？</p><p>游戏设计师要与其他艺术家一样运用共情。但不仅限于此，我们还有新的交互共情方式。游戏就是解决问题，情感投射是解决问题的好办法。</p><p>如果人能站在别人立场思考，就能更好回答“那个人能怎么解决某个问题”。游戏里所投射到人物身上的，不仅仅是情感，还是所有决策能力。其他无法互动的媒体形式无法做到这点。</p><h3 id="想象"><a href="#想象" class="headerlink" title="想象"></a>想象</h3><blockquote><p>最美的世界，只能通过想象进入。 —— 海伦·凯勒</p></blockquote><p>详细那个李，把游戏代入玩家内，把玩家带入游戏。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608010725.png"></p><blockquote><blockquote><p>所以为什么要用太极嘞，玩家就在游戏中，游戏就在玩家中？</p></blockquote></blockquote><p>这里的想象不仅指天马行空的能力，要更普遍。包括听到一段话然后自然构建画面的能力。游戏不必给出所有细节，玩家自会将其填充。了解应该给玩家展示什么，又应将什么留白，就是艺术了。</p><p>想象力的重要功能：</p><ul><li>交流（一般用于讲故事）</li><li>解决问题</li></ul><p>游戏中，以上两者都很关键。游戏设计师必须理解怎样让玩家想象力助力故事，还要清楚想象力能解决、不能解决的问题。</p><p>人脑很微妙，人类所知很少。但了解越多，越有可能利用其为玩家创造绝佳体验。<br>别忘了，你也装备着大脑。运用建模、专注、共情和想象来了解这些能力如何在玩家脑中运用。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第十章-体验在玩家的脑中-1"><a href="#第十章-体验在玩家的脑中-1" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h3><ul><li>《Flow: The Psychology of Optimal Experience》米哈里,契克森米哈赖著。此书引人入胜,由心流领域最知名的研究者撰写,探索了心流的本质。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第九章 游戏为玩家而生</title>
      <link href="2022/05/30/20220530-theartofgamedesign-chap9/"/>
      <url>2022/05/30/20220530-theartofgamedesign-chap9/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第九章-游戏为玩家而生"><a href="#第九章-游戏为玩家而生" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h2><h3 id="爱因斯坦的小提琴"><a href="#爱因斯坦的小提琴" class="headerlink" title="爱因斯坦的小提琴"></a>爱因斯坦的小提琴</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220605004916.png"></p><p>要创造宏伟体验，必须和爱因斯坦一样，了解受众会喜欢什么，比他们更了解。很多时候，人们并不知道自己喜欢什么。他们觉得他们知道，但其实他们不知道。</p><blockquote><blockquote><p>想起了亨利福特名言，人们只能想到要更快的马，却没法想到汽车。</p></blockquote></blockquote><p>这里的关键是倾听。必须深入而彻底地倾听玩家。必须熟悉他们的想法、情感、恐惧和欲望。一些他们自己可能都没有意识到的部分往往是最重要的。</p><h3 id="设身处地"><a href="#设身处地" class="headerlink" title="设身处地"></a>设身处地</h3><p>如何完成倾听？最好的方法之一是移情（会在第十章中讨论），就是换位思考。</p><p>适应玩家的精神角度，积极把自己投射到玩家们的思维中。必须尝试变成他们，观其所观，听其所听，想其所想。</p><p>制作游戏时如果自己曾是目标受众的一员，就会有优势，能够更好的代入。好好保存自己的记忆，这些是最珍贵的工具之一，可以帮助你移情。</p><p>但要是为一些不了解的受众制作游戏，必须在目标人群中想起你认识的朋友，想象他们的行为。和文化人类学家一样，必须花时间与目标受众在一起，与他们交流，观察他们，想象成为他们会怎么样。勤加练习，就能进步。如果能在思想上变为任何类型的玩家，就能为游戏拓展受众，因为你的设计能够囊括其他设计师忽视的人群。</p><blockquote><blockquote><p>想起之前面试米的面试官教会我的词——“格人”。</p></blockquote></blockquote><h3 id="人群特征"><a href="#人群特征" class="headerlink" title="人群特征"></a>人群特征</h3><blockquote><p>正如有些人所言，年龄不会把我们变成孩子，它只会为我们保留真正的童心。 —— 歌德（Goethe）</p></blockquote><p>每个人都是独特的，但要制作一些许多人都喜欢的游戏，就要考虑这些人群的共同之处。这些分类叫做人群特征/市场细分。</p><p>对于游戏设计师，两条最重要的人口统计变量是年龄和性别。<br>随着年龄增长，玩游戏的方式会有所不同；男性女性在所有年龄段都有不同游戏方式。</p><p>以下是典型年龄的人群特征：</p><ul><li>0~3 岁，婴儿/幼儿：该年龄段孩子对玩具很感兴趣，但游戏复杂度于其中包含的待解决问题对他们来说太难。虚拟界面（如游戏卡牌）超越了他们的能力范围，但他们会觉得直接的界面（如触摸屏）很有趣</li><li>4~6 岁，学龄前儿童：该年龄段孩子通常会第一次表现出对游戏的兴趣。他们会更频繁地与父母而不是其它人一起玩简单游戏，因为父母知道怎样调整规则来让游戏保持快乐而有趣。</li><li>7~9 岁，儿童：7 岁被称为“启蒙时期”。该年龄段的孩子已经入学，通常能阅读书本，能够想通问题并解决一些难题。他们自然而然对游戏玩法表现出兴趣。该年龄段，孩子们开始自己决定喜爱的游戏和玩具，而不只是接受父母为他们所做的选择。</li><li>10~13 岁，青春期前的孩子：该阶段的孩子经历一系列巨大生理变化，他们开始对事物有更深入思考。该年龄段有时也被称为“迷恋时期”，因为他们开始着迷于兴趣爱好。男孩的兴趣经常就是游戏。</li><li>13~18 岁，青少年。青少年的任务是为成人做准备。男女孩兴趣出现重要分化。男孩们对竞技和征服保持兴趣，女孩更留意现实世界的问题和相互交流。两种性别的青少年都喜欢尝试新体验。</li><li>18~24岁，年轻的成人：通常比孩子玩得少。游戏类型和娱乐方式已经有了特定偏好。通常有富余的时间和金钱。</li><li>25~35，二三十岁：时间变得更加宝贵，是“构建家庭”的年龄。大多数成年人只玩一些休闲游戏，把玩游戏作为偶尔娱乐活动，或者与孩子一起玩游戏。该年龄段的“核心玩家”——把游戏作为主要爱好的人——是重要的目标市场之一，会购买很多游戏。经常表达喜好与厌恶，可能潜在影响社交网络中其他人的购买决策。</li><li>35~50，三四十岁：“家庭成熟”阶段，大多数人成为休闲玩家。随着孩子年龄增长，会做出购买昂贵游戏的决定。若有可能，会寻求整个家庭一起游戏的机会。</li><li>50+，五十岁以上：“空巢老人”，突然有了很多闲暇时间——孩子搬出去，自己很快退休。一些人回归年轻时喜爱的游戏，其他人寻求转变，转向新的游戏体验。该年龄段人群对重度社交游戏体验尤其感兴趣，如高尔夫、网球、桥牌、MMO。Facebook 游戏在这个年龄段特别成功。老人眼睛和双手不如以前灵活，所以会对小屏幕游戏或者需要控制极其复杂移动的游戏感到沮丧。</li></ul><p>无论为哪个群体创作游戏，重要的是：由于儿童时期就是以玩游戏为中心，所以他们所有的游戏活动都与他们的儿童时期有关。为给一些特定年龄的人群制作游戏，必须让自己的游戏与他们儿童时期流行的游戏和主题保持协调。换言之：要与他们真正地交流，必须用他们孩童时期说话的方式。</p><blockquote><blockquote><p>这一点倒是以前不知道的。</p></blockquote></blockquote><h3 id="媒介排斥女性吗"><a href="#媒介排斥女性吗" class="headerlink" title="媒介排斥女性吗"></a>媒介排斥女性吗</h3><p>男人和女人不同。设计师需要认识到这种区别并为之做出差异化设计。</p><h4 id="男性玩家喜欢在游戏中看到的五件事"><a href="#男性玩家喜欢在游戏中看到的五件事" class="headerlink" title="男性玩家喜欢在游戏中看到的五件事"></a>男性玩家喜欢在游戏中看到的五件事</h4><blockquote><p>假如你是一位女性并且觉得自己不了解男性，你可能想得太多了。 —— 路易斯·雷米（louis Ramey）</p></blockquote><ol><li>掌握：男性很喜欢掌握一件事。这并不意味着这件事很重要或者很有用——它可能只是很有挑战性。而女性更倾向于掌握一件很有意义的事。</li><li>竞争：男性很喜欢通过与其他人竞争来表现出他们是最棒的。但对于女性，输掉游戏（或导致其他人输掉）带来的糟糕体验远大于胜利带来的兴奋感。</li><li>破坏：男性喜欢摧毁东西。我们常看到男人在搞破坏。小男孩玩积木，最兴奋的部分不是构建，而是完成后立马推倒。电子游戏天生适合这种玩法，虚拟世界中的摧毁能比现实世界具有更大数量级。</li><li>空间谜题：男性通常比女性有更强空间推理能力。</li><li>试错：男性倾向于反复试错来学习。</li></ol><h4 id="女性玩家喜欢在游戏中看到的五件事"><a href="#女性玩家喜欢在游戏中看到的五件事" class="headerlink" title="女性玩家喜欢在游戏中看到的五件事"></a>女性玩家喜欢在游戏中看到的五件事</h4><blockquote><p>女性渴望获得情感与社交探索的体验，并将这些应用到自己的生活中。 —— Heidi Dangelmeier</p></blockquote><ol><li>情感：女性玩家喜欢探索人类丰富情感的体验。对于男性，情感是体验中的有趣部分，但很少作为体验终点。</li><li>现实世界：女性倾向于玩与现实有关联的娱乐活动。观察小女孩们的游戏（过家家、扮演兽医、换装游戏等）。小男孩更喜欢扮演幻想中的角色。这种倾向持续到成年——当事物通过有意义方式与现实世界相连，女人们更有兴趣了（如模拟人生）</li><li>照料：女性玩家喜欢照料。女孩们喜欢照顾玩具娃娃、玩具宠物和比她们更小的孩子。竞技游戏中会出现女孩放弃领先优势来帮助弱小玩家，一部分原因是她们觉得玩家之间的联系和感受比游戏更加重要；另一部分原因是出于照料的乐趣。种植游戏和宠物游戏在女性玩家中的成功大部分源于照料机制。</li><li>对话与字谜：女性具有更好的文字技能。</li><li>通过例子学习：女性倾向于通过例子学习。她们喜欢用清晰教程指导自己，一步步学习。</li></ol><p>还有其他区别。<br>男性倾向于专注一件事，女性具有较好的多线程工作能力。一些推测认为这与原始收集行为有关。</p><p>PC 的出现带来了新的游戏类型：</p><ul><li>移除所有社交元素</li><li>移除大部分文字和情感元素</li><li>很大程度与现实世界分离</li><li>通常很难掌握</li><li>为没有限制的虚拟破坏提供了可能</li></ul><p>所以早期电脑和视频游戏主要流行于男性玩家。但随着技术发展，这一局面得到了改善。</p><h4 id="19-号透镜：玩家"><a href="#19-号透镜：玩家" class="headerlink" title="19 号透镜：玩家"></a>19 号透镜：玩家</h4><p>要是用这个透镜，你需要停止思考你的游戏，开始思考你的玩家。<br>问你自己关于这几个关于你的目标玩家的问题：</p><ul><li>他们通常喜欢什么？</li><li>他们不喜欢什么,为什么?</li><li>他们希望能在你的游戏中看到什么？</li><li>如果我处在他们的位置上,我想要在游戏中看到什么?</li><li>他们将会特别喜欢或者不喜欢游戏中的哪一部分?</li></ul><p>一个优秀的游戏设计师总是考虑并拥护他的玩家。熟练的设计师会同时使用玩家透镜和全息透镜，同时考虑玩家、游戏体验和游戏机制。思考你的玩家是一种很有用的方法，但是更有用的是观察他们玩你的游戏。你观察得越多，就越容易预测他们会喜欢什么。</p><p>通过密切关注不同人群特征目标的欲望和行为，能够平衡游戏来适应所有人。当你的游戏受众广泛时，不妨将其细化分析。密切观察不同人群特征的玩家如何游玩游戏，修改已有设定，让其能支持每个群体的游戏风格。</p><h3 id="心理特征"><a href="#心理特征" class="headerlink" title="心理特征"></a>心理特征</h3><p>心理特征：人们的内在想法，他们在寻找怎样的快乐。</p><p>有一些心理特征与生活方式（活动）有关，如“喜欢养狗的人”、“FPS 硬核玩家”。</p><p>其他一些心理特征与一个人喜欢什么有关——人们从参与的游戏或者其他活动中寻找快乐。每个人行动的动机最终都可以被追溯为寻求某种快乐。</p><h4 id="Marc-LeBlanc-的游戏乐趣分类"><a href="#Marc-LeBlanc-的游戏乐趣分类" class="headerlink" title="Marc LeBlanc 的游戏乐趣分类"></a>Marc LeBlanc 的游戏乐趣分类</h4><ol><li>感官：感官乐趣包含使用感观（视听嗅味触）。看到美丽事物，聆听音乐，触摸丝绸，闻到/品尝到美味食物都是感官快乐。游戏美感主要带来这种快乐。<br>  感官乐趣通常是玩具的乐趣（17 号透镜）。这种乐趣不能把糟糕的游戏变得优秀，但它通常能把优秀的游戏变得更好。</li><li>幻想：一种想象世界的乐趣和想象自己变为其他人的乐趣。将在 19、20 章进行深入讨论。</li><li>叙事：并不意味着讲述确定的线性故事。而是故事的发生经过了一系列事件的戏剧化演变。将在 16、17 章深入讨论。</li><li>挑战：某种程度上游戏玩法的核心乐趣之一，因为每个游戏的核心都有一个需要被解决的问题。对部分玩家而言，这种乐趣就足够了，其他玩家想要更多乐趣。</li><li>团队关系：由友情、合作和社区带来的乐趣。23、24 章深入讨论。</li><li>探索：探索的乐趣很广泛，搜寻并找到新东西就是探索。有时候是对游戏世界的探索，有时候是对隐藏特性/巧妙策略的探索。探索新食物是游戏乐趣的关键。</li><li>表达：表达自我的乐趣和创造事物的乐趣。表达很少与完成游戏目标有关，在大多游戏中，为角色设计新外观不能帮你取得优势——但对一些玩家而言，这可能是他们的游戏原因。<blockquote><blockquote><p>可以算做某种程度的“自己实现”哈哈，参见《乌合之众》的读后感： <a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></p></blockquote></blockquote></li><li>服从：这是踏入魔法阵的快乐——离开真实世界，进入全新、令人愉悦、充满规则、有意义的世界。几乎所有游戏都包含服从的快乐。</li></ol><h4 id="Richard-Bartle-玩家类型分类"><a href="#Richard-Bartle-玩家类型分类" class="headerlink" title="Richard Bartle 玩家类型分类"></a>Richard Bartle 玩家类型分类</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220605104129.png"></p><ol><li>♦成就型：想完成游戏目标，主要乐趣源于挑战。喜欢对世界施加影响。</li><li>♠探索型：想了解游戏方方面面，主要乐趣源于探索。喜欢与世界互动。</li><li>❤社交型：对于人们之间的关系更感兴趣，主要寻求团队合作乐趣。喜欢与玩家互动。</li><li>♣杀手型：喜欢竞争并击败他人，享受混合了竞争和破坏的快乐。角色特征是“喜欢对他人施加影响”。乐于助人者也包含在这个分类中。喜欢对玩家施加影响。</li></ol><h4 id="更多乐趣：更多"><a href="#更多乐趣：更多" class="headerlink" title="更多乐趣：更多"></a>更多乐趣：更多</h4><ul><li>预感：当得知快乐就要来临，等待它的到来就是一种快乐<blockquote><blockquote><p>等待小王子的小狐狸。<br>如果你说你在下午四点来，从三点钟开始，我就开始感觉很快乐，时间越临近，我就越来越感到快乐。<br>到了四点钟的时候，我就会坐立不安，我发现了幸福的价值，但是如果你随便什么时候来，我就不知道在什么时候准备好迎接你的心情了<br>——安东尼·德·圣-埃克苏佩里 《小王子》</p></blockquote></blockquote></li><li>完成：完成一件事是一种美好感觉。如“吃掉所有豆子”，“消灭所有坏蛋”，“清空这个关卡”等目标都是利用这种乐趣。</li><li>幸灾乐祸：当一些不公正的人突然遭到报应，我们会有此感受。这是竞技游戏的重要构成部分。德国人称其为 schadenfreude。</li><li>赠与礼物：当你通过赠送惊喜礼物让别人开心时，就会感受到这种特别乐趣。可以通过包装礼物来增强这种惊喜。这种乐趣并不是源于别人的快乐，而是源于你使得他们变得快乐。</li><li>幽默感：两个没有联系的事物通过形式变化被突然联系在一起。<blockquote><blockquote><p>搞点薯条！</p></blockquote></blockquote></li><li>可能性：有很多选择并让你任意挑选的乐趣。通常在购物/自助餐桌上体验这种乐趣。</li><li>成就的自豪感：完成一件事之后，这种乐趣自身可以持续很久。意第绪语中的单词 naches 就是关于这种快乐的满足感，通常指向对孩子们/孙子们的自豪感。</li><li>惊喜：大脑喜欢惊喜。</li><li>激动：过山车设计师之间的说法“恐惧 - 死亡 = 开心”。观看《Thrill》频道的节目就是这种快乐——恐惧，但安全。</li><li>战胜逆境：这是一种完成了一件认为难以成功的事的乐趣。通常而言，这种乐趣的出现伴随着个人胜利的呼喊。意大利人用于描述这种快乐的单词：Fiero<blockquote><blockquote><p>这作者真是博学多识，怎么什么语都知道 233</p></blockquote></blockquote></li><li>难以置信：一种包含敬畏和惊异的强大感受。</li></ul><p>对不同乐趣保持开放心态，并且注意乐趣会与情境有关。</p><h4 id="20-号透镜：乐趣"><a href="#20-号透镜：乐趣" class="headerlink" title="20 号透镜：乐趣"></a>20 号透镜：乐趣</h4><p>思考你的游戏提供了哪些类型的乐趣。<br>问你自己这几个问题：</p><ul><li>你的游戏能给玩家带来哪些乐趣？这些乐趣能够继续改善吗？</li><li>你的体验中缺少了哪些乐趣，为什么？能够在游戏中增加这种乐趣吗？</li></ul><p>游戏的最终目的就是带来快乐。通过浏览已知的乐趣列表，考虑你的游戏如何传达其中的每一种乐趣，你可能就有了改进游戏的灵感，让它能够为玩家带来更多乐趣。要经常留意那些独特的、未分类的、在大多数游戏中都没有的乐趣。因为只要找到一个就能让你的游戏拥有独特的体验。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第九章-游戏为玩家而生-1"><a href="#第九章-游戏为玩家而生-1" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h3><p> - 理查德,R·巴特尔撰写的《设计虚拟世界》 (Designing Virtual Worlds by Richard R. Bartle) 。这是一本关于虚拟世界开发历史的优秀著作。它由一位实现这种虚拟世界的深度思考者撰写。</p><ul><li>马膝.L·克林格尔巴赫与肯特,C·巴里吉共同撰写的《大脑的快乐》 (Pleasures of the Brain by Morten L. Kringelbach and Kent C. Berridge, editors) 。这是一本由心理学家与神经学家共同完成的关于寻找快乐机制的研究集合。如果你还不熟悉科学论文，这可能有点令人却步，但这对于执着的读者是一笔宝贵的财富。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Yin Yang Messenger》 Demo 展示及分析</title>
      <link href="2022/05/29/20220529-yinyangmeseenger-demo-showcase-analysis/"/>
      <url>2022/05/29/20220529-yinyangmeseenger-demo-showcase-analysis/</url>
      
        <content type="html"><![CDATA[<h2 id="《Yin-Yang-Messenger》Demo-展示"><a href="#《Yin-Yang-Messenger》Demo-展示" class="headerlink" title="《Yin Yang Messenger》Demo 展示"></a>《Yin Yang Messenger》Demo 展示</h2><h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><video width="480" height="270" controls>  <source src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Yin Yang Messenger Compression.mp4" type="video/mp4"></video><ul><li><a href="https://www.bilibili.com/video/BV11g411R7J4/">b 站视频链接</a></li></ul><h3 id="试玩地址"><a href="#试玩地址" class="headerlink" title="试玩地址"></a>试玩地址</h3><p><a href="https://haodongliao.itch.io/yin-yang-messenger">https://haodongliao.itch.io/yin-yang-messenger</a></p><h3 id="截图展示"><a href="#截图展示" class="headerlink" title="截图展示"></a>截图展示</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/screenshot1.jpg" alt="善良灵魂与贪吃小猪"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/screenshot2.jpg" alt="恶灵与恶犬"></p><h2 id="《Yin-Yang-Messenger》Demo-设计思路分析"><a href="#《Yin-Yang-Messenger》Demo-设计思路分析" class="headerlink" title="《Yin Yang Messenger》Demo 设计思路分析"></a>《Yin Yang Messenger》Demo 设计思路分析</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p> 在中国传统文化中，公鸡是阳的象征之一。在这个游戏中，玩家将扮演一个能在阴阳状态间转换的信使，为坟墓中的灵魂带去消息。 路途中，玩家将遭遇恶犬、恶灵、善良的灵魂以及调皮的鬼魂，也会碰上只关心眼前吃食的小猪。 灵活使用阴阳状态的转换，留心坟墓中灵魂的遗言。</p><h3 id="游戏整体说明"><a href="#游戏整体说明" class="headerlink" title="游戏整体说明"></a>游戏整体说明</h3><p>以下将从目标、路径、挑战、体验四个方面对游戏进行整体说明：</p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>即游戏的结束条件<br>玩家需要通过操作，避开前方阻碍/搭建道路，到达终点</p><h4 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h4><p>即玩家达到目标的手段<br>玩家可进行的操作有：移动、跳跃（可两次跳跃）、阴阳转换</p><h4 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h4><p>即玩家在实现目标的路径中可能碰到的障碍</p><h5 id="恶犬"><a href="#恶犬" class="headerlink" title="恶犬"></a>恶犬</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529145830.png"></p><ul><li>行为模式<br>恶犬平时会躲在自己的窝中，但若是玩家以阳状态靠近到恶犬的感知范围内，就会扑向玩家。若是在追击成功前离开窝太远，又会回到窝中。玩家若是被恶犬扑倒，游戏结束。</li><li>应对方式<br>恶犬虽会追击阳状态，但却害怕阴状态。玩家可利用这一特性来调动恶犬位置，从而为自己争取前进空间。</li></ul><h5 id="贪吃小猪"><a href="#贪吃小猪" class="headerlink" title="贪吃小猪"></a>贪吃小猪</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529150238.png"></p><ul><li>行为模式<br>贪吃小猪什么也不管，只会埋头吃食。但若是感受到强大的灵魂，也会不情愿地勉强挪挪位置。</li><li>交互方式<br>贪吃小猪不会伤害玩家，玩家可以站到其身上，将其作为垫脚处。会朝反方向原理善良的灵魂。</li></ul><h5 id="善良的灵魂"><a href="#善良的灵魂" class="headerlink" title="善良的灵魂"></a>善良的灵魂</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529145900.png"></p><ul><li>行为模式<br>善良的灵魂与世无争，只是在无聊游荡。但其若是感知到阴状态，便会紧紧跟随。</li><li>交互方式<br>善良的灵魂不会伤害玩家，但玩家可以利用阴状态来将它带到贪吃小猪处，迫使小猪移动。</li></ul><h5 id="恶灵"><a href="#恶灵" class="headerlink" title="恶灵"></a>恶灵</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529150504.png"></p><ul><li>行为模式<br>恶灵不会对阳状态的玩家有任何反应，但若是玩家处于阴状态，恶灵就会慢慢靠近玩家，想要进行“夺舍”。若是被其夺舍成功，玩家便不再受控。</li><li>应对方式<br>阳状态下恶灵不会有所行动，但恶灵会靠近处于阴阳转换状态的玩家。玩家可利用这一特性来调动恶灵位置，防止被其夺舍</li></ul><h5 id="调皮鬼"><a href="#调皮鬼" class="headerlink" title="调皮鬼"></a>调皮鬼</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529150851.png"></p><ul><li>行为模式<br>调皮鬼不会直接对玩家造成伤害，但却会对玩家操作方式造成影响。调皮鬼会不断在红绿两种状态间切换，且不断追寻玩家，若是被红色状态的调皮鬼追到，则玩家水平操作按键会反向（即原本向左的按键变为向右，反之亦然）；若是被绿色状态的调皮鬼追到，则玩家水平操作按键恢复正常。玩家每次被调皮鬼追到后会被降速，最多被降速两次。</li><li>应对方式<br>调皮鬼总是能找到玩家，但它速度较慢，所以可以先引诱其到地图角落，然后一口气突破剩余障碍。</li></ul><h4 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h4><p>即期望玩家在游玩时获得的情感体验<br>在后面部分会展开描述，这里只进行列举</p><ul><li>被恶犬追的心跳</li><li>被善灵帮的恍然</li><li>被恶灵附身的无助</li><li>被调皮鬼影响的恼人</li></ul><h3 id="目标体验分析"><a href="#目标体验分析" class="headerlink" title="目标体验分析"></a>目标体验分析</h3><h4 id="被恶犬追的心跳-第一关"><a href="#被恶犬追的心跳-第一关" class="headerlink" title="被恶犬追的心跳 - 第一关"></a>被恶犬追的心跳 - 第一关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529152132.png"></p><ul><li>预期体验</li></ul><p>心跳+紧张</p><ul><li><p>实现手段</p><ul><li>恶犬的高速移动</li><li>恶犬的范围探敌</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>最开始进入第一关时有摄像机的视觉引导，玩家会知道需要前往墓碑。而恶犬一开始朝向右方，玩家来到恶犬附近时可能还在熟悉操作，但恶犬的速度非常之快，电光火石间战斗便已经结束。玩家这时候很可能会有种措手不及的感觉。</p><p>下一次在面对恶犬时有了些谨慎，这时玩家会逐渐试探出恶犬的活动范围，但因为恶犬的移速太快，所以多数情况下还是来不及反应就游戏结束了。这时候玩家会注意到屏幕上方除了移动和跳跃，还有转换能力，借用转换能力玩家便可发现恶犬会原理处于阴状态下的玩家。利用这点便可调动恶犬走位，实现过关。</p><p>过关后，会发现墓碑中的灵魂留下了遗言：</p><blockquote><p>Thank you! If you have trouble, go to the blue guy!</p></blockquote><p>这其实是对下关破关机制的提示。</p><ul><li>实际体验</li></ul><p>作为第一关，其实很大程度上会造就第一印象。而从给身边朋友的试玩反馈来看，对第一关的描述大多是“措手不及+心跳”。通关过程也基本和预期相符。</p><ul><li>题外话</li></ul><p>其实玩家可以不借助阴状态，直接通过极限的跳跃技巧来直接避开恶犬的扑咬。但其实很难做到这一点，所以算是给愿意探索的玩家留了一条捷径（速通，有√）。</p><h4 id="被善灵帮的恍然-第二关"><a href="#被善灵帮的恍然-第二关" class="headerlink" title="被善灵帮的恍然 - 第二关"></a>被善灵帮的恍然 - 第二关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529153433.png"></p><ul><li>预期体验</li></ul><p>迷茫+恍然</p><ul><li><p>实现手段</p><ul><li>无法直接跳上去的高台</li><li>善灵+小猪+箱子的配合</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>玩家来到高台之下，会发现无法跳上，如果跳下绿色毒池也会结束游戏。所以会尝试使用阴状态在图中乱跑，发现无论是小猪还是箱子都没有反应。这时候会发现地图中还有一个没有接触过的蓝色东西，结合上一关中的墓碑遗言，玩家会尝试性地靠近善灵。</p><p>因为是无法跳跃到的高度，所以玩家只能通过阴状态接近善灵，发现善灵会跟随阴状态。此时玩家可能还是不知道能干什么，但反复尝试之后发现小猪会被善灵推远。利用这个机制，玩家利用阴状态带善灵来到右方，将小猪往左推，从而推下箱子（甚至小猪），从而有了登高的垫脚处。</p><p>过关后，会发现墓碑中的灵魂留下了遗言：</p><blockquote><p>Thank you! Watch out for that purple guy!</p></blockquote><p>这其实是对下关恶灵的提示。</p><ul><li>实际体验</li></ul><p>从给身边朋友的试玩反馈来看，确实会出现不知道该干什么的情况，但因为只有那一条可解路径，所以还是能顺利通关。通关过程也基本和预期相符。</p><h4 id="被恶灵附身的无助-第三关"><a href="#被恶灵附身的无助-第三关" class="headerlink" title="被恶灵附身的无助 - 第三关"></a>被恶灵附身的无助 - 第三关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529154228.png"></p><ul><li>预期体验</li></ul><p>无助</p><ul><li><p>实现手段</p><ul><li>熟悉的恶犬</li><li>只对阴状态敏感的恶灵</li><li>被恶灵附身后无法操控</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>玩家来到这关会看到熟悉的恶犬，心中不免一紧。下意识地会开始切换到阴状态来调动恶犬位置。</p><p>当玩家切换到阴状态后会发现恶灵会向自己靠近。不知道这意味着什么的玩家可能会置之不理，但最终被恶灵附身的玩家会发现自己不受控制了，从而结束当局游戏。</p><p>玩家这时会试探恶灵的行为方式，发现它只对阴状态离体后的阳感兴趣。知道了恶灵的行为方式，也就可以通关了。</p><p>过关后，会发现墓碑中的灵魂留下了遗言：</p><blockquote><p>Thank you! The guy who changes color will make you dizzy!</p></blockquote><p>这其实是对下关调皮鬼的提示。</p><ul><li>实际体验</li></ul><p>通关过程基本和预期相符。</p><h4 id="被调皮鬼附身的恼人-第四关"><a href="#被调皮鬼附身的恼人-第四关" class="headerlink" title="被调皮鬼附身的恼人 - 第四关"></a>被调皮鬼附身的恼人 - 第四关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529154904.png"></p><ul><li>预期体验</li></ul><p>恼人</p><ul><li><p>实现手段</p><ul><li>熟悉的善灵与小猪</li><li>会改变玩家水平方向按键操作的调皮鬼</li><li>每次被调皮鬼追上后会被减速，一共会被减速两次</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>玩家刚进到关卡就会注意到缓缓向自己移动的调皮鬼，经过恶灵关的玩家会对这些莫名靠近的灵体很谨慎，所以可能会想原理。一旦玩家在初始高台跳跃且按住右方向键不放，很可能就会被调皮鬼抓到，从而水平按键反向，直接落入毒池中，当局游戏结束。</p><p>之后可能会需要经过几番试探才清楚调皮鬼的水平按键反向机制，其实正好和上关中墓碑留言相应“那个变色的家伙会让你晕头转向”。知道这一点后，便是利用熟悉的善灵调动贪吃小猪的机制来通关了。</p><p>需要注意的是每次被调皮鬼追上后，玩家速度会下降，这其实会导致游戏难度不断提升，而且一旦在空中被调皮鬼追上很难处理，所以玩家会尝试先将调皮鬼勾引到角落再进行剩余部分的通关。</p><p>然后就通关啦！</p><ul><li>实际体验</li></ul><p>通关过程基本和预期相符。试玩的朋友确实也被这个小调皮鬼搞了好几次哈哈。</p><h3 id="灵感杂谈"><a href="#灵感杂谈" class="headerlink" title="灵感杂谈"></a>灵感杂谈</h3><p>本身想从阴阳出发，而 2D 平台跳跃算是现有工具和资源体系较为完善的。设计过程中其实受到了 <a href="https://space.bilibili.com/618369?spm_id_from=333.337.0.0">鱼一元 001</a> 大佬关于平台跳跃游戏中 物品（Item）、装置（Devices）、环境（Environment）、状态（Status）四元素讲解的启发。将阴阳作为状态元素引入，而后又从需要发挥阴阳作用以及克制阴阳作用的点出发，分别设计了能够帮助阴状态的善灵（以及配套的小猪拱箱子机制），以及会附身出窍（阴状态离体）状态的恶灵。</p><p>调皮鬼的设计倒是属于设计过程中的突发奇想，因为好的、坏的灵体都有了，那就设计一个亦正亦邪的吧！所以就有了调皮鬼。</p><p>恶犬设计其实思路来源于“鸡犬不宁”，以及能“开天眼”的狗。所以就是与阳状态不死不休，但又畏惧阴状态的设定。</p><p>整体其实经过了一个多月的思路反复，最终真正投入制作的时间可能也就一周左右。这要多亏了 <a href="https://www.coursera.org/learn/game-design-and-development-2">Game Design and Development 2: 2D Platformer</a> 课程打的底子。UI 框架及音乐音效都来自这里面，确实是非常不错的课程。</p><h3 id="可能的扩展思路"><a href="#可能的扩展思路" class="headerlink" title="可能的扩展思路"></a>可能的扩展思路</h3><ul><li>新机制</li></ul><p>新的机制如果继续引入会考虑一些机制上的翻转。总的理念还是阴中有阳，阳中有阴，没有绝对。<br>比如引入阳光机制，对于原本跟随阴状态的善灵，若是将其带到了阳光之下，它就会受伤发狂，从而对阳进行追杀。<br>引入贿赂机制，对于原本执着于夺舍阳的恶灵，可通过一些手段来使其夺舍他人。<br>等等。</p><ul><li>新关卡</li></ul><p>其实 demo 中基本都是机制介绍，没有真正意义上设计复杂关卡，这也是自己所欠缺，需要不断学习的部分。</p><h3 id="可能的商业化思路"><a href="#可能的商业化思路" class="headerlink" title="可能的商业化思路"></a>可能的商业化思路</h3><p>若是能丰富关卡，统一美术风格，也许可以考虑一次性买断制单机或手游。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第八章 游戏通过迭代提高</title>
      <link href="2022/05/29/20220529-theartofgamedesign-chap8/"/>
      <url>2022/05/29/20220529-theartofgamedesign-chap8/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第八章-游戏通过迭代提高"><a href="#第八章-游戏通过迭代提高" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h2><h3 id="选择创意"><a href="#选择创意" class="headerlink" title="选择创意"></a>选择创意</h3><blockquote><p>一个平淡的创意根本不算创意。——艾尔伯特·哈伯德</p></blockquote><p>面对一堆想法，迅速做出设计决定，坚持下去，然后立刻想一想这个决定的后果。</p><p>而当做出决策后意识到错误时，准备好推翻之前的决策。</p><blockquote><p>创意不是一个完好的瓷器，而是一次性纸杯——它很廉价，能够大量生产。如果有人得到了一个纸杯，去拿另一个就好了。</p></blockquote><blockquote><p>尽快确定一个创意比拖延更好——你将可能更快地做出好决定，而不是花费时间考虑潜在选择。不要沉迷于你的决定，当它并没有效果时，准备好推翻它。</p></blockquote><p>怎样选择？猜！</p><h3 id="八项测试"><a href="#八项测试" class="headerlink" title="八项测试"></a>八项测试</h3><p>你完成的设计方案必须通过八项测试或是过滤器。只有所有测试都通过，设计方案才算得上优秀。</p><ol><li>测试一：艺术冲动。<br>作为设计师，是否觉得这个游戏“感觉不错”。自己的直觉和团队直觉都很重要。<br>关键问题：这个游戏看起来不错吗？</li><li>测试二：人群特征<br>你的游戏有一群特定受众。需要考虑设计是否适合目标受众。<br>关键问题：我们的目标受众很喜欢这个游戏吗？</li><li>测试三：体验设计<br>为通过这项测试，需要尽一切努力创造良好体验，包括美学、兴趣曲线、共鸣主题和游戏平衡。游戏必须经得起书中的透镜的检验<br>关键问题：这个游戏设计得不错吗</li><li>革新<br>一个新游戏按理说需要包含一些玩家从未见到过的新内容<br>关键问题：这个游戏是否与众不同？</li><li>商业和市场<br>想要卖出游戏的设计师必须考虑商业现实，并将其融入游戏设计中。这带来了很多问题。<br>游戏主题和故事对玩家们具有吸引力吗？<br>游戏是否通俗易懂，一个玩家能否仅仅通过观看概述就能明白这个游戏的内容？<br>消费者对这种题材的游戏有怎样的期待？<br>市场上，这个游戏与相似游戏比有哪些特点？<br>是否开发成本过高导致无法盈利？<br>关键问题：这个问题能够盈利吗？</li><li>工程<br>即技术可行性。<br>关键问题：这个游戏在技术上是否具备可行性？</li><li>社交/社区<br>有时候，一个好玩的游戏可能并不足够。一些设计目标可能需要很强的社交元素，迅速蔓延的病毒式传播，或者围绕游戏形成社区。<br>关键问题：这个游戏完成我们的社交或社区目标了吗？</li><li>玩法测试<br>当游戏开发到可玩程度，必须通过玩法测试。必须尽可能把游戏开发到可玩程度，只有实际看到游戏表现，才知道需要做出哪些重大改变。随着对游戏机制和目标受众的心理感受的了解加深，这个过程中测试目标与游戏都会不断迭代。<br>关键问题：游戏测试者是否享受这个游戏？</li></ol><p>测试过程中对某些测试预期的调整是允许的，如改变目标受众。关键是要想办法通过所有测试。</p><p>当你选择一个初始创意时，重要的是选择创意中最容易被修改和塑造的那个，这样它更容易在测试中存活。</p><h4 id="15-号透镜：八项测试"><a href="#15-号透镜：八项测试" class="headerlink" title="15 号透镜：八项测试"></a>15 号透镜：八项测试</h4><p>要使用这个透镜，你的设计必须满足许多约束条件。只有当它通过了八项测试而不需要修改时，你的设计才算完成。</p><p>问你自己八个关键问题：</p><ol><li>这个游戏看起来不错吗?</li><li>我们的目标受众喜欢这个游戏吗?</li><li>这个游戏设计得不错吗?</li><li>这个游戏是否与众不同?</li><li>这个游戏能够盈利吗?</li><li>这个游戏在技术上是否具备可行性?</li><li>这个游戏完成我们的社交或者社区目标了吗?</li><li>游戏测试者是否享受这个游戏?</li></ol><p>在某些情况下，还需要考虑一些其他的测试。<br>如一个教育游戏必须回答“这个游戏达到了它的教育目标了吗?”。如果你的设计需要更多的测试，不要遗漏它们。</p><h3 id="迭代规则"><a href="#迭代规则" class="headerlink" title="迭代规则"></a>迭代规则</h3><p>思考并选择创意后，下一步是尝试将其实现。</p><p>对于简单游戏，可以快速构建原型，并进行玩法测试。<br>但若是无法在一两小时内构建可玩原型，要谨慎。游戏设计和开发过程必须是迭代/循环的。</p><p>期待游戏做完时就是最好的状态是一种天真想法。</p><blockquote><p>迭代规则：你的游戏测试和改进的次数越多，就会越出色。</p></blockquote><p>如果会经历长期测试与改进，需要回答以下问题：</p><ul><li>迭代问题 1：怎样才能让每一次迭代都有意义？</li><li>迭代问题 2：怎样才能尽可能快地进行迭代？</li></ul><p>软件工程师在过去 40 年中已经对这两个问题进行了深刻思考，他们想出了一些有用技巧。</p><h3 id="软件工程的简短历史"><a href="#软件工程的简短历史" class="headerlink" title="软件工程的简短历史"></a>软件工程的简短历史</h3><h4 id="危险-瀑布-保留"><a href="#危险-瀑布-保留" class="headerlink" title="危险-瀑布-保留"></a>危险-瀑布-保留</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530003026.png" alt="瀑布模型"></p><p>瀑布模型中，只需要不断向前，没有迭代，因为瀑布不会回头。</p><ul><li>优点<br>鼓励开发者在编写代码前花费更多时间进行规划和设计</li><li>缺点<br>违背了迭代规则</li></ul><blockquote><blockquote><p>瀑布模型符合项目认知，但却缺少工程认知，对于一个复杂系统而言，瀑布模型的推进是完全不可控的，也不太可能如此顺利</p></blockquote></blockquote><h4 id="巴里·伯姆爱你"><a href="#巴里·伯姆爱你" class="headerlink" title="巴里·伯姆爱你"></a>巴里·伯姆爱你</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530003310.png" alt="螺旋模型"></p><p>螺旋模型中，开发从最中间开始，顺时针旋转，依次通过四个象限。</p><p>里面包含了最棒的三个理念：风险评估、原型和迭代。</p><p>螺旋模型建议你做以下几件事：</p><ol><li>想出一个基础设计</li><li>找出设计中最大的风险</li><li>建立原型消除这些风险</li><li>测试原型</li><li>基于从原型中得出的结论作更详细的设计</li><li>回到 2</li></ol><p>它运用了迭代规则击败了瀑布模型的递进关系，它也回答了之前描述的问题：</p><ul><li>迭代问题 1：怎样让每次迭代都有意义<ul><li>螺旋模型的答案：评估并消除风险</li></ul></li><li>迭代问题 2：怎样尽可能快速进行迭代<ul><li>螺旋模型答案：构建许多粗糙模型</li></ul></li></ul><p>螺旋模型有很多衍生，目前为止，最成功的的是敏捷开发的传播。</p><h4 id="敏捷宣言"><a href="#敏捷宣言" class="headerlink" title="敏捷宣言"></a>敏捷宣言</h4><p>2001 年，由工程师提出的敏捷宣言：</p><blockquote><p>个体和互动高于流程和工具<br>工作的软件高于详尽的文档<br>客户合作高于合同谈判<br>响应变化高于遵循计划<br>也就是说，尽管右项有其价值<br>我们更重视左项的价值</p></blockquote><p>原则：争分夺秒！</p><ol><li>最重要的目标，是通过持续不断地及早交付有价值的软件使客户满意</li><li>欣然面对需求变化，即使在开发后期也一样。为了客户的竞争优势，敏捷过程掌控变化</li><li>经常交付可工作的软件，间隔几星期或一两个月，倾向于采取较短周期</li><li>业务人员和开发人员必须相互合作，项目中的每一天都不例外</li><li>激发个体斗志，以他们为核心搭建项目。提供所需的环境和支援，辅以信任，从而达成目标</li><li>不论团队内外，传递信息效果最好效率也最高的方式是面对面交谈</li><li>可工作的软件是进度的首要度量标准</li><li>敏捷过程倡导可持续开发。责任人、开发人员和用户要能够共同维持其步调稳定延续</li><li>坚持不懈追求技术卓越和良好设计，敏捷能力由此增强</li><li>以简洁为本，它是极力减少不必要工作量的艺术</li><li>最好的架构、需求和设计出自自组织团队</li><li>团队定期反思如何能提高成效，并依此调整自身行为</li></ol><p>被大多数开发者使用的核心元素：</p><ul><li>灵活的目标：无法恰好得知计划所需的时间。围绕更加灵活的目标组制定计划，而不是忍受对计划做出改变，有计划地改变计划。开发过程中，团队能够迅速适应新创意和信息。</li><li>优先级列表：任何时候有人为一个特性想到了一个新的创意，他就能将其加入到列表中。每次迭代时，团队就查看列表，重新设定特性优先级——重要的评分高。接下来的工作只需要看看列表顶端就好。没有人能保证列表上的所有特性都会被完成——这样能保证大多重要特性能在时间允许范围内完成。</li><li>冲刺：相较于制定长期目标，敏捷开发者们用一系列冲刺工作，每一个冲刺持续一段较短时间，并在最后能传递一个坚实的工作结果。更多的 ddl 意味着更多工作被完成了！</li><li>争分夺秒会议：10~15 分钟，站着开会以表明会议简短的本质。每个成员解释三件事：昨天完成了什么，今天计划完成什么，面临的问题。会议结束后，通过与团队成员一对一接触来一个个找到问题解决方案。每个团队成员明确知道他们要做的事，且能够被其他团队成员帮助。</li><li>演示日：每个冲刺阶段最后，大家聚集在一起，面对面观看和测试工作结果。从新基准开始工作。团队开始分析风险，并一起确定下一阶段的冲刺计划。</li><li>回顾：每个冲刺阶段最后，团队有一个回顾会议。不是关于产品，而是关于工作进度。这给了团队机会来讨论什么是正确的，什么是错误的，怎样在下一冲刺阶段调整工作。</li></ul><p>敏捷是一种哲学，不是一种规定方法。不同开发者有不同方法，但都致力于创造更多次迭代，且让每次迭代都有意义。</p><p>所有特性的风险评估和原型设计都是他们的核心。</p><h3 id="风险评估与原型设计"><a href="#风险评估与原型设计" class="headerlink" title="风险评估与原型设计"></a>风险评估与原型设计</h3><h4 id="案例：气泡城的囚徒"><a href="#案例：气泡城的囚徒" class="headerlink" title="案例：气泡城的囚徒"></a>案例：气泡城的囚徒</h4><p>假设要制作一款城市跳伞的电子游戏。</p><p>气泡城的囚徒：设计概况</p><ul><li>剧情：你是一只叫作“微笑”的跳伞猫。气泡城的市民们都被一个邪恶的巫师困在他们的房间中。你只有通过跳伞进入城市，从烟肉中滑下来找到市民，寻找阻止巫师的方法。</li><li>机制：在向城市中跳伞时，你可以试着抓住从城市中升起的魔法气泡。你能使用气泡的能量向邪恶的秃鸷发出射线，防止他们戳破气泡或者撕碎你的降落伞。同时你必须使降落伞正好落到城市中的目标建筑之上。</li><li>艺术：卡通风格的外观和游戏体验。</li><li>技术：使用第三方引擎的、多平台的三维主机游戏。</li></ul><p>可以马上开始制作，深入细节，但很可能在玩法测试之前已经过去了很长时间。</p><p>正确的做法：和团队一起坐下，做一个风险评估，这意味着列出一个会危害到项目的所有风险的列表。可能示例：</p><p>风险 1：收集泡泡/射击秃鹫的机制不如想象中有趣<br>风险 2：游戏引擎无法同时完成绘制整个城市、所有气泡和秃鹫的任务<br>风险 3：目前的想法是需要 30 种不同房子来构成完整游戏——可能没有足够时间完成所有室内设计和动画角色<br>风险 4：不确定人们是否喜欢角色和剧情<br>风险 5：可能要改变游戏主题，以夏季新上映的电影作为跳伞噱头</p><p>可以通过构建小型原型，尽快减少或消除风险。</p><ul><li><p>风险 1：收集泡泡/射击秃鹫的机制不如想象中有趣<br>可以将游戏机制抽象出来，比如方块版本。这样可以立即回答游戏机制是否好玩的问题，若是不好玩，对着简单模型迅速做出改变，直到好玩，然后就可以开始制作精细化版本。<br>明智的做法是利用迭代规则的优势。</p></li><li><p>风险 2：游戏引擎无法同时完成绘制整个城市、所有气泡和秃鹫的任务<br>立刻做出快速原型。原型没有其他功能，只是单纯在屏幕上展示预估数量的相同物品，看引擎能否处理。这个引擎没有玩法，只是单纯测试技术可行性。如果能处理，很好，若是不能，在艺术品完成前，赶紧想解决方案！</p></li><li><p>风险 3：目前的想法是需要 30 种不同房子来构成完整游戏——可能没有足够时间完成所有室内设计和动画角色<br>让艺术家先做一间房屋和一个角色，评估时间。如果达不到预期，想办法——用更少房屋或复用角色。</p></li><li><p>风险 4：不确定人们是否喜欢角色和剧情<br>构建能够快速展示角色的艺术原型和故事版，将其展现给（最好是目标人群）玩家，评估他们的反映，整理出他们喜欢什么，不喜欢什么，为什么。充分利用这些信息进行迭代！</p></li><li><p>风险 5：可能要改变游戏主题，以夏季新上映的电影作为跳伞噱头<br>要消除这个风险，可以寄希望于管理层尽快作出决定，或者可以决定制作一款能够更容易偏向电影主题的游戏，甚至可能想出一个制作两款不同游戏的计划——关键是立即考虑风险，并做出行动以保证它不会危及项目。</p></li></ul><blockquote><blockquote><p>这可太可怕了 2333</p></blockquote></blockquote><h4 id="16-号透镜：风险消除"><a href="#16-号透镜：风险消除" class="headerlink" title="16 号透镜：风险消除"></a>16 号透镜：风险消除</h4><blockquote><p>是以圣人犹难之，故终无难矣。 —— 道德经</p></blockquote><blockquote><p>有道的圣人总是看重困难，所以就终于没有困难了。</p><blockquote><p>没想到这里能看到哈哈。</p></blockquote></blockquote><p>要使用这个透镜，停止积极地思考，然后开始认真考虑那些会危及游戏的风险。</p><p>问你自己这些问题：</p><ul><li>是什么让这个游戏变得平庸?</li><li>我们怎样防止这样的风险发生?</li></ul><p>风险管理很难。这意味着你必须面对那些不想碰到和立刻解决的问题。但是如果训练自己这么做，你就能进行更多次有效的迭代，获得一个更优秀的游戏。忽视潜在的问题，只专注于游戏中你最有信心的部分是一种诱惑。你必须抵抗这种诱惑，专注于游戏中的风险。</p><h3 id="制作有效原型的-10-个技巧"><a href="#制作有效原型的-10-个技巧" class="headerlink" title="制作有效原型的 10 个技巧"></a>制作有效原型的 10 个技巧</h3><ol><li>原型设计技巧 1：回答问题</li></ol><p>每个圆形都应该设计为回答一个或多个问题。应该能清楚地描述问题，如果不能很可能会浪费时间。一些原型应该要回答的问题示例：</p><ul><li>我们的技术能够在一个场景中支持多少个动画角色？</li><li>核心玩法有趣吗？趣味能持续较长时间吗？</li><li>角色和设定在艺术上能融合吗？</li><li>游戏关卡应该有多大？</li></ul><p>避免过度构建原型，专注于让原型回答关键问题。</p><ol start="2"><li>原型设计技巧 2：忘记质量</li></ol><p>制作原型，唯一要关心的是其能否解决问题。其解决的越快，这个原型就越好——即使这个原型只能勉强使用而且只有粗糙外观。<br>目标是尽快找到问题，从而尽早解决。精致的原型会隐藏真正问题，带来错误安全感。</p><p>不要逃避迭代规则。需要尽快构建能回答疑问的原型，别管它有多难看！</p><blockquote><blockquote><p>想起自己在做 Yin Yang Messenger demo 的时候，一开始不敢动手，然后想了半天，做了个简易的 cube 版本出来，让朋友玩了之后收集了反馈立马迭代了新版本出来，一下子好了不少。</p></blockquote></blockquote><ol start="3"><li>原型设计技巧 3：不要太过留恋</li></ol><blockquote><p>计划好扔掉当前的产品——你总会这样。 —— 《人月神话》（The Mythical Man Month）， Fred Brooks</p></blockquote><p>要带着一切都是临时的心态开始原型工作——唯一要关心的是这个原型是否能回答问题。<br>把每个原型都当做学习机会——这是制作真正系统的练习。</p><ol start="4"><li>原型制作技巧 4：区分原型的优先级</li></ol><p>若是有多个风险需要消除，为风险也列出优先级，这样才能解决最大风险。特别是当一些风险因为其他风险而存在，那么解决源头，后续风险自然不再存在。</p><ol start="5"><li>原型设计技巧 5：有效的并行原则</li></ol><p>巧妙进行更多次迭代的方法是同时制作几个原型。<br>系统工程师构建回答技术问题的原型，艺术家构建艺术原型，设计师构建玩法原型<br>多个小型独立原型可以帮助你更快回答更多问题</p><ol start="6"><li>原型设计技巧 6：并不总需要数字化</li></ol><p>简单的桌上游戏原型——纸上原型，也能很好回答问题！<br>这样能迅速制作出桌面游戏，而且实现相同玩法。这能让你更快定位问题。</p><p>回合制游戏的数值可以通过纸上原型来打磨<br>实时游戏也能将行为转换为回合制模式<br>案例：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530012013.png"></p><ol start="7"><li>原型设计技巧 7：无须交互</li></ol><p>简单的草图和动画能够对回答关于游戏玩法的问题大有帮助</p><p>《波斯王子：时之沙》有一套新奇的跳跃和时间回溯机制，最初的原型就来自无交互动画，描绘了设计师想象中难以置信的巧妙杂技，所以团队能够更容易看到思考和讨论怎样创造一个交互系统能够完成这个愿景。</p><ol start="8"><li>原型设计技巧 8：选择一个“快速迭代”的游戏引擎</li></ol><p>传统软件开发像烤面包：</p><p>1.编写代码。<br>2.编译和链接。<br>3.运行你的游戏。<br>4.操纵你的游戏到你想要测试的部分。<br>5.测试并验证。<br>6.回到步骤1。</p><p>如果对结果不满意，只能从头再来。</p><p>选择一个能快速迭代的引擎像是捏黏土——可以一直改变：</p><p>1.运行你的游戏。<br>2.操纵你的游戏到你想要测试的部分。<br>3.测试并验证。<br>4.编写代码。<br>5.回到步骤3。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530012620.png"></p><ol start="9"><li>原型设计技巧 9：先构建玩具</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601221510.png"></p><p>通过先制作一个玩具再想出游戏，可能从根本上提高了游戏质量，因为这在两个层次上都会很有趣。更深远的是，当你创造的玩法是基于一个很有趣的玩具的一部分，两个层级就能够通过最强有力的方式互相支持。</p><h4 id="17-号透镜：玩具"><a href="#17-号透镜：玩具" class="headerlink" title="17 号透镜：玩具"></a>17 号透镜：玩具</h4><p>要使用这个透镜，不要思考你的游戏是否好玩，要思考参与这个游戏是否有趣。</p><p>问你自己这些问题：</p><ul><li>如果我的游戏没有目标，它会有趣吗？如果不是，我怎样才能改进它？</li><li>当人们看到我的游戏时，他们想要与它产生互动吗，甚至在它们知道应该怎样玩之前？如果不是，我怎样才能改进它？</li></ul><p>有两种方式可以使用玩具透镜。<br>第一种方式是将其运用在一个现存游戏上，想出怎样为它添加一些玩具类的特质——怎样让它变得更亲切，操作更有趣。<br>第二种方式更加大胆，即在你还没有任何游戏创意之前运用它制作一个玩具。如果你在计划中做这件事就会有风险——但如果不是这样，这就是一个伟大的魔杖，可以帮助你找到你还没发现的绝妙游戏。</p><ol start="10"><li>原型设计技巧 10：抓住更多迭代的机会</li></ol><p>在游戏开发过程中会对游戏做出一些改变，这需要更多时间。<br>《光环》（Halo）就是这样，它原本作为一款苹果电脑游戏而被开发。与微软交涉时，他们为个人电脑做了改变，团队利用这个机会进行了更多次迭代。第二个意外是微软请他们将这个游戏从个人电脑转移到新发布的 Xbox 平台！团队需要更多时间改变技术，他们也再次拥有了提高和迭代游戏核心玩法的时间。</p><h3 id="完成迭代"><a href="#完成迭代" class="headerlink" title="完成迭代"></a>完成迭代</h3><ul><li>非正式迭代</li></ul><ol><li>想出一个创意</li><li>试验它</li><li>测试和改进，直到其足够好</li></ol><ul><li>正式迭代：</li></ul><ol><li>描述一个问题（利用机制、技术、美学、故事作为限定）</li><li>用头脑风暴的方式找到几种可能的解决方案</li><li>选择一个解决方案</li><li>列出使用这种解决方案的风险</li><li>构建原型来消除这些风险</li><li>测试原型，直到足够好为止</li><li>描述一个新的想要解决的问题，回到第 2 步</li></ol><p>每次原型设计迭代中，都能更加详细地描述问题。<br>迭代的例子：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222707.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222718.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222735.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222748.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222759.png"></p><h3 id="多少次才足够"><a href="#多少次才足够" class="headerlink" title="多少次才足够"></a>多少次才足够</h3><blockquote><p>现在我明白了，尽管太晚了。在我们计算费用之前，在我们评价自己是否有能力完成它之前就开始工作是很荒谬的。 —— 鲁滨逊·克鲁索（Robinson Crusoe）</p></blockquote><p>更多的迭代总会让你的游戏变得更好。但是“工作永远不会终结——只会被放弃。”<br>需要确定在用尽开发预算之前，进行足够的迭代次数。</p><p>马克·塞尔尼（Mark Cerny）的观点：在你完成两个可发布的游戏版本并完成所有必要特性之前，你都处于试验产品阶段。换言之，除非有两个完全完整的关卡，你仍在进行游戏基本设计。</p><p>这个点通常在花费 30% 必要预算之后。<br>如果到达该点花费了 100w，那么可能还需要花费额外 230w。</p><p>作者有自己的 50% 法则：</p><ul><li>50 % 法则前半部分：当计划游戏时，确定用这种方式构建它。如果 50 % 的预算被削减了，你依然能够有一个可玩的游戏。这条规则要求保持系统简单，也保证当出现糟糕的事情（很可能）迫使你放弃一些特性时，依然能够得到一个可玩游戏。</li><li>50 % 法则后半部分：所有核心玩法元素应该在规划中前半部分完成。即用一半时间让游戏变得可玩，用一半时间让游戏变得更好。</li></ul><h3 id="你的秘密燃料"><a href="#你的秘密燃料" class="headerlink" title="你的秘密燃料"></a>你的秘密燃料</h3><h4 id="18-号透镜：激情"><a href="#18-号透镜：激情" class="headerlink" title="18 号透镜：激情"></a>18 号透镜：激情</h4><p>在每个原型的结尾，当你小心地消除风险并计划下一步时，别忘了用这些重要问题检验你对游戏的感受：</p><ul><li>我对这款游戏的成功是否抱有极大激情？</li><li>如果失去了激情，怎样才能找回？</li><li>如果激情没有回来，是否应该做一些其他事？</li></ul><p>在每次冲刺的末尾，当你在研究原型和准备接下来的计划时，一定要记住做一个“激情检验”。激情就是潜意识与你交流的方式，它告诉你这个游戏是否令人兴奋。失去激情就说明一些地方出了问题——如果不能找到问题所在，游戏很可能会死去。激情也有危险性——毕竟这是一种不合理的情感。<br>必须小心对待激情，因为它往往能够击倒障碍并带领游戏走向成功。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第八章-游戏通过迭代提高-1"><a href="#第八章-游戏通过迭代提高-1" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h3><p> - 比尔·巴克斯顿撰写的《用户体验草图设计》 (Sketching User Experiencesby Bill Buxton)。这本书通过多元化的原理和令人嘱目的结果向我们展示了草图的概念(提示:原型就是一种草图)</p><p> - 比尔·卢卡斯撰写的《用纸设计原型》 (Have Paper, Will Prototype by BillLucas) 。这本书是一系列案例研究,关于怎样成功创造计算机界面的纸上原型。麦克·塞林格撰写的《狗头人指南之桌面游戏设计》 (The Kobold Guide to Board Game Design by Mike Selinker) 。这本非常棒的书讲述了如何制作伟大的桌面游戏。</p><p> - 超级兄弟撰写的《少说话,多做事》 (Less Talk, More Rock by Superbrothers)这篇文章认为游戏是行动的媒介,而不是语言的媒介,并坚定的认为太多的设计讨论将会是毁灭性的。</p><p> - 《敏捷软件开发》 (Agile Software Development) 。维基百科中关于敏捷软件开发的条目编写地很不错,如果你想要更多地学习敏捷,它可以提供很多参考。 </p><ul><li>杰森·范登博格撰写的《游戏设计的四个F:快速失败与跟随快乐》(The 4Fs of Game Design: Fail Faster, and Follow the Fun by Jason Vandenberghe)这篇文章(基于马克,勒布朗的一个理念)将伟大游戏设计过程的关键方面总结为清晰的基础元素</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 摘抄/笔记</title>
      <link href="2022/05/29/20220529-theartofgamedesign-toc/"/>
      <url>2022/05/29/20220529-theartofgamedesign-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>之前看《游戏设计艺术》一书没看完，接着看！然后也整理一下摘抄/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.douban.com/subject/26791007//">豆瓣</a>：</p><blockquote><p>不需要是技术专家，只要阅读《游戏设计艺术（第2版）》，学习佳作，深刻认识游戏设计的真谛，人人都可以成为成功的游戏设计者！《游戏设计艺术（第2版）》作者Jesse Schell是有二十多年成功经验的游戏设计师，曾任国际游戏开发者协会主席，并在迪士尼在线游戏服务多年，获奖颇多。他以宝贵经验提出一百多套问题集，帮助你从各种角度观察游戏设计，例如心理、建筑、音乐、视觉、电影、软件工程、主题公园设计、数学、谜题设计和人类学等方方面面。</p><p>《游戏设计艺术（第2版）》主要内容包括：游戏的体验、构成游戏的元素、元素支撑的主题、游戏的改进、游戏机制、游戏中的角色、游戏设计团队、如何开发好的游戏、如何推销游戏、设计者的责任等。</p></blockquote><blockquote><blockquote><p>看到一半转第三版了哈哈</p></blockquote></blockquote><hr><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h3><h4 id="游戏设计是什么"><a href="#游戏设计是什么" class="headerlink" title="游戏设计是什么"></a>游戏设计是什么</h4><blockquote><p>游戏设计，即决定一款游戏应当如何的行为。</p></blockquote><h4 id="透镜"><a href="#透镜" class="headerlink" title="透镜"></a>透镜</h4><p><a href="http://artofgamedesign.com/">http://artofgamedesign.com</a></p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><ol><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap1/">游戏设计艺术 第一章 太初之时 有设计师</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap2/">游戏设计艺术 第二章 设计师创造体验</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap3/">游戏设计艺术 第三章 体验发生于场景</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap4/">游戏设计艺术 第四章 体验从游戏中诞生</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap5/">游戏设计艺术 第五章 游戏由元素构成</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap6/">游戏设计艺术 第六章 元素支撑起主题</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap7/">游戏设计艺术 第七章 游戏始于一个创意</a></li><li><a href="https://medill-east.github.io/2022/05/29/20220529-theartofgamedesign-chap8/">游戏设计艺术 第八章 游戏通过迭代提高</a></li><li><a href="https://medill-east.github.io/2022/05/30/20220530-theartofgamedesign-chap9/">游戏设计艺术 第九章 游戏为玩家而生</a></li><li><a href="https://medill-east.github.io/2022/06/01/20220601-theartofgamedesign-chap10/">游戏设计艺术 第十章 游戏在玩家的脑中</a></li><li><a href="https://medill-east.github.io/2022/06/05/20220605-theartofgamedesign-chap11/">游戏设计艺术 第十一章 玩家的动机驱使着玩家的脑</a></li><li><a href="https://medill-east.github.io/2022/06/08/20220608-theartofgamedesign-chap12/">游戏设计艺术 第十二章 有些元素是游戏机制</a></li><li><a href="https://medill-east.github.io/2022/07/11/20220711-theartofgamedesign-chap13/">游戏设计艺术 第十三章 游戏机制必须平衡</a></li><li><a href="https://medill-east.github.io/2022/08/07/20220807-theartofgamedesign-chap14/">游戏设计艺术 第十四章 游戏机制支持谜题</a></li><li><a href="https://medill-east.github.io/2022/08/12/20220811-theartofgamedesign-chap15/">游戏设计艺术 第十五章 玩家通过界面玩游戏</a></li><li><a href="https://medill-east.github.io/2023/05/10/20230510-theartofgamedesign-chap16">游戏设计艺术 第十六章 体验可以用兴趣曲线来评价</a></li><li><a href="https://medill-east.github.io/2023/05/30/20230530-theartofgamedesign-chap17">游戏设计艺术 第十七章 有种体验叫做故事</a></li><li><a href="https://medill-east.github.io/2023/05/31/20230531-theartofgamedesign-chap18">游戏设计艺术 第十八章 故事和游戏结构可以用间接控制艺术性地融为一体</a></li><li><a href="https://medill-east.github.io/2023/06/01/20230601-theartofgamedesign-chap19">游戏设计艺术 第十九章 在世界里发生的故事与游戏</a></li><li><a href="https://medill-east.github.io/2023/06/02/20230602-theartofgamedesign-chap20">游戏设计艺术 第二十章 世界中的角色</a></li><li><a href="https://medill-east.github.io/2023/06/03/20230603-theartofgamedesign-chap21">游戏设计艺术 第二十一章 世界里的空间</a></li><li><a href="https://medill-east.github.io/2023/06/04/20230604-theartofgamedesign-chap22">游戏设计艺术 第二十二章 一些交互界面创造临场感 - VR</a></li><li><a href="https://medill-east.github.io/2023/06/05/20230605-theartofgamedesign-chap23">游戏设计艺术 第二十三章 世界的外观与感觉是由其美学所定义的</a></li><li><a href="https://medill-east.github.io/2023/06/06/20230606-theartofgamedesign-chap24">游戏设计艺术 第二十四章 一些游戏让多人同乐</a></li><li><a href="https://medill-east.github.io/2023/06/07/20230607-theartofgamedesign-chap25">游戏设计艺术 第二十五章 其他玩家有时会形成社群</a></li><li><a href="https://medill-east.github.io/2023/06/08/20230608-theartofgamedesign-chap26">游戏设计艺术 第二十六章 设计师常与团队合作</a></li><li><a href="https://medill-east.github.io/2023/06/09/20230609-theartofgamedesign-chap27">游戏设计艺术 第二十七章 团队有时通过文档进行沟通</a></li><li><a href="https://medill-east.github.io/2023/06/10/20230610-theartofgamedesign-chap28">游戏设计艺术 第二十八章 通过试玩测试创造好游戏</a></li><li><a href="https://medill-east.github.io/2023/06/11/20230611-theartofgamedesign-chap29">游戏设计艺术 第二十九章 制作游戏的技术</a></li><li><a href="https://medill-east.github.io/2023/06/12/20230612-theartofgamedesign-chap30">游戏设计艺术 第三十章 你的游戏总有个客户</a></li><li><a href="https://medill-east.github.io/2023/06/13/20230613-theartofgamedesign-chap31">游戏设计艺术 第三十一章 设计师要向客户推销自己的想法</a></li><li><a href="https://medill-east.github.io/2023/06/14/20230614-theartofgamedesign-chap32">游戏设计艺术 第三十二章 设计师和客户都希望游戏能够盈利</a></li><li><a href="https://medill-east.github.io/2023/06/15/20230615-theartofgamedesign-chap33">游戏设计艺术 第三十三章 游戏改变玩家</a></li><li><a href="https://medill-east.github.io/2023/06/16/20230616-theartofgamedesign-chap34">游戏设计艺术 第三十四章 设计师担负的责任</a></li><li><a href="https://medill-east.github.io/2023/06/17/20230617-theartofgamedesign-chap35">游戏设计艺术 第三十五章 每个设计师都有个目标</a></li></ol><hr><h2 id="透镜汇总"><a href="#透镜汇总" class="headerlink" title="透镜汇总"></a>透镜汇总</h2><h4 id="1-号透镜：情感"><a href="#1-号透镜：情感" class="headerlink" title="1 号透镜：情感"></a>1 号透镜：情感</h4><ul><li><p>人们可能忘掉你的言语,但他们永远不会忘掉他们对你的感受。 一玛雅·安杰洛(Maya Angelou)</p></li><li><p>为了确定你创造的情感是正确的,问自己这几个问题:</p><ul><li>我希望玩家能够体验到怎样的情感?为什么?</li><li>当人们(包括我自己)玩游戏时,他们产生了怎样的情感?为什么?</li><li>我怎样缩小人们的实际体验与我的设想之间的距离?</li></ul></li></ul><h4 id="2-号透镜：本质体验"><a href="#2-号透镜：本质体验" class="headerlink" title="2 号透镜：本质体验"></a>2 号透镜：本质体验</h4><ul><li>要想使用这个透镜,你需要停止你的游戏,开始思考游戏给玩家的体验。问你自己这几个问题：<ul><li>我想要让玩家获得怎样的体验?</li><li>这种体验的本质是什么?</li><li>我应该如何让我的游戏抓住这种体验的本质?</li></ul></li></ul><h4 id="3-号透镜：场景"><a href="#3-号透镜：场景" class="headerlink" title="3 号透镜：场景"></a>3 号透镜：场景</h4><ul><li>3 号透镜:场景<ul><li>在我们的游戏设计中,我们玩游戏的场景对游戏会产生巨大的影响。为了确定你没有凭空设计游戏,问你自己这几个问题:<ul><li>我想要制作的游戏最适合哪种场景?</li><li>我的场景中是否有一些特殊的属性会影响到我的游戏?</li><li>我的游戏中有哪些元素能够与场景和谐共处?哪些元素不行?</li></ul></li></ul></li></ul><h4 id="4-号透镜：惊喜"><a href="#4-号透镜：惊喜" class="headerlink" title="4 号透镜：惊喜"></a>4 号透镜：惊喜</h4><ul><li>惊喜是一种我们很容易忘记的基础情绪。使用这个透镜来提醒你自己让你的游戏充满惊喜。问你自己这几个问题:<ul><li>当玩家们玩我的游戏时,什么会让他们感到惊喜?</li><li>我的游戏中的故事有惊喜吗?或者规则呢?或者艺术呢?或者技术呢？</li><li>你的规则能够让玩家之间互相带来惊喜吗?</li><li>你的规则能够让玩家们给自己带来惊喜吗?</li><li>惊喜是所有娱乐活动的重要组成部分–它是幽默、策略和解决问题的基础。我们的大脑很容易感受到惊喜。在一个实验中,测试者将糖水或者普通水喷到参与者的口中,获得随机模式喷雾的参与者会比获得固定模式喷雾的参与者有更好的体验,即使他们获得了同样数量的糖水。在另外的实验中,大脑扫描显示了即使在不愉快的惊喜中,大脑的愉悦中心也会被触发。</li></ul></li></ul><h4 id="5-号透镜：乐趣"><a href="#5-号透镜：乐趣" class="headerlink" title="5 号透镜：乐趣"></a>5 号透镜：乐趣</h4><ul><li>尽管有时候乐趣无法被分析,但在几乎所有的游戏中乐趣都是令人喜爱的。为了最大化游戏的乐趣,问你自己这几个问题:<ul><li>我的游戏中的哪个部分很有趣,为什么?</li><li>哪个部分需要变得更加有趣?</li></ul></li></ul><h4 id="6-号透镜：好奇心"><a href="#6-号透镜：好奇心" class="headerlink" title="6 号透镜：好奇心"></a>6 号透镜：好奇心</h4><ul><li>要使用这个透镜,思考玩家的真的动机-不是游戏的目标,而是玩家想要完成目标的真正原因。问你自己这几个问题:<ul><li>我的游戏给玩家的大脑提出了怎样的问题?</li><li>我正在做哪些努力让他们在意这些问题?</li><li>我能做什么来使他们提出更多的问题?</li><li>比如,一个解谜电子游戏在每一关中都可能有一个时间限定的目标。玩家们尝试回答这样一个问题: “我能在 30 秒之内找到过关的方法吗? ”一个让他们更加在意的方法是,当他们解决了任意一个谜题后播放一段有趣的动画,那么玩家就会问这样一个问题: “我想知道下一个动画是什么吗? ”</li></ul></li></ul><h4 id="7-号透镜：内生价值"><a href="#7-号透镜：内生价值" class="headerlink" title="7 号透镜：内生价值"></a>7 号透镜：内生价值</h4><ul><li>7 号透镜:内生价值<ul><li>一个游戏的成功与玩家认为它是否重要紧密相关。要使用这个透镜来思考一下,在你的游戏中,玩家对道具、目标和分数的感受。问你自己这几个问题:<ul><li>在我的游戏中哪些东西对玩家很有价值?</li><li>怎样让这些东西对玩家更有价值?</li><li>游戏中的价值与玩家的动机之间有怎样的关系?</li><li>记住,道具的价值和游戏的比分直观地反映了玩家想要在游戏中获胜的程度。通过思考玩家真正关心的事物及其原因,你就知道应该怎样改进你的游戏了。</li></ul></li></ul></li></ul><h4 id="8-号透镜：解决的问题"><a href="#8-号透镜：解决的问题" class="headerlink" title="8 号透镜：解决的问题"></a>8 号透镜：解决的问题</h4><ul><li>8 号透镜：解决的问题<ul><li>要使用这个透镜,需要思考一下游戏中的问题。由于每个游戏都有一些等待解决的问题,在你的游戏中,玩家需要解决那些问题才能在游戏中获胜。问你自己这几个问题：<ul><li>我的游戏要求玩家解决哪些问题?</li><li>是否有一些隐藏的问题作为玩法的一部分出现?</li><li>在我的游戏中,怎样产生新的问题来对玩家保持吸引力?</li></ul></li></ul></li></ul><h4 id="9-号透镜：四种元素"><a href="#9-号透镜：四种元素" class="headerlink" title="9 号透镜：四种元素"></a>9 号透镜：四种元素</h4><ul><li>9 号透镜:四种元素<ul><li>要使用这个透镜,观察你的游戏实际上是由什么构成的,单独考虑各种元素然后将它们统一看待,问你自己这几个问题:<ul><li>我的游戏设计使用了全部的四种元素吗?</li><li>我的设计能够通过增强一种或者多种分类的元素来获得提高吗?</li><li>四种元素是否和谐,互相作用并向同一个主题努力?</li></ul></li></ul></li></ul><h4 id="10-号透镜：全息设计"><a href="#10-号透镜：全息设计" class="headerlink" title="10 号透镜：全息设计"></a>10 号透镜：全息设计</h4><ul><li>10 号透镜:全息设计<ul><li>要使用这个透镜,你必须一次性看到游戏的全部:四种元素和玩家体验,以及它们是怎样关联起来的。你可以把注意力从皮肤转移到骨骼再到皮肤,但更好的方法是全息观察游戏和体验。</li><li>问你自己这几个问题：<ul><li>游戏中的哪一种元素产生了令人享受的体验?</li><li>游戏中的哪一种元素会让玩家在体验中分心?</li><li>怎样改变游戏元素来提高游戏体验?</li></ul></li></ul></li></ul><h4 id="11-号透镜：统一"><a href="#11-号透镜：统一" class="headerlink" title="11 号透镜：统一"></a>11 号透镜：统一</h4><ul><li>11 号透镜:统一<ul><li>要使用这个透镜,就要尽可能地考虑这背后所有的原因。问你自己这几个问题：<ul><li><p>我的主题是什么?</p></li><li><p>我已经采用了所有可能的方法来强化这个主题吗?</p></li><li><p>统一透镜与 9 号透镜元素四分透镜很搭配。使用元素四分透镜从你的游戏中分割出元素,你就能够从统一主题的角度更方便地研究它们。</p></li></ul></li></ul></li></ul><h4 id="12-号透镜：共鸣"><a href="#12-号透镜：共鸣" class="headerlink" title="12 号透镜：共鸣"></a>12 号透镜：共鸣</h4><ul><li><p>12 号透镜:共鸣</p><ul><li><p>要使用这个透镜,你必须去寻找隐藏的力量,问你自己这几个问题:</p><ul><li>在我的游戏中,能感觉到哪些有力的或者特殊的元素?</li><li>将我的游戏描述给他人听时,那些创意能让他们真的兴奋吗?</li><li>如果没有任何限制,这个游戏将会变成怎样?</li><li>我对这个游戏的方向有特定的直觉,那到底是什么在驱动这种直觉呢?</li></ul></li><li><p>共鸣透镜是一件安静美妙的乐器,也是一件倾听自己和他人的工具。我们把重要的事物都埋藏在内心的深处,当某些东西引起了它们的共鸣时,就会触动我们的内心。事实上这些隐藏的特性给了它们力量,也让我们难以寻找。</p></li></ul></li></ul><h4 id="13-号透镜：无尽灵感"><a href="#13-号透镜：无尽灵感" class="headerlink" title="13 号透镜：无尽灵感"></a>13 号透镜：无尽灵感</h4><ul><li>13 号透镜：无尽灵感<ul><li>当你知道如何倾听时，每个人都可以成为大师。——拉姆·达斯（Ram Dass）</li><li>要使用这个透镜，不要思考你的游戏，也不要观察那些看起来差不多的游戏。正相反，你要四处看看。</li><li>问你自己这几个问题<ul><li>我的生活中有怎样的体验想要与他人分享？</li><li>有哪些小技巧可以让我捕捉到体验的本质，并把它纳入我的游戏中？</li></ul></li><li>使用这个透镜需要开放的心态和强大的想象力。你需要了解自己的感受，观察周围发生的一切事物。你必须尝试一些不可能的事——一场比武不可能用掷骰子的方式来获得兴奋感，一个电子游戏也无法让玩家害怕黑暗。使用这个透镜寻找一些非游戏体验，为你的游戏提供灵感。四个不同的元素（技术、机制、故事和美学）能够被一个单纯的灵感组合起来，也能构筑不同的灵感，你应该将它们混合起来创造一些崭新的游戏。当你以现实生活为基础作为方向指导你的决定时，你的体验将会获得无可匹敌的力量和独一无二的特点。</li><li>这个透镜与体验本质透镜（2 号透镜）能够结合起来。使用无尽灵感透镜来寻找美妙的体验，使用体验本质透镜将它们纳入你的游戏中。</li></ul></li></ul><h4 id="14-号透镜：问题陈述"><a href="#14-号透镜：问题陈述" class="headerlink" title="14 号透镜：问题陈述"></a>14 号透镜：问题陈述</h4><p>要是用这个透镜，需要把你的游戏当做解决问题的方案。</p><p>问你自己这几个问题：</p><ul><li>我真正想要解决什么问题？</li><li>我是否做过一些与真正目标无关的游戏设定？</li><li>游戏是不是这个问题最好的解决方案？为什么？</li><li>我将怎样分辨出问题是否已经解决了？</li></ul><p>为游戏定义好约束条件和目标，并把这些作为问题陈述，这能帮助你更快地进入清晰的游戏设计中。</p><h4 id="15-号透镜：八项测试"><a href="#15-号透镜：八项测试" class="headerlink" title="15 号透镜：八项测试"></a>15 号透镜：八项测试</h4><p>要使用这个透镜，你的设计必须满足许多约束条件。只有当它通过了八项测试而不需要修改时，你的设计才算完成。</p><p>问你自己八个关键问题：</p><ol><li>这个游戏看起来不错吗?</li><li>我们的目标受众喜欢这个游戏吗?</li><li>这个游戏设计得不错吗?</li><li>这个游戏是否与众不同?</li><li>这个游戏能够盈利吗?</li><li>这个游戏在技术上是否具备可行性?</li><li>这个游戏完成我们的社交或者社区目标了吗?</li><li>游戏测试者是否享受这个游戏?</li></ol><p>在某些情况下，还需要考虑一些其他的测试。<br>如一个教育游戏必须回答“这个游戏达到了它的教育目标了吗?”。如果你的设计需要更多的测试，不要遗漏它们。</p><h4 id="16-号透镜：风险消除"><a href="#16-号透镜：风险消除" class="headerlink" title="16 号透镜：风险消除"></a>16 号透镜：风险消除</h4><p>是以圣人犹难之，故终无难矣。 —— 道德经</p><p>要使用这个透镜，停止积极地思考，然后开始认真考虑那些会危及游戏的风险。</p><p>问你自己这些问题：</p><ul><li>是什么让这个游戏变得平庸?</li><li>我们怎样防止这样的风险发生?</li></ul><p>风险管理很难。这意味着你必须面对那些不想碰到和立刻解决的问题。但是如果训练自己这么做，你就能进行更多次有效的迭代，获得一个更优秀的游戏。忽视潜在的问题，只专注于游戏中你最有信心的部分是一种诱惑。你必须抵抗这种诱惑，专注于游戏中的风险。</p><h4 id="17-号透镜：玩具"><a href="#17-号透镜：玩具" class="headerlink" title="17 号透镜：玩具"></a>17 号透镜：玩具</h4><p>要使用这个透镜，不要思考你的游戏是否好玩，要思考参与这个游戏是否有趣。</p><p>问你自己这些问题：</p><ul><li>如果我的游戏没有目标，它会有趣吗？如果不是，我怎样才能改进它？</li><li>当人们看到我的游戏时，他们想要与它产生互动吗，甚至在它们知道应该怎样玩之前？如果不是，我怎样才能改进它？</li></ul><p>有两种方式可以使用玩具透镜。<br>第一种方式是将其运用在一个现存游戏上，想出怎样为它添加一些玩具类的特质——怎样让它变得更亲切，操作更有趣。<br>第二种方式更加大胆，即在你还没有任何游戏创意之前运用它制作一个玩具。如果你在计划中做这件事就会有风险——但如果不是这样，这就是一个伟大的魔杖，可以帮助你找到你还没发现的绝妙游戏。</p><h4 id="18-号透镜：激情"><a href="#18-号透镜：激情" class="headerlink" title="18 号透镜：激情"></a>18 号透镜：激情</h4><p>在每个原型的结尾，当你小心地消除风险并计划下一步时，别忘了用这些重要问题检验你对游戏的感受：</p><ul><li>我对这款游戏的成功是否抱有极大激情？</li><li>如果失去了激情，怎样才能找回？</li><li>如果激情没有回来，是否应该做一些其他事？</li></ul><p>在每次冲刺的末尾，当你在研究原型和准备接下来的计划时，一定要记住做一个“激情检验”。激情就是潜意识与你交流的方式，它告诉你这个游戏是否令人兴奋。失去激情就说明一些地方出了问题——如果不能找到问题所在，游戏很可能会死去。激情也有危险性——毕竟这是一种不合理的情感。<br>必须小心对待激情，因为它往往能够击倒障碍并带领游戏走向成功。</p><h4 id="19-号透镜：玩家"><a href="#19-号透镜：玩家" class="headerlink" title="19 号透镜：玩家"></a>19 号透镜：玩家</h4><p>要是用这个透镜，你需要停止思考你的游戏，开始思考你的玩家。<br>问你自己关于这几个关于你的目标玩家的问题：</p><ul><li>他们通常喜欢什么？</li><li>他们不喜欢什么,为什么?</li><li>他们希望能在你的游戏中看到什么？</li><li>如果我处在他们的位置上,我想要在游戏中看到什么?</li><li>他们将会特别喜欢或者不喜欢游戏中的哪一部分?</li></ul><p>一个优秀的游戏设计师总是考虑并拥护他的玩家。熟练的设计师会同时使用玩家透镜和全息透镜，同时考虑玩家、游戏体验和游戏机制。思考你的玩家是一种很有用的方法，但是更有用的是观察他们玩你的游戏。你观察得越多，就越容易预测他们会喜欢什么。</p><h4 id="20-号透镜：乐趣"><a href="#20-号透镜：乐趣" class="headerlink" title="20 号透镜：乐趣"></a>20 号透镜：乐趣</h4><p>思考你的游戏提供了哪些类型的乐趣。<br>问你自己这几个问题：</p><ul><li>你的游戏能给玩家带来哪些乐趣？这些乐趣能够继续改善吗？</li><li>你的体验中缺少了哪些乐趣，为什么？能够在游戏中增加这种乐趣吗？</li></ul><p>游戏的最终目的就是带来快乐。通过浏览已知的乐趣列表，考虑你的游戏如何传达其中的每一种乐趣，你可能就有了改进游戏的灵感，让它能够为玩家带来更多乐趣。要经常留意那些独特的、未分类的、在大多数游戏中都没有的乐趣。因为只要找到一个就能让你的游戏拥有独特的体验。</p><h4 id="21-号透镜：心流"><a href="#21-号透镜：心流" class="headerlink" title="21 号透镜：心流"></a>21 号透镜：心流</h4><p>使用本透镜前，请考虑是什么在吸引玩家的注意力。<br>问自己这些问题：</p><ul><li>我的游戏有清晰的目标吗？如果没有，怎样改好？</li><li>玩家目标和我所希望的一致吗？</li><li>游戏中是否有令玩家分心，以致忘记目标的部分？若有，能否减少这些干扰，或能否融入游戏目标内？</li><li>我的游戏是否稳定提供连串不太容易，也不太难的挑战？有没有考虑到玩家的技巧可能逐步提高？</li><li>玩家的技巧提高的速率和我的期望相符吗？若不是，应该怎样改进？</li></ul><h4 id="22-号透镜：需求"><a href="#22-号透镜：需求" class="headerlink" title="22 号透镜：需求"></a>22 号透镜：需求</h4><p>要使用此透镜，先不要考虑你的游戏本身，改为考虑它满足人类的哪些基础需求。<br>问自己这些问题:</p><ul><li>我的游戏主要运作在马斯洛层次的哪一层？</li><li>我的游戏是否满足“胜任、自主、关联”的需求？</li><li>我怎样让游戏在现有水平上，满足更多基础需求?</li><li>游戏已经满足的需求，怎样令其满足得更好？</li></ul><p>说游戏能满足人类的基础需求，虽有点奇怪，但人类的一切行为，都是在以某种方式满足这些需求。记住，有些游戏比其他游戏更能满足需求——所以你的游戏不能仅仅对需求做出承诺，而要切实满足。玩家本来以为玩你的游戏能够让自己感觉良好，或者和朋友交往更密，结果你的游戏没能满足需求，玩家就会改玩其他能满足的游戏了。</p><h4 id="23-号透镜：动机"><a href="#23-号透镜：动机" class="headerlink" title="23 号透镜：动机"></a>23 号透镜：动机</h4><p>每个游戏都是由动机组成的复杂生态系统。要细致地加以研究，请问自己这些问题:</p><ul><li>玩家因何种动机来玩我的游戏？</li><li>其中哪些动机是最内在的？哪些是最外在的？</li><li>哪些是追求愉悦的？哪些是规避痛苦的？</li><li>哪些动机互相支撑？</li><li>哪些动机互相抵触？</li></ul><h4 id="24-号透镜：创新"><a href="#24-号透镜：创新" class="headerlink" title="24 号透镜：创新"></a>24 号透镜：创新</h4><blockquote><p>不同的未必总是好，更好的总是不同。 ——  斯科蒂·梅尔策(Scotty Meltzer)</p></blockquote><p>为了驾驭追求新奇的强大动机，请问自己这些问题:</p><ul><li>我的游戏有何新奇之处?</li><li>新奇之处是贯穿我的游戏，还是仅限于开头?</li><li>新奇和熟悉的混合感觉对吗?</li><li>新奇感褪去后，玩家还喜欢玩我的游戏吗?</li></ul><h4 id="25-号透镜：评断"><a href="#25-号透镜：评断" class="headerlink" title="25 号透镜：评断"></a>25 号透镜：评断</h4><p>要了解你的游戏是否能评断好玩家，问自己这些问题:</p><ul><li>针对玩家，你的游戏都评价些什么?</li><li>游戏怎样传达这种评断?</li><li>玩家觉得评断结果公平吗?</li><li>他们在意评断结果吗?</li><li>评断结果是否让他们想要加强能力?</li></ul><h4 id="26-号透镜：功能空间"><a href="#26-号透镜：功能空间" class="headerlink" title="26 号透镜：功能空间"></a>26 号透镜：功能空间</h4><p>要使用此透镜，请思考将所有表面元素剥离你的游戏之后，游戏究竟在什么空间内进行。</p><p>问自己以下问题:</p><ul><li>游戏空间是离散的还是连续的?</li><li>它有几个维度?</li><li>空间的边界在哪?</li><li>有没有子空间?空间如何互相联系?</li><li>是否有不止一种合理方式给游戏空间建立抽象模型?</li></ul><p>先专注空间，改造抽象空间布局满意后，再加以美学成分。<br>功能空间与 10 号透镜“全景设计”配合使用，效果很好。<br>如果能同时看清玩家将要体验到的抽象功能空间和美学空间，及它们之间的关联，就能充满自信地决定游戏世界的形态。</p><h4 id="27-号透镜：时间"><a href="#27-号透镜：时间" class="headerlink" title="27 号透镜：时间"></a>27 号透镜：时间</h4><p>俗话说“时间就是一切”。我们身为设计师的目标是创造体验，而体验如果太长、太短、太快、太慢，都很容易扫兴。要让你的体验长度刚刚好，可问自己以下问题:</p><ul><li>究竟是什么决定了我的游戏活动的长度?</li><li>我的玩家是否因为游戏结束太快，感到沮丧?我怎样才能改变这种状况?</li><li>我的玩家是否因为游戏时间太长，感到无聊?我怎样才能改变这种状况?</li><li>时钟和竞赛能不能让我的游戏玩法更激动人心?</li><li>时间限制也许会让玩家烦躁。我去掉时间限制会更好吗?</li><li>有层级的时间架构对我的游戏是否有益?或者说，几个小回合组成一个大回合好不好?</li></ul><p>要把时间调至合适的程度很难，但时间能成就一款游戏，也能毁掉一款游戏。听从以前歌舞艺人的格言“吊着他们的胃口 (leave’em wanting more) ” ，一般不会错。</p><h4 id="28-号透镜：状态机"><a href="#28-号透镜：状态机" class="headerlink" title="28 号透镜：状态机"></a>28 号透镜：状态机</h4><p>要使用此透镜，请思考你的游戏中哪些信息在改变。问自己这些问题:</p><ul><li>我的游戏中有什么对象?</li><li>这些对象的属性是什么?</li><li>每个属性有什么可能的状态?</li><li>每个属性中，是什么触发状态改变?</li></ul><p>玩游戏的过程就是做决定，决定是根据信息做出的。决定不同的属性、属性的状态、改变状态的事件，就是你游戏机制的核心。</p><h4 id="29-号透镜：秘密"><a href="#29-号透镜：秘密" class="headerlink" title="29 号透镜：秘密"></a>29 号透镜：秘密</h4><p>改变谁掌握哪些信息，就能彻底改变你的游戏。要使用此透镜，请思考“谁”知道“哪些”，又是“为什么。</p><p>问自己这些问题:</p><ul><li>哪些信息只有游戏本身知道?</li><li>哪些信息所有玩家知道?</li><li>哪些信息只有一些或一个玩家知道?</li><li>改变谁掌握哪些信息，可以改进我的游戏吗?</li></ul><p>游戏过程就是做决定的过程。决定则根据信息做出。决定不同的属性及其状态，以及谁了解它们，是你的游戏机制的核心。对谁知道哪些信息做一些小修改，可以极大地改变一个游戏一一或者强到飞起，或者低到尘埃里。谁知道哪些属性这件事甚至可以在游戏过程中改变——想在你的游戏中创造戏剧性，一大方法就是突然将一条重要的私密信息公开。</p><h4 id="30-号透镜：自发"><a href="#30-号透镜：自发" class="headerlink" title="30 号透镜：自发"></a>30 号透镜：自发</h4><p>要确保你的游戏有有趣的自发玩法，问自己这些问题:</p><ul><li>我的玩家有多少动词可选?</li><li>每个动词可作用于多少对象?</li><li>玩家要达成目标有多少种方式?</li><li>玩家控制多少主体?</li><li>额外效果如何改变限制条件?</li></ul><h4 id="31-号透镜：行动"><a href="#31-号透镜：行动" class="headerlink" title="31 号透镜：行动"></a>31 号透镜：行动</h4><p>要使用此透镜，请思考你的玩家能做些什么、不能做什么，分别为什么</p><p>问自己：</p><ul><li>游戏中的基础行动是什么</li><li>策略行动是什么</li><li>想要看到怎样的策略行动？怎样改变游戏，令其可能？</li><li>策略行动与基础行动的比例，满意吗</li><li>玩家在游戏中有什么想做但不能做的行动？能不能设法令其成为可能，无论作为基础行动或策略行动？</li></ul><p>没有行动的游戏就像是没有动词的句子一什么也不会发生。你身为游戏设计师要做的最基础的决定，便是确定你游戏中的行动。对这些行动进行微小改变也会对游戏造成一系列巨大影响，可能会创造出惊人的自发玩法，也可能</p><h4 id="32-号透镜：目标"><a href="#32-号透镜：目标" class="headerlink" title="32 号透镜：目标"></a>32 号透镜：目标</h4><p>为确保游戏目标适当且均衡，问自己：</p><ul><li>游戏终极目标是什么</li><li>终极目标对玩家明确吗</li><li>如果有一系列目标，玩家明白吗</li><li>不同目标是否以一种有意义方式互相关联</li><li>目标是否具体、可行、回报丰厚</li><li>短期和长期目标是否平衡</li><li>玩家有无机会决定自己的目标</li></ul><p>同时拿起玩具、好奇、目标透镜，观察游戏这些方面如何互相影响</p><h4 id="33-号透镜：规则"><a href="#33-号透镜：规则" class="headerlink" title="33 号透镜：规则"></a>33 号透镜：规则</h4><p>深刻观察游戏，直到能辨别最基础架构，回答：</p><ul><li>游戏中的基本规则是哪些，这些规则和操作规则有何不同</li><li>开发过程中有没有形成“条例”或“房规”，这些是否应该直接纳入游戏中</li><li>游戏中有不同模式吗？这些模式让一切更简单还是更复杂？减少一些模式会让游戏更好玩吗？还是增加模式？</li><li>谁来执行规则</li><li>规则是简单易懂，还是有晦涩之处？如果有晦涩之处需要修订，应该修改规则还是更清楚地解释规则？</li></ul><p>常见误解是以为设计师做下来写一套规则就能做出游戏。一般不是。游戏规则是在实验中逐步完善的。设计师的头脑一般都在“操作规则”领域里工作，偶尔在思考怎样调整、改善游戏的时候，才切换到“基础规则”视角。“书面规则”一般在游戏能玩之后，接近收尾时形成。确保规则覆盖到每一种可能情况，是设计师的工作。一定要在试玩的同时做好记录，因为正是试玩过程会暴露出规则漏洞——如果只是随便修修补补，不认真记录，同样的漏洞会再现。<br>游戏即其规则，不可不在规则上花费足够时间和思量。</p><h4 id="34-号透镜：技巧"><a href="#34-号透镜：技巧" class="headerlink" title="34 号透镜：技巧"></a>34 号透镜：技巧</h4><p>不观察游戏本身，观察游戏要求玩家发挥的技巧。</p><ul><li>游戏需要玩家拥有何种技能</li><li>其中是否缺少某个类别技能</li><li>哪些技能占主导地位</li><li>这些技能是想要创造的体验吗</li><li>是否有一些玩家的这些技能远超其他玩家？是否会让游戏感觉不公平？</li><li>玩家能否通过练习提高技巧，从而感觉掌握了游戏</li><li>游戏需要的技巧水平合适吗</li></ul><p>发挥技巧可以让人很快乐——这是人们喜爱游戏的一大原因<br>当然了，技巧水平和难度需要处于“心流”区间<br>技巧很大程度上定义体验，技巧透镜和 2 号透镜“本质体验”结合使用，效果很好。</p><h4 id="35-号透镜：期望值"><a href="#35-号透镜：期望值" class="headerlink" title="35 号透镜：期望值"></a>35 号透镜：期望值</h4><p>思考游戏内发生的各种不同事件，以及它们对玩家的意义</p><ul><li>某件事发生的实际概率？</li><li>其感知概率？</li><li>这件事的结果的价值？价值能否被量化？有没有没考虑到的无形价值？</li><li>把所有可能结果相加，玩家所有行为都有不同期望。对这些值满意吗？是否给玩家有趣的选择？会不会奖赏太多？或惩罚太多？</li></ul><p>期望值是分析游戏平衡的有力工具。难点是某些可能性的量化，如“拥有了传送门道具”，但还是可以猜。<br>调整参数就是调整对结果数值的估计。<br>量化这些偏无形的元素可能很有启发，因为这能让你接地气地思考对玩家有价值的东西是什么，以及为什么。<br>这些接地气的知识，能让你控制游戏平衡性。</p><h4 id="36-号透镜：概率"><a href="#36-号透镜：概率" class="headerlink" title="36 号透镜：概率"></a>36 号透镜：概率</h4><p>专注于游戏中包含随机和风险的部分，时刻记住两者有不同之处<br>问自己</p><ul><li>游戏中真正随机的内容是什么？哪些部分只是感觉起来随机</li><li>随机性给玩家的，是刺激和挑战等积极情感，还是绝望和缺乏控制等消极情感</li><li>改变概率分布曲线能改进游戏吗</li><li>玩家能在游戏中冒各种有趣风险吗</li><li>游戏中，概率与技巧有何关系？有没有办法让随机元素感觉像是在发挥技巧？有没有办法让发挥技巧感觉像是在冒风险？</li></ul><p>风险和随机性就像香料。完全不加的游戏可能淡而无味，加多了又会遮盖游戏原本味道。要运用得恰到好处。<br>要运用，需要深入观察游戏，看看风险和随机性在何处自然浮现，然后决定如何驯服之，令其为你服务。<br>不要陷入思维陷阱，以为投骰子或者生成随机数才会产生概率相关元素。正相反，在玩家遭遇未知的每个时刻，你都能找到它们。</p><h4 id="37-号透镜：公平"><a href="#37-号透镜：公平" class="headerlink" title="37 号透镜：公平"></a>37 号透镜：公平</h4><p>要使用公平透镜，从玩家视角思考游戏。考虑玩家技巧水平，找到方法让每个玩家都有机会获胜，且各自都认为公平。</p><ul><li>游戏应该对称吗，为什么</li><li>游戏应该不对称吗，为什么</li><li>哪点更重要？<ul><li>游戏应能有效衡量谁的技巧水平最高</li><li>游戏应该为所有玩家都带来有趣挑战</li></ul></li><li>如果想让不同水平玩家一起玩，会用什么手段，令游戏对所有人都具有趣味性和挑战性</li></ul><h4 id="38-号透镜：挑战"><a href="#38-号透镜：挑战" class="headerlink" title="38 号透镜：挑战"></a>38 号透镜：挑战</h4><p>挑战几乎是所有游戏玩法的核心。甚至可以说，游戏由其目标和挑战所定义。检查游戏中的挑战，问自己：</p><ul><li>游戏中的挑战是什么</li><li>太容易？太难？刚刚好？</li><li>这些挑战能否容纳各种技巧水平</li><li>随着玩家不断成功，挑战难度如何增长</li><li>挑战种类是否足够多样</li><li>游戏中最高水平挑战是什么</li></ul><h4 id="39-号透镜：有意义的选择"><a href="#39-号透镜：有意义的选择" class="headerlink" title="39 号透镜：有意义的选择"></a>39 号透镜：有意义的选择</h4><p>当做出有意义选择后，会觉得自己做的事情很重要。问自己：</p><ul><li>我要求玩家作何种选择</li><li>这些选择有意义吗？怎么做呢？</li><li>给玩家的选择数量对吗？加多些，是否会让他们更有力量感？减少些，是否让游戏更清晰？</li><li>游戏中是否有最优策略</li></ul><h4 id="40-号透镜：三角形"><a href="#40-号透镜：三角形" class="headerlink" title="40 号透镜：三角形"></a>40 号透镜：三角形</h4><p>让玩家选择小心行事获得小回报，还是放手一搏获得大回报，是很有效的方式。可以让游戏兴奋有趣。问自己：</p><ul><li>游戏中有三角形了吗，如果没有，怎么改进</li><li>我尝试构建的三角形平衡吗，换言之，回报和风险成比例吗</li></ul><p>一旦在各种游戏中寻找三角形，就会发现它无处不在。添加一点三角形，会让游戏变得令人兴奋而满足。</p><h4 id="41-号透镜：技巧与概率"><a href="#41-号透镜：技巧与概率" class="headerlink" title="41 号透镜：技巧与概率"></a>41 号透镜：技巧与概率</h4><p>问自己</p><ul><li>玩家是来接受评断（技巧）的，还是来冒风险（概率）的</li><li>技巧一般比概率更严肃，这是个严肃游戏，还是休闲游戏</li><li>游戏有没有乏味部分，如果有，加入概率能盘活吗</li><li>游戏中有没有感觉太随机的部分，如果有，将概率元素替换为技巧或策略元素，能让玩家感觉控制感更强吗</li></ul><h4 id="42-号透镜：头与手"><a href="#42-号透镜：头与手" class="headerlink" title="42 号透镜：头与手"></a>42 号透镜：头与手</h4><p>Yogi Berra 曾经说过：“棒球是 90% 的精神，另一半是身体。”为确保心理和生理元素在游戏内获得真实平衡，问自己</p><ul><li>我的玩家想要无脑动作，还是智力挑战</li><li>游戏里更多地方包含解密，会更有趣吗</li><li>有没有地方可以让玩家放松大脑，只管玩，不用想事情</li><li>能不能给玩家一个选择——可以展示高度敏捷，也可以找到一个最不需要身体技巧的聪明策略</li><li>如果 1 分是纯身体，10 分是纯精神，游戏得几分</li></ul><p>此透镜与 19 号透镜 “玩家” 共同使用效果尤其好</p><h4 id="43-号透镜：竞争"><a href="#43-号透镜：竞争" class="headerlink" title="43 号透镜：竞争"></a>43 号透镜：竞争</h4><p>确定某件事情上谁最优秀，是人的基本冲动。竞争类游戏能满足这种冲动。</p><ul><li>我的游戏对玩家技巧高低的衡量公平吗</li><li>人们是否想赢得我的游戏，为什么</li><li>在这个游戏中获胜是可以自豪的事情吗，为什么</li><li>新手可以在我的游戏中有意义地竞争吗</li><li>专家可以在我的游戏中有意义地竞争吗</li><li>专家们是否普遍肯定他们会打败新手</li></ul><h4 id="44-号透镜：合作"><a href="#44-号透镜：合作" class="headerlink" title="44 号透镜：合作"></a>44 号透镜：合作</h4><p>团队协作并取得成功是种特别快乐，可以创建持久社交纽带</p><ul><li>合作需要沟通。我的玩家有足够契机来沟通吗，如何加强沟通</li><li>玩家们已经是朋友，还是陌生人？如果是陌生人，可以帮助他们破冰吗</li><li>玩家们合作时有协同作用（1+1&gt;2）或是妨碍作用（1+1&lt;2）吗，为什么</li><li>玩家们都是相同角色，还是有特殊分工</li><li>如果只靠一个人无法完成某项任务，就嫩恶搞大大加强合作，游戏中有此类任务吗</li><li>强制沟通的任务会激发合作，我又强制沟通的任务吗</li></ul><h4 id="45-号透镜：竞争与合作"><a href="#45-号透镜：竞争与合作" class="headerlink" title="45 号透镜：竞争与合作"></a>45 号透镜：竞争与合作</h4><ul><li>如果 1 分是竞争，10 分是合作，我的游戏得几分</li><li>我能不能让玩家选择，是合作还是竞争</li><li>我的受众喜欢竞争、合作，还是两者混合</li><li>团队竞争适合我的游戏吗，我的游戏中，是团队竞争好玩，还是单人竞争好玩</li></ul><h4 id="46-号透镜：奖励"><a href="#46-号透镜：奖励" class="headerlink" title="46 号透镜：奖励"></a>46 号透镜：奖励</h4><p>要确定游戏是否在正确时间、以正确的量给出正确奖励，问自己</p><ul><li>我的游戏现在给出哪些奖励，还能给出其他的吗</li><li>玩家在游戏中得到奖励后，是激动还是无聊，为什么</li><li>收到奖赏却不理解，如同没有奖赏，玩家理解他们收到的奖赏吗</li><li>游戏中送出的奖赏是不是太有规律，能不能用更多变的方式送出</li><li>奖励之间有何联系，有没有办法让它们连接得更好</li><li>奖励逐渐累积的方式如何，太快，太慢，还是正好</li></ul><p>要想确认奖励对不对，量是否合适，时机是否合适，只能通过试错和迭代。也没有办法取悦所有玩家，要安心于“足够好”。</p><h4 id="47-号透镜：惩罚"><a href="#47-号透镜：惩罚" class="headerlink" title="47 号透镜：惩罚"></a>47 号透镜：惩罚</h4><p>惩罚要小心使用<br>适当平衡的惩罚可以让游戏中的一切更有意义，玩家在其中成功后也会有真正自豪感</p><ul><li>游戏中有什么惩罚</li><li>为什么要惩罚玩家？希望通过它来实现什么？</li><li>惩罚在玩家看来公平吗？为什么？</li><li>有没有办法把惩罚改成奖励，并收到同样或更好的效果</li><li>强力惩罚，有没有相应丰厚的回报来平衡？</li></ul><h4 id="48-号透镜：简单-复杂"><a href="#48-号透镜：简单-复杂" class="headerlink" title="48 号透镜：简单/复杂"></a>48 号透镜：简单/复杂</h4><p>使用该透镜，能使得游戏从简单系统中产生有意义的复杂性</p><ul><li>游戏有什么元素是固有复杂的</li><li>有办法令这种固有复杂性变为自发复杂性吗</li><li>游戏中是否会产生自发复杂元素，如果没有，为什么</li><li>游戏中是否有些元素太过简单</li></ul><h4 id="49-号透镜：优雅"><a href="#49-号透镜：优雅" class="headerlink" title="49 号透镜：优雅"></a>49 号透镜：优雅</h4><ul><li>我的游戏有哪些元素</li><li>每个元素的目的是什么？全部数出来，给每个元素一个优雅评分</li><li>有的元素只有一个或两个目的，能否合并一些或干脆剔除？</li><li>有的元素有多重目的，能否让它们承担更多目的？</li></ul><h4 id="50-号透镜：性格"><a href="#50-号透镜：性格" class="headerlink" title="50 号透镜：性格"></a>50 号透镜：性格</h4><p>优雅和性格是对立的，就像缩小版的简单和复杂，也必须保持平衡<br>要确保游戏中有些可爱的怪地方能定义其性格</p><ul><li>游戏中有没有奇怪的东西，玩家会激动地讨论它们？</li><li>游戏有没有好玩的特性，令其与众不同？</li><li>游戏里有没有玩家喜欢的缺陷？</li></ul><h4 id="51-号透镜：想象力"><a href="#51-号透镜：想象力" class="headerlink" title="51 号透镜：想象力"></a>51 号透镜：想象力</h4><ul><li>要玩我的游戏，玩家必须明白什么</li><li>用一些想象元素能帮助他们更好地理解吗</li><li>在这个游戏中，我们提供哪些高质量、真实的细节</li><li>哪些细节，如果由我们提供，质量会降低？可以改用想象力方法来填补差距吗</li><li>能给出些细节，让想象力一次又一次来使用吗</li><li>提供的哪些细节能激发想象力</li><li>提供的哪些细节会扼杀想象力</li></ul><h4 id="52-号透镜：经济系统"><a href="#52-号透镜：经济系统" class="headerlink" title="52 号透镜：经济系统"></a>52 号透镜：经济系统</h4><p>给游戏一个经济系统，能让其自己产生令人惊讶的深度和生命。</p><ul><li>我的玩家可以怎样赚到钱？还应该有其他方式吗</li><li>玩家可以买什么？为什么？</li><li>钱会来得太容易吗？太难吗？怎样改变呢</li><li>有关赚钱花钱的选择有意义吗</li><li>在我的游戏里做一种通用货币是好主意吗？还是应该有特殊金币呢</li></ul><h4 id="53-号透镜：平衡"><a href="#53-号透镜：平衡" class="headerlink" title="53 号透镜：平衡"></a>53 号透镜：平衡</h4><p>游戏平衡有许多类型，每种都很重要，但不要迷失在细节中，问自己</p><ul><li>我的游戏感觉对吗？为什么对？为什么不对？</li></ul><h4 id="54-号透镜：可达性"><a href="#54-号透镜：可达性" class="headerlink" title="54 号透镜：可达性"></a>54 号透镜：可达性</h4><p>当将一个谜题展示给玩家的时候（或任何一种游戏），他们应该可以清楚知道最开始几个步骤应该是什么样子的</p><ul><li>玩家怎么知道如何解开我的谜题或者玩我的游戏？我是否需要解释，或者它是显而易见的？</li><li>我的谜题或游戏是否和他们之前见过的东西相像？如果是，我怎样才能让他们注意到这些相似点？若不是，怎样让他们理解谜题或游戏的动作？</li><li>谜题或游戏是否吸引玩家并且让他们想感受它 操作它？若不是，如何改变它才能让它变得吸引人</li></ul><h4 id="55-号透镜：可见进步"><a href="#55-号透镜：可见进步" class="headerlink" title="55 号透镜：可见进步"></a>55 号透镜：可见进步</h4><p>玩家在解决难题的时候需要看见他们正在进步，为确保他们能够得到这个反馈，问</p><ul><li>在你的游戏或谜题中取得进步意味着什么</li><li>在我的游戏中有足够的成长吗？是否有方法能让我添加更多的中间步骤来让玩家逐步取得成功</li><li>哪些成长是可见的，哪些成长是隐藏的？是否能找到一种方法来揭示那些隐藏的成长</li></ul><h4 id="56-号透镜：平行性"><a href="#56-号透镜：平行性" class="headerlink" title="56 号透镜：平行性"></a>56 号透镜：平行性</h4><p>谜题中的平行性有益于提升玩家体验</p><ul><li>我的设计中存在瓶颈以致若玩家不能通过一个特定挑战就无法前进吗？若是，当玩家碰到这个挑战时，是否可以给玩家增加一个平行挑战</li><li>若平行挑战太相似，平行性则无益。每个平行挑战之间是否足够不同，可以给予玩家多样性的益处</li><li>我的平行挑战可以以某种方式联系起来吗？是否有办法使战胜挑战所取得的进步可以让解决另外的挑战变得更容易</li></ul><h4 id="57-号透镜：金字塔"><a href="#57-号透镜：金字塔" class="headerlink" title="57 号透镜：金字塔"></a>57 号透镜：金字塔</h4><p>金字塔使我们着迷，是因为他有一个单一最高点。为赋予谜题古老金字塔的魅力，问</p><ul><li>是否有办法将谜题中的所有部分注入游戏最终的单一挑战中</li><li>巨大金字塔经常由小金字塔组成——是否可以拥有一个具有前所未有挑战性的谜题元素层次，逐步走向最终挑战</li><li>我的金字塔顶部的挑战是否有趣、吸引人、清晰？是否让人想要为了达到它而愿意去工作？</li></ul><h4 id="58-号透镜：谜题"><a href="#58-号透镜：谜题" class="headerlink" title="58 号透镜：谜题"></a>58 号透镜：谜题</h4><p>谜题使得玩家停下来思考。要确保你的谜题为达到你所塑造的玩家体验而全力以赴，问</p><ul><li>我的游戏中的谜题是什么</li><li>应不应该制作更多谜题，或者减少谜题？为什么</li><li>十条谜题原则中有哪些适用于我的谜题</li><li>游戏是否有任何不适宜的谜题，怎样才能把它们更好融入游戏？（使用 49 号透镜，优雅，来实现）</li></ul><h4 id="59-号透镜：控制"><a href="#59-号透镜：控制" class="headerlink" title="59 号透镜：控制"></a>59 号透镜：控制</h4><p>这个透镜的作用不只是用来检查你的界面，因为有意义的控制对沉浸式互动非常重要。问</p><ul><li>当玩家使用界面时，是否能尽其责？若不能，为什么</li><li>直观界面给人以控制感。你的界面容易还是难以掌握呢</li><li>玩家是否感觉他们对游戏的结果有强烈影响力？若不是，如何改变这种情况？</li><li>感觉强大=掌控感。你的玩家是否感觉强大？是否能设法使他们感觉更强大呢</li></ul><h4 id="60-号透镜：物理界面"><a href="#60-号透镜：物理界面" class="headerlink" title="60 号透镜：物理界面"></a>60 号透镜：物理界面</h4><p>![[游戏设计艺术#60 号透镜：物理界面]]</p><h4 id="61-号透镜：虚拟界面"><a href="#61-号透镜：虚拟界面" class="headerlink" title="61 号透镜：虚拟界面"></a>61 号透镜：虚拟界面</h4><p>![[游戏设计艺术#61 号透镜：虚拟界面]]</p><h4 id="62-号透镜：透明"><a href="#62-号透镜：透明" class="headerlink" title="62 号透镜：透明"></a>62 号透镜：透明</h4><p>![[游戏设计艺术#62 号透镜：透明]]</p><h4 id="63-号透镜：反馈"><a href="#63-号透镜：反馈" class="headerlink" title="63 号透镜：反馈"></a>63 号透镜：反馈</h4><p>![[游戏设计艺术#63 号透镜：反馈]]</p><h4 id="64-号透镜：多汁"><a href="#64-号透镜：多汁" class="headerlink" title="64 号透镜：多汁"></a>64 号透镜：多汁</h4><p>![[游戏设计艺术#64 号透镜：多汁]]</p><h4 id="65-号透镜：原始性"><a href="#65-号透镜：原始性" class="headerlink" title="65 号透镜：原始性"></a>65 号透镜：原始性</h4><p>![[游戏设计艺术#65 号透镜：原始性]]</p><h4 id="66-号透镜：通道和维度"><a href="#66-号透镜：通道和维度" class="headerlink" title="66 号透镜：通道和维度"></a>66 号透镜：通道和维度</h4><p>![[游戏设计艺术#66 号透镜：通道和维度]]</p><h4 id="67-号透镜：模式"><a href="#67-号透镜：模式" class="headerlink" title="67 号透镜：模式"></a>67 号透镜：模式</h4><p>![[游戏设计艺术#67 号透镜：模式]]</p><h4 id="67-5-号透镜：隐喻"><a href="#67-5-号透镜：隐喻" class="headerlink" title="67.5 号透镜：隐喻"></a>67.5 号透镜：隐喻</h4><p>![[游戏设计艺术#67.5 号透镜：隐喻]]</p><h4 id="68-号透镜：时刻"><a href="#68-号透镜：时刻" class="headerlink" title="68 号透镜：时刻"></a>68 号透镜：时刻</h4><p>![[游戏设计艺术#68 号透镜：时刻]]</p><h4 id="69-号透镜：兴趣曲线"><a href="#69-号透镜：兴趣曲线" class="headerlink" title="69 号透镜：兴趣曲线"></a>69 号透镜：兴趣曲线</h4><p>![[游戏设计艺术#69 号透镜：兴趣曲线]]</p><h4 id="70-号透镜：内部兴趣"><a href="#70-号透镜：内部兴趣" class="headerlink" title="70 号透镜：内部兴趣"></a>70 号透镜：内部兴趣</h4><p>![[游戏设计艺术#70 号透镜：内部兴趣]]</p><h4 id="71-号透镜：美丽"><a href="#71-号透镜：美丽" class="headerlink" title="71 号透镜：美丽"></a>71 号透镜：美丽</h4><p>![[游戏设计艺术#71 号透镜：美丽]]</p><h4 id="72-号透镜：投影"><a href="#72-号透镜：投影" class="headerlink" title="72 号透镜：投影"></a>72 号透镜：投影</h4><p>![[游戏设计艺术#72 号透镜：投影]]</p><h4 id="73-号透镜：故事机器"><a href="#73-号透镜：故事机器" class="headerlink" title="73 号透镜：故事机器"></a>73 号透镜：故事机器</h4><p>![[游戏设计艺术#73 号透镜：故事机器]]</p><h4 id="74-号透镜：障碍"><a href="#74-号透镜：障碍" class="headerlink" title="74 号透镜：障碍"></a>74 号透镜：障碍</h4><p>![[游戏设计艺术#74 号透镜：障碍]]</p><h4 id="75-号透镜-简单和超越"><a href="#75-号透镜-简单和超越" class="headerlink" title="75 号透镜 简单和超越"></a>75 号透镜 简单和超越</h4><p>![[游戏设计艺术#75 号透镜 简单和超越]]</p><h4 id="76-号透镜：英雄的旅程"><a href="#76-号透镜：英雄的旅程" class="headerlink" title="76 号透镜：英雄的旅程"></a>76 号透镜：英雄的旅程</h4><p>![[游戏设计艺术#76 号透镜：英雄的旅程]]</p><h4 id="77-号透镜：最奇怪的东西"><a href="#77-号透镜：最奇怪的东西" class="headerlink" title="77 号透镜：最奇怪的东西"></a>77 号透镜：最奇怪的东西</h4><p>![[游戏设计艺术#77 号透镜：最奇怪的东西]]</p><h4 id="78-号透镜：故事"><a href="#78-号透镜：故事" class="headerlink" title="78 号透镜：故事"></a>78 号透镜：故事</h4><p>![[游戏设计艺术#78 号透镜：故事]]</p><h4 id="79-号透镜：自由"><a href="#79-号透镜：自由" class="headerlink" title="79 号透镜：自由"></a>79 号透镜：自由</h4><p>![[游戏设计艺术#79 号透镜：自由]]</p><h4 id="80-号透镜：帮助"><a href="#80-号透镜：帮助" class="headerlink" title="80 号透镜：帮助"></a>80 号透镜：帮助</h4><p>![[游戏设计艺术#80 号透镜：帮助]]</p><h4 id="81-号透镜：间接控制"><a href="#81-号透镜：间接控制" class="headerlink" title="81 号透镜：间接控制"></a>81 号透镜：间接控制</h4><p>![[游戏设计艺术#81 号透镜：间接控制]]</p><h4 id="82-号透镜：串通"><a href="#82-号透镜：串通" class="headerlink" title="82 号透镜：串通"></a>82 号透镜：串通</h4><p>![[游戏设计艺术#82 号透镜：串通]]</p><h4 id="83-号透镜：幻想"><a href="#83-号透镜：幻想" class="headerlink" title="83 号透镜：幻想"></a>83 号透镜：幻想</h4><p>![[游戏设计艺术#83 号透镜：幻想]]</p><h4 id="84-号透镜：世界"><a href="#84-号透镜：世界" class="headerlink" title="84 号透镜：世界"></a>84 号透镜：世界</h4><p>![[游戏设计艺术#84 号透镜：世界]]</p><h4 id="85-号透镜：化身"><a href="#85-号透镜：化身" class="headerlink" title="85 号透镜：化身"></a>85 号透镜：化身</h4><p>![[游戏设计艺术#85 号透镜：化身]]</p><h4 id="86-号透镜：角色功能"><a href="#86-号透镜：角色功能" class="headerlink" title="86 号透镜：角色功能"></a>86 号透镜：角色功能</h4><p>![[游戏设计艺术#86 号透镜：角色功能]]</p><h4 id="87-号透镜：角色特征"><a href="#87-号透镜：角色特征" class="headerlink" title="87 号透镜：角色特征"></a>87 号透镜：角色特征</h4><p>![[游戏设计艺术#87 号透镜：角色特征]]</p><h4 id="88-号透镜：人际关系环状图"><a href="#88-号透镜：人际关系环状图" class="headerlink" title="88 号透镜：人际关系环状图"></a>88 号透镜：人际关系环状图</h4><p>![[游戏设计艺术#88 号透镜：人际关系环状图]]</p><h4 id="89-号透镜：角色网络"><a href="#89-号透镜：角色网络" class="headerlink" title="89 号透镜：角色网络"></a>89 号透镜：角色网络</h4><p>![[游戏设计艺术#89 号透镜：角色网络]]</p><h4 id="90-号透镜：地位"><a href="#90-号透镜：地位" class="headerlink" title="90 号透镜：地位"></a>90 号透镜：地位</h4><p>![[游戏设计艺术#90 号透镜：地位]]</p><h4 id="91-号透镜：角色转变"><a href="#91-号透镜：角色转变" class="headerlink" title="91 号透镜：角色转变"></a>91 号透镜：角色转变</h4><p>![[游戏设计艺术#91 号透镜：角色转变]]</p><h4 id="92-号透镜：内在矛盾"><a href="#92-号透镜：内在矛盾" class="headerlink" title="92 号透镜：内在矛盾"></a>92 号透镜：内在矛盾</h4><p>![[游戏设计艺术#92 号透镜：内在矛盾]]</p><h4 id="93-号透镜：难以名状的特性"><a href="#93-号透镜：难以名状的特性" class="headerlink" title="93 号透镜：难以名状的特性"></a>93 号透镜：难以名状的特性</h4><p>![[游戏设计艺术#93 号透镜：难以名状的特性]]</p><h4 id="93-1-2-号透镜：临场感"><a href="#93-1-2-号透镜：临场感" class="headerlink" title="93 1/2 号透镜：临场感"></a>93 1/2 号透镜：临场感</h4><p>![[游戏设计艺术#93 1/2 号透镜：临场感]]</p><h4 id="94-号透镜：氛围"><a href="#94-号透镜：氛围" class="headerlink" title="94 号透镜：氛围"></a>94 号透镜：氛围</h4><p>![[游戏设计艺术#94 号透镜：氛围]]</p><h4 id="95-号透镜：旁观"><a href="#95-号透镜：旁观" class="headerlink" title="95 号透镜：旁观"></a>95 号透镜：旁观</h4><p>![[游戏设计艺术#95 号透镜：旁观]]</p><h4 id="95-1-2-号透镜：作弊"><a href="#95-1-2-号透镜：作弊" class="headerlink" title="95 1/2 号透镜：作弊"></a>95 1/2 号透镜：作弊</h4><p>![[游戏设计艺术#95 1/2 号透镜：作弊]]</p><h4 id="96-号透镜：友谊"><a href="#96-号透镜：友谊" class="headerlink" title="96 号透镜：友谊"></a>96 号透镜：友谊</h4><p>![[游戏设计艺术#96 号透镜：友谊]] </p><h4 id="97-号透镜：表达"><a href="#97-号透镜：表达" class="headerlink" title="97 号透镜：表达"></a>97 号透镜：表达</h4><p>![[游戏设计艺术#97 号透镜：表达]]</p><h4 id="98-号透镜：社群"><a href="#98-号透镜：社群" class="headerlink" title="98 号透镜：社群"></a>98 号透镜：社群</h4><p>![[游戏设计艺术#98 号透镜：社群]]</p><h4 id="99-号透镜：恶意破坏"><a href="#99-号透镜：恶意破坏" class="headerlink" title="99 号透镜：恶意破坏"></a>99 号透镜：恶意破坏</h4><p>![[游戏设计艺术# 99 号透镜：恶意破坏]]</p><h4 id="100-号透镜：爱"><a href="#100-号透镜：爱" class="headerlink" title="100 号透镜：爱"></a>100 号透镜：爱</h4><p>![[游戏设计艺术#100 号透镜：爱]]</p><h4 id="101-号透镜：团队"><a href="#101-号透镜：团队" class="headerlink" title="101 号透镜：团队"></a>101 号透镜：团队</h4><p>![[游戏设计艺术#101 号透镜：团队]]</p><h4 id="102-号透镜：文档"><a href="#102-号透镜：文档" class="headerlink" title="102 号透镜：文档"></a>102 号透镜：文档</h4><p>![[游戏设计艺术#102 号透镜：文档]]</p><h4 id="103-号透镜：试玩测试"><a href="#103-号透镜：试玩测试" class="headerlink" title="103 号透镜：试玩测试"></a>103 号透镜：试玩测试</h4><p>![[游戏设计艺术#103 号透镜：试玩测试]]</p><h4 id="104-号透镜：技术"><a href="#104-号透镜：技术" class="headerlink" title="104 号透镜：技术"></a>104 号透镜：技术</h4><p>![[游戏设计艺术#104 号透镜：技术]]</p><h4 id="105-号透镜：水晶球"><a href="#105-号透镜：水晶球" class="headerlink" title="105 号透镜：水晶球"></a>105 号透镜：水晶球</h4><p>![[游戏设计艺术#105 号透镜：水晶球]]</p><h4 id="106-号透镜：理想世界"><a href="#106-号透镜：理想世界" class="headerlink" title="106 号透镜：理想世界"></a>106 号透镜：理想世界</h4><p>![[游戏设计艺术#106 号透镜：理想世界]]</p><h4 id="107-号透镜：客户"><a href="#107-号透镜：客户" class="headerlink" title="107 号透镜：客户"></a>107 号透镜：客户</h4><p>![[游戏设计艺术#107 号透镜：客户]]</p><h4 id="108-号透镜：推销"><a href="#108-号透镜：推销" class="headerlink" title="108 号透镜：推销"></a>108 号透镜：推销</h4><p>![[游戏设计艺术#108 号透镜：推销]]</p><h4 id="109-号透镜：利益"><a href="#109-号透镜：利益" class="headerlink" title="109 号透镜：利益"></a>109 号透镜：利益</h4><p>![[游戏设计艺术#109 号透镜：利益]]</p><h4 id="110-号透镜：塑造性"><a href="#110-号透镜：塑造性" class="headerlink" title="110 号透镜：塑造性"></a>110 号透镜：塑造性</h4><p>![[游戏设计艺术#110 号透镜：塑造性]]</p><h4 id="111-号透镜：责任"><a href="#111-号透镜：责任" class="headerlink" title="111 号透镜：责任"></a>111 号透镜：责任</h4><p>![[游戏设计艺术#111 号透镜：责任]]</p><h4 id="112-号透镜：乌鸦"><a href="#112-号透镜：乌鸦" class="headerlink" title="112 号透镜：乌鸦"></a>112 号透镜：乌鸦</h4><p>![[游戏设计艺术#112 号透镜：乌鸦]] </p><h4 id="无限号透镜：秘密目的"><a href="#无限号透镜：秘密目的" class="headerlink" title="无限号透镜：秘密目的"></a>无限号透镜：秘密目的</h4><p>![[游戏设计艺术#无限号透镜：秘密目的]]</p><hr><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ul><li>第 22 条军规<ul><li>指个人面对自相矛盾的规定,无法逃脱的悖论。典出美国长篇小说《第22条军规》。</li></ul></li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第一章-太初之时，有设计师"><a href="#第一章-太初之时，有设计师" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h3><ul><li><p>《太阳马戏团:火花-点燃我们心中的创意之火》 (Cirque du Soleil: The Spark-Igniting the Creative Fire that Lives within Us All) 约翰.U.培根 (John U. Bacon) 、琳恩·休厄德(Lyn Heward)著。这是一本很棒的小书,教你怎么找到自己的道路。</p></li><li><p>【游戏设计师修炼秘笈》 (Challenges for Game Designers) , Brenda Brathwaite、施雷伯(lan Schreiber)著。这是一套非常出色的习题集,当你想要锻炼游戏设计肌肉时可以做。</p></li></ul><h3 id="第三章-体验发生与场景"><a href="#第三章-体验发生与场景" class="headerlink" title="第三章 体验发生与场景"></a>第三章 体验发生与场景</h3><ul><li>克里斯多弗·亚历山大等人撰写的《模式语言》 (A Pattern Language by Christopher Alexander et al)。这是一本令人深思的著作,讲述了人类与居住空间的关系。我们将会在第 21 章《空间》中再次介绍这本书。</li></ul><h3 id="第四章-体验从游戏中诞生"><a href="#第四章-体验从游戏中诞生" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h3><ul><li><p>罗格·卡洛伊斯撰写的《男人、玩乐与游戏》 (Man, Play, and Games byRoger Callois)。这本写于 1961 年的书长久以来都是学者们研究游戏的最爱。不仅如此,这本书对游戏玩法的本质有许多与众不同的观点,读起来让人爱不释手。</p></li><li><p>詹姆斯·P.卡斯撰写的《有限与无限的游戏》 (Finite and Infinite GamesbyJames P. Carse)。这是一本简短而令人鼓舞的书,它对游戏与生活的关系有着迷人的哲学陈述。</p></li><li><p>尼科尔·拉扎罗撰写的《我们为什么玩游戏:故事以外情感的四个关键要素》 (Why We Play Games: Four Keys to Emotion without Story by NicoleLazzaro) 。这是一次对乐趣维度的激进探索。</p></li><li><p>卡蒂·萨伦与埃里克·齐默尔曼撰写的《玩乐之道》的第 7 章与第 8 章 (Rules of Play by Katie Salen and Eric Zimmerman, Chapters 7 and 8) 。这两章包含了一些关于游戏定义的值得深思的结论。</p></li><li><p>巴纳德·休茨撰写的《蝈蝈:游戏、生活与乌托邦》 (The Grasshopper: Games, Life, and Utopia by Bernard Suits ( pronounced “sweets”) 。这是一场关于游戏本质的不可思议的心理学试验。休茨对游戏的定义激怒了我,然而我却无法驳倒他。</p></li></ul><h3 id="第六章-元素支撑起主题"><a href="#第六章-元素支撑起主题" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h3><ul><li>里奇·戈尔德撰写的《丰饶》 (The Plenitude by Rich Gold) 。在任天堂力量手套设计师的智慧宝库中,提供主题仅仅只是话题之一。</li></ul><h3 id="第七章-游戏始于一个创意"><a href="#第七章-游戏始于一个创意" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h3><ul><li><p>林达·巴里撰写的《这是什么》和《设想一下》 (What It Is and PictureThis by Lynda Barry) 。这两本伟大的著作无缝整合了文字与艺术作品,它们将用创作过程中的残酷现实激励你,鞭策你。</p></li><li><p>萨尔瓦多·达利撰写的《五十个魔法技术的秘密》 (Fifty Secrets of Magic Craftsmanship by Salvador Dali) 。这本书并不出名,但它为创造天才的大脑打开了一扇新的窗户。</p></li><li><p>凯尔·加布勒,凯尔·格雷,马特·库契奇和沙林·舍第汗撰写的《怎样 在七天内完成一个游戏原型》 (Prototyping a Game in 7 Days by Kyle Gray, Kyle Gabler, Matt Kucic, and Shalin Shodhan) 。这篇短论文充满了对快速制作原型的绝妙建议。</p></li><li><p>朱利安·杰恩斯撰写的《左右脑分解中的意识起源》的第 1 章(The Origin of Consciousness in the Breakdown of the Bicameral Mind by Julian Jaynes Chapter 1) 。这本有争议的书会让你再次思考意识的本质以及你与潜意识的关系。</p></li><li><p>约拿·莱勒撰写的《群体思想:头脑风暴神话》 (Groupthink: The Brainstorming Myth by Jonah Lehrer in The New Yorker. January 30) 。这本书是对过去、现在和未来头脑风暴的概述。</p></li></ul><p> - 大卫·林奇撰写的《钓上大鱼》 (Catching the Big Fish by David Lynch)这本简短的书由一位电影制片人撰写,提供了一些绝佳的创意快照</p><h3 id="第八章-游戏通过迭代提高"><a href="#第八章-游戏通过迭代提高" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h3><p> - 比尔·巴克斯顿撰写的《用户体验草图设计》 (Sketching User Experiencesby Bill Buxton)。这本书通过多元化的原理和令人嘱目的结果向我们展示了草图的概念(提示:原型就是一种草图)</p><p> - 比尔·卢卡斯撰写的《用纸设计原型》 (Have Paper, Will Prototype by BillLucas) 。这本书是一系列案例研究,关于怎样成功创造计算机界面的纸上原型。麦克·塞林格撰写的《狗头人指南之桌面游戏设计》 (The Kobold Guide to Board Game Design by Mike Selinker) 。这本非常棒的书讲述了如何制作伟大的桌面游戏。</p><p> - 超级兄弟撰写的《少说话,多做事》 (Less Talk, More Rock by Superbrothers)这篇文章认为游戏是行动的媒介,而不是语言的媒介,并坚定的认为太多的设计讨论将会是毁灭性的。</p><p> - 《敏捷软件开发》 (Agile Software Development) 。维基百科中关于敏捷软件开发的条目编写地很不错,如果你想要更多地学习敏捷,它可以提供很多参考。 </p><ul><li>杰森·范登博格撰写的《游戏设计的四个 F:快速失败与跟随快乐》(The 4Fs of Game Design: Fail Faster, and Follow the Fun by Jason Vandenberghe)这篇文章(基于马克,勒布朗的一个理念)将伟大游戏设计过程的关键方面总结为清晰的基础元素</li></ul><h3 id="第九章-游戏为玩家而生"><a href="#第九章-游戏为玩家而生" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h3><p> - 理查德,R·巴特尔撰写的《设计虚拟世界》 (Designing Virtual Worlds by Richard R. Bartle) 。这是一本关于虚拟世界开发历史的优秀著作。它由一位实现这种虚拟世界的深度思考者撰写。</p><ul><li>马膝.L·克林格尔巴赫与肯特,C·巴里吉共同撰写的《大脑的快乐》 (Pleasures of the Brain by Morten L. Kringelbach and Kent C. Berridge, editors) 。这是一本由心理学家与神经学家共同完成的关于寻找快乐机制的研究集合。如果你还不熟悉科学论文，这可能有点令人却步，但这对于执着的读者是一笔宝贵的财富。</li></ul><h3 id="第十章-体验在玩家的脑中"><a href="#第十章-体验在玩家的脑中" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h3><ul><li>《Flow: The Psychology of Optimal Experience》米哈里,契克森米哈赖著。此书引人入胜,由心流领域最知名的研究者撰写,探索了心流的本质。</li></ul><h3 id="第十一章-玩家的动机驱使着玩家的脑"><a href="#第十一章-玩家的动机驱使着玩家的脑" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h3><ul><li><p> 《黏上游戏(Glued to Games) 》 , Scott Rigby 和 Richard M. Ryan 著。这本书深刻介绍了自我决定理论,以及游戏之所以为游戏的原因。</p></li><li><p>《奖赏的惩罚(Punished by Rewards) 》 Alfie Kohn 著。这本书很好地概括了对外在奖励之负面影响的许多研究成果。</p></li><li><p>《理解动机与情感(Understanding Motivation and Emotion) 》Johnmarshall Reeve 著。如果你不满足于粗浅的理解,预备进一步钻研动机与情感的作用机制,这本大学教材可以充分介绍对这个主题的心理学研究。</p></li></ul><h3 id="第十二章-有些元素是游戏机制"><a href="#第十二章-有些元素是游戏机制" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h3><ul><li><p> 《游戏机制:高级游戏设计技术》 (Game Mechanics: Advanced Game Design) Ernest Adams 和 Joris Dormans 合著。本书包含大量精彩翔实的细节,讲解多种游戏机制如何互相影响。并介绍了如何使用优秀的 Machinations 系统模拟你的游戏设计。</p></li><li><p>《The Oxford Book of Board Games》 , David Parlett 著。本书包含更多有关 Parlett 规则分析的细节,同时介绍了一些前几个世纪优秀但不为人知的桌面游戏。</p></li><li><p> 《Uncertainty in Games》 , Greg Costikyan 著。此书深刻洞见了游戏中概率与不确定性的本质,令人叹为观止。我每次阅读都有新的所得。</p></li></ul><p> - 《The Unfinished Game: Pascal, Fermat, and the Unfinished Letter that Made the World Modern》 , Keith Devlin 著。如果想要更细致地了解概率论发明的故事,读此书就够了。</p><h3 id="第十三章-游戏机制必须平衡"><a href="#第十三章-游戏机制必须平衡" class="headerlink" title="第十三章 游戏机制必须平衡"></a>第十三章 游戏机制必须平衡</h3><ul><li><p> 《游戏机制:高级游戏设计技术》 (Game Mechanics: Advanced Game Design) Ernest Adams 和 Joris Dormans 合著。上一章我提到过这本书,但这里再提一次,因为其中许多部分讲的都是游戏平衡的实用技巧。</p></li><li><p>《设计细节:把(光环 3)中狙击步枪的射击间隔从 0.5 秒改为 0.7 秒》 (Design in Detail: Changing the Time between Shots for the Sniper Rifle from 0.5 to 0.7 Seconds for Halo 3) , Jaime Griesemer 著。这是 Jaime 在 GDC 2010 上做的演讲,正面阐述对数值的细微调整也能对游戏玩法带来巨大改变。</p></li></ul><h3 id="第十四章-游戏机制支持谜题"><a href="#第十四章-游戏机制支持谜题" class="headerlink" title="第十四章 游戏机制支持谜题"></a>第十四章 游戏机制支持谜题</h3><ul><li>“谜题是什么”斯科特,金著。谜题设计师斯科特,金撰写的一篇深思熟 虑的文章。</li></ul><blockquote><blockquote><p>书中所指的那篇文章没有找到，这里给出 Scott Kim 的<a href="https://scottkim.com/">个人网页</a></p></blockquote></blockquote><ul><li>“设计谜题并将其融入动作冒险类游戏”帕斯卡,鲁阪著。一篇有实际建 议的精彩文集。 <ul><li><a href="https://www.gamedeveloper.com/design/designing-and-integrating-puzzles-in-action-adventure-games">Designing and Integrating Puzzles in Action-Adventure Games</a></li></ul></li></ul><h3 id="第十五章-玩家通过界面玩游戏"><a href="#第十五章-玩家通过界面玩游戏" class="headerlink" title="第十五章 玩家通过界面玩游戏"></a>第十五章 玩家通过界面玩游戏</h3><ul><li><p>《每日物品设计》,唐纳德,诺曼著。这本直截了当接地气的书充满了经精心挑选的真实世界对象和系统的优秀的或拙劣的设计范例。令人吃惊的是,它完全适用于游戏设计领域。</p></li><li><p>《游戏感》,斯蒂夫·斯温克著。这本独特的书专注于毫秒级别的游戏界面设计,仔细地剖析是什么使游戏感觉好。必读。</p></li><li><p>《量化信息的视觉显示》,爱德华·塔夫特著。被认为是图形界面设计的圣经,即使你只是浏览一下这本及塔夫特的另外三本书,它们也可以为你提供真知灼见。</p></li></ul><h3 id="第十六章-体验可以用兴趣曲线来评价"><a href="#第十六章-体验可以用兴趣曲线来评价" class="headerlink" title="第十六章 体验可以用兴趣曲线来评价"></a>第十六章 体验可以用兴趣曲线来评价</h3><ul><li>《魔术与技巧》，亨宁·内尔姆斯。还记得本章开始时那个关于杂耍演出兴趣曲线的故事吗？第二天，马克·特里普给我了这本介绍兴趣曲线主题的书。任何需要登上舞台的人都应该读一下这本书。</li></ul><h3 id="第十七章-有种体验叫做故事"><a href="#第十七章-有种体验叫做故事" class="headerlink" title="第十七章 有种体验叫做故事"></a>第十七章 有种体验叫做故事</h3><ul><li><p>《游戏中的人物塑造和叙事》，李 · 谢尔顿著。李撰写了数十个游戏和相同数量的电视剧。他将他毕生的叙事经验浓缩在了这个非常实用的书中。</p></li><li><p>《电视游戏的互动叙事》，乔赛亚 · 利波韦茨和克里斯 · 克鲁格合著。两位经验丰富的专家关于互动叙事给出的更杰出的建议。</p></li><li><p>《故事》，罗伯特、麦基著。被许多人认为是好莱坞电影剧本创作界的圣经，这本书清晰、易懂并充满了优秀的建议。</p></li><li><p>《作家之旅 ： 源自神话的写作要义》，克里斯托弗 “ 沃格勒著。这本书因为过于公式化而出名，但是它使许多强大的想法容易理解，而且也提供了影响众多杰出的剧本作家的深刻见解。</p></li><li><p>《数字化叙事 ： 给创作者的互动娱乐指南》。这本书充满了案例和建议，更不要说还有很多对整个行业互动叙事者颇具思想性的采访。</p></li><li><p>《写作故事 ： 叙事创作指南》，珍妮特 · 伯罗威著。现在已经是第 10 版了，这本书是写给任何认真想要成为杰出叙事者和作者的。它从第 1 页 ： “ 第 1 章怎样都行 ” 起就已经完全赢得了我的心。</p></li></ul><h3 id="第十八章故事和游戏结构可以用间接控制艺术性地融为一体"><a href="#第十八章故事和游戏结构可以用间接控制艺术性地融为一体" class="headerlink" title="第十八章故事和游戏结构可以用间接控制艺术性地融为一体"></a>第十八章故事和游戏结构可以用间接控制艺术性地融为一体</h3><ul><li>《图画 ． 话图 ： 知觉与构图》，莫丽 · 邦著。这是一本由一位知名儿童书插画家所著的简单指南，它是我所找到所有视觉间接控制指南中最好的那本。</li></ul><h3 id="第二十章世界中的角色"><a href="#第二十章世界中的角色" class="headerlink" title="第二十章世界中的角色"></a>第二十章世界中的角色</h3><ul><li>凯瑟琳 · 伊斯比斯特撰写的《设计更好的电子游戏角色》一书巧妙地将社会心理学领域及电子游戏领域联系在了一起。书中提供了许多实践工具与技巧，能够帮助你创作生动鲜活的角色。</li><li>凯斯 · 约翰史东撰写的《即兴表演法》。如果你觉得即兴表演只是关于傻里傻气笑话的话，这本书会纠正你的偏颇之见。它是关于如何在实时创造出有趣情景的学问，换一种说法就是，游戏设计。</li><li>斯科特 · 麦克劳德撰写的《理解漫画》一书是难有比肩品的杰作。如果你还没有读过它的话，现在就去读吧 ！</li></ul><h3 id="第二十一章世界里的空间"><a href="#第二十一章世界里的空间" class="headerlink" title="第二十一章世界里的空间"></a>第二十一章世界里的空间</h3><ul><li>克里斯多夫 · 亚历山大撰写的《建筑的永恒之道》，给任何设计师的天才建议，这是你需要读的第一本亚历山大的著作。</li><li>克里斯多夫 · 亚历山大等撰写的《建筑模式语言》，读完此书，你将会用前所未有的角度来看待世界，可在上一本书后请读这一本。</li><li>克里斯多夫 · 亚历山大撰写的《秩序的本质，卷 1- 4 》。我们的后人会惊叹我们不能在亚历山大在世的时候领略这套书的魅力，可稍后一些读这套书。</li><li>菲尔 · 科撰写的《游戏中的关卡设计 ： 创造引人人胜的游戏体验》，一本非常好的书，里面有着丰富的实践建议，包括很多细节设计和游戏文档。</li></ul><h3 id="第二十三章-世界的外观与感觉是由其美学所定义的"><a href="#第二十三章-世界的外观与感觉是由其美学所定义的" class="headerlink" title="第二十三章 世界的外观与感觉是由其美学所定义的"></a>第二十三章 世界的外观与感觉是由其美学所定义的</h3><ul><li>乔希 · 耶尼施撰写的 《 电子游戏的艺术 》 是一部优秀的游戏史 ， 也是对于游戏制作过程中艺术层次的一个有趣审视 。</li><li>克里斯 · 梅里西诺和帕特里克 ． 欧罗克撰写的 《 电子游戏的艺术 ： 从吃豆人到质量效应 》 是史密森尼博物馆电子游戏艺术展的手册 ， 它周到地提供了一部电子游戏艺术史 。</li><li>布里安 ， 索拉斯基撰写的 《 绘画基础与电子游戏艺术 》 不仅是面向艺术家 ，还是传统与电子艺术之间的优秀的桥梁 。</li><li>贝蒂 · 艾德华撰写的 《 用右脑来绘画 》 告诉我们 ， 每个人都应该能画画 。跟随这些建议 ， 你就能学会如何作画 </li></ul><h3 id="第二十四章-一些游戏让多人同乐"><a href="#第二十四章-一些游戏让多人同乐" class="headerlink" title="第二十四章 一些游戏让多人同乐"></a>第二十四章 一些游戏让多人同乐</h3><ul><li>丹 · 库克撰写的 《 睾酮与竟技 》 。 丹所写的 “ 失落花园 “ 系列博文都非堂有见解 · 这篇更是如此 ， 特别是对于任何正在开发有着竞技内容游戏的人 。[ 链接 4 ]</li><li>奥格登 · 纳什撰写的 《 听一 “ 这首诗总结了多人游戏没真正的目的 。[ 链接 5 ]</li></ul><h3 id="第二十五章-其他玩家有时会形成社群"><a href="#第二十五章-其他玩家有时会形成社群" class="headerlink" title="第二十五章 其他玩家有时会形成社群"></a>第二十五章 其他玩家有时会形成社群</h3><ul><li>艾米 ， 乔 · 金姆撰写的 《 于网络上构建的社群 ： 成功在线社群的秘诀 》 。这本书有点年头了 ， 但就我所知 ， 这仍然是帮助我们觋解在线社群本质方面最好的一本参考读物 。</li></ul><h3 id="第二十六章-设计市场与团队合作"><a href="#第二十六章-设计市场与团队合作" class="headerlink" title="第二十六章 设计市场与团队合作"></a>第二十六章 设计市场与团队合作</h3><ul><li>帕特里克 · 兰西奥尼撰写的 《 优势 》 。 这本书涵盖了你在培养一个腱康开发团队时所需要知道的任何事情 。</li><li>肯 ， 柏德威尔撰写的 《 密谋 ： Valve 创作半条命的进程 》 。 就我所知 ， 这是关于团队游戏设计最佳实践的最好文章 。 [ 链接 6 ]</li><li>我撰写的 《 信息流 ： 工作室结构的秘密 》 。 这是我在 2011 年 IGDÄ 以 《 峰会上的演讲 。 它深人探讨了游戏开发中的团队合作 。 〔 链接 7 ]</li></ul><h3 id="第二十七章-团队有时通过文档进行沟通"><a href="#第二十七章-团队有时通过文档进行沟通" class="headerlink" title="第二十七章 团队有时通过文档进行沟通"></a>第二十七章 团队有时通过文档进行沟通</h3><ul><li>丹尼尔 · 库克撰写的 《 游戏设计日志 》 。 你能在丹的 “ 失落花园 （ Lost Garden ） “ 博客里找到这个分类 。 其中为那些无趣的设计文档提供了极好的解决办法 。</li><li>史东 · 利布兰德撰写的 《 一页纸设计文档 》 。 史东在 2010 年的 GDC 上演讲的时候 ， 他一夜间就改变了整个游戏业界 。 对于所有人来说 ， 这个演讲很明显就是创建设计概述最好的方法 ， 因此几乎在一夜间 ， 它就成为业界的标准 。演讲的幻灯片可以在这里找到 ： [ 链接 8 ] 。</li></ul><h3 id="第二十八章-通过试玩测试创造好游戏"><a href="#第二十八章-通过试玩测试创造好游戏" class="headerlink" title="第二十八章 通过试玩测试创造好游戏"></a>第二十八章 通过试玩测试创造好游戏</h3><ul><li>《 万智牌设计的进化 》 作者为理查德 · 加菲 ， 介绍了历史上最成功的游戏系列之一的试玩测试故事 。 这段故事也可以在特雷西 · 浮尔顿的作品 《 游戏设计工作坊 》 ， 以及 Tekinbas 和 Zimmerman 的作品 《 游戏设计读本 》 中找到 。</li><li>“ 游戏可用性 ： 提升玩家体验 “ ， 作者为 KatheHne lsbister 和 NoahSchaffer ，本书收集了很多关于试玩测试的完整的资料和攻略 。</li><li>“ 逆袭主流人群之旅 ： 为我岳母推荐的游戏 “ ， 作者为 Dave Grossmano 这篇文章出刨也描述了一场完美的试玩测试是什么样子 。 [ 链接 10 ]</li><li>“ 拼了老命来做一个不那么糟糕的游戏 “ 作者为 Barbara ChamberIino 这段 20 分钟的视频包括了丰富的精确到细节的建议 ， 来帮助你运作试玩测试 。 [ 链接 11 ]</li><li>“ 阀门社 （ valve ） 的试玩测试方法 ： 经验主义的运用 “ ， 作者为 Mike Ambinder. 。 这段来自 GDC 2 佣 9 的演讲为我们提供了世界上最成功和稳定的游戏开发商如何运行试玩测试的内幕 。 演讲幻灯片可以在这里下载 ： [ 链接 12 ] 。</li></ul><h3 id="第二十九章-制作游戏的技术"><a href="#第二十九章-制作游戏的技术" class="headerlink" title="第二十九章  制作游戏的技术"></a>第二十九章  制作游戏的技术</h3><ul><li>《 创新者的窘境 》 和 《 创新者的解答 》 ， 由克莱顿 · 克里斯坦森所著 。 这两本书包括很多有趣的技术创新真实案例 ， 以及我们可以从中学到的克服窘境的方法 。</li></ul><h3 id="第三十一章-设计师要向客户推销自己的想法"><a href="#第三十一章-设计师要向客户推销自己的想法" class="headerlink" title="第三十一章 设计师要向客户推销自己的想法"></a>第三十一章 设计师要向客户推销自己的想法</h3><ul><li>《 我讨厌你的游戏 Pitch 的 30 大原因 》 ， 作者为布莱恩 · 厄普顿 。 布莱恩听了很多年推销 ， 他的这份烦人清单值得注意 。 [ 链接 14 ]</li><li>《 怎样向一个混球解释你的游戏 》 ， 作者为汤姆 · 弗朗西斯 （ 这个简短的展示包括很多出色的建议 ， 并且一针见血地指出关键问题所在 。 [ 链接 15 ]</li></ul><h3 id="第三十二章-设计师和客户都希望游戏能够盈利"><a href="#第三十二章-设计师和客户都希望游戏能够盈利" class="headerlink" title="第三十二章 设计师和客户都希望游戏能够盈利"></a>第三十二章 设计师和客户都希望游戏能够盈利</h3><ul><li>《 职业中的玩家 》 ， 作者为摩根 · 拉姆齐 。 一座游戏行业商业实例宝库 。</li><li>《 免费游戏工具箱 》 ， 作者为罗布 · 费伊和尼吉拉斯 · 洛弗尔 。 最好的免费游戏设计师实战建议收集 。</li><li>《 剥削好莱坞 》 ， 作者为罗杰 · 科曼 。 科曼用令人难以置信的方法创造了廉<br>价又迷人的电影大军 ， 而游戏设计师可以从这些故事中获得很多有益的启发 。</li></ul><h3 id="第三十三章-游戏改变玩家"><a href="#第三十三章-游戏改变玩家" class="headerlink" title="第三十三章 游戏改变玩家"></a>第三十三章 游戏改变玩家</h3><ul><li>《 塑造性的框架 ： 开发塑造性游戏的流程工具 》 ， 作者为萨布丽娜 · 哈斯克尔 · 库利巴 。 这是一本全面而且易于操作的最佳实践指南 ， 可以指导创作优秀且有效的塑造性游戏 。 可以从 ETC press 免费下载 。</li><li>《 破碎的现实 》 ， 作者为简 · 麦戈尼格尔 。 这本书充满了游戏将如何改变世界的灵感 。</li><li>《 电子游戏教给我们关于学习和文学的哪些东西 》 ， 作者为詹姆斯 · 保罗 · 吉 。 关于电子游戏认知力量的严肃探索 。</li><li>《 传统游戏在学习中的使用案例 》 ， 作者为亚历克斯 · 莫斯利和尼克拉 · 惠顿 。 本书从不同教育学家那里收集了很多使用非电子游戏来帮助教学的优秀案例 。</li><li>《 走向复杂学习的十个步骤 》 ， 作者为杰伦 ． J ， G ， 范 · 梅里恩堡和保罗 · A · 克斯纳 。 一部系统化和而向实践的对于创造看效学习材料的介绍图书 。</li><li>《 数学游戏与学习 ： 研究与理论 》 ， 作者为尼占拉 · 惠顿 。 本书很好地连接了学习的研究和塑造性游戏的现实 。</li></ul><h3 id="第三十四章-设计师担负的责任"><a href="#第三十四章-设计师担负的责任" class="headerlink" title="第三十四章 设计师担负的责任"></a>第三十四章 设计师担负的责任</h3><ul><li>《 杀死怪兽 》 ， 作者为杰拉德 · 琼斯 。 一部关于为什么涉及暴力的玩法是孩子健康发展中必要元素的引人人胜的探索图书 。</li><li>《 停止教孩子们杀戮 》 ， 作者为戴夫 ． 格罗斯曼中校和格洛丽亚 ， 德盖塔诺 。这部备受争议但引人思考的作品展示了对包含暴力的媒介负面影响的极端视角 。</li><li>“ Fred Rogers 在众议院的证词 “ ， 这段短视频清楚地展示了认真对待媒介的力量 。 [ 链接 17 ]</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220525 - Writing</title>
      <link href="2022/05/26/20220525-writing/"/>
      <url>2022/05/26/20220525-writing/</url>
      
        <content type="html"><![CDATA[<h5 id="20220525"><a href="#20220525" class="headerlink" title="20220525"></a>20220525</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220525.JPG"></p><h5 id="20220526"><a href="#20220526" class="headerlink" title="20220526"></a>20220526</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220526.JPEG"></p><h5 id="20220528"><a href="#20220528" class="headerlink" title="20220528"></a>20220528</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220528.JPG"></p><h5 id="20220601"><a href="#20220601" class="headerlink" title="20220601"></a>20220601</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601.JPG"></p><h5 id="20220602"><a href="#20220602" class="headerlink" title="20220602"></a>20220602</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220602.JPG"></p><h5 id="20220608"><a href="#20220608" class="headerlink" title="20220608"></a>20220608</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/IMG_3993.JPG"></p><h5 id="20220707"><a href="#20220707" class="headerlink" title="20220707"></a>20220707</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/IMG_4056.JPG"></p><h5 id="20220729"><a href="#20220729" class="headerlink" title="20220729"></a>20220729</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220729.JPG"></p><h5 id="20220731"><a href="#20220731" class="headerlink" title="20220731"></a>20220731</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220731.JPG"></p><h5 id="20220810"><a href="#20220810" class="headerlink" title="20220810"></a>20220810</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220810.JPG"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220810-2.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220522 - GAMES104 - Lecture 4：Rendering on Game Engine</title>
      <link href="2022/05/22/20220522-games104-lecture4/"/>
      <url>2022/05/22/20220522-games104-lecture4/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-4-Rendering-on-Game-Engine"><a href="#Lecture-4-Rendering-on-Game-Engine" class="headerlink" title="Lecture 4 Rendering on Game Engine"></a>Lecture 4 Rendering on Game Engine</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li><li><a href="http://games104.boomingtech.com/sc/course-list/">课程官网</a></li><li><a href="https://www.bilibili.com/video/BV14r4y1p7tt/?spm_id_from=333.788">录播地址</a></li><li><a href="https://gamess-1305814242.cos.ap-guangzhou.myqcloud.com/course/Games104/GAMES104_Lecture04.pdf">PDF</a></li></ul><h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><h4 id="Rendering-system-in-games"><a href="#Rendering-system-in-games" class="headerlink" title="Rendering system in games"></a>Rendering system in games</h4><p>Is there any game without rendering?</p><blockquote><p>有，MUD，文字游戏，通过控制台游玩</p></blockquote><h4 id="Rendering-on-Graphics-Theory"><a href="#Rendering-on-Graphics-Theory" class="headerlink" title="Rendering on Graphics Theory"></a>Rendering on Graphics Theory</h4><ul><li>图形学理论<ul><li>实现的是拥有一种效果的各种物体</li><li>关注于图形表示和数学正确性</li><li>没有严格的表现性要求（无所谓丢帧）<ul><li>Realtime (30FPS) / interactive (10 FPS)<ul><li>离线渲染</li></ul></li><li>out-of-core rendering <ul><li>多机器离散渲染</li></ul></li></ul></li></ul></li></ul><h4 id="Challenges-on-game-rendering"><a href="#Challenges-on-game-rendering" class="headerlink" title="Challenges on game rendering"></a>Challenges on game rendering</h4><ol><li><p>同时要处理拥有各种不同效果的大量对象</p><p> 非常复杂</p></li><li><p>要跑在实际硬件基础上</p><p> 需要理解现代计算机硬件架构</p></li><li><p>要保证稳定帧率</p><p> 分辨率要求也越来越高<br> 更短时间要绘制更高分辨率图像</p></li><li><p>有限资源，需要为 CPU 留余地</p><p> GPU 可以有效利用，但 CPU 不能全被耗尽，需要用于支持 game logic 等</p></li></ol><h4 id="Rendering-on-game-engine"><a href="#Rendering-on-game-engine" class="headerlink" title="Rendering on game engine"></a>Rendering on game engine</h4><p>不是理论模型，而是经过检验的工程模型</p><h5 id="outline"><a href="#outline" class="headerlink" title="outline"></a>outline</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112207.png"></p><h5 id="what-is-not-included"><a href="#what-is-not-included" class="headerlink" title="what is not included"></a>what is not included</h5><ul><li>cartoon rendering</li><li>2d rendering engine</li><li>subsurface</li><li>hair/ fur</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112517.png"></p><h3 id="Building-Blocks-of-Rendering"><a href="#Building-Blocks-of-Rendering" class="headerlink" title="Building Blocks of Rendering"></a>Building Blocks of Rendering</h3><h4 id="Rendering-pipeline-and-data"><a href="#Rendering-pipeline-and-data" class="headerlink" title="Rendering pipeline and data"></a>Rendering pipeline and data</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112703.png"></p><h4 id="Computation-projection-and-rasterization"><a href="#Computation-projection-and-rasterization" class="headerlink" title="Computation - projection and rasterization"></a>Computation - projection and rasterization</h4><p>做的是躲在像素之后的事情</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112814.png"></p><h4 id="computation-shading"><a href="#computation-shading" class="headerlink" title="computation - shading"></a>computation - shading</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112917.png"></p><ul><li>常量/参数访问</li><li>加减乘除</li><li>纹理采样</li></ul><h4 id="computation-texture-sampling"><a href="#computation-texture-sampling" class="headerlink" title="computation - texture sampling"></a>computation - texture sampling</h4><p>离得近的时候，看得清楚<br>离得远的时候，中间其实隔了很多像素<br>    由近及远的时候，其实画面就可能会抖动（走样）<br>每张贴图会存很多层，取点采样<br>    八个采样点，七次差值</p><ol><li>使用两个最相邻的 mipmap 层级</li><li>在两个 mipmaps 中进行双线性插值</li><li>在结果间进行线性插值</li></ol><h4 id="GPU"><a href="#GPU" class="headerlink" title="GPU"></a>GPU</h4><p>专门用于解决大规模运算的硬件</p><h5 id="SIMD-SIMT"><a href="#SIMD-SIMT" class="headerlink" title="SIMD SIMT"></a>SIMD SIMT</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522113648.png"></p><p>SIMD 单指令多数据</p><ul><li>用多个运算原件同时在多个数据点处理相同运算</li></ul><p>SIMT 单指令多线程</p><ul><li>并行计算中所用的执行模型，在其中将 SIMD 与多线程结合<ul><li>把单个计算内核做小，但做很多个</li><li>进行运算时可以在多个核上做同样指令</li><li>GPU 算力比 CPU 快的原因：在做运算的时候尽可能用同样代码让大家一起跑 每个人（计算单元）分别访问自己的数据</li></ul></li></ul><h5 id="GPU-architecture"><a href="#GPU-architecture" class="headerlink" title="GPU architecture"></a>GPU architecture</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522114232.png"></p><p>费米架构<br> 一块显卡上放了很多内核，但分成一组一组（GPC，图形处理集群）<br> GPC 里面有很多 SM（流式多处理器），每个 SM 里面有很多 CUDA 核<br> CUDA 做大量数据运算<br>    有专门的纹理单元<br>    有很多专门的各种计算单元</p><p>不仅可以并行处理，也可以交换信息</p><h6 id="Data-flow-from-CPU-to-GPU"><a href="#Data-flow-from-CPU-to-GPU" class="headerlink" title="Data flow from CPU to GPU"></a>Data flow from CPU to GPU</h6><p>一开始是冯诺依曼架构，让计算与数据分开，但每个计算需要找数据，会产生大量开销</p><p>游戏引擎绘制引擎架构原则：尽可能让数据单向传输， CPU-&gt;显卡，不要从显卡里读数据</p><h6 id="be-aware-of-Cache-Efficiency"><a href="#be-aware-of-Cache-Efficiency" class="headerlink" title="be aware of Cache Efficiency"></a>be aware of Cache Efficiency</h6><ul><li>要充分利用硬件并行计算</li><li>尝试避免冯诺依曼瓶颈<ul><li>数据都在缓存上是最优的</li><li>老是 cache miss 速度就慢了</li></ul></li></ul><h5 id="GPU-bounds-and-performance"><a href="#GPU-bounds-and-performance" class="headerlink" title="GPU bounds and performance"></a>GPU bounds and performance</h5><ul><li>Application performance is limited by:<ul><li>Memory Bounds</li><li>ALU Bounds<ul><li>数学计算太多 其他都做完了 但在等数学运算结果</li></ul></li><li>TMU (Texture Mapping Unit)</li><li>Bound BW (Bandwidth) Bound</li></ul></li></ul><p>流水线：木桶的短板效应，会受限于最慢的那一环节</p><h5 id="modern-hardware-pipeline"><a href="#modern-hardware-pipeline" class="headerlink" title="modern hardware pipeline"></a>modern hardware pipeline</h5><p>硬件结构其实不停在变</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115523.png"></p><h5 id="other-state-of-art-architectures"><a href="#other-state-of-art-architectures" class="headerlink" title="other state-of-art architectures"></a>other state-of-art architectures</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115533.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115606.png" alt="手游/移动端：Tile-Based Rendering"></p><h3 id="Renderable"><a href="#Renderable" class="headerlink" title="Renderable"></a>Renderable</h3><h4 id="Mesh-Render-Component"><a href="#Mesh-Render-Component" class="headerlink" title="Mesh Render Component"></a>Mesh Render Component</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115855.png" alt="每个可见的游戏对象都需要 Mesh 组件"></p><h4 id="Building-Blocks-of-Renderable"><a href="#Building-Blocks-of-Renderable" class="headerlink" title="Building Blocks of Renderable"></a>Building Blocks of Renderable</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120019.png"></p><h4 id="Mesh-Primitive"><a href="#Mesh-Primitive" class="headerlink" title="Mesh Primitive"></a>Mesh Primitive</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120054.png"></p><p>包含顶点数据，法向量数据，UV 等数据</p><h4 id="Vertex-and-Index-Buffer"><a href="#Vertex-and-Index-Buffer" class="headerlink" title="Vertex and Index Buffer"></a>Vertex and Index Buffer</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120144.png"></p><p>并不直接存储 vertex，转为存储 index，可以通过索引找到相应的 vertex 数据<br>    因为有很多顶点是共用的</p><h4 id="why-we-need-per-vertex-normal"><a href="#why-we-need-per-vertex-normal" class="headerlink" title="why we need per-vertex normal"></a>why we need per-vertex normal</h4><p>为什么每个顶点要存一个法向量</p><p>一旦表面是硬表面（有折线），两个顶点即使重合，其法向完全不同</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120608.png"></p><h4 id="materials"><a href="#materials" class="headerlink" title="materials"></a>materials</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120639.png"></p><p>材质决定物体看起来是什么样的<br>    只决定视觉材质</p><p>后面还有 physics material<br>    摩擦系数<br>    弹力等</p><h5 id="famous-Material-Models"><a href="#famous-Material-Models" class="headerlink" title="famous Material Models"></a>famous Material Models</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120737.png"></p><h5 id="Various-Textures-in-Materials"><a href="#Various-Textures-in-Materials" class="headerlink" title="Various Textures in Materials"></a>Various Textures in Materials</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120811.png"></p><p>很多时候看起来像什么是由纹理而不是材质决定的</p><h5 id="variety-of-shaders"><a href="#variety-of-shaders" class="headerlink" title="variety of shaders"></a>variety of shaders</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120850.png"></p><ul><li>数据（assets）</li><li>source code</li><li>shader（被当做数据的 code）</li></ul><h3 id="Render-Objects-in-Engine"><a href="#Render-Objects-in-Engine" class="headerlink" title="Render Objects in Engine"></a>Render Objects in Engine</h3><h4 id="Coordinate-System-and-Transformation"><a href="#Coordinate-System-and-Transformation" class="headerlink" title="Coordinate System and Transformation"></a>Coordinate System and Transformation</h4><p>类似照相机拍照：</p><ol><li>固定相机在三脚架，并让其对准场景<br> 从不同位置观察场景（视图变换）</li><li>对场景进行安排，使各个物体在期望位置<br> 移动，旋转，放大/缩小场景物体（模型变换）</li><li>选择相机镜头，调整焦距<br> 现实物体时，选择其投影方式（正交/透视）</li><li>确定照片大小，放大还是缩小照片<br> 绘制图形，是要占据整个屏幕还是屏幕的一部分（视口变换）</li></ol><h4 id="object-with-many-materials"><a href="#object-with-many-materials" class="headerlink" title="object with many materials"></a>object with many materials</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522121738.png"></p><h4 id="How-to-Display-Different-Textures-on-a-Single-Model-submesh"><a href="#How-to-Display-Different-Textures-on-a-Single-Model-submesh" class="headerlink" title="How to Display Different Textures on a Single Model - submesh"></a>How to Display Different Textures on a Single Model - submesh</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522121825.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522121939.png" alt="每个 GO 都绘制，过于浪费"></p><h4 id="Resource-Pool"><a href="#Resource-Pool" class="headerlink" title="Resource Pool"></a>Resource Pool</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122006.png"></p><p>建立统一资源库</p><ul><li>mesh</li><li>shader</li><li>texture</li></ul><h4 id="instance-use-handle-to-reuse-resources"><a href="#instance-use-handle-to-reuse-resources" class="headerlink" title="instance: use handle to reuse resources"></a>instance: use handle to reuse resources</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122039.png"></p><p>只需找到相应实例就可以复用相应数据</p><h4 id="sort-by-material"><a href="#sort-by-material" class="headerlink" title="sort by material"></a>sort by material</h4><p>GPU上的每一次数据交换都会导致效率下降<br>场景中的物体按照材质排序，相同材质放一起，显卡处理效率会提高</p><h4 id="GPU-Batch-Rendering"><a href="#GPU-Batch-Rendering" class="headerlink" title="GPU Batch Rendering"></a>GPU Batch Rendering</h4><p>很多物体其实是一致的，一次绘制指令为同样的物体统一绘制（如大量的树木、草等）</p><h3 id="Visibility-Culling"><a href="#Visibility-Culling" class="headerlink" title="Visibility Culling"></a>Visibility Culling</h3><p>事件锥 - 只有所见范围内的东西才有意义<br>看不见的东西可以不绘制</p><h4 id="culling-one-object"><a href="#culling-one-object" class="headerlink" title="culling one object"></a>culling one object</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122613.png"></p><p>看物体包围盒是否在事件锥中</p><h4 id="using-the-simplest-bound-to-create-culling"><a href="#using-the-simplest-bound-to-create-culling" class="headerlink" title="using the simplest bound to create culling"></a>using the simplest bound to create culling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122636.png"></p><ul><li>SPHERE</li><li>AABB<ul><li>存两个端点</li></ul></li><li>OBB</li></ul><h4 id="hierarchical-view-frustum-culling"><a href="#hierarchical-view-frustum-culling" class="headerlink" title="hierarchical view frustum culling"></a>hierarchical view frustum culling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122830.png"></p><p>层级询问，如果最大的包围盒看不见，直接不渲染，依次向下询问</p><h4 id="construction-and-insertion-of-BVH-in-game-engine"><a href="#construction-and-insertion-of-BVH-in-game-engine" class="headerlink" title="construction and insertion of BVH in game engine"></a>construction and insertion of BVH in game engine</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122908.png"></p><p>现代游戏引擎中 BVH 用得多：</p><ul><li>很多东西在动，对于已经建立好的树，重建树状结构会相对快</li></ul><h4 id="PVS"><a href="#PVS" class="headerlink" title="PVS"></a>PVS</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123143.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123321.png"></p><ul><li>先把空间分割</li><li>每个空间用 portal 连接</li><li>通过 portal 能看到的范围是固定的</li><li>只渲染可见范围内的物体</li></ul><h4 id="the-idea-of-using-PVS-in-stand-alone-games"><a href="#the-idea-of-using-PVS-in-stand-alone-games" class="headerlink" title="the idea of using PVS in stand-alone games"></a>the idea of using PVS in stand-alone games</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123340.png"></p><p>虽然现代游戏 全用 PVS 的较少了，但思想很有用<br>游戏玩家所经过的区域为 zone，每个 zone 内的可见范围有限，这可以帮助资源的动态加载</p><h4 id="GPU-Culling"><a href="#GPU-Culling" class="headerlink" title="GPU Culling"></a>GPU Culling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123611.png"></p><p>现在可能更多用显卡算力来直接解决</p><p>现有的一种解决办法：先绘制场景深度，被挡住的就不绘制</p><h3 id="Texture-Compression"><a href="#Texture-Compression" class="headerlink" title="Texture Compression"></a>Texture Compression</h3><p>纹理压缩</p><p>渲染的基础是 renderable 其中重要的 component 是纹理，在游戏引擎中会将纹理压缩</p><ul><li>传统图像压缩（JPG/PNG）<ul><li>很好的压缩率</li><li>高图像质量</li><li>专门用于压缩/解压一整张图片</li></ul></li><li>游戏纹理压缩 - block-based <ul><li>解码速度快</li><li>可随机访问</li><li>保证压缩率和可见质量</li><li>编码速度快</li></ul></li></ul><h4 id="block-compression"><a href="#block-compression" class="headerlink" title="block compression"></a>block compression</h4><p>先找颜色最亮和最暗的点，将其他点视为最大最小的插值，存储一个点和最大最小点的远近关系<br>    主要用于 PC</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124253.png"></p><p>手机上用的算法不一定再是 4 x 4，可能不能在运行中压缩</p><h3 id="Authoring-Tools-of-Modeling"><a href="#Authoring-Tools-of-Modeling" class="headerlink" title="Authoring Tools of Modeling"></a>Authoring Tools of Modeling</h3><h4 id="Modeling"><a href="#Modeling" class="headerlink" title="Modeling"></a>Modeling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124428.png" alt="Modeling - Polymodeling"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124453.png" alt="Modeling - Sculpting (ZBrush)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124530.png" alt="Modeling - Scanning"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124608.png" alt="Modeling - Procedural Modeling"></p><h4 id="Comparison-of-Authoring-Methods"><a href="#Comparison-of-Authoring-Methods" class="headerlink" title="Comparison of Authoring Methods"></a>Comparison of Authoring Methods</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124651.png"></p><h3 id="Cluster-Based-Mesh-Pipeline"><a href="#Cluster-Based-Mesh-Pipeline" class="headerlink" title="Cluster-Based Mesh Pipeline"></a>Cluster-Based Mesh Pipeline</h3><h4 id="Sculpting-Tools-Create-Infinite-Details"><a href="#Sculpting-Tools-Create-Infinite-Details" class="headerlink" title="Sculpting Tools Create Infinite Details"></a>Sculpting Tools Create Infinite Details</h4><ul><li>艺术家创建的模型拥有的细节越来越多</li><li>线性 FPS 发展到 开放世界 FPS，每帧提交的复杂场景数据几乎提升十倍以上</li></ul><h4 id="Cluster-Based-Mesh-Pipeline-1"><a href="#Cluster-Based-Mesh-Pipeline-1" class="headerlink" title="Cluster-Based Mesh Pipeline"></a>Cluster-Based Mesh Pipeline</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124947.png"></p><p>15 年育碧做刺客信条大革命的时候提出</p><p>当面对精细模型，将其分为小的 cluster（固定的 32/64 单元）<br>很多东西其实是一样的，丢给硬件自己画</p><h4 id="programmable-mesh-pipeline"><a href="#programmable-mesh-pipeline" class="headerlink" title="programmable mesh pipeline"></a>programmable mesh pipeline</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522125200.png"></p><p>可以用一个算法，基于数据，凭空生成，并且可以根据远近自动选择合适的<br>好处：可以产生无限细节</p><h4 id="GPU-Culling-in-Cluster-Based-Mesh"><a href="#GPU-Culling-in-Cluster-Based-Mesh" class="headerlink" title="GPU Culling in Cluster-Based Mesh"></a>GPU Culling in Cluster-Based Mesh</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522125359.png"></p><p>现在的裁剪可以部分裁剪</p><h4 id="Nanite"><a href="#Nanite" class="headerlink" title="Nanite"></a>Nanite</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522125440.png"></p><h3 id="Take-Away"><a href="#Take-Away" class="headerlink" title="Take Away"></a>Take Away</h3><ol><li>游戏引擎的设计是工程科学，依赖于对现代图形硬件（显卡架构）的理解</li><li>核心要解决的 Mesh、模型、材质等数据间关系</li><li>尽可能通过运算来减少绘制需求（可见性很重要，看不见的就不绘制），优化的最高境界就是 do nothing</li><li>GPU 越来越强，很多需要在 CPU 做的复杂运算都交给了 GPU：GPU-Driven</li></ol><hr><h3 id="go-through-code"><a href="#go-through-code" class="headerlink" title="go through code"></a>go through code</h3><p><code>build/Pilot.sln</code></p><blockquote><blockquote><p>Mac 下是 <code>Pilot.xcodeproj</code></p></blockquote></blockquote><p>核心是 <code>PilotRuntime</code> 文件<br><code>PilotPreCompile</code> 是自动生成的</p><ul><li>在哪里找资产<ul><li><code>../Engine/asset/level/1-1_level.json</code></li></ul></li><li>引擎如何读数据？<ul><li>找到 <code>PilotRuntime/resource/res_type/common/level.h</code><ul><li>里面包含 <code>REFLECTION_TYPE</code></li><li>包括看到 <code>ObjectInstanceRes</code>的定义也是带反射类型的 <code>REFLECTION_TYPE</code></li><li>里面的每一个变量名都会变成 json 里的一个描述文件</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522135346.png"></p><p>原来这里才是正式要求第一次作业的地方哈哈，还有<a href="http://games104.boomingtech.com/sc/course-list/">课程官网</a>，我就说嘛不然啥也没说，直接纯摸估计要费不少时间，还是有指导文档的嘿嘿，好评！</p><p>老师们辛苦了，致敬。</p><hr><h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><ul><li>引擎中还有其他 instance 的案例吗<ul><li>每个 GO 其实都是 instance </li><li>音乐/音效也是</li></ul></li><li>mesh shader/ clustered mesh 未来会怎么发展<ul><li>会是未来发展方向</li><li>硬件会越来越复杂 越来越高效</li><li>让每个单元处理简单运算的思想是未来的趋势</li></ul></li><li>引擎有必要自写渲染管线吗<ul><li>很多引擎会写</li><li>渲染是工业化问题 一定时间后其实发展会趋同</li><li>多学习同行中的主流方案构建方法</li></ul></li><li>图形代码有没有更好 debug 方法<ul><li>很难</li><li>很多计算在 GPU 中，只能看到结果，但不一定知道中间哪里出了问题</li><li>要小步迭代反复验证，不要一次写太多，不然不知道问题出在哪里</li></ul></li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220521 - Meaningful Meaningless</title>
      <link href="2022/05/21/20220521-everything-everywhere-all-at-once/"/>
      <url>2022/05/21/20220521-everything-everywhere-all-at-once/</url>
      
        <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>今天和 WH 一起看了《瞬息全宇宙》，看的时候脑中也闪过千百念头，竟然罕有地萌生了写观影感喟的想法，于是有此寥寥千字。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="物壮则老-抟气致柔"><a href="#物壮则老-抟气致柔" class="headerlink" title="物壮则老/抟气致柔"></a>物壮则老/抟气致柔</h3><p>依我见，片中讨论的问题其实就一个：如何对抗虚无主义，或者说，为什么而活？</p><p>片中对 Joba （后面简称为 J）的描述是：</p><blockquote><p>拥有无限力量的全能存在，能驾驭纯粹混乱，没有任何实质的动机和追求。</p></blockquote><p>但其实她有，正如她自己所说，她跨越千百宇宙，就是为了找到这个特别的 Evelyn，为什么呢，为了寻求共鸣与共识，为了寻求看尽千帆后除虚无外的可能性。</p><p>片中世界由无数抉择所促生，令我想到的是《老子》中的物壮则老：</p><blockquote><p>物壮则老，谓之不道，不道早已。</p></blockquote><p>正是因为洞悉了所有，所以才失去了一切。</p><p>而为什么这个世界中的 Evelyn（后面简称为 E） 是那么的特别呢，我想到的是《老子》中的抟气致柔如婴儿：</p><blockquote><p>专气致柔，能婴儿乎？</p></blockquote><p>正是因为这个宇宙中的 E “一事无成”，所以才让她有了无限的可能性。</p><h3 id="万物皆虚-看山还是山"><a href="#万物皆虚-看山还是山" class="headerlink" title="万物皆虚/看山还是山"></a>万物皆虚/看山还是山</h3><p>J 在体验了无限可能性后，造了 Bagel。Bagel 是放置所有之后的产物，也和上面所提物壮则老一致，有即无，everything means nothins。但有无总是相生的，Bagel 所意味的对 J 而言其实也并不是毁灭，而是虚无背后的可能性。而如何让事情“get back”（回到正轨），也便是此片要探寻的如何面对虚无。</p><p>虚无从何而来呢？是因为 J 看到<code>所做的一切都会在另一个宇宙中消失得无影无踪</code>，最终产生了一切皆虚（nothing matters）的想法。</p><p>E 当然也并没有一开始就想到如何面对虚无的答案。她也说出了“如果我以前没…那么我现在就…”这样的话。这不过是一种逃避，不是答案。其后也经历过种种挣扎：在 <code>Everwhere</code> 一篇中真正掌握了世界跃迁后，她也有过虚无沉溺、想要破坏一切的瞬间。J 向其倾诉无法停留在任何一个宇宙中的痛苦（有即无）。之后二者成为了石头。</p><p>这一阶段，J 所寻求的共鸣算是在某种程度上达到了。所谓人类，不过是大千世界中渺小而又愚蠢的一种存在罢了。J 说自己被困住很久了，也希望被说服还有新的可能性。她一直所追寻的，并不是摧毁一切，而是为了摧毁自己，想看到被摧毁后的新的可能性，想被理解之后，与能理解自己的他者共同走向虚无。</p><p>E 没有回应 J 的期待。</p><p>为什么呢？需要把时间稍微回退一些，当 E 还陷于体会了无限跃迁后的破坏和毁灭中时，丈夫 Waymond （后面简称为 W）被 E 捅了一刀，但他还是选择站在 E 身前，不愿再看到厮杀。W 的信念是什么呢，是善念（ <code>be kind</code>）。并且在 W 和 E 没有在一起，二人变得所谓更好的那个世界中（就是前面 J 所提，如果…就…的那个世界），W 给出了我认为片中给出的面对虚无的答案：</p><blockquote><p>“尽管 你一再让我心碎 我想告诉你 如果有来生 我还是会选择和你一起 报税 开洗衣店”</p></blockquote><p>说回上面，E 没有回应 J 同赴虚无的期待。J 失望，寻求无果后也不再在乎，想要自己独自步入意味毁灭与可能性的 Bagel。</p><p>E 不肯，但中间有无数人阻拦。</p><p>怎么解呢？E 给出了一种源自 W 的 <code>be kind</code> 解法：所谓投其所好也好，或者满足对方的需求也好，给予拦路人们他们所渴求的东西。</p><p>J 觉得这并无意义，因为一段时间后，终究还是会导向无意义的虚无。</p><blockquote><p>多情自古空余恨，好梦由来最易醒。</p></blockquote><p>父亲也挡在了 E 身前，但 E 不肯罢休。她这里点出了我所认为的与上面 W 给出答案相呼应的说法（E 在一个世界中向“老顽固”父亲说出了女儿 J 交了女朋友一事）：</p><blockquote><p>不喜欢，不接受，都不重要，因为这个就是我。<br>一事无成也无所谓，但她像我一样，找到了一位善良、体贴、真正爱她一切的人。</p></blockquote><p>在说出了“交女朋友”一事的世界中，J 逃了，想要离开，觉得即便此时如自己所愿地说出了交女朋友一事，也只不过是暂时的理解，母女二人的相处终究是互相伤害，所以她想要离开，让 E 放手。</p><p>E 放了。</p><p>但马上回头叫停。她把和 J 的种种可能的误会全部阐明，而后在这里给出了片中直接阐述的对于终极问题的答案：</p><blockquote><p>为什么世界上那么多地方都可以去，还是决定留在这里，这好像没有道理。<br>也许世界上有那么些东西，有那么些发现，让我们自觉自己只是无意义的垃圾。<br>也可能这些东西能解释清楚，为什么经历了这么多不愉快，你还是想找到我。<br>也能说清楚，为什么无论如何，我就想待在你身边。<br>我就想永远…永远…待在你身边。</p></blockquote><p>J 做出最后的反问：</p><blockquote><p>那又怎么样呢，别的东西都不在乎了吗？<br>可以做任何事情，去任何地方，去一个有更好境况的地方，为什么不呢？<br>反正在一起的时间，也就那么点</p></blockquote><p>E 绝杀：</p><blockquote><p>那么我将会珍惜，这么一小段时光。</p></blockquote><p>所以，总而言之，E 给出的，或者说片中最终给出的，面对万物皆虚的答案，正是知道一切可能性后，依然不变的选择，即我所谓看山还是山的本真。而其后的本源力量，正是那些所谓“让我们自觉自己只是无意义的垃圾的那么些东西，那么些发现”，所谓“爱”，所谓无意义本身。</p><hr><h3 id="个体所见-认知的片面性"><a href="#个体所见-认知的片面性" class="headerlink" title="个体所见/认知的片面性"></a>个体所见/认知的片面性</h3><p>看完后，WH 与我讨论时还引出了另一个感悟：个体所见/认知的片面性。</p><p>W 在 E 眼中的软弱，其实只是他自己的方式。他始终以自己的理念（<code>be kind</code>）来应对万千变化。</p><p>此间我还想到一点，其实虽然世界变了，各个宇宙中自身的人性貌似没有很大的差别，并且 W 与 E 在每个世界中都以不同的方式相遇了。真是 (￣▽￣)”</p><hr><h3 id="I-am-your-mother"><a href="#I-am-your-mother" class="headerlink" title="I am your mother"></a>I am your mother</h3><p>WH 还引出了另一个问题，为何均为“全知全能”，E 却没有导向虚无，还要不断拉 J 回来呢？片中给出了看似搞笑的答案：</p><blockquote><p>I am your mother.</p></blockquote><p>WH 觉得是因为多出来的经历，确实，片中有与之呼应的说法：</p><blockquote><p>我和你不一样，你还年轻，而且你的想法总是变来变去的。<br>I still know who I am</p></blockquote><p>我个人认为答案其实就是上面所提到的本源力量，是所谓“爱”。</p><hr><h3 id="联应"><a href="#联应" class="headerlink" title="联应"></a>联应</h3><p>题外话，J 对于所有世界的同时经历，在我看来其实正是联应的一种体现。</p><p>联应一词与最近所看到的荣格心理学中的共时性相关，也与道家中道即一的思想相应，这里摘一下之前的 <a href="https://medill-east.github.io/2022/05/15/20220515-comicjung-chap7/">20220515 - 漫画荣格 - 第七章：塔 伟大的自己</a> 中的相关段落：</p><blockquote><p>不久前与友人谈及因果关系，没想到几天后就读到了荣格与共时性。</p><p>这里顺便将他发予我的《西方神秘学指津》中有关联应和因果性的相关部分截取：</p><p>在前启蒙时期，可以区分三种不同观点：</p><ol><li>把宇宙看成一个宏伟的和谐有机整体，其中所有部分都彼此联应，无需中介环节或因果链···<br>  这种“联应”概念与“类比思维”（analogical thinking）、“关联思维”（correlative thinking）、“相似”（ressemblance）、“征象”（signatures）、“分有”（participation）或“共时性”（synchronicity）等类似概念密不可分···</li><li>第二种观点可见于从菲奇诺开始的许多文艺复兴时期的作者。这种观点假设，宇宙的不同部分即使相距遥远，也会通过所谓的“隐秘因果性”（occult causality）在事实上相互影响。</li><li>第三种观点称之为“工具因果性”。其最基本的形式就是人们所熟知的“机械”模型或台球模型，即一个事物通过可证实和可预测的物质因果链来影响另一个事物。</li></ol><p>第一种观点将万物视为一体，不可分；第二种观点则预示着万物间表面独立，实则都被“隐秘因果性”相连；而第三种观点可以说视万物各自独立，除非有物质因果链将其连接。</p></blockquote><p>并且片中 E 挥向 J 的一拳也打在了自己脸上，看到这一细节时，我脑中又再次浮现了道即一（第一种联应）的想法。</p><hr><p>寥寥数言，浅薄己见，看个乐 (￣▽￣)”</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
            <tag> Movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220520 - GAMES104 - Lecture 3：How to Build a Game World</title>
      <link href="2022/05/20/20220520-games104-lecture3/"/>
      <url>2022/05/20/20220520-games104-lecture3/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-3-How-to-Build-a-Game-World"><a href="#Lecture-3-How-to-Build-a-Game-World" class="headerlink" title="Lecture 3 How to Build a Game World"></a>Lecture 3 How to Build a Game World</h2><ul><li><p><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></p></li><li><p><a href="https://gamess-1305814242.cos.ap-guangzhou.myqcloud.com/course/Games104/GAMES104_Lecture03.pdf">PPT</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1YY4y1p74P/?spm_id_from=333.788">录播地址</a></p></li></ul><p>如何构建游戏世界</p><ul><li>游戏世界由什么组成</li><li>如何描述这些事物</li><li>这些东西怎样被组织</li></ul><h3 id="What-does-a-game-world-consist-of"><a href="#What-does-a-game-world-consist-of" class="headerlink" title="What does a game world consist of?"></a>What does a game world consist of?</h3><h4 id="Dynamic-Game-Objects"><a href="#Dynamic-Game-Objects" class="headerlink" title="Dynamic Game Objects"></a>Dynamic Game Objects</h4><p>可交互物体</p><h4 id="Static-game-object"><a href="#Static-game-object" class="headerlink" title="Static game object"></a>Static game object</h4><p>各种不可交互物体</p><h4 id="environments"><a href="#environments" class="headerlink" title="environments"></a>environments</h4><p>环境</p><ul><li>填空</li><li>植被</li><li>地形</li></ul><h4 id="Other-game-objects"><a href="#Other-game-objects" class="headerlink" title="Other game objects"></a>Other game objects</h4><p>碰撞体<br>玩法规则</p><h4 id="Everything-is-a-Game-Object-GO"><a href="#Everything-is-a-Game-Object-GO" class="headerlink" title="Everything is a Game Object (GO)"></a>Everything is a Game Object (GO)</h4><h3 id="How-to-describe-a-game-object"><a href="#How-to-describe-a-game-object" class="headerlink" title="How to describe a game object"></a>How to describe a game object</h3><ul><li>property<ul><li>shape</li><li>position</li><li>capacity of battery</li></ul></li><li>behavior<ul><li>move</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520105958.png"></p><h4 id="game-object"><a href="#game-object" class="headerlink" title="game object"></a>game object</h4><p>定义数据和行为</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110048.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110121.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110155.png" alt="派生和继承无人机类"></p><p>优点：清晰直观<br>缺陷：很多东西不好归类，比如水陆两栖坦克</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110310.png"></p><p>解决办法：组件化 - component</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110331.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110349.png" alt="自定义也是组件化思想"></p><p>回到无人机，将其拆解为组件：</p><ul><li>transform</li><li>model</li><li>motor</li><li>ai</li><li>animation physics</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110431.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110531.png" alt="组件化定义"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110607.png" alt="只有少部分需要迭代"></p><p>现代游戏引擎原则：尽可能符合直觉，既适用于程序，也适用于设计人员</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110712.png" alt="现代商业游戏引擎的组件化构建"></p><p>UObject 和 Object 是对象，管理生命周期，不是上面所提到的 GO<br>GO 对应的应该是 Actor 和 GameObject </p><h4 id="Takeaways"><a href="#Takeaways" class="headerlink" title="Takeaways"></a>Takeaways</h4><ul><li>游戏世界中的所有东西都是 game object</li><li>game object 可以以组件化方式进行描述</li></ul><h3 id="How-to-make-the-world-alive"><a href="#How-to-make-the-world-alive" class="headerlink" title="How to make the world alive?"></a>How to make the world alive?</h3><p>Object-based Tick</p><p>可以视为 unity 的 update 函数</p><p>世界因 tick 而转动</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520111241.png" alt="按功能系统进行 tick"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520111311.png" alt="流水线 tick 具有更高的效率"></p><h3 id="How-to-Explode-an-Ammo-in-a-game"><a href="#How-to-Explode-an-Ammo-in-a-game" class="headerlink" title="How to Explode an Ammo in a game"></a>How to Explode an Ammo in a game</h3><p>世界内部的交互</p><p>Hardcode（旧，效率低，无法处理更大体量的游戏世界）</p><ul><li>子弹射出</li><li>射出路线与世界中物体有交集</li><li>触发爆炸</li><li>寻找爆炸范围内的其他物体</li><li>产生交互</li></ul><p>Events（放下邮件，让对方处理）</p><ul><li>消息发送和处理</li><li>把事件发送和处理解耦化</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520111952.png" alt="现代商业游戏引擎的事件机制"></p><p>要做可扩展的消息系统，以供用户自定义</p><h3 id="How-to-manage-game-objects"><a href="#How-to-manage-game-objects" class="headerlink" title="How to manage game objects"></a>How to manage game objects</h3><h4 id="Scene-management"><a href="#Scene-management" class="headerlink" title="Scene management"></a>Scene management</h4><ul><li>GO 在场景中被管理</li><li>每个 GO 的标识<ul><li>有唯一编号</li><li>可通过位置</li></ul></li></ul><p>消息发送方式</p><ul><li>完全不划分区域</li><li>网格划分<ul><li>场景不均匀</li></ul></li><li>层级划分<ul><li>基于物体簇划分</li><li>层级划分</li><li>有不同的划分方式<ul><li>二叉树</li><li>八叉树</li><li>bounding volume hierarchies (BVH)<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520112401.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520112643.png"></li></ul></li></ul></li></ul><h4 id="takeaways"><a href="#takeaways" class="headerlink" title="takeaways"></a>takeaways</h4><ul><li>所有物体都是 object</li><li>game object 可以被组件化描述</li><li>GO 的状态在 tick 循环中更新</li><li>GO 之间通过 event 机制交互</li><li>GO 在场景中被一些高效策略来管理</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520113021.png"></p><ul><li>tick 顺序<ul><li>父节点先 tick</li><li>并行执行的时序很重要<blockquote><blockquote><p>确实，不注重先后，协程调用会出现混乱，害</p></blockquote></blockquote></li></ul></li></ul><p>游戏录像：引擎将事件再次执行，原则上输入一定，输出一定相同，但多线程运行时顺序不一定，此时需要引入所谓邮局，会给所有“邮件”唯一时间戳</p><h3 id="Lecture-03-Contributor"><a href="#Lecture-03-Contributor" class="headerlink" title="Lecture 03 Contributor"></a>Lecture 03 Contributor</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520113942.png"></p><p>感谢前辈们的辛勤付出</p><h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h3><ul><li>tick 时，渲染线程和逻辑线程怎么同步<ul><li>一般二者分开进行</li><li>tick logic 一般比 tick render 早一些</li></ul></li><li>空间划分怎么处理动态游戏对象<ul><li>遍历肯定是最慢的</li><li>需要根据游戏类型和需要来选择特定的划分策略 按需更新</li><li>引擎需要支持两三种以上的空间划分方法</li></ul></li><li>组件模式有什么缺点<ul><li>在数量级较低时候其实组建模式相较于直接实现效率更低<ul><li>但这也是引入 ECS 的目的，提高效率</li></ul></li><li>组件间也有通信机制，期间的频繁 query 会降低效率</li></ul></li><li>event 怎么调试比较好<ul><li>锁定 GO 把它发送的消息全部显示</li><li>最有效的 debug 就是 log<blockquote><blockquote><p>确实</p></blockquote></blockquote></li></ul></li><li>物理和动画互相影响的时候怎么处理<ul><li>比如人受击，需要播放受击动画</li><li>解决可能通过插值，先动画优先 后物理优先</li></ul></li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220518 - GAMES104 - Assignment 1：Build and Run Pilot Engine</title>
      <link href="2022/05/18/20220518-games104-assignment1/"/>
      <url>2022/05/18/20220518-games104-assignment1/</url>
      
        <content type="html"><![CDATA[<h2 id="作业-1-编译和运行-PILOT-引擎"><a href="#作业-1-编译和运行-PILOT-引擎" class="headerlink" title="作业 1 编译和运行 PILOT 引擎"></a>作业 1 编译和运行 PILOT 引擎</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul><p>Build and Run Pilot Engine</p><h3 id="star-fork-一条龙"><a href="#star-fork-一条龙" class="headerlink" title="star, fork 一条龙"></a>star, fork 一条龙</h3><p>首先来到 Github <a href="https://github.com/BoomingTech/Pilot">相应页面</a></p><p>右上角 Star，然后 fork 到自己仓库里</p><h3 id="尝试-build"><a href="#尝试-build" class="headerlink" title="尝试 build"></a>尝试 build</h3><p>跟随教程 先打开命令行 cd 到相应根目录</p><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;...你自己的目录&#x2F;GAMES104-PilotEngine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后利用 Xcode 来 build，还是在命令行中运行：</p><pre class="line-numbers language-none"><code class="language-none">cmake -S . -B build -G &quot;Xcode&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有可能出现 cmake 版本不够的情况，所以来到 <a href="https://cmake.org/download/">CMake官网</a>，我下载了 3.22.4 的版本，安装后跟随其指示将其加入 PATH：</p><pre class="line-numbers language-none"><code class="language-none">PATH&#x3D;&quot;&#x2F;Applications&#x2F;CMake.app&#x2F;Contents&#x2F;bin&quot;:&quot;$PATH&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时可以看到 CMake 版本已经是新的了：</p><pre class="line-numbers language-none"><code class="language-none">cmake -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518125042.png"></p><p>此时确保自己还在 pilot 的根目录下（我之前更新 cmake 的时候退到系统根目录了），然后跟随指令先生成 xcode 项目</p><pre class="line-numbers language-none"><code class="language-none">cmake -S . -B build -G &quot;Xcode&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后 build</p><pre class="line-numbers language-none"><code class="language-none">cmake --build build --config Release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="进编辑器！"><a href="#进编辑器！" class="headerlink" title="进编辑器！"></a>进编辑器！</h3><p>都成功后就可以找到 pilot 目录下的 bin 文件夹，里面应该有 build 好的 可运行的 PilotEditor 文件，打开！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518125351.png"></p><p>之后就可以试着选中目标，进行相应操作啦！</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220518 - GAMES104 - Lecture 2：Layered Architecture of Game Engine</title>
      <link href="2022/05/18/20220518-games104-lecture2/"/>
      <url>2022/05/18/20220518-games104-lecture2/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-2-引擎架构分层与整体-Pipeline"><a href="#Lecture-2-引擎架构分层与整体-Pipeline" class="headerlink" title="Lecture 2 引擎架构分层与整体 Pipeline"></a>Lecture 2 引擎架构分层与整体 Pipeline</h2><ul><li><p><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></p></li><li><p><a href="https://gamess-1305814242.cos.ap-guangzhou.myqcloud.com/course/Games104/GAMES104_Lecture02.pdf">PDF</a></p></li><li><p><a href="https://www.bilibili.com/video/BV12Z4y1B7th/?spm_id_from=pageDriver">录播地址</a></p></li></ul><p>Layered Architecture of Game Engine</p><h3 id="A-glance-of-game-engine-layers"><a href="#A-glance-of-game-engine-layers" class="headerlink" title="A glance of game engine layers"></a>A glance of game engine layers</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518104945.png"></p><ul><li><p>Tool Layer</p><ul><li>Chain of Editors </li><li>编辑器中的工具链</li></ul></li><li><p>Function Layer</p><ul><li>可视化、可移动、可玩</li><li>物理</li><li>动画</li><li>渲染</li><li>摄像机、UI、输入</li><li>脚本，状态机，AI</li></ul></li><li><p>Resource Layer</p><ul><li>Data and files</li><li>建模</li><li>图形</li><li>声音</li><li>视频</li></ul></li><li><p>Core Layer</p><ul><li>swiss knife of game engine</li><li>可重用代码工具箱</li></ul></li><li><p>Platform Layer</p><ul><li>launch on different platforms</li></ul></li><li><p>middleware and 3rd party libraries</p></li></ul><h3 id="practice-is-the-best-way-to-learn"><a href="#practice-is-the-best-way-to-learn" class="headerlink" title="practice is the best way to learn"></a>practice is the best way to learn</h3><p>做一个游戏中的可移动角色</p><h4 id="Resource-how-to-access-my-data"><a href="#Resource-how-to-access-my-data" class="headerlink" title="Resource - how to access my data"></a>Resource - how to access my data</h4><p>Unify file access - meta asset 通用数据格式</p><p>importing - 将外部数据转化为引擎可用的高效数据 assets</p><p>composite asset - 将各种数据相关联</p><p>GUID - 每个资产的唯一识别号</p><h4 id="Resource-Runtime-Asset-Manager"><a href="#Resource-Runtime-Asset-Manager" class="headerlink" title="Resource - Runtime Asset Manager"></a>Resource - Runtime Asset Manager</h4><p>实时资产管理，总可以通过该系统来加载/卸载相应资源<br>通过 handle 系统管理资产生命周期</p><h4 id="Resource-Manage-Asset-Life-Cycle"><a href="#Resource-Manage-Asset-Life-Cycle" class="headerlink" title="Resource - Manage Asset Life Cycle"></a>Resource - Manage Asset Life Cycle</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518110405.png"></p><ul><li>不同资源有不同生命周期</li><li>在（内存等）资源有限情况下要求适时加载/释放资源</li><li>垃圾回收（garbage collection） 以及 延迟加载（deferred loading）很关键</li></ul><h4 id="Function-How-to-make-the-world-alive"><a href="#Function-How-to-make-the-world-alive" class="headerlink" title="Function - How to make the world alive"></a>Function - How to make the world alive</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518110721.png"></p><p>每 1/30 s 处理一次</p><h4 id="Function-Dive-into-ticks"><a href="#Function-Dive-into-ticks" class="headerlink" title="Function - Dive into ticks"></a>Function - Dive into ticks</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518110931.png"></p><p>类似 unity update 函数？</p><p>tick logic - 先构建逻辑 logic<br>tick render - 再渲染 </p><h4 id="Function-tick-the-animation-and-renderer"><a href="#Function-tick-the-animation-and-renderer" class="headerlink" title="Function - tick the animation and renderer"></a>Function - tick the animation and renderer</h4><ul><li>每个 tick（经过大量简化的理想情况）<ul><li>获取角色每帧动画</li><li>驱动骨骼和皮肤</li><li>渲染器在迭代的 render tick 中处理每帧相应的渲染任务</li></ul></li></ul><h4 id="Function-heavy-duty-hotchpotch"><a href="#Function-heavy-duty-hotchpotch" class="headerlink" title="Function - heavy-duty hotchpotch"></a>Function - heavy-duty hotchpotch</h4><ul><li>功能层为游戏引擎提供了大量主要功能模块<ul><li>object 系统</li></ul></li><li>周期性 loop updates<ul><li>game loop 是读游戏引擎代码的关键</li></ul></li><li>引擎和游戏之间的界限会模糊<ul><li>相机，角色，行为</li><li>为程序员设计可扩展引擎 API</li></ul></li></ul><h4 id="Function-multi-threading"><a href="#Function-multi-threading" class="headerlink" title="Function - multi-threading"></a>Function - multi-threading</h4><p>多核架构，多线程处理</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112006.png"></p><p>最理想情况是完美调度 - 都有事情干</p><p>多核也是未来的方向，在架构的时候就要考虑</p><h4 id="core-math-library"><a href="#core-math-library" class="headerlink" title="core - math library"></a>core - math library</h4><ul><li>线性代数<ul><li>rotation, translation, scaling</li><li>matrix splines, quaternion</li></ul></li></ul><h4 id="core-math-efficiency"><a href="#core-math-efficiency" class="headerlink" title="core - math efficiency"></a>core - math efficiency</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112331.png"></p><p>单指令（一个 ALU）完成矩阵运算</p><h4 id="core-data-structure-and-containers"><a href="#core-data-structure-and-containers" class="headerlink" title="core - data structure and containers"></a>core - data structure and containers</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112602.png"></p><ul><li>c++ 提供的标准容器在使用时 内存不受控（多且分布不紧密）</li></ul><h4 id="core-memory-management"><a href="#core-memory-management" class="headerlink" title="core - memory management"></a>core - memory management</h4><ul><li>游戏引擎表现的主要瓶颈<ul><li>内存池分配</li><li>减少缓存丢失</li><li>内存分配</li></ul></li><li>polymorphic memory resource PMR<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112838.png"></li></ul><p>现代计算机本质还是图灵机，不断更新 但更快的（内存管理）秘诀就三个：</p><ul><li>把数据放在一起</li><li>按序访问数据</li><li>按块分配和释放数据</li></ul><h4 id="core-foundation-of-game-engine"><a href="#core-foundation-of-game-engine" class="headerlink" title="core - foundation of game engine"></a>core - foundation of game engine</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518113221.png"></p><ul><li>核心层为不同功能模块提供工具箱 utilities</li><li>设计和实现都很棒</li><li>高标准的 coding</li></ul><h4 id="platform-target-on-different-platform"><a href="#platform-target-on-different-platform" class="headerlink" title="platform - target on different platform"></a>platform - target on different platform</h4><p>系统兼容性（平台无关性） - 文件系统</p><h4 id="platform-graphics-API"><a href="#platform-graphics-API" class="headerlink" title="platform - graphics API"></a>platform - graphics API</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518113609.png"></p><p>RHI</p><ul><li>重新定义 graphics API </li><li>把各硬件 SDK 区别封装起来</li></ul><h4 id="platform-hardware-architecture"><a href="#platform-hardware-architecture" class="headerlink" title="platform - hardware architecture"></a>platform - hardware architecture</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518113833.png"></p><h4 id="tool-allow-anyone-to-create-game"><a href="#tool-allow-anyone-to-create-game" class="headerlink" title="tool - allow anyone to create game"></a>tool - allow anyone to create game</h4><p>以地图编辑器为中心构建的编辑器系统，方便团队协作</p><p>释放创意</p><h4 id="tool-digital-content-creation"><a href="#tool-digital-content-creation" class="headerlink" title="tool - digital content creation"></a>tool - digital content creation</h4><p>别的工具生成的数字资产来创建 assets</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518114313.png"></p><hr><h3 id="why-layered-architecture"><a href="#why-layered-architecture" class="headerlink" title="why layered architecture"></a>why layered architecture</h3><ul><li>解耦，减少复杂性<ul><li>更低层与更高层独立</li><li>更高层不需要关心低层如何构建</li></ul></li><li>对于不断更新的需求的快速回应<ul><li>高层快速更新发展，但更低层基本稳定</li></ul></li></ul><p>复杂系统是被不断封装起来的<br>碰到需求先思考是哪层的<br>一般只允许上调用下，不允许反向</p><h3 id="Neat-PILOT-Engine"><a href="#Neat-PILOT-Engine" class="headerlink" title="Neat PILOT Engine"></a>Neat PILOT Engine</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518115153.png"></p><h4 id="release-plan"><a href="#release-plan" class="headerlink" title="release plan"></a>release plan</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518115337.png"></p><h3 id="takeaways"><a href="#takeaways" class="headerlink" title="takeaways"></a>takeaways</h3><ul><li>引擎是分层架构的<ul><li>工具</li><li>功能</li><li>资源</li><li>核心</li><li>平台</li></ul></li><li>更低层 更稳定，更高层 更灵活 可定制</li><li>虚拟世界由 ticks 来驱动</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220516 - 漫画荣格 - 第八章：荣格的性格论讲座</title>
      <link href="2022/05/16/20220516-comicjung-chap8/"/>
      <url>2022/05/16/20220516-comicjung-chap8/</url>
      
        <content type="html"><![CDATA[<h2 id="第八章-荣格的性格论讲座"><a href="#第八章-荣格的性格论讲座" class="headerlink" title="第八章 荣格的性格论讲座"></a>第八章 荣格的性格论讲座</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><h3 id="关于心理功能与心理机能分类"><a href="#关于心理功能与心理机能分类" class="headerlink" title="关于心理功能与心理机能分类"></a>关于心理功能与心理机能分类</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516215257.png"></p><p>看到燕子的图像可能会产生联想，这其中包含了认识事物的所有能力。观察事物是从以下四个功能来认识事物的：</p><ul><li>思考（利用语言能力等把握事物）<ul><li>鸟类中的燕子</li></ul></li><li>直观（推测能力，即推测眼前的东西具有什么样的可能性）<ul><li>春天来了</li></ul></li><li>感情（自己对那件事的考虑）<ul><li>飞得很漂亮，感觉心情很好</li></ul></li><li>感觉（掌握形状与性质的能力）<ul><li>像飞机，速度很快</li></ul></li></ul><p>这一心理活动方式的差异，就叫做心理功能。</p><h3 id="关于内向型和外向型，思考型和感情型"><a href="#关于内向型和外向型，思考型和感情型" class="headerlink" title="关于内向型和外向型，思考型和感情型"></a>关于内向型和外向型，思考型和感情型</h3><p>病征：无论做什么，只要一看到父亲，就马上害怕得发抖</p><ul><li>弗洛伊德（外向型分析）：你的病是在心理上受到了父亲的创伤，知道了这个原因，病就治好了<ul><li>重视与父亲关系这一内心之外的问题</li></ul></li><li>阿德勒（内向型分析）：那是因为你想从父亲那里夺回家庭内的权利<ul><li>重视内在的问题</li></ul></li></ul><p>外向型：平时总想着与外部有关的事。</p><blockquote><p>担心人际关系的人属于外向型，不介意的人是内向型。</p></blockquote><p>思考型的人</p><ul><li>爱学习<blockquote><p>燕子的眼睛像麻雀，属于燕子科的鸟类</p></blockquote></li><li>能找出潜在可能性<blockquote><p>很想把它作为航空公司的标志</p></blockquote></li></ul><p>感情型的人</p><ul><li>抓住特征的能力敏锐<blockquote><p>翅膀很有特点啊，很快就能画出来</p></blockquote></li><li>能判断价值<blockquote><p>很可爱，很帅，很漂亮</p></blockquote></li></ul><h3 id="主要功能-低级功能"><a href="#主要功能-低级功能" class="headerlink" title="主要功能/低级功能"></a>主要功能/低级功能</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516220436.png"></p><p>主要功能：那个人所具有的最优秀的心理功能<br>低级功能：那个人具有的最不擅长的心理功能</p><p>思考型的主要功能是思考，低级功能是情感<br>如果过于思考，被压抑的低级功能——感情就会时常爆发出来<br>思考型的人，其感情在无意识下被混沌（未分化的无意识）控制住了。即集中精力做事情的时候，就容易控制极端的感情。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516220635.png"></p><p>外向型的人比内向型的人优越感强，也许害怕遇到意外或者看到自己的阴影。</p><p>内向型的人比外向型的人更具自卑感，自己的内心有种被压抑的感觉，性格有改变的可能性。</p><p>因为低级功能受到压抑，就容易出现暴力问题，所以人不要走极端，应该倾听无意识的声音。</p><p>自己的低级功能，就像阴影在威胁着自己，仰慕或威胁不具备自己能力的人，就是低级功能在作怪。</p><p>自己的意识中表现出来的未分化的性格，能够认识到无意识的部分。能够自我改善，克服自己的不足，使人格获得成长。</p><p>如果能够控制无意识，性格就可以改变。</p><h3 id="外向的思考型"><a href="#外向的思考型" class="headerlink" title="外向的思考型"></a>外向的思考型</h3><p>这种类型的人，在社会上交往融洽，头脑灵活。属于行动型，在工业社会中容易获得成功。这类人也是不干涉型的人。</p><p>适合的工作是官僚、政治家、经济顾问、医生等。</p><p>历史上的名人有达芬奇、克林顿等。</p><h3 id="内向的思考型"><a href="#内向的思考型" class="headerlink" title="内向的思考型"></a>内向的思考型</h3><p>这种类型的人头脑非常聪明，在物理学、哲学、数学等领域取得成就不少。</p><p>他们的聪明好奇不是为了事业的成功，而是为了满足内心的喜悦。这类人很多都比较清贫、孤僻。</p><p>德国哲学家就是这类人的典型代表。头脑很聪明，但除了散步外，对其他事情几乎不感兴趣。</p><p>在这类人看来，与地位、名利相比，自己的内心问题才是至高无上的。</p><h3 id="外向的感情型"><a href="#外向的感情型" class="headerlink" title="外向的感情型"></a>外向的感情型</h3><p>这类人善于判断周围情况，能在社会上立住脚。但内心非常冷淡。既和蔼可亲，又八面玲珑起着主角的作用。</p><p>代表人物有戴安娜王妃、梦露等。</p><p>这类人性格内向，爱思考，憧憬过多，可能还没计划好就草率辞去工作。容易相信他人的话，但没有目标盲目行动容易给自己带来麻烦。</p><p>对外界过于适应的话，反而对自己可能不利。回到家里会感到寂寞无聊。非常有理想，但要付出努力。</p><h3 id="内向的感情型"><a href="#内向的感情型" class="headerlink" title="内向的感情型"></a>内向的感情型</h3><p>这类人不会随波逐流，待人和蔼可亲。文静得就像平静的湖水。</p><p>这类人有时会成为一个冲动的决策人，被自己的阴影“外向的思考”型所俘虏。信誉所调查显示，这类人在外较风流。</p><p>这类人会满怀热情地把爱带给所有的人。比如不仅会担任护士，还在福利事业兼职。</p><p>这类人的阴影是“外向的思考型”（如性格开朗、崇拜运动）。一旦被自己的阴影左右就会很危险。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516222139.png"></p><h3 id="外向的感觉型"><a href="#外向的感觉型" class="headerlink" title="外向的感觉型"></a>外向的感觉型</h3><p>这类人比起自己的印象，更重视他人看法，所以事业容易成功。不过也容易受他人支配，有虚荣心。</p><p>不顾忌他人，喜欢铤而走险。爱手机物料的东西，喜欢购物。</p><p>如果内向直观的阴影太大的话，容易受到骗术、神秘宗教的支配。</p><p>这种人的视觉和味觉非常灵敏，在设计和厨艺等方面才华出众。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516222350.png"></p><h3 id="内向的感觉型"><a href="#内向的感觉型" class="headerlink" title="内向的感觉型"></a>内向的感觉型</h3><p>这类人对外界一切毫不在意。</p><p>典型人物有梵高。无论说什么，他都听不进去。</p><p>可能正因为感觉不平衡，所以造就了一些天才。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516222533.png"></p><h3 id="外向的直观型"><a href="#外向的直观型" class="headerlink" title="外向的直观型"></a>外向的直观型</h3><p>这类人吃穿都不讲究，是能够观察到事物的本质和可能性的直观型。不过因为是低级功能的感觉，对自身的反应迟钝。</p><p>这类人容易过度疲劳不注意身体，容易患心脏病、脑溢血。或者会出现运动过量或节食过度。</p><p>才能非凡的人，在新的商机中会取得成功。</p><p>担心会输，可能会直接放弃比赛。</p><h3 id="内向的直观型"><a href="#内向的直观型" class="headerlink" title="内向的直观型"></a>内向的直观型</h3><p>这类人本人觉得非常幸福，即使有直观能力，也偏于固执己见，很难适应复杂的现代社会。</p><p>适合从事与宗教有关的事情，但要自己进行神秘的体验。</p><p>受到周围人的尊重，也许不会影响周围的人。</p><hr><p>人的成长过程，关键是能够自我理解并控制无意识。通过自我与无意识的对话，使自己不断变化、不断成长，这正是人一生的目标。</p><p>人的一生要成长，通过与不喜欢的人交往，也就是与自己的影子交往，才能不断提高自己。</p><p>人肯定是在不断变化的，变化才是人生，一定要重视自己和自身的无意识。</p><p>分为以上的 8 个类型，是为了便于判断人的性格分类。每个人的具体性格都是很复杂的，是复杂的混合型。</p><p>与其说知道自己是哪种类型的人，倒不如让自己向希望成为的那个类型的某些方面去不断发展，以实现自己的目标。</p><p>想当艺术家的话，就要磨练自己的意志，提高技艺。</p><p>低级功能是自己阴影的原型，如果这个原型被认识、被整合，就会得到成长。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516223400.png"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220516 - GAMES104 - Lecture 1：游戏引擎导论</title>
      <link href="2022/05/16/20220516-games104-lecture1/"/>
      <url>2022/05/16/20220516-games104-lecture1/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-1：游戏引擎导论"><a href="#Lecture-1：游戏引擎导论" class="headerlink" title="Lecture 1：游戏引擎导论"></a>Lecture 1：游戏引擎导论</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul><h3 id="Topic-1-Why-we-need-to-learn"><a href="#Topic-1-Why-we-need-to-learn" class="headerlink" title="Topic 1 Why we need to learn"></a>Topic 1 Why we need to learn</h3><p>如果把做游戏比作会开车，会做游戏引擎就是会造车。游戏引擎就是 the diamond on the crown。</p><p>游戏引擎的未来应用：</p><ul><li>Game</li><li>虚拟人</li><li>电影动画</li><li>军事模拟</li><li>数字孪生<ul><li>真实世界的虚拟化呈现/表达</li></ul></li></ul><h3 id="Topic-2-History-of-game-engine"><a href="#Topic-2-History-of-game-engine" class="headerlink" title="Topic 2 History of game engine"></a>Topic 2 History of game engine</h3><ul><li>早期<ul><li>红白机（Famicom, FC）</li><li>游戏引擎之父<ul><li>John Carmack，卡神</li><li>Wolfenstein 3D (1992)</li><li>Doom</li><li>Doom 引擎授权后做出了 ShadowCaster</li></ul></li></ul></li><li>早期现代游戏引擎<ul><li>背景：Voodoo 显卡出现</li><li>游戏：Quake</li><li>硬件发展推动游戏行业发展<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516110923.png"></li></ul></li><li>现代游戏引擎生态<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516111034.png"><ul><li>Middlewares, 中间件<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516111202.png"></li></ul></li></ul><h3 id="Topic-3-What-is-game-engine"><a href="#Topic-3-What-is-game-engine" class="headerlink" title="Topic 3 What is game engine"></a>Topic 3 What is game engine</h3><ul><li>Technology Foundation of Matrix</li><li>Productivity Tools of Creation</li><li>Art of Complexity</li></ul><blockquote><p>荐书：The complexity of system，系统复杂之美</p></blockquote><h4 id="Complexity-of-Simulation-by-0-1"><a href="#Complexity-of-Simulation-by-0-1" class="headerlink" title="Complexity of Simulation by 0/1"></a>Complexity of Simulation by 0/1</h4><p>现代计算机本质：图灵机（01 变换）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516111900.png"></p><p>Game engine is way beyond rendering</p><blockquote><p>荐书：game engine architecture</p></blockquote><p>游戏引擎的挑战：有限算力，实时处理</p><h4 id="Toolchain-for-creators"><a href="#Toolchain-for-creators" class="headerlink" title="Toolchain for creators"></a>Toolchain for creators</h4><p>做引擎要先学会做面向广大用户（程序员，艺术家/设计师）的工具</p><ul><li>对于程序员<ul><li>提供可扩展接口</li><li>是否具有二次开发能力也是评判引擎的标准</li></ul></li><li>对于艺术家/设计师<ul><li>提供多人协作功能</li></ul></li></ul><h4 id="Update-the-engine-on-the-fly"><a href="#Update-the-engine-on-the-fly" class="headerlink" title="Update the engine on the fly"></a>Update the engine on the fly</h4><p>热更新</p><h3 id="Topic-4-How-to-study"><a href="#Topic-4-How-to-study" class="headerlink" title="Topic 4 How to study"></a>Topic 4 How to study</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516113211.png"></p><p><a href="https://github.com/miloyip/game-programmer">A study path for game programmer</a></p><p>本课只关心主干道，建立知识体系结构，在未来在碰到问题的时候知道从何下手</p><h3 id="Topic-5-Course-content"><a href="#Topic-5-Course-content" class="headerlink" title="Topic 5 Course content"></a>Topic 5 Course content</h3><h5 id="Basic-Elements"><a href="#Basic-Elements" class="headerlink" title="Basic Elements"></a>Basic Elements</h5><ul><li>Engine Structure and Layer</li><li>Data Organization and management</li></ul><blockquote><p>take away: 打开游戏引擎，从 Update 函数开始看起，就能顺藤摸瓜看到架构</p></blockquote><h5 id="Rendering"><a href="#Rendering" class="headerlink" title="Rendering"></a>Rendering</h5><ul><li>Model, material, shader, texture</li><li>light and shadow</li><li>render pipeline</li><li>sky, terrain, etc.</li></ul><h5 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h5><ul><li>Basic concepts of animation</li><li>Animation structure and pipeline</li></ul><p>动画间的融合</p><h5 id="Physics"><a href="#Physics" class="headerlink" title="Physics"></a>Physics</h5><ul><li>basic concepts of physics system</li><li>gameplay applications</li><li>performance optimization</li></ul><p>前面的是视觉表达，这里要负责物理表达</p><h5 id="Gameplay"><a href="#Gameplay" class="headerlink" title="Gameplay"></a>Gameplay</h5><ul><li>event system</li><li>scripts system</li><li>graph driven</li></ul><p>如何让模拟世界变为“可玩”的游戏</p><blockquote><p>take away: 编程不意味着 scripts coding，所有逻辑构建其实在某种程度上都可以算是编程</p></blockquote><h5 id="Misc-systems"><a href="#Misc-systems" class="headerlink" title="Misc. systems"></a>Misc. systems</h5><ul><li>effects</li><li>navigation</li><li>camera</li></ul><h5 id="Tool-set"><a href="#Tool-set" class="headerlink" title="Tool set"></a>Tool set</h5><ul><li>c++ reflection</li><li>data schema</li></ul><p>如何构建工具</p><h5 id="Online-gaming"><a href="#Online-gaming" class="headerlink" title="Online gaming"></a>Online gaming</h5><ul><li>lockstep synchronization</li><li>state synchronization</li><li>consistency</li></ul><blockquote><blockquote><p>预告令人头疼的拜占庭算法和爱斯基摩人小屋再次出现！</p></blockquote></blockquote><h5 id="Advanced-technology"><a href="#Advanced-technology" class="headerlink" title="Advanced technology"></a>Advanced technology</h5><ul><li>motion matching<ul><li>动作融合匹配让其自然</li></ul></li><li>procedural content generation (PCG)<ul><li>游戏内容自动生成</li></ul></li><li>data-oriented programming (DOP)</li><li>job system</li><li>Lumen<ul><li>虚幻 5 的光照系统</li></ul></li><li>Nanite<ul><li>虚幻 5 的虚拟几何系统</li></ul></li></ul><h4 id="Topic-6-Course-logistics"><a href="#Topic-6-Course-logistics" class="headerlink" title="Topic 6 Course logistics"></a>Topic 6 Course logistics</h4><h5 id="References"><a href="#References" class="headerlink" title="References"></a>References</h5><ul><li>no required textbooks</li><li>most recommended reference<ul><li>Game Engine Architecture, Jason Gregroy</li></ul></li></ul><h4 id="Mini-Engine"><a href="#Mini-Engine" class="headerlink" title="Mini Engine"></a>Mini Engine</h4><ul><li>mini runtime framework</li><li>mini editor</li><li>building basic knowledge system of game engine</li></ul><h4 id="Assignments"><a href="#Assignments" class="headerlink" title="Assignments"></a>Assignments</h4><blockquote><p>野心：最后能做个小小的联网对战游戏</p></blockquote><h3 id="course-contributor"><a href="#course-contributor" class="headerlink" title="course contributor"></a>course contributor</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516120041.png"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220515 - 漫画荣格 - 第七章：塔 伟大的自己</title>
      <link href="2022/05/15/20220515-comicjung-chap7/"/>
      <url>2022/05/15/20220515-comicjung-chap7/</url>
      
        <content type="html"><![CDATA[<h2 id="第七章-塔-伟大的自己"><a href="#第七章-塔-伟大的自己" class="headerlink" title="第七章 塔 伟大的自己"></a>第七章 塔 伟大的自己</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1923 年母亲去世之前，荣格在宝林根湖畔建造了一座塔。从一开始建塔时他就明白，那可能是他成熟的地方。</p><p>大女儿当时不明白荣格为何要在此安家，因为这个地方有尸骨。</p><p>听见大女儿这么说的时候，荣格确实想过会有。四年后，在补充建塔的时候，发现了尸骨。可能是 1799 年在湖边淹死的法国士兵。</p><p>荣格为士兵举行了正式的葬礼，在坟上打了 3 发吊唁礼炮。但是，尽管他们的灵魂得到了安慰，可是，以后在这座塔里还是听到了许多“声音”。</p><p>那是，荣格听见了管乐声或笑声、说话声，可是外面没有任何人。</p><p>他认为这不是幽灵，也许是一种同步现象。与预感相反，是过去的声音在现在回响。</p><p>1950 年，荣格立了一块石碑，注明了这座塔对他的意义。</p><p>在碑上，他刻上了威廉的 炼金术、阿尔诺的拉丁语诗歌、霍姆克尔斯（人像）等。</p><p>面对石碑的时候，荣格自己的心理感到特别安慰，而且，在塔内的时候也感到···</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515222654.png"></p><p>最初建塔的时候，是在母亲去世前后，是象征性的。但这座塔对荣格来说，好像是在母亲的胎内，就像在玻璃试管中制造霍姆克尔斯那样，他的灵魂也是在母亲的胎内或圣杯中形成的。</p><p>1923 年，最初的塔象征着暖炉般的母亲。</p><p>1927 年，荣格感觉缺少了点什么，就补充建造了另一座塔。</p><p>1931 年，时隔四年，建造了由 4 个部分组成的塔，这表示四位一体。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515222916.png"></p><p>也就是说，就像坐在母亲这个暖炉旁边打盹儿，也象征着荣格的无意识和意识知识的心理结构。</p><p>1955 年，荣格在塔边与埃玛交谈，说想再给塔赋予其它的含义。埃玛感觉身体不适，说先回家休息。过了一会儿，荣格突然感觉不妙，再回家找埃玛时，埃玛已经离世。</p><p>妻子去世后，荣格感到自己肩负着“必须成为自己自身”这一内在的义务。</p><p>他觉得不能再蹲在象征着母亲的这个塔里了，必须让自我在塔上站起来。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515223304.png"></p><p>从此以后，荣格经常在塔里苦思冥想。他好像同时生活在了几个世纪。</p><p>在那里，他经历了他的第二个人生，从所有角度眺望生生不息的人生。</p><p>在无限的思索中，他感受到了无时间状态的忘我境地。</p><p>在冥想中，他游历了永远的意象。他的肉体虽然还在塔里，但他的心却像祈祷师那样，移到了地底和大气层外，他经历了所有的体验。</p><blockquote><p>“现在”包括着“过去”和“未来”，把心向“现在”敞开，就是像“永远”敞开。</p></blockquote><p>一天，荣格“看到”埃玛穿着海莉为她做的礼服。她的表情既不悲伤也不高兴，就像一位深思熟虑的智者，没有丝毫杂念，也没有任何感情表露。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515223913.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515223926.png"></p><p>由于脱离了感情冲动的贪婪，远离了她们的投影和原型支配，实现了个性化。荣格看到了她们最真实美丽的形象。</p><p>他感悟：在走完人生的青年期时，就明白了人的感情中自然包含着对对方的过分期待，如果抛开这一点并客观地认识它，才能合二为一。</p><p>但是，此后的人生是很重要的，要脱离原型的束缚，离开父母和异性的关照，有目的的生活。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515224220.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515224236.png"></p><p>荣格“预见”了自己的死亡。</p><p>要理解死，他知道，死并不可怕，它是通往永远的入口。作为一个人，应该面对死亡，视死亡为自然之物，这样才能成熟。</p><p>这是人生后半生的课题。是人生的伟大的智慧。人类的生存，是要打开心灵的眼睛，去认识真实的自己。</p><blockquote><blockquote><p>天下万物，无中生有，最终不过复归于无。</p></blockquote></blockquote><p>“认识”世界、把心灵向自然“意义”敞开的时候，我们就能将死亡理解为再生的入口。</p><p>但是，人生的后半生也需要再次冒险，这时的冒险不是与他人争斗，而是与自己的无意识争斗。</p><p>这是使自我走向成熟并实现自己的过程，是人类成熟期的目的，起帮助作用的是结合的神秘，是东方知识和西方知识的完美结合。</p><p>荣格看到了，考虑过的事，要证实的事，都没有错。他思考的一个个片段，在庞大的整体中，得到了整合。</p><p>人在青年时代，要勇于向原型挑战，要有英雄般的冒险精神，要离开父母而独立，要巩固作为社会成员的地位，这些都是人生前半生的课题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515224739.png"></p><p>物质世界和精神世界并不是各自独立的，世界史不可分的，它作为一个整体，是个“一体世界”。</p><blockquote><blockquote><p>道体，即“一”</p></blockquote></blockquote><p>决定它的是结合的神秘，明白了一体世界的意志，也就理解了共时性。</p><p>而且，也就知道，宇宙不是机械装置似的冰冷的物体。弗洛伊德是用因果规律来解释心理，荣格的后半生是通过共时性来说明心理。</p><p>1955 年，《神秘的结合》出版了。荣格晚年，忙于 UFO 的研究，1958 年发表了《空中飞碟》。1960 年成为丘斯那哈特市的名誉市民。</p><p>1961 年 6 月 6 日，荣格离世。</p><blockquote><p>所谓生仅仅是结局的一部分，是庞大秘密中的一小段插曲。死···是通向再生的入口，是一个新生。</p></blockquote><p>这个世界充满着共时性，认识到这一点，也就能发现包罗万象中所含的“意思”。</p><p>对共时性的理解，就是我们对世界的认识。当向着共时性敞开心扉的时候，我们“自己”就会充满到广袤无垠的宇宙的各个角落。</p><p>世界就是这个“伟大的自己”的体现。</p><blockquote><p>我的孩子们啊，请不要忘记。你也许信，你也许不信。你在呼唤，你没有呼唤，神灵都在。</p></blockquote><blockquote><p>最初的人来自土地，是土地的孩子，第二个人是上天的孩子。</p></blockquote><blockquote><p>请不要忘记，世界是由一个真实联系着的。我们看到宇宙的时候，心灵就敞开了。</p></blockquote><blockquote><p>所有的存在都是有意义的。<br>我们知道生的喜悦。感受到了宇宙的博大恩惠。<br>我们的诞生就是因为需要“存在”，而成为可爱的存在。<br>不管遇到怎样的苦恼、残酷、憎恨与空虚···</p></blockquote><blockquote><p>当我们感觉到共时性的存在时，我们就会被无限的存在的喜悦所包围。<br>作为天意的共时性都同样在起作用。</p></blockquote><h3 id="题外话-联应和因果性"><a href="#题外话-联应和因果性" class="headerlink" title="题外话 联应和因果性"></a>题外话 联应和因果性</h3><p>这章原文中并无短评。</p><p>这里插一句题外话，不久前与友人谈及因果关系，没想到几天后就读到了荣格与共时性。</p><p>这里顺便将他发予我的《西方神秘学指津》中有关联应和因果性的相关部分截取：</p><p>在前启蒙时期，可以区分三种不同观点：</p><ol><li>把宇宙看成一个宏伟的和谐有机整体，其中所有部分都彼此联应，无需中介环节或因果链···<br>  这种“联应”概念与“类比思维”（analogical thinking）、“关联思维”（correlative thinking）、“相似”（ressemblance）、“征象”（signatures）、“分有”（participation）或“共时性”（synchronicity）等类似概念密不可分···</li><li>第二种观点可见于从菲奇诺开始的许多文艺复兴时期的作者。这种观点假设，宇宙的不同部分即使相距遥远，也会通过所谓的“隐秘因果性”（occult causality）在事实上相互影响。</li><li>第三种观点称之为“工具因果性”。其最基本的形式就是人们所熟知的“机械”模型或台球模型，即一个事物通过可证实和可预测的物质因果链来影响另一个事物。</li></ol><p>第一种观点将万物视为一体，不可分；第二种观点则预示着万物间表面独立，实则都被“隐秘因果性”相连；而第三种观点可以说视万物各自独立，除非有物质因果链将其连接。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220515-GAMES104-Modern Game Engine - From Getting Started To Practice</title>
      <link href="2022/05/15/20220515-games104-toc/"/>
      <url>2022/05/15/20220515-games104-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="GAMES104——现代游戏引擎：从入门到实践笔记"><a href="#GAMES104——现代游戏引擎：从入门到实践笔记" class="headerlink" title="GAMES104——现代游戏引擎：从入门到实践笔记"></a>GAMES104——现代游戏引擎：从入门到实践笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>最近在尝试着搞关卡，不是很顺，算是在尝试多个方向，突然看到 GAMES 又出新课了，虽然二者并不直接相关，但，学吧，学无止境！</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://games-cn.org/games104/">课程官网</a>：</p><ul><li><strong>课程简介</strong><ul><li>本课程将介绍现代游戏引擎所涉及的系统架构，技术点，引擎系统相关的知识。通过该课程，你能够对游戏引擎建立起一个全面且完整的了解。如果你动手能力足够强，你将能够跟随课程，<strong>从0到1搭建起一个完整的迷你游戏引擎</strong>。本课程适合相关专业领域的学生、研究者，以及所有对游戏引擎设计和开发感兴趣的人。课程会分成以下三个部分：现代引擎架构综述、各核心系统原理和开发 、前沿领域简介。在每个部分中，将通过讲解、问答、课后作业的形式，带领你学习一个现代游戏引擎背后牵涉到的计算机体系结构，软件架构，各个系统特定的知识，了解大型软件系统设计和实施背后的复杂性，以及提高自身的编程能力。在本课程中，我们会准备一段开源的引擎框架，选取部分易上手的知识点，让你能够跟随课程节奏，亲手构建一个迷你引擎，体验系统架构的乐趣。本课程的核心是让同学们构建一个开发平台，不会去侧重于讲特定引擎的使用方法，也不会深入到具体效果实现；比如：用shader实现水面效果等。</li></ul></li><li><strong>教师简介</strong><ul><li>王希，知名游戏引擎研发技术专家和布道者，BOOMING TECH创始人。本科毕业于浙江大学CAD&amp;CG实验室，硕士毕业于清华大学计算机系。前期在微软亚洲研究院进行计算机科学和图形学领域研究，发表多篇SIGGRAPH论文。后加入Bungie工作室，是《Halo》系列和《Destiny》引擎团队核心成员，专注于现代3A级游戏的引擎底层架构和工程实践。2011年，王希回国创立BOOMING TECH，十年来一直从事游戏引擎设计和研发，探索引擎在前沿领域中的应用方向，以及云原生引擎技术突破。GAMES系列课程是王希的首次对外公开课，希望以图形学研究者，和产业亲历者的视角，系统性地带大家认识和了解游戏引擎。让更多人动手体验到游戏引擎设计和开发的魅力。</li></ul></li><li><strong>直播方式</strong><ul><li>GAMES虎牙直播间 <a href="http://webinar.games-cn.org/">webinar.games-cn.org</a></li></ul></li><li><strong>课程 BBS：</strong><br><a href="https://games-cn.org/forums/forum/games104-forum/">https://games-cn.org/forums/forum/games104-forum/</a></li><li><strong>课程 PPT 和视频：</strong><br><a href="https://games-cn.org/games104-slides/">https://games-cn.org/games104-slides/</a></li><li><strong>课程作业：</strong><br><a href="http://www.smartchair.org/GAMES104">http://www.smartchair.org/GAMES104</a></li><li><strong>课程大纲：</strong><ul><li>【第一讲：2022年3月14日】游戏引擎导论</li><li>【第二讲：2022年3月21日】基础架构 1 – 引擎架构分层，整体Pipeline</li><li>【第三讲：2022年3月28日】基础架构 2 – 数据组织和管理</li><li>【第四讲：2022年4月4日】渲染系统 1 – 渲染数据组织</li><li>【第五讲：2022年4月11日】渲染系统 2 – 光照</li><li>【第六讲：2022年4月18日】渲染系统 3 – 渲染管线</li><li>【第七讲：2022年4月25日】渲染系统 4 – 天空，地形，后处理等</li><li>【第八讲：2022年5月2日】动画系统 1 – 骨骼动画</li><li>【第九讲：2022年5月9日】动画系统 2 – 动画混合</li><li>【第十讲：2022年5月16日】动画系统 3 – 高级动画</li><li>【第十一讲：2022年5月23日】物理系统 1 – 碰撞和刚体</li><li>【第十二讲：2022年5月30日】物理系统 2 – 布料模拟</li><li>【第十三讲：2022年6月6日】GamePlay 1 – 基础机制</li><li>【第十四讲：2022年6月13日】GamePlay 2 – Graph Driven</li><li>【第十五讲：2022年6月20日】特效系统</li><li>【第十六讲：2022年6月27日】其他系统 （相机，控制，寻路等）</li><li>【第十七讲：2022年7月4日】工具链 1 – 基础框架</li><li>【第十八讲：2022年7月11日】工具链 2 – 代码反射，数据打包等</li><li>【第十九讲：2022年7月18日】网络同步</li><li>【第二十讲：2022年7月25日】前沿介绍 1 – Data Oriented Programming，Job System</li><li>【第二十一讲：2022年8月1日】前沿介绍 2 – Motion Matching, Nanite, Lumen</li><li>【第二十二讲：2022年8月8日】前沿介绍 3 – Procedurally Generated Content</li></ul></li><li><strong>教材：</strong><ul><li>【非必须】：Game Engine Architecture, Jason Gregroy</li></ul></li></ul><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ul><li><a href="https://medill-east.github.io/2022/05/16/20220516-games104-lecture1/">20220516 - GAMES104 - Lecture 1：游戏引擎导论</a></li><li><a href="https://medill-east.github.io/2022/05/18/20220518-games104-lecture2/">20220518 - GAMES104 - Lecture 2：Layered Architecture of Game Engine</a></li></ul><h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><ul><li><a href="https://medill-east.github.io/2022/05/18/20220518-games104-assignment1/">20220518 - GAMES104 - Assignment 1: Build and Run Pilot Engine</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220514 - 漫画荣格 - 第六章：荣格与东方思想</title>
      <link href="2022/05/14/20220514-comicjung-chap6/"/>
      <url>2022/05/14/20220514-comicjung-chap6/</url>
      
        <content type="html"><![CDATA[<h2 id="第六章-荣格与东方思想"><a href="#第六章-荣格与东方思想" class="headerlink" title="第六章 荣格与东方思想"></a>第六章 荣格与东方思想</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>每一条道路都是通往真理的无数条道路中的一条。</p><p>所有物质都是一个物质的诸多侧面，我们把心向着道路敞开的话，就会知道走哪条路。</p><p>弟子心中做好准备的时候，师傅自然就会过来。</p><p>荣格曾经在给一位女病人做心理分析时受阻，因为她总是什么都知道。因此，分析就中断了。</p><p>而有一次，女病人说昨晚做了一个梦。有人在梦中给了她一个黄金做的神圣甲虫。这时，窗外正好有一只甲虫撞到玻璃上发出声响，荣格将其拿进来，告诉女病人说“这里有你的圣甲虫”。发生这件事以后，她的合理主义出现了变化。</p><p>之后，因为她消除了原有知识的障碍，所以，对她的心理分析进展得很顺利。</p><p>是那个偶然的巧合···不，那不是偶然的。类似的事情，经常会发生。</p><p>长久以来，我们相信，只有因果关系才是真实的。因果关系才是合理主义思想的基础。但，荣格认为，也存在着与因果关系相对的，应该称为“共时性”的关系。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215014.png"></p><p>人类意识的根源如果只有一个的话，那些“巧合”就不会让人感到奇怪了。</p><p>荣格当时对天宫图（占星算命用的图）和历史的相关性很感兴趣，想再好好研究一下易经。</p><p>这个设想的实现花了 20 多年的时间，终于在 1952 年发表了《自然现象与心理结构》一书。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215231.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215240.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215320.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215346.png"></p><p>1938 年，荣格应印度政府的邀请到了印度。这使他有幸看到了与北非不同的高度分化了的不同性质的文明。</p><p>东方是欧洲的对照镜。原本相同的东西，在欧洲和印度却各有不同的表现。</p><p>尤其令人惊讶的是，东方人并不忌讳“恶”。有意思的是，他们认为“恶”包括在自然界当中。荣格把这件事记录在以后出版的《四位一体论》中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215624.png"></p><p>荣格在释迦牟尼频繁讲经的地方，分析基督教与基督教徒。基督教徒努力寻求善。尽管将要被恶俘虏，但印度人却感到自己是在善恶的彼岸，他们从恶中逃脱了出来，并且克服了恶。</p><p>荣格认为，释迦牟尼和基督教都是自己的具体体现，但它们的意义却完全不同。</p><p>释迦牟尼理性地克服了世界，而基督教是作为受难者来客服世界。基督教是忍耐，释迦牟尼是彻悟。但是，在印度，释迦牟尼是完美的人。</p><p>基督教在基督教徒中得到了统一，人们应该感觉到基督教。可是，历史上却说“应该模仿基督教”，这就把神置于外了。因为每个人都没有把自己自身向全体敞开，所以导致自己越来越渺小。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215945.png"></p><blockquote><blockquote><p>图中的“自己”，应该指代的是意识和无意识的中心。</p></blockquote></blockquote><p>而意识存在于宇宙的菩萨中，菩萨按照神的意志行事。我们敞开心灵去看待神，就会使自我不断丰富并成长。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514220120.png"></p><p>我们生存在宇宙的安排中，让偶我们的意识去认识。在理念上，只要领会到神，神就会存在与我们的心中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514220157.png"></p><blockquote><blockquote><p>有些像早些年看到过对于“开光既是开灵智”的解释：开光并不是某种物理意义上的措施，而是指人在看到“被开光”的物体就能够想到相应的神/品质，从而最终开灵智。</p></blockquote></blockquote><p>当然，必须要知道：认为自己=神的时候，由于骄傲自大而关闭了自己的意识：认为自我=自己，已经完全被同化了，这都是很危险的。</p><p>但对荣格来说，印度是研究过程，不是研究对象。</p><p>所有道路，都是为了让他重新塑造欧洲精神的主题。</p><p>实际上，到东方考察，对荣格来说是很有意义的经历，使他想到了对立原理的统一，这有助于他对炼金术的研究。</p><p>他觉得，释迦牟尼的内心反省确认了他的意向理论。中国道教的思维方式证实了他的共时性原理。</p><p>他觉得，自己的心灵终于向着“统一的世界”敞开了，心里很平静。</p><p>然而，1944 年，由于神志不清和骨折，荣格停止了罗马的旅行。</p><p>荣格还有很多事情想写下来，能起床的时候，他就拼命地写。</p><p>晚年的托妮，因为过量吸烟和饮酒，患上了关节炎和孤独症。</p><p>1953 年 3 月 20 日，托妮突然去世。</p><p>荣格对她的去世，没有做过任何警告梦或预知梦，感到很不安。最后，也没有出席托妮的葬礼。</p><p>但是，之后他追悼了托妮，为托妮制作了纪念碑，并立在丘斯那哈特地区的自家院子里。</p><h3 id="短评-9：荣格被东方思想吸引"><a href="#短评-9：荣格被东方思想吸引" class="headerlink" title="短评 9：荣格被东方思想吸引"></a>短评 9：荣格被东方思想吸引</h3><p>荣格对东方思想产生浓厚的兴趣，与他和汉学家里哈路特·威廉赫尔姆的会面有很大影响。</p><p>荣格通过威廉赫尔姆，对中国的《易经》、《太乙金华宗旨》产生了极大兴趣。《太乙金华宗旨》一书的内容是以冥想形式介绍了中国式的炼金术，这正与荣格关心的西方炼金术相关。荣格也亲自体验过古印度瑜伽理论的冥想法，可以说，冥想体验是感知自己人格深处的无意识的方法。</p><p>荣格被《易经》的这里所吸引，经常使用芦苇棒算卦。荣格提倡的共时性的思维，就是从易经的原理领悟出来的。</p><p>西藏佛教也对荣格影响很大，荣格画了一张代表整个心理形象的菩萨图。有一位欧洲患者在自己的无意识中发现，这张图中的菩萨和西藏佛教的菩萨一样。荣格是希望通过画菩萨图来发现心灵深处涌出的意象，进而找到探索无意识世界的钥匙。</p><p>就这样，荣格积极地把东方思想介绍到欧洲，他对很多东方经书都做了注解。因此，在东西方思想融合的过程中，荣格所起的作用不容忽视。</p><p>但是，荣格的心理学与佛教的唯心思想不同。唯心思想是大乘佛教之一，认为“所有现象都是心理产生的”，主张通过接受瑜伽思想是自己的心理转变，达到大彻大悟的境界。其将意识分为 8 大作用，其中有六觉：视觉、耳觉、嗅觉、味觉、触觉和感觉，此外，还有根本性的自我执着意识“超自然意识”、产生所有表象的根源性意识。</p><blockquote><blockquote><p>想到了 <a href="https://baike.baidu.com/item/%E3%80%8A%E5%9D%9B%E7%BB%8F%E3%80%8B/1772525">《坛经》</a>中云：“时有风吹幡动。一僧曰风动，一僧曰幡动。议论不已。惠能进曰：‘非风动，非幡动，仁者心动。”</p></blockquote></blockquote><p>根源性意识被看做与荣格心理学中的集体无意识相适应，这种观点当然不是荣格所关心的。但是，它作为研究荣格心理学的方法之一，是与东方思想相比较的研究，也是很有意思的。</p><h3 id="短评-10：共时性与道教"><a href="#短评-10：共时性与道教" class="headerlink" title="短评 10：共时性与道教"></a>短评 10：共时性与道教</h3><p>共时性是荣格提出的理论，它与因某种原因而得出某种结果的“因果关系”正好相反。荣格在实践中得出结论：“有关联性的事情容易同事或连续发生”，这就是共时性，也就是说，共时性是一定意义上的一致性，有别于单纯的同时发生。</p><p>共时性可以分为以下类型：</p><ul><li>心理想的事情与实际发生的事情相吻合。例如，看到眼前的桌子，就想桌子上要是有鲜花该多好啊，这时，正好有一个朋友拿着鲜花来拜访你。<blockquote><blockquote><p>心想事成？</p></blockquote></blockquote></li><li>梦见或幻觉到的事情同异地发生的事情一致。如，梦到有人死了，实际上那人真的在他乡去世了，这样的传闻很多。<blockquote><blockquote><p>类似预知梦</p></blockquote></blockquote></li><li>某个意象就是将来实际发生的事情，也就是所谓的预言。</li></ul><p>这些现象，用因果关系是无法解释清楚的，但经常被解释为偶然的巧合。可是，在中国的道教或《易经》中，看到这类现象就不足为奇了。另外，东方有些谚语“心想事成”、“说曹操曹操到”、“弟子心中做好准备的时候，师傅自然就会过来”等，也都包含着共时性的原理。</p><p>再如，白天虽然看不见星星，但星星白天也在闪烁。如果心灵的眼睛睁开，则可以认识到白天也在闪烁的星星。就这样，敞开心扉去认识大自然的客观现象，就会发现共时性其实并不神秘，而是很自然的事情，也可以说，这类似于道教中的道的幻觉所看到的一瞬间的事情。</p><p>道教认为，宇宙中的统一原理与世界上的万物都有关系，所有物质都可以说是“宇宙统一体”的各个侧面。因为所有物质都属于一个统一体，所以，两种以上的物质就具有关联性，这也就不奇怪了。</p><blockquote><blockquote><p>出处莫不是《庄子·知北游》？<br>东郭子问于庄子曰：“所谓道，恶乎在？”庄子曰：“无所不在。”东郭子曰：“期而后可。”庄子曰：“在<a href="https://baike.baidu.com/item/%E8%9D%BC%E8%9A%81/10141463">蝼蚁</a>。”曰：“何其下邪？”曰：“在稊稗。”曰：“何其愈下邪？”曰：“在瓦甓。”曰：“何其愈甚邪？”曰：“在屎溺。”东郭子不应。</p></blockquote></blockquote><p>荣格提出了共时性与道教的关系，描述说：“对共时性的理解，是打开研究东方思想神秘世界的钥匙。”</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220513 - 漫画荣格 - 第五章：炼金术时代 心理的变化与成长</title>
      <link href="2022/05/13/20220513-comicjung-chap5/"/>
      <url>2022/05/13/20220513-comicjung-chap5/</url>
      
        <content type="html"><![CDATA[<h2 id="第五章-炼金术时代-心理的变化与成长"><a href="#第五章-炼金术时代-心理的变化与成长" class="headerlink" title="第五章 炼金术时代 心理的变化与成长"></a>第五章 炼金术时代 心理的变化与成长</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1926 年，荣格做了个具有决定意义的梦：他和一个农夫被关在了某家公馆的院子里，农夫叫喊：“啊！我们被关进了 17 世纪”，但自己却一点也没有感到不安，并坚信“总有一天能出去”。</p><p>荣格从梦中得到启示：自己一生要研究的书籍，应该在 17 世纪的书籍中。</p><blockquote><blockquote><p>希望每个人都有机会做这样，理解这样的梦</p></blockquote></blockquote><p>旅行回来后，荣格贪婪地读书，埋头研究。《我的思想》一书即将完成，但画的地图还有些不足之处。</p><p>他读完了关于唯理主义宗教思想的所有书籍，之后不知该研究什么。</p><p>唯理主义归根到底是说明了弗洛伊德的可怕的父辈权威，只会让人产生绝望与苦恼。</p><p>荣格认为，一定要在心里深处找到光明的另一个侧面，研究作为人类心理变化容器的子宫的原理。</p><p>1928 年，里哈尔特·威廉赫尔姆寄来一本有关中国炼金术的书籍《太乙金华宗旨》。这本书虽然不是讲述真正的炼金术，但它告诉了荣格“菩萨”的存在，是荣格研究炼金术的重要的航标。</p><blockquote><blockquote><p>玄起来了</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210115.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210133.png"></p><p>荣格让托妮去收集有关炼金术的书籍。尽管如此，很长时间，他一致认为炼金术是莫名其妙的东西，没有去理会。</p><p>但很快，荣格就和威廉赫尔姆一起研究起了道教与菩萨。1929 年，二人完成了《黄金精华的秘密》艺术，可惜的是，书籍完成不久，威廉赫尔姆就去世了。</p><p>菩萨图和道教的太极图，在荣格以后的研究中，对他影响很大。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210420.png"></p><p>很长时间，道的阴阳相生成了荣格的研究主题，他感到，阴阳图说明了光明与黑暗是可以统一的。</p><p>并且他还觉得，通过研究异教，可以重新认识他一直否定的基督教。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210554.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210619.png"></p><p>荣格发现，他希望自己周围的女性们是太母的原型，他已经超越了希望她们是圣母的这一单方面的愿望。</p><p>他希望她们从一些压抑及原型的支配中解脱出来，获得自由，使自己成为一个独立的人。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210819.png"></p><p>在和她们和谐交往的过程中，荣格开始贪婪地阅读有关炼金术的书籍。</p><p>刚看上去，好像是一些无聊的化学反应的梦，但渐渐地，他发现，书中讲的不正是人类心理的变化吗？</p><p>无意识是一个过程，通过自我对无意识的参与，使心理产生变化并得到发展，其个性化的过程就是炼金术。</p><p>掌握炼金术，就是“神秘的结合”。</p><p>荣格在其著作中揭示：人的降生，就是为了通过改变自己的参与来改变并发展心灵这一“自己实现”的人生旅程。</p><p>荣格发现了其他学派的炼金术，日后撰写了一部题为《心理学与炼金术》的巨著，并因此创立了“个性化过程”这一荣格分析心理学中特有的理论。</p><p>而且，正是在这一研究过程中，荣格提出了“自己”这个概念。因此，荣格又自信地提出了“原型”、“集体无意识”等概念。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513211422.png"></p><p>1933 年起，希特勒纳粹势力的抬头，正像荣格所说，是集体无意识的表现，是疯狂症。</p><p>他认为，因为没有意识到“自己”这个概念，所以，欧洲将要被集体无意识吞噬。这很危险···！</p><p>如同欧洲内部发生痉挛一样，欧洲将要再次卷入战争的旋涡。</p><p>此时，弗洛伊德由于反对迫害犹太人的运动而受到纳粹的迫害，为能帮助弗洛伊德，荣格与他取得了联系。</p><p>那时的弗洛伊德，因为<a href="https://zh.wikipedia.org/zh-hk/%E4%B8%8B%E9%A2%9A%E7%99%8C">下颚癌症</a> 做了几次手术，身体非常衰弱，但是他觉得不能接受荣格的···“敌人的帮助”。</p><p>弗洛伊德 1939 年流亡英国，第二年去世，享年 83 岁。</p><p>荣格再次失去了父亲。</p><p>荣格、埃玛、托妮都迎来了人生的晚年。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212135.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212150.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212208.png"></p><p>荣格后来异常活跃，1940 年在艾拉诺斯发表了《三位一体教义的心理学解释》。</p><p>1941 年和卡尔·可雷尼伊合著《神话学入门》，在艾拉诺斯发表了《弥撒的变化象征》。</p><p>此外，还和物理学家泡利·瓦尔夫甘谷甲流了对未来的展望。晚年的荣格，不仅继续进行心理学的研究，还涉及到神话学、自然科学等广泛的领域，深入研究人类的内心深处。当然，还有宗教学，尤其是积极向其他学派解释基督教。</p><p>他还在原本基督教对“神-圣灵-孩子”三位一体的神圣解释基础上融合阴阳思想进行了拓展，提出了“神-圣灵-恶魔-基督教”的四位一体说法。这个四位一体，是光明与黑暗、东方与西方，以及所有物质的结合，使得基督教展现更高水平的神圣。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212504.png"></p><p>荣格已经不害怕潜入意识深处了，而且还自由自在地往返于意识和无意识之间。</p><p>有一天，荣格做了这样一个梦：</p><p>家里有一栋从未进去过的房子，里面有一扇双层梦。进去一看是一个实验室。窗前有张桌子，上面放着许多玻璃容器，那是他父亲的工作间。瓶子里有各种各样的鱼。</p><p>有一位叫汉斯的年轻人拉开了窗帘。下一间是母亲的房间，顶棚上吊着 5 个箱子，分成 2 排。那间房子很宽敞，顶棚上吊着的箱子距离地面约有 60 厘米，每个箱子下面分别有两张床，就像庭院中的大亭子。这是他母亲的幽灵来访的屋子。</p><p>窗外有个大厅，管乐队在大声演奏。</p><p>他知道，母亲是为来访的幽灵布置的这个屋子。</p><p>管乐队表现出了表面的欢乐和世俗。可是，他们背后，气氛却截然不同，是沉默的亭子和实验室。</p><p>父亲房间里的鱼代表基督教，父亲关照着基督教徒的灵魂。</p><p>母亲的房间是灵魂来访时的招待会，母亲正保护着死者的灵魂。</p><p>他作为父亲和母亲的孩子，肩负的任务就是治愈灵魂。</p><p>他醒了。</p><p>他不再迷茫，他的存在，是为了将欧洲的白昼（基督教）和夜晚（神秘思想）相结合。</p><p>而且，人类的存在，是为了与没有规定要称为“神”的实体相对的···</p><p>他必须将神圣意向的明暗两面结合起来。白昼和黑夜是一个物体的不同侧面。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513213357.png"></p><h3 id="短评-7：荣格与炼金术"><a href="#短评-7：荣格与炼金术" class="headerlink" title="短评 7：荣格与炼金术"></a>短评 7：荣格与炼金术</h3><p>炼金术是一项科学技术，是从普通金属中提炼出贵金属，尤其是指黄金提炼技术。也包括了提炼长生不老药（炼仙丹）和万能药的技术。这一技术的产生，一般都认为，是由古希腊时代的亚历山大，结合各种冶炼技术、染色技术、宗教和哲学思想而产生的。这一技术的思想在《赫尔墨斯文库》中作为赫尔墨斯思想，受到了人们的推崇，在欧洲、阿拉伯搬到得到了不断推广。</p><p>炼金术历来被认为是伪科学、迷信，在近代科学形成前就应该被摒弃，但其发展至今，却没有停留在单纯的物质生产上，而是以系统的思想和实践为基础，形成了独特的解释世界的理论框架。炼金师在进行科学作业的的同时，也注重内心体验，即心灵深处发生的变化。两个对立的物质相结合，便可以产生新的物质，荣格的这一观点，形象地解读了炼金术。</p><blockquote><blockquote><p>这倒是以前所不曾了解的部分</p></blockquote></blockquote><p>荣格认为，炼金术的工艺以及其中所含的男女特征，与人类的人生及心理变化的方式很相似，于是，就将炼金术与心理治疗相结合，把炼金工艺和技术用于精神分析，创立了自己独特的精神分析疗法。当然，荣格的炼金术与原本意义上的炼金术完全不同。</p><p>荣格研究了炼金术的分离、分析、综合与合成的过程，以此提出了精神分析的四个阶段：①叙述-②解释清楚-③教育-④变化。</p><p>最初两阶段相当于炼金术中的分离、分析，其理论相当于弗洛伊德的还原法，荣格的理论中还增加了教育和变化。荣格分析理论的目的，并不满足于通过精神分析来减轻患者的病状，而是使患者的人格得到健康成长，使心理健康发展。</p><p>当然，为了实现这一目标，精神分析医生与患者，都必须以正直的心理（如同炼金原料）进入分析状况（如同将原料装入蒸馏器中），都很认真的两者，通过相互作用，彼此都发生了变化。</p><p>的确，荣格学派的精神分析医生，在给患者进行分析的同时，自己也在不断变化、成长。无论是精神分析医生还是患者，只有在相互信任、负责的基础上，才能得到心理的变化和成长。</p><h3 id="短评-8：唯理主义"><a href="#短评-8：唯理主义" class="headerlink" title="短评 8：唯理主义"></a>短评 8：唯理主义</h3><p>唯理一词的本意在希腊语中是“知识”的意思，唯理主义不同于基督教兴起时出现的思想运动——“旧唯理教派”。旧唯理教派与历史无关，多出现在各种宗教中。应该看到，荣格的唯理研究，在很大程度上也注重认识神灵世界的旧唯理教派。</p><p>唯理主义是在罗马边境、埃及、叙利亚、巴勒斯坦等国兴起的，并出现了很多流派，有许多被认为是基督教的异端教派。</p><p>其实，它是一种独立的思想运动，它的世界观的表现形式是否定希腊以来的普遍宇宙论（星尘观），这一思想在当今已经被否定。</p><p>唯理主义认为，世界分为物质的和神灵的，而神灵世界高于物质世界。</p><p>下面简单介绍唯理主义救世论：</p><p>人类是通过神灵的某个机遇来到地球，并被投胎到并非原本就有的物质世界里，这并不是人类的本来面目。但是，如果获得了关于人类本来面目的知识，人类就会觉醒，灵魂也就会脱离肉体而进入至高无上的神灵世界，再次成为神灵。</p><p>这种观点，否定了基督教徒所倡导的上帝创造的世界。而且，如果人类本来就有神性的话，就不需要救世主耶稣基督了。实际上，唯理主义的神话世界几乎与基督教的神话世界完全对立，是对基督教价值体系的完全反驳。因此，唯理主义的各流派受到了基督教的猛烈镇压，4 世纪后就迅速衰落了。</p><p>不过，唯理主义思想中，不是依靠自身以外的神灵，而是通过自我觉醒来救助自己的观点，对于现代人来说，也是很有价值的理论。也许正是这一点，使荣格非常重视研究唯理主义。</p><p>深层心理学中认为，人的肉体内存在着本来的自己，通过唯理主义观点才可以认识到，这种思想与荣格的无意识理论是一致的。唯理主义诞生的同时，炼金术也开始在埃及出现了。所以，荣格在研究唯理主义之后，很自然地就开始了炼金术的研究。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220511 - 漫画荣格 - 第四章：旅途 欧洲文明失去了什么</title>
      <link href="2022/05/11/20220511-comicjung-chap4/"/>
      <url>2022/05/11/20220511-comicjung-chap4/</url>
      
        <content type="html"><![CDATA[<h2 id="第四章-旅途-欧洲文明失去了什么"><a href="#第四章-旅途-欧洲文明失去了什么" class="headerlink" title="第四章 旅途 欧洲文明失去了什么"></a>第四章 旅途 欧洲文明失去了什么</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1923 年，荣格母亲去世。同年，他在宝林根湖畔建造了一座塔，这对他来说，是“新的人生”的开始。</p><p>母亲去世前后的一段时间里，荣格每天都在旅行中度日，这也许不是偶然的旅游观光。第一次旅行是 1920 年去了北非，1924 年到北美，然后又到了东非等地访问。</p><p>他很久以来的梦想就是从他国看欧洲，也从外在因素看待自己的人生。</p><p>他暂时离开托妮、埃玛，也在旅行途中，承受失去母亲的痛苦。</p><p>在突尼斯（非洲），他发现非洲女人几乎都戴着面罩，不戴面罩的女人被认为是妓女。而且，有很多男性相互搂抱，他心想难道就像古希腊那样，有很多同性恋吗？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511232853.png"></p><p>导游不像欧洲人那样轻浮，迈着坚实的脚步，脚步虽轻，但具有顽强的生命力。不知是天热的缘故，还是原始的符咒力，荣格似乎喜欢上了这个国家。</p><p>这一想法使荣格就像得了感染症。并且他还做了这样一个梦：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233044.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233118.png"></p><p>荣格在梦中被一名非洲酋长样的人（后面简称为酋长）袭击，但最终反制了他。并之后要求酋长读书，理由是“因为我战胜了你，所以，你必须读完这本书”。</p><p>荣格后来明白，酋长对他来说是影子，是与自己有关的种族的影子。梦境暗示的是荣格与北非相遇的东西。</p><p>在意识中，他感到了作为欧洲人的文明的优越感，但却畏惧非文明。北非对他来说是危险的。他以一个欧洲人的意识，遭到了北非这一无意识的激烈攻击，似乎就要被打败，那正是杀人现象的象征。</p><p>他们忘却了史前时代的最初的记忆。欧洲人失去的东西，可能就在欧洲以外的地方。或许，失去已久的神，也在那里？</p><p>在荣格即将离开北非的时候，内心深处特别渴望那位一直被他否定的神。</p><p>1924 年，荣格访问了新墨西哥的印第安人村庄普韦布洛。</p><p>美国是白人社会，但在那里却不同。他去那里的目的，是为了寻找在北非看到的“非欧洲的东西”。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233658.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233713.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233730.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233744.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233807.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233825.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233850.png"></p><p>1925 年，荣格到了肯尼亚和乌干达。那里的印第安人，就像普韦布洛的印第安人一样，也是那么完美和谐。女人和男人一样，都是宝贵的劳动力。而在欧洲，主张女性权利平等的结果，却失去了男女平等协作的和谐生活。</p><p>荣格在这里收到了一个解梦的请求：<br>“我以前的老医师们的梦，他们知道要爆发战争，要流行疾病，或者何时会下大雨。不过，白人来到非洲后，就没有人做梦了，现在，英国人知道这一切。”</p><p>荣格从他的话中，好像看到了欧洲人失去了与灵魂交流的能力、仙女、神灵、生命力。</p><p>当地人在早上，太阳升起的时候，会从小屋里跑出来，把唾液吐在手上，双手伸向太阳。太阳是神，唾液是包含个人生命力的实质的灵魂。这个仪式的意思，也就是说“我们把我们活着的灵魂奉献给神”。</p><p>人类基本的冲动，就是试图从原始的黑暗中挣脱出来。人类自古以来就憧憬光明。过去，我们朝拜闪烁在天空的光、拯救世界的神。</p><p>如果说欧洲的知识是光明，那么，非洲人就生活在心灵根本的黑暗中。所以，他们对神的憧憬是纯真的，而生活在光明中的欧洲人也不要害怕神。</p><p>那是，荣格知道了，神是“存在”的。</p><p>我们任何人都在平等地接受着伟大的神灵之光的恩惠。而且，荣格还认为，人类的生存都应该包含着这个“意思”。我们虽然孤独，但我们与神同在。</p><p>无论是个人还是全世界，都是有意义的存在。</p><p>荣格知道自己的意识已经不害怕无意识的黑暗了。所以他跨过尼罗河，从非洲的心脏地区到埃及的旅程，对他来说，就成了诞生光明的一个过程。</p><p>他已经不再轻易地收到无意识的支配了，他实现了崭新的自我。</p><p>这次旅程给了荣格满意的答案和经历。</p><h3 id="短评-6：关于英雄神话"><a href="#短评-6：关于英雄神话" class="headerlink" title="短评 6：关于英雄神话"></a>短评 6：关于英雄神话</h3><p>荣格非常重视研究神话世界，因为他认为，在人类的无意识中，存在着超越文化和时间的人类共有的“形成神话的”因素。</p><p>下面介绍欧洲中世纪主要流传的两个英雄神话故事。</p><p>首先介绍尼伯龙根之歌，故事的主人是齐格菲，被编成的故事有：日耳曼神话《尼伯龙根的戒指》、北欧神话《埃达》、德国的叙事诗《尼伯龙根之歌》等。</p><p>莱茵河畔的勃艮第王国，统治者是宫塔国王，他有一位漂亮的王妃，名为克里姆希尔德。荷兰国的王子——齐格菲来向王妃求婚，他降服了巨龙，身上溅上了龙血，使自己变成了不死之身。宫塔国王向齐格菲王子提出了一个要求：“如果你能帮助我取到冰岛的美女——卜隆西卢特，我就把克里姆希尔德王妃送给你。”</p><blockquote><blockquote><p>按照之前的太母原型，这里的齐格菲自带反叛母性的内核？</p></blockquote></blockquote><p>在王子的帮助下，冰岛的美女可以成为宫塔国王的妻子，可是，冰岛美女——卜隆西卢特却爱上了前来牵线搭桥的齐格菲王子。他也知道，如果自己嫁给宫塔国王，齐格菲王子就要娶克里姆希尔德王妃为妻。所以，卜隆西卢特一直拒绝嫁给宫塔国王，还是齐格菲再次出面斡旋，事情才得到圆满解决。</p><p>可是，平静的日子没有持续多久，几年后，齐格菲王子和克里姆希尔德从荷兰回到勃艮第王国，克里姆希尔德发现卜隆西卢特爱慕王子，就与她发生了激烈的口角。宫塔国王感到气氛紧张，就命令手下人——哈根暗杀齐格菲王子。虽然王子被认为是不死之身，但他的后背没有溅上龙血，所以王子被刺中后背而死去。</p><p>齐格菲死后，克里姆希尔德为了向宫塔国王和哈根复仇，嫁给了匈奴人埃泽鲁，骗出宫塔国王和哈根两人，并将他们杀死。克里姆希尔德最后也被东戈特的老将军杀死。</p><p>另外，在介绍一个中世纪欧洲文学史上最重要的亚瑟国王的传说，据说主人公亚瑟确有其人，率领凯尔特人夺回 6 世纪至 12 世纪被撒克逊人占领的国土，是一位传说中的英雄人物。</p><p>不列颠国王维瑟尔，使用魔法变成康沃尔公爵，与王妃依古雷奴交往，生下了亚瑟。亚瑟得到一把埃库斯卡里巴宝剑，当上了不列颠国王，并与古微內卜阿结婚。在他奔走于各国、踏上远征罗马的途中，听说他的外甥莫鲁多雷特夺走了王位、霸占了他的妻子，得知这一消息后，他回国杀死了外甥，自己也受了重伤。后来，在阿巴伦的埃特纳岛去世了。</p><p>以这个故事为原型，以后又出现了圆桌骑士团的故事、圣杯传说、特利斯坦和伊左都的故事等，使亚瑟王的传奇故事越传越广。</p><p>圣杯传说具有 12 世纪末欧洲兴起的基督教色彩。季度在最后的晚餐时所使用的餐具当中，被子被用来接住十字架上的基督流出的血，这个杯子就是圣杯。法国诗人克雷蒂安·德·特罗阿，把寻找这个圣杯的过程写成《裴卢斯巴卢的故事》，但克雷蒂安最终没有写完，由后人续写完成。</p><p>荣格发现这些英雄故事中含有共同的主题，列举如下：</p><p>降服大龙=脱离母亲、获得自立<br>得到宝剑等=获得男性原理<br>寻找和得到圣杯或公主=获得女性原理<br>悲剧性死去=回归子宫（回到母胎中）</p><p>此外，还有出生异常、出生后马上要被杀掉等主题。</p><p>对于这些共同的主题，荣格解释说，这不单单是流传过程中出现的现象，而是由集体无意识中的原型所产生的。</p><p>中世纪的传奇故事，尤其是在没有精炼的部分故事中，包括了民众的许多无意识的愿望和心理特征，具有很强的研究魅力。我们之所以超越时代、不断地被英雄故事所吸引，也正反映了这些故事中存在着人类心理共有的原始情感。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220510 - 漫画荣格 - 第三章：冒险进入内心深处、发现集体无意识</title>
      <link href="2022/05/10/20220510-comicjung-chap3/"/>
      <url>2022/05/10/20220510-comicjung-chap3/</url>
      
        <content type="html"><![CDATA[<h2 id="第三章-冒险进入内心深处、发现集体无意识"><a href="#第三章-冒险进入内心深处、发现集体无意识" class="headerlink" title="第三章 冒险进入内心深处、发现集体无意识"></a>第三章 冒险进入内心深处、发现集体无意识</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>时间转到荣格与弗洛伊德的美国之旅。</p><p>荣格很钦佩弗洛伊德的才华，也很思念他，但是，对于他的性理论，却未曾完全接受过。</p><p>弗洛伊德虽已察觉到荣格不相信他的理论，但却有意识否认这一点。也许是害怕内心意识而排斥动摇其性理论的因素。</p><p>弗洛伊德对超自然现象也感兴趣，尽管在逃避，但还是再次被吸引了，并因此感到有些绝望。这一态度表现在弗洛伊德与荣格的交往方式上。</p><p>二人在美国克拉克大学的演讲顺利结束，但值得一提的是演讲之外的事情。</p><p>荣格和威廉姆·詹姆斯的相识，使其在唯灵论问题上，与弗洛伊德的关系开始紧张。</p><p>弗洛伊德相信荣格是其真正的继承人。一天，二人在餐桌上交谈，弗洛伊德让荣格讲讲他做的梦，要进行分析，荣格反让弗洛伊德分析一下他自己的梦。弗洛伊德表示自己的工作是分析，而不是研究自己的心理，并且对自己梦的分析，在某种程度上可能会威胁自己的权威。自那时起，荣格开始失去对弗洛伊德的信任，因其似乎比起研究，更重视个人隐私。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232504.png"></p><p>荣格讲述了一个曾做过的梦，请弗洛伊德分析：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232718.png"></p><p>这个梦揭示了人类心理的双重结构图，架设了人类心理基础的“非个人的”特征。</p><p>二层表示意识，一层表示无意识的第一平面。越往里走，周围的光线就越暗。洞穴是原始人的世界，是一是几乎打不到的无法搞清楚的世界。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232857.png"></p><p>二人谈话继续。弗洛伊德说道，国际精神分析学会将要成立，会所准备设在苏黎世，他希望荣格担任会长。（荣格犹豫不决）</p><p>弗洛伊德表示自己不讨厌神学了，想冷静地分析超自然问题，不过，他认为荣格最近的观点不适合做自己的继承人。</p><p>奇怪的是，弗洛伊德从美国回来后，热衷于参加降灵会。荣格拜访弗洛伊德家，两人都奇怪地感受到了超自然现象。</p><p>二人爆发了争论，弗洛伊德不希望看到荣格舍弃性理论。而荣格确信了弗洛伊德恐惧神学，而且在死命维护性理论。自那时起，荣格的无意识异常活跃，他不断地做一些很形象的梦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233422.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233454.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233514.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233528.png"></p><p>荣格不明白这个梦的意思，但他前不久做过类似的梦。</p><p>他觉得这个梦的意思，是指奥地利边境的海关职员。他认为，“国境”是他和弗洛伊德之间的分界线，是意识和无意识的界限。</p><p>在荣格的心中，弗洛伊德已经死了。</p><p>从美国回来后，荣格辞去了布尔克赫尔茨里医院的工作，在苏黎世丘斯那哈特地区自己的家中开办起了私人诊所。</p><p>工作中，对荣格影响最大的是他的一位病人托妮·博鲁芙。她第一次来到诊所时是一位忧郁症患者，而现如今作为弗洛伊德的助手，发挥着她的聪明才干。</p><p>1913 年，苏黎世会所的会议上，荣格与弗洛伊德擦肩而过。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234126.png"></p><p>这意味着荣格“失去了父亲”，他必须一个人继续向未知的领域挑战。</p><p>荣格在 1914 年的梦中，以可怕的速度，摔下了意识的深渊：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234318.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234334.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234352.png"></p><p>这时，荣格的妻子意识到荣格失去弗洛伊德，其精神踏入前人未曾涉及的领域后，自觉已经无法再支撑荣格的心灵。并且认为荣格老是把女儿阿加特看成海莉。在这样的前提下，荣格的妻子让他如果需要安慰的话，就去找托妮，不要碰女儿阿加特。她理解荣格的心理开始了不寻常的冒险，如果能为人类带来知识财富，她什么都可以原谅，觉得托妮也一定愿意成为其精神殉教者。</p><p>在妻子埃玛的建议下，托妮和荣格的情人关系真的开始了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234841.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234915.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234938.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234957.png"></p><h3 id="短评-5：原型和集体无意识"><a href="#短评-5：原型和集体无意识" class="headerlink" title="短评 5：原型和集体无意识"></a>短评 5：原型和集体无意识</h3><p>荣格在进行心理治疗和对巫师的研究过程中，遇到过无法认为是个人无意识产生的语言和意象。通过研究，荣格认为，人类心理也许还广泛存在着远古的无意识，这种远古无意识并非来自个人体验，而是来自人类共有的心理功能，即来自遗传下来的脑组织。荣格把这种来自远古的无意识称为“集体无意识”，把人类共有的心理功能称为“原型”。</p><blockquote><blockquote><p>（集体无意识只包含来自远古的无意识吗？个人无意识会转化为集体无意识吗？）</p></blockquote></blockquote><p>荣格把意象进一步分为个体意象和根源性意象。<br>个体意象是局限在个人人生中对特定人物和现实的记忆，所以，其与个人的无意识和情综相适应。这一个体意象没有集体的含义，也没有文化的含义。</p><blockquote><blockquote><p>（复习一下情综：荣格在其“语言联想实验”中发现的，明显表露出的、潜藏在人类心理无意识下的阻碍叫做情综，是“通过感情来证实的，作为无意识下的内心内容的情感和意象”的综合体）</p></blockquote></blockquote><p>相反，根源性意象具有神话主题所表现的那种远古性格，因为这是所有民族及时代共有的特征，所以，才会在各种各样的故事与形象中反复出现。原型就是这一根源性意象。</p><p>即使在从未有过文化交流的国家之间，也会有目的类似的神话或传统，这些相似之处正是来自于原型。荣格通过对患者的分析以及解析自己的梦境，找到了根源性意象，而且他还认为，大脑中的记忆和意象不仅仅是由外在的各种条件造成的，还是通过生命中先天固有的内在形式形成的。</p><blockquote><blockquote><p>（所谓血脉？）</p></blockquote></blockquote><h4 id="代表性的原型"><a href="#代表性的原型" class="headerlink" title="代表性的原型"></a>代表性的原型</h4><p>荣格设想了各种作为意象表面的原型，这些原型尽管不能证明人类内心深处的所有意象，但还是涉及其中几个非常重要的原型。</p><p>但在荣格心理学中，没有发现与伟大的母亲这一原型相反的具有暴力特征的父亲原型。这是因为，在严父管教下长大的弗洛伊德发现了恋母情结，而荣格的母亲却非常威严。</p><blockquote><blockquote><p>（因为荣格认为其父亲不具阳刚之气，父亲形象被威严的母亲形象所消弭？）</p></blockquote></blockquote><p>（1）角色</p><p>我们生活在社会上，每人都发挥着各自的作用，扮演者人们所期望的各种人格角色。所谓角色，就有扮演的意思，比如，母亲就像母亲，父亲就像父亲，这些角色在需要时任何人都可以扮演，人们以与现实社会完全匹配的角色生存着，角色表现出的表面上的人格，不会伤害自己，也具有不伤害他人的润滑剂的作用。</p><p>因为暴露在别人面前的自己“不是真正的自己”而感到苦恼的人，也为数不少。我们有时感到自己好像是在“伪装”自己。不过，如果自己感到毫不怀疑“真正的自己”，即无法区分角色和自我的时候，自我就与无意识一致，并受到无意识的支配。</p><p>如果外在的表现太好，不知道自己的角色应该扮演成什么样时，顽固的意识态度就被定化，人在精神上就无法发展。</p><blockquote><blockquote><p>（冲突造就成长？）</p></blockquote></blockquote><p>所以，无论从外在表现保护自我，还是客观地认识无意识，都需要角色。</p><p>（2）阴影</p><p>阴影是隐藏在可以意识到的自己内在的人格的阴暗部分，也可以说是存在与我们的无意识中的未成熟的“另一个自己”。人在梦境中，有时会梦见强盗、小偷、敌人、恶魔等，有时也梦见自己身边的交往不愉快的人。如果自己感到很不顺心，或者感觉自己周围有不能愉快交往的同性，那很可能就是你自己的阴影造成的。</p><p>阴影不一定都是坏事，也蕴藏着创造性和未知的可能性。尽管人们在某种意义上难以解决自己的阴影，但是，在认识到自己阴影的同时就会有很大收获。如果再把阴影融合到意识当中，也许就会发现以前否定的东西中包含着其它的意义，可能还会弥补自己的不足，因此，认识到阴影，将对人格的发展起到非常重要的作用。</p><p>（3）女性原理、男性原理</p><p>荣格认为，一个人的心理同时存在男性特征和女性特征，其中，将内含男性特征的称为女性，将内含女性特征的称为男性，人们的异性观受到男女性原理的很大影响。</p><blockquote><blockquote><p>（所谓阴中有阳，阳中有阴）</p></blockquote></blockquote><p>人们在意识中，强调表面上的性别，即男要像男，女要像女，所以内在异性受到压抑，也就很容易趋向萎缩。所以，理论上很男子汉的男性，内心却比较脆弱，甚至有的家庭不和，出现暴力。</p><p>女性，由于内在男性特征趋于萎缩，完全远离了男性特征，使自己只有奉献、不去接受，或者过于抱怨，不能很好地处理家庭关系。</p><p>所以，要想步走极端，与异性和睦相处，关键在于认识到自己心理存在着的异性特征。</p><p>荣格认为，无论对于个人还是对于社会，都应该平衡发展女性原理和男性原理。</p><p>（4）伟大的母亲（太母）</p><p>养育万物的母性形象就是伟大的母亲（太母），这是被理想化了的母性形象。相反，她也具有吞噬万物的可怕特性，如果不离开这样的母性，自己不能获得独立，就会在不知不觉中受到太母的摆布。</p><p>可以看到这样的现象：男性永远离不开母亲，不能曾为一个具有自我独立的人；女性，支配和干涉男性，就像母亲对子女那样，给对方寄予过多期望。</p><p>太母以负面面孔出现时，就是魔鬼、女妖、母老虎等角色 ，如同神话故事中经常出现的英雄降龙的故事，表现的主题是叛逆期的少年幻想在精神上摆脱了母亲，自己获得了独立。</p><blockquote><blockquote><p>（所以勇者斗恶龙，其实内核是反叛母亲？）</p></blockquote></blockquote><p>（5）年长智者</p><p>该原型被视为男性成长过程中精神和心灵的终点的象征，是超越了一切社会野心之后的老成的男性，是仙人一般的形象。荣格非常敬重自己想象中的弗莱蒙这一人物，这是他的老智者的形象，作为派生的人物形象，有男神、谷物之神、童子（永远的少年）、闪电（雷神）的角色。</p><p>老智者如同男性的太母一样，是女性可以依赖的人物。尽管有恋父情结，但对男性来说，老智者是权威的象征，是导师。</p><blockquote><blockquote><p>（物壮则老，体现终极状态的老者形象身上却能派生出童子的形象，感觉这也是荣格受道家思想影响的其中一种体现形式？）</p></blockquote></blockquote><p>（6）自己</p><p>荣格将包括这些原型的无意识和意识相结合，设想了人类的心理中心，取名为自己。</p><p>自己是意识与无意识、善与恶、男性与女性等的对立统一。自己以象征意义出现的时候，扮演者神、佛、菩萨等的角色，人们畏惧这些形象，甚至强烈地迷信她们。</p><h4 id="个性化与自己实现"><a href="#个性化与自己实现" class="headerlink" title="个性化与自己实现"></a>个性化与自己实现</h4><p>以上介绍的原型，有时在不知不觉中会对意识产生破坏性的影响。但是，当人们意识到它们的时候，就会想方设法从原型中摆脱出来，形成独立的自由的意识，也就可以获得自己生存的“个性”。荣格将这种从集体无意识支配中的分化叫做个性化——自己实现。个性化是人格发展的非常重要的条件。</p><p>个性化的过程如下：</p><p>我们在生活中的形象与扮演的普通角色是一致的，但，稍微遇到一点挫折而脱离自己的角色时，就会看到自己的阴影。我们遇到阴影时，必须承认，这一阴影也是我们自己的一部分。</p><blockquote><blockquote><p>（即前面所提，冲突造就成长的机会）</p></blockquote></blockquote><p>进而，在阴影深处，也会看到心理内在的异性特征，或是女性特征，或是男性特征。在陷入恋爱的爱河困境时，为了摆脱出来，需要从内心深处的女性原理或男性原理这一异性特征中彻底解放出来，并且还可以看到内心深处的异性特征的太母或年长智者的形象，这是很危险的，因为这些都是离自己的人格很近的内在形象，一旦与现实角色相一致，就会坚信自己接近神了。</p><blockquote><blockquote><p>（彻底解放…所指为何呢？内心深处的异性特征的太母或年长智者的形象，是如何与现实角色相一致的呢，这可能吗？）</p></blockquote></blockquote><p>最后表现出来的是自己。不过，自我与自己的同一并不是自己实现。所谓自己实现，就是自我与自己进行对话“内在形象是我、不是我”相互协调的过程，重要的是丰富自我与自己的关系，即自我与自己的关系永远不能终结。</p><blockquote><blockquote><p>（自我是意识中心，自己是心理中心（包含意识与无意识）。碰到问题，自我看到阴影，借此机会看到部分自己，所以上面所指的内心深处的异性特征的太母或年长智者的形象与现实角色一致，指的是自我与部分自己的统一？怎么个统一法呢？有点无法想象。<br>按书中所说，自己实现所指的是碰到问题，自我看到阴影，借此机会看到部分自己，而后摆脱这部分自己的过程，或者用其话语，即将这部分原本属于集体无意识中支配的部分分化的过程。<br>所以意识到了这部分未分化的集体无意识，即原型，最终导向的是自我对原型的主观摆脱。<br>这里的主观摆脱，是因为怕其将自我吞噬？那么除了摆脱之外，有没有可能在某种程度上实现原型的主观内化呢，即这部分原本未知的集体无意识被自我有意识地纳入意识范畴，所导向的结果能想到的是意识的边界扩张，但其实际意义为何，甚至是否具有可行性，还没想清楚…）</p></blockquote></blockquote><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220509 - 漫画荣格 - 第二章：寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</title>
      <link href="2022/05/09/20220509-comicjung-chap2/"/>
      <url>2022/05/09/20220509-comicjung-chap2/</url>
      
        <content type="html"><![CDATA[<h2 id="第二章-寻找失去的父亲-同弗洛伊德的相识与创造性的回忆"><a href="#第二章-寻找失去的父亲-同弗洛伊德的相识与创造性的回忆" class="headerlink" title="第二章 寻找失去的父亲 同弗洛伊德的相识与创造性的回忆"></a>第二章 寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>荣格和埃玛结婚后，每天像着迷似的埋头撰文，为患者治病。</p><p>1905 年，当时的布尔克赫尔茨里精神病院在奥根·布鲁勒的领导下开展精神性疾病的治疗和研究。</p><p>荣格进行了 3 个领域的研究：歇斯底里症、语言联想法、早期性痴呆。</p><p>当时倾向于唯灵论研究的荣格，在理论上却依赖于分析心灵现象的 P·让内、泰奥德尔·弗鲁鲁努瓦的理论。</p><p>当时弗洛伊德还没有提出明确的性理论，正受到知识界人士的极大关注。</p><p>荣格也不例外，向其寄去了自己的著作《诊断的联想研究》，并开始与弗洛伊德通信。</p><p>1907 年 3 月，荣格拜访了位于维也纳的弗洛伊德的家。二人终于见面。</p><p>那天，二人交谈了 13 个小时，彼此都对对方给予了很大的期望。</p><p>其实，荣格刚开始并不是完全赞同弗洛伊德的性理论。弗洛伊德很乐观地认为荣格将要接受自己的理论。</p><p>弗洛伊德与荣格的密切交往，使布鲁勒对荣格的感情出现了裂痕。</p><p>荣格越来越倾向于弗洛伊德。他像对待父亲一样仰慕布鲁勒，但他还是期望弗洛伊德能代替父亲。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231123.png"></p><p>弗洛伊德与荣格彼此间信任日益加深。但事业上却与此相反，荣格对唯灵论和神学极为关注。</p><p>在与弗洛伊德交往过程中，荣格遇到一个关键的问题，他偶尔读到一本关于太阳神的文章。他发现文章所讲的事情酷似几年前遇到的一个患者的言行。</p><p>当时患者有过一番关于风和男性生殖器的言论。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231345.png"></p><p>那位患者不可能读到这篇关于太阳神的文章，而且，没有文化基础的人也不可能理解文章的意思。<br>可那位患者说的话和荣格所读关于太阳神的文章内容完全一致。</p><p>“性理论中没有解决的问题是什么呢？”，荣格想“在我们的心里，隐藏着一种结构…”</p><p>此时荣格与埃玛的关系其实并不融洽。埃玛认为荣格只知道读书和给弗洛伊德写信，她心中委屈，也想要学心理学，只是为了想和荣格有共同话题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231705.png"></p><p>埃玛作为后来荣格派的研究者，也留下了功绩。而使埃玛走上研究成名之路的，可能就是他们夫妻关系中一种不完美感觉的作用。</p><p>荣格身边的女性们，统称荣格·弗拉温。<br>不可思议的是，他周围的这些女性，并不是以普通女性的身份和荣格在一起，可以确切地说，她们是一些分析家，并显示了她们的才能和功绩。</p><p>其中有一位名叫扎比娜的俄罗斯犹太人上流社会女孩，她与荣格的相识，是因为她曾在 1904 年作为强迫症患者，接受过荣格的治疗。</p><p>荣格在扎比娜身上看到了海莉的影子，此后，荣格经常因为幻想海莉而感到痛苦。</p><p>荣格认为这种错投的热情，必须放弃，或者转向其他人…而彼此相谈甚欢的扎比娜不断映入荣格眼帘。</p><p>很自然，患者与分析医生之间，又是要比家庭成员更能相互理解。很快，荣格和扎比娜之间的关系就很密切了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509232327.png"></p><p>那时，荣格觉得扎比娜既是母亲，又是女儿阿加特，也好像看到了海莉。他认为扎比娜很危险，必须打退、戳穿她。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509232437.png"></p><p>这时，荣格发现，他身上有某种“女”性的意象团。假设那种意象团叫灵魂，他正是被那个意象团所表现出来的海莉、母亲、扎比娜迷住了。选择埃玛就是为了选择远离灵魂的女性，为了不让她们吞掉。</p><p>荣格觉得母亲、海莉、扎比娜都是危险的女性，她们就像强大的母亲即太母那样，以莫名的感情包围着自己。那是一种无法抗拒的魅力，是一种走向死亡的危险。</p><p>扎比娜也表现出了对荣格的极大热情。荣格为了逃避这种“烈火”，必须经常到平静的湖边修养。</p><p>可是，扎比娜太爱荣格了，她心里失去了平衡，大力宣扬两人的关系，甚至写信告诉弗洛伊德。弗洛伊德并没有轻信扎比娜的一家之言，甚至觉得她可能患有神经病。</p><p>荣格没有告诉弗洛伊德实情，但是，扎比娜去见了弗洛伊德，丑闻越来越大。</p><p>荣格自觉不能永远隐瞒，试图通过见扎比娜父母见面说明情况的方式来解决。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509233129.png"></p><p>荣格自觉已经解决了事情，并去信向弗洛伊德“报喜”：“扎比娜渐渐地把对我的爱情转向了友情，我准备帮助她取得学位”。弗洛伊德这位“父亲”，建议荣格暂时停止分析，去美国的克拉克大学旅游调整心情。</p><p>妻子曾与荣格当面对峙。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509233545.png"></p><p>荣格 1909 年 9 月和弗洛伊德去美国克拉克大学演讲旅行。他也没有想到，这次旅行使二人产生了关键性的隔阂。</p><h3 id="短评-3：心理的结构"><a href="#短评-3：心理的结构" class="headerlink" title="短评 3：心理的结构"></a>短评 3：心理的结构</h3><p>不同的心理学家，对心理结构的解释不同。<br>弗洛伊德把心理分为自我和本我（初期分为意识和无意识）。<br>荣格提出了自我与自己的理论。无意识又进一步被分为个人无意识和集体无意识。</p><p>荣格认为的“心理”，包含无意识和有意识的全部。人类内心不仅存在着意识到的部分，还存在着没有意识到的部分。</p><p>无意识最早由弗洛伊德提出，而后荣格将弗洛伊德的个人无意识理论发展，提出了集体无意识的概念，这一理论是荣格心理学里最具特色的部分。</p><p>我们通常认为自己自身是“我”或者“自己”，这时的“我”和“自己”就是自我，不管是过去、现在，还是将来，自我都具备认为自己一直是同一个人的“自己同一性”。自我意识到的内心世界，即我们 平时感受、思考的喜怒哀乐，就是“意识”领域。自我存在于意识的中心，但自我并不是整个“心理”的中心。</p><p>关于自我的解释，荣格把包含意识和无意识在内的整体心理功能称之为“自己”。自己是心理的核心，包括我们的全部心理。</p><p>荣格从幼时就感到自身以外还应该存在着另一个自己，即“2 号我”。尽管有多种不同想法，但把“1 号我”理解成自我，把“2 号我”理解为自己，这样就容易解释了。</p><p>（哈？自己不是全部心理吗，那不是应该是 1+2 号我才是自己吗？）</p><p>荣格认为，自己超越自我，自己存在于人类内心的底层，充满着许多由神话般的因素组成的庞大的“可能性”，所以，他给患者进行精神分析时，非常重视存在与心理底层的神话般的世界。</p><p>荣格认为自我和自己的相互作用在人格发展过程中起着主要作用。他认为，人类一生的成长，是在不断地倾听无意识中的内心深处的自己的心声、不断探究同自己的关系。</p><p>荣格通过亲自体验的人生感受，研究分析了同自己的关系，将意识——自我提高到了更高的境界。</p><h3 id="短评-4：个人的无意识与情结"><a href="#短评-4：个人的无意识与情结" class="headerlink" title="短评 4：个人的无意识与情结"></a>短评 4：个人的无意识与情结</h3><p>对于情结（complex），不同心理学家有不同解释和用法。一般理解为自卑情结（inferiority complex），荣格却把情结理解为无意识中的某种有强烈感情的意象群，这里的无意识被称为个人的无意识，与个人的经历和体验有关。</p><p>（也就是说，个人无意识并非先验存在，也随着个人经历不断发展）</p><p>荣格在“语言联想实验”中，发现了有情感价值的情结。该实验中，事先规定一百个简单单词，要求被测试的人尽快说出从提到的某个单词联想到的其他单词，并记下回答的单词和时间，这一实验重复进行两次。</p><p>在反复进行的实验中，荣格发现，被测试的人对几个单词的回答速度异常迟缓，或出现奇怪的反应，或表现得很拘谨。通过分析这些单词发现：这些单词之间有着某些关联性，被测试的人展开联想的背后，存在着某种感情阻碍。</p><p>荣格把这种明显表露出来的、潜藏在人类心理无意识下的阻碍叫做情综，是“通过感情来证实的，作为无意识下的内心内容的情感和意象”的综合体。</p><p>每个人的心理都在无意识中存在着某种阻碍，这种阻碍具有独立性，有时会破坏意识的统一，有时会使意识失去理智。</p><p>情综就是意识不愿承认的心灵创伤和厌恶的感觉的反映，所以平时很少表现出来，但却极大地嘤想着人们的行为和感情。正因如此，为了避免受到情综的支配，必须意识到其存在。</p><p>如果没有完全意识到情综，就无法主动改变自己的行为。只有自己认识到自己的缺点和弱点，内心能量才有可能向着创造性的方向发展。</p><p>（这里的“创造性方向”，所指为何呢？）</p><p>所以，不要只从厌恶、痛苦的单方面去认识勤工在那个，也根本不必介意自己内心存在的情综。</p><hr><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>有一部名为<a href="https://movie.douban.com/subject/4221515/">《危险方法》</a>的电影描绘了荣格在这一时期的种种事件，以及他与弗洛伊德最终决裂的种种过程。</p><p>俄罗斯犹太女孩扎比娜与荣格的隐秘故事，荣格妻子所进行的“语言联想实验”等种种情节在片中均有体现。看完这章再回头看一遍电影，想必会别有感受。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220508 - 漫画荣格 - 第一章：青年时代 荣格与唯灵论体验</title>
      <link href="2022/05/08/20220508-comicjung-chap1/"/>
      <url>2022/05/08/20220508-comicjung-chap1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-青年时代-荣格与唯灵论体验"><a href="#第一章-青年时代-荣格与唯灵论体验" class="headerlink" title="第一章 青年时代 荣格与唯灵论体验"></a>第一章 青年时代 荣格与唯灵论体验</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1875 年 7 月 26 日，荣格出生在瑞士博登湖畔的凯斯维尔。</p><p>小时候害怕黑夜。因为父亲是牧师，所以从小就看过人们为死者哭得痛不欲生的样子。</p><p>据说荣格小时候“见过”不久前死去的人。这时母亲会教他念祈祷从而祈求耶稣上帝让其避免伤害。所以，荣格在当时非常喜欢耶稣上帝，认为其仁慈、了不起。</p><p>可有一天，他脑海中有了新的念头：“上帝要来带走我们，该怎么办？”他在梦中看到上帝不是长着大翅膀的仁慈老人，而是头戴黑帽，身穿黑衣，一脸阴险的人。</p><p>因为总是被噩梦惊醒，荣格不知什么时候起，晚上就总和父亲一起睡。直到很大都这样，他觉得父亲一生小心敬慎，没有一点男人的阳刚之气。而且感觉父亲也穿着黑衣，要吃掉自己…</p><p>自那时起，他感觉身边出现了一个“2 号我”（后面简称为“2”），一直观察自己，直到长大，都在悄悄告诉自己许多事情。</p><p>有一次，“2”告诉自己，他看到巴赛尔大教堂上的玉座之神从玉座上起来后就在圣堂顶上随便大小便。虽然自己不断告诉自己“神是神圣的，不可随便乱猜想”，但当脑海中出现那个情境时，却感到很自然。</p><p>“即使是活神仙，也不会受教会枷锁的束缚！”这样的念头出现了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508222830.png"></p><p>有一天，母亲突然对他说，怀疑有神的存在，是因为眼睛被蒙住了吧？应该读一读歌德的《浮士德》了。</p><p>荣格感到在母亲或母亲的身上，有一种太母般的先知。<br>也许是因为母亲知道有关恶魔或灵魂的事情，他觉得母亲知道的事情要比崇拜神灵的父亲知道得更多。而且，母亲也可能知道自己身上有一个“2 号我”，母亲身上也许就有一个“2 号母亲”…</p><p>比起父亲，荣格更敬重、畏惧母亲。而且，感到自己有些地方很像母亲。</p><p>荣格有一个表妹叫做海莉，总是说着“看见一个金色的大火球从屋顶落在了院子里”这样的类似的话，别的人都觉得海莉在说谎话，但荣格觉得海莉的感觉没有错。</p><p>荣格为海莉解释她所看到的现象叫做“球形闪电”，是一种物理现象。也有人认为它像其他东西。</p><p>海莉告诉荣格“扎姆埃鲁爷爷常和她一起玩游戏”，但其实海莉的祖父扎姆埃鲁早已去世。</p><p>这里顺便介绍荣格和海莉的家谱：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508223802.png"></p><p>荣格外祖父扎姆埃鲁是巴塞尔的墓室，著名的犹太民族主义者。其一生结过两次婚，前妻去世后，仍在房间里放着前妻坐过的椅子，每周都会在固定时间，对着椅子，与她“交谈”。</p><p>海莉继承了这一传统，成为擅长预言并能通灵的才女。荣格在书中所描述的 S.W. 小姐，说的就是海莉。</p><p>荣格在后来发表的《关于神秘现象的心理和病理》一文中，把海莉说成“知识贫乏、教育水平低、心理就像头盖骨得了佝偻病似的”。</p><p>童年时的海莉，预言大多准确。且，据说预言贝露塔生孩子的时间正好和实际分娩时间一致。</p><p>一天，荣格让海莉告诉自己更多事情，海莉说：“好吧，长大以后，我会和卡尔，就我们两人，乘坐白马拉着的金色马车，到巴黎去旅行”。</p><p>那时的荣格，正为自己的人生前途而苦恼，他在对基督教的反驳和父亲的期望面前，不知该如何选择学业和工作。</p><p>荣格就和海莉以及附近邻居的女孩，一起举行了降灵会。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508224510.png"></p><p>荣格逐渐相信了灵魂的存在，倾心于唯灵论。</p><p>在降灵会开始时，海莉扮演外祖父，活灵活现地再现家族的传奇故事，后来就大谈宇宙理论体系。随后，海莉逐渐长大成人，而降灵会却还在重复那些无聊的内容。</p><p>最初信奉唯灵论的荣格，渐渐地以冷静的态度来观察海莉的能力。母亲，以及海莉的家人对举行降灵会已经颇有微词。当时，荣格父亲的病情急剧恶化。荣格也不知道自己该做什么工作，也许还在内心身处希望父亲死去。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508224848.png"></p><p>那时，荣格确信母亲的身上存在着一个叫做“2 号母亲”的身影。</p><p>当时，神学、自然科学、医学、哲学，还有精神医学，都没有引起荣格的极大兴趣，但是在教科书中学到了“人格疾病”的内容，之后，很快被其理论所吸引。所以基本决定要研究精神医学，并告诉了要好的女朋友埃玛。她是一位稳重、有魅力的姑娘，荣格非常欣赏她。</p><p>荣格之所以决定研究“心理疾病”，实际上是因为，在其内心深处，对海莉的“神秘性”以及对其自己身上和母亲身上的“2 号”，抱有极大兴趣。</p><p>降灵会一直没有停止，但后来只有荣格和海莉两个人一起做。15 岁的海莉，正处于少女春心萌动的时期，像成熟女孩那样诱惑着荣格。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225426.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225449.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225512.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225534.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225554.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225625.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225639.png"></p><p>荣格放弃了海莉，同年与埃玛订婚。</p><p>1900 年，荣格励志学习精神医学。他在布尔克赫尔茨里精神病院，担任奥根·布鲁勒教授的助手。</p><p>荣格发表论文《关于神秘现象的心理和病理》，表明了其与海莉已经彻底决裂。从文章中可以看出，荣格的青春期已经过去了。</p><p>这篇论文的发表也意味着与外祖父家关系的断绝，而外祖父家曾经还资助过荣格，以让其完成学业。</p><p>但是，两年后的 1902 年，荣格在结婚前还和海莉在巴黎幽会。就在当时，海莉儿时关于二人在巴黎乘马车的预言成真：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230320.png"></p><p>荣格不知道自己为什么以前那么害怕这位文荣的女人，他觉得当时的海莉就像《哈姆雷特》中的奥菲利亚或亚瑟王的王妃古奥乃维亚。</p><p>当时的海莉已经患上了肺结核。</p><p>1905 年，据说荣格结婚第二年，海莉为其妻子做了一件漂亮的晚礼服。6 年后，即 1911 年，再有两天就到海莉 30 岁生日的时候，海莉却停止了呼吸。</p><p>荣格内心痛苦：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230918.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230934.png"></p><p>荣格为了弥补失去的海莉，开始研究灵魂论、原型论等，创立了独特的心理分析理论。</p><h3 id="短评-2：荣格心理学的时代背景和唯灵论"><a href="#短评-2：荣格心理学的时代背景和唯灵论" class="headerlink" title="短评 2：荣格心理学的时代背景和唯灵论"></a>短评 2：荣格心理学的时代背景和唯灵论</h3><p>超心理学是研究超自然现象的学科，是将心灵感应、意念（精神冲动），即所谓第六感觉等作为研究对象，研究用自然法则无法解释的精神现象，探究人的超感觉知觉，它把具有能与死者互通信息的灵魂能力的人称为巫师。在巫师当中，能够通过意念引起物体游离等物理现象的人称为物理性巫师，能够与死者以心传心地进行交流的人被称为心理性巫师。</p><p>唯灵论是“迷信生者与死者的信息交流”，对唯灵论的研究被称为心灵研究。</p><p>巫师术早在古代就有了，而现在一般所说的巫师，是指 19 世纪中期在美国兴起的近代心灵主义运动以后出现的超能力者。另外，巫师形成的超自然现象的活动叫降灵会。降灵会上主要使用圆桌转圈的方法，人们围坐在圆桌旁，如果桌子任意倾斜，或是发出声音，就被人为是灵魂在回答问题。</p><p>近代唯灵论的信念体系，被认为是 19 世纪错综复杂的西欧社会中“危机与不安”在宗教上的反映之一。在当时，已有的宗教已经失去了活力，出现了合理主义及产业革命，人们的心理承受着特殊的紧张压力。在这样的不稳定气氛的强烈影响下，唯灵论在追求科学与宗教相结合的运动中产生了，并很快在欧美大众的心中扎下了根。</p><p>巫师与死者的交流依靠的是一种昏睡现象。在精神分析诞生之前，西欧盛行催眠术。催眠术与唯灵论的盛行是在同样的年代。</p><p>而且，当时的歇斯底里症主要在女性中流行。<br>心理疾病的特点：在不同时代，表现并流行某种特殊病症，这种病证像病毒一样，在该时代某个人群（主要是女性）中感染。就像经常有人自称巫师，类似病症就在当时流行了，这些人大都是通过暗示和模仿来表现的。</p><p>难道成为巫师就能使当时社会上出现的主要现象——<br>“内心的压抑和无意识的欲望”爆发出来吗？实际上，荣格遇见的巫师，很多人都声称是想引起周围人的注意。大多数巫师，被医学专家认为是患有“某种程度的精神疾病或某种程度的精神病”。</p><p>巫师流行的年代是在 19 世纪末：女性地位开始提高，妇女开始走出家庭、走向社会的时代。也许是因为女性将压抑在无意识中的压力，以歇斯底里症或巫师的形式发泄或表现了出来。</p><p>但，也有很多人的表现无法用病理学解释，如日本大本教的出口直子，虽然是个文盲，却能自动记录笔记，被称为“笔先”。</p><p>关于巫师的几种解释：</p><ul><li>与死者对话的“死后存在说”</li><li>与上一种相反的“超 ESP 假说”等（ESP——extrasensory perception，超感觉现象），即具有可以根据石基信息源超灵感地领悟死者信息的能力</li></ul><p>不管哪种解释，都难以证明人死后灵魂还存在的说法。1920 年后，通过超心理学的方法，人们逐渐认识到巫师不仅仅局限于本来的意思，应该是广义的心灵能力之一。</p><h4 id="唯灵论与荣格"><a href="#唯灵论与荣格" class="headerlink" title="唯灵论与荣格"></a>唯灵论与荣格</h4><p>唯灵论一词自古以来就为世界各地区所熟知，尤其是西欧，传统上就存在着唯灵论，19 世纪中叶自美国开始，出现了唯灵论运动。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508232455.png"></p><p>荣格相信唯灵论主要是受其家庭影响。荣格外祖父是个有名的通灵能人，据说荣格的祖母、母亲，还有女儿阿加特也有通灵能力。</p><p>在心灵主义主导的环境中长大的荣格，自然而然地关注唯灵论。在传统基督教世界观和新的科学世界观之间摇摆不定的荣格，当然有可能倾向于相信心灵主义和超心理的能力。荣格在学生时代就和表妹海莉等一起组织降灵会，这使他对唯灵论愈加关注。</p><p>从荣格 1897 年发表的《关于心理学的若干考察》的论文中，可以看出学生时代的荣格就是一个心灵主义者。当时，荣格坚信灵魂是“独立于空间和时间的”不灭的实际存在。但到了 1902 年，在撰写学位论文《关于超自然现象的心理和病理》时，立场有所改变，开始怀疑心灵现象。</p><p>在论文中，荣格分析了和海莉在一起组织的降灵会，他不从相信心灵现象的角度去写，而是以无意识的自动症状（自动写字及幻觉等），甚至以认为是骗术的角度去写。荣格关注的问题已经不在心理现象范围，而是把通灵出现的灵魂看做是“无意识的部分人格”。</p><p>从这篇论文中可以看到，荣格已经摒弃心灵主义，转向精神医学。但，他在抛开心灵主义后，仍对心灵现象抱有兴趣，如果他不研究心灵现象与巫师，也许就不会产生荣格心理学中特有的原型理论和情综学说。从这个意义上说，唯灵论创造出了一个特殊的分析心理学家——荣格。</p><p>再有，荣格对心理现象的兴趣，使其在日后创立了共时性理论。共时性也是和心灵感应等超常现象相关的思维方式。也就是说，荣格在共识性理论中重新领会认识了曾经研究过的心灵问题。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220508 - 漫画荣格 - 序章：精神分析的黎明</title>
      <link href="2022/05/08/20220508-comicjung-chap0/"/>
      <url>2022/05/08/20220508-comicjung-chap0/</url>
      
        <content type="html"><![CDATA[<h2 id="序章：精神分析的黎明"><a href="#序章：精神分析的黎明" class="headerlink" title="序章：精神分析的黎明"></a>序章：精神分析的黎明</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>“自我”由法国哲学家笛卡尔提出，近代以来，其被理解为存在与意识的统一</p><p>“无意识”是 19 世纪法国心理学家 P.  让内及之后的奥地利心理学家弗洛伊德提出</p><p>基督教的绝对统治力量衰弱是精神医学这一新领域诞生的条件之一</p><p>mesmerize：催眠术，其名来自于 18 世纪堪称现代精神疗法鼻祖的弗朗兹·安东·梅斯梅尔，其医学博士论文《关于行星对人体疾病的影响》</p><p>推断当时医学和科学还没有从占星术和宗教中独立出来</p><p>梅斯梅尔发明了动物磁疗法成名，但这一成就并未被法国科学学术派所接受，他被迫离开法国，最后在瑞士去世，但其功绩是近代心理学发展重要基础。</p><p>梅斯梅尔功绩：</p><ul><li>从过去宗教统治中解放出来，赋予心理治疗科学性设想。指出过去认为是恶魔缠身的“疾病”的病因是“磁气”的作用</li><li>在医生和患者之间建立了相互依赖的心理治疗关系</li></ul><p>皮尤伊泽尔：继承了梅斯梅尔磁疗法的弟子，并发展形成了“催眠术”。他发现人在催眠状态下感受不到自己的意识，开始表现出另一个意识。</p><p>到 19 世纪，法国巴黎公社与德意志帝国相继成立。维也纳迎来学术、艺术鼎盛时期，德国哲学家尼采在当时提出“神灵已死”。基督教不再是知识分子精神支柱。</p><p>1885 年，弗洛伊德 29 岁，到法国巴黎萨伯居里医院留学，师从神经学家 J.M. 夏可。</p><p>在对歇斯底里症研究中，弗洛伊德发现了催眠术的局限性，提出精神分析疗法。</p><p>在这之前的十几年，荣格出生在瑞士博登湖畔。其父亲是一位耶稣教牧师，母亲是位能通灵的才女。</p><p>19 世纪是近代合理主义开始卷入混乱旋涡的时代，据说在欧洲大陆幽灵出现最多的地方是封闭的瑞士。</p><p>荣格就出生在保守的宗教（父亲）与近代神灵思想（母亲）组成的家庭中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508004545.png"></p><h3 id="短评-1：深层心理学的学派"><a href="#短评-1：深层心理学的学派" class="headerlink" title="短评 1：深层心理学的学派"></a>短评 1：深层心理学的学派</h3><p>心理学起源可追溯到古希腊时代，普拉东和亚里士多德的灵魂论。</p><p>近代，心理学作为独立科学，是从提倡经验论的英国人约翰洛克、大卫休谟等人的联合心理学开始的。1879 年 威廉冯特（Wilhelm Wundt）创建了世界上第一个心理学实验室，形成了研究经验性感觉、意思与情感等的现代心理学基础，并得到了不断继承与发展，出现了行为心理学、发展心理学、功能主义心理学、格式塔心理学（完型心理学）等分支。</p><p>精神分析也是心理学一个分支，是从治疗/研究神经症状和精神病的精神医学中产生。以精神异常和病症为研究对象，这一点有别于学术上的心理学。</p><p>精神分析鼻祖为弗洛伊德，再追究可以追溯到梅斯梅尔。这好像是精神病学史上的普遍说法。</p><p>梅斯梅尔（Franz Friedrich Anton Mesmer）：出生于理性的 18 世纪，将由于基督教思想束缚而患上的心理疾病，采取从宗教束缚中解脱出的治疗方法，认为恶魔缠身而患上的心病，是受到行星影响，采用磁疗法治疗取得成功。从今观之，似乎可笑，但在当时，能将宗教与疾病分开，的确是件了不起的大事。</p><p>皮尤伊泽尔：梅斯梅尔的弟子，继承其理论，并将磁疗法发展为催眠术疗法。可以说精神分析起源于催眠术。</p><p>（这里很奇怪，我尝试着去寻找这位梅斯梅尔的弟子，无果，之后也试着搜了催眠术的发展脉络，期间也并未发现有类似名字的人…书中又没有标明原名，只得作罢。关于催眠术创始人，一说是英国人 James Braid）</p><p>弗洛伊德（Sigmund Freud）：19 世纪催眠术疗法权威 Jean-Martin Charcot 弟子。在催眠术基础上，弗洛伊德设想人的内心存在着连自己都未知的部分，发现了“无意识”的存在，抛开催眠术，通过提问和对话方式减轻患者症状，创立了精神分析法。</p><p>精神分析法设想人类心理存在无意识、自我、性本能、恋母情结、爱情、死的本能等，从精神创伤中寻找精神疾病病因。患者若是认识到这一点，症状就会消失。理论重点在父亲和孩子关系上。</p><p>弗洛伊德流派和很早从弗洛伊德理论分离出来的阿德勒（Alfred Adler）的个人心理学以及荣格（Carl Gustav Jung）的分析心理学，统称为深层心理学。</p><p>阿德勒认为精神疾病不是由精神创伤引起，而是患者心中产生的“权力欲”造成。</p><p>荣格认为精神疾病不能都归咎于性欲，而是个人心理发展过程。理论重点放在和母亲的关系上。</p><p>弗洛伊德的自我研究理论，由 Anna Freud（其女儿）、Heinz Hartmann、Erik Homburger Erikson等人继承并发展，形成了自我心理学，成为美国精神分析主流。</p><p>与其对应的是新弗洛伊德学派，代表人物：<a href="https://en.wikipedia.org/wiki/Harry_Stack_Sullivan">Harry Stack Sullivan</a>、<a href="https://zh.wikipedia.org/zh-sg/%E5%8D%A1%E4%BC%A6%C2%B7%E9%9C%8D%E5%A6%AE">Karen Horney</a>、<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E9%87%8C%E5%B8%8C%C2%B7%E5%BC%97%E7%BD%97%E5%A7%86">Erich Fromm</a> 等。</p><p>在英国发展形成了对象关系论。</p><p>荣格的分析心理学，被发展为几大分支学派：发展派；古典派；原型派。</p><p>现代日本人喜爱荣格，可能是荣格心理学中有许多日本人需要的东西吧。人们不再相信：只要科学发展了，物质丰富了，就会有绝对的幸福。荣格一生追求探索“人的心理应该怎样成长”，那些对“生存”的根本发生动摇的现代人，可以从荣格的心理学中找到满意的答案。</p><p>现代人在思索“需要什么”时，翻开荣格的心理学，就会有一个寻求答案的机会了。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漫画荣格：内心深处结构的解析 摘抄/笔记</title>
      <link href="2022/05/07/20220507-comicjung-toc/"/>
      <url>2022/05/07/20220507-comicjung-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="漫画荣格：内心深处结构的解析-摘抄-笔记"><a href="#漫画荣格：内心深处结构的解析-摘抄-笔记" class="headerlink" title="漫画荣格：内心深处结构的解析 摘抄/笔记"></a>漫画荣格：内心深处结构的解析 摘抄/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>为了解荣格理论中的集体潜意识，对《漫画荣格：内心深处结构的解析》一书进行摘抄/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.douban.com/subject/1020001/">豆瓣</a>：</p><blockquote><p>本书以漫画的形式，以通俗易懂的语言配以情景对话，对20世纪的心理学家——荣格的生平和他的分析心理学进行描述。重点介绍了荣格的心理历程，对其思想影响较大的人物和事件，分析了唯灵论、心理的结构、个人无意识与集体无意识、原型、共时性等荣格思想中的精华。读者可以借助漫画的魅力重新理解荣格的思想世界。本书适合对心理学感兴趣的广大读者，尤其是青少年读者。</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol start="0"><li><a href="https://medill-east.github.io/2022/05/08/20220508-comicjung-chap0/">20220508 - 漫画荣格 - 序章：精神分析的黎明</a></li><li><a href="https://medill-east.github.io/2022/05/08/20220508-comicjung-chap1/">20220508 - 漫画荣格 - 第一章：青年时代 荣格与唯灵论体验</a></li><li><a href="https://medill-east.github.io/2022/05/09/20220509-comicjung-chap2/">20220509 - 漫画荣格 - 第二章：寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</a></li><li><a href="https://medill-east.github.io/2022/05/10/20220510-comicjung-chap3/">20220510 - 漫画荣格 - 第三章：冒险进入内心深处、发现集体无意识</a></li><li><a href="https://medill-east.github.io/2022/05/11/20220511-comicjung-chap4/">20220511 - 漫画荣格 - 第四章：旅途 欧洲文明失去了什么</a></li><li><a href="https://medill-east.github.io/2022/05/13/20220513-comicjung-chap5/">20220513 - 漫画荣格 - 第五章：炼金术时代 心理的变化与成长</a></li><li><a href="https://medill-east.github.io/2022/05/14/20220514-comicjung-chap6/">20220514 - 漫画荣格 - 第六章：荣格与东方思想</a></li><li><a href="https://medill-east.github.io/2022/05/15/20220515-comicjung-chap7/">20220515 - 漫画荣格 - 第七章：塔 伟大的自己</a></li><li><a href="https://medill-east.github.io/2022/05/16/20220516-comicjung-chap8/">20220516 - 漫画荣格 - 第八章：荣格的性格论讲座</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl-Gustav-Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220506 - Level Design Book - BOOK 1. PROCESS - Combat - Balance</title>
      <link href="2022/05/06/20220506-leveldesignbook-combat-balance/"/>
      <url>2022/05/06/20220506-leveldesignbook-combat-balance/</url>
      
        <content type="html"><![CDATA[<h2 id="Balance"><a href="#Balance" class="headerlink" title="Balance"></a>Balance</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/balance">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>玩家在整个关卡中能做的选择，玩家可以去哪里的公平性</p></blockquote><hr><h3 id="Why-balance-a-level"><a href="#Why-balance-a-level" class="headerlink" title="Why balance a level"></a>Why balance a level</h3><p>地图平衡是贯穿整个关卡的真实的以及玩家可感知的公平性。玩家是会怪自己没有理解怎么利用关卡，还是会怪关卡设计师把他们置于绝境呢？</p><p>一个平衡良好的关卡支持多种玩法风格，也会让玩家保持对于结果的投入（保持期待与热情），平衡不佳的地图可能会促使玩家因为沮丧或挫败而退出游戏。</p><p>尽管可以说平衡适用于任何关卡，但平衡对于基于战斗的关卡和竞技性的多人地图而言最为重要。</p><h4 id="Single-player-has-no-balance"><a href="#Single-player-has-no-balance" class="headerlink" title="Single player has no balance"></a>Single player has no balance</h4><p>对于对抗 AI 的游戏而言，“平衡”其实没什么意义。几乎所有合作性的“Player vs. Enemy” （PVE）或是单人游戏都会故意不平衡以利于玩家。</p><p>敌人 AI 会故意占据有明显弱点的位置，因为这些情况下的游戏是基于完成的目标而设计的。此时，一个“公平”的关卡为玩家提供了充足信息和机会来取胜。AI 对手的目标是以一种有趣的方式输掉。从本质上讲，我们必须以玩家喜好来操纵游戏，并为玩家提供令人信服的机会来进一步操纵游戏。</p><p>所以当我们谈论地图平衡时，所指的是多人地图平衡，而不是单人/PVE。</p><p>有关单人游戏/PVE/合作战斗的更过内容，可以看<a href="https://medill-east.github.io/2022/05/05/20220505-leveldesignbook-combat-encounter/">遭遇战</a>。</p><hr><h3 id="Game-balance"><a href="#Game-balance" class="headerlink" title="Game balance"></a>Game balance</h3><p>首先，让我们回顾一下基本的游戏平衡</p><h4 id="Counters"><a href="#Counters" class="headerlink" title="Counters"></a>Counters</h4><p>在<a href="https://zh.wikipedia.org/wiki/%E7%9F%B3%E5%A4%B4%E3%80%81%E5%89%AA%E5%AD%90%E3%80%81%E5%B8%83">石头剪刀布 （RPS）</a>中每一种行为都会被另一种行为克制。<br>竞技性游戏经常依赖于一种 RPS 的隐喻来实现平衡。像是街头霸王这样的格斗游戏归结为攻击/投掷/格挡（攻击克制投掷，投掷克制格挡，格挡克制攻击）。像星际争霸这样的策略战争游戏是步兵/炮兵/骑兵（步兵克制骑兵，骑兵克制炮兵，炮兵克制步兵）。这种模式因游戏和类型而异（近战/法师/射手…霰弹枪/狙击手/步枪…坦克/辅助/伤害…核心/上路/中路/打野/辅助）</p><p>从这样的观点出发，平衡意味着克制关系。如果玩家对于对手的移动/策略没有任何可能的克制办法，那么系统就是不平衡的。任何平衡的克制系统都需要 3 个以上的可选项，因此用于克制的出招（<a href="https://www.sirlin.net/articles/game-balance-and-yomi">“yomi”</a>）是不同于自己最初始的出招且不同于敌方出招的第三选项</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506113806.png" alt="diagram comparing Rock Paper Scissors vs Attack Throw Block (right image by David Sirlin, from https://www.sirlin.net/articles/designing-yomi)"></p><h4 id="Dilemmas-payoffs-dominant-strategies"><a href="#Dilemmas-payoffs-dominant-strategies" class="headerlink" title="Dilemmas, payoffs, dominant strategies"></a>Dilemmas, payoffs, dominant strategies</h4><p>囚徒困境是1950年代美军智库设计的思想实验，是<a href="https://en.wikipedia.org/wiki/Game_theory">博弈论</a>的核心概念：</p><blockquote><p>犯罪团伙的两名罪犯被捕。每个囚犯单独监禁，无法与他人交流。每个囚犯都有机会通过作证对方犯罪来背叛，或是沉默来与对方合作。可能的结果：</p><ul><li>AB 彼此背叛，各自服刑两年</li><li>A 背叛，B 沉默，A 将被释放，B 服刑三年</li><li>A 沉默，B 背叛，A 服刑三年，B 释放</li><li>AB 都沉默，每人服刑一年</li></ul></blockquote><p>以下是表示为回报矩阵的可能结果，其中监禁年数用负分表示，目标是最大化最高分：</p><table><thead><tr><th align="left"></th><th align="left">B 沉默（合作）</th><th align="left">B 背叛（敌对）</th></tr></thead><tbody><tr><td align="left">A 沉默（合作）</td><td align="left">A -1 B -1</td><td align="left">A -3 B 0</td></tr><tr><td align="left">A 背叛（敌对）</td><td align="left">A 0 B -3</td><td align="left">A -2 B -2</td></tr></tbody></table><p>在这个标准囚徒困境中，博弈论者认为玩家应该总是选择背叛。 为什么？ 假设你是 A，如果 B 配合，那么你应该背叛，因为 0 年的监禁比 1 年的监禁要好； 即使 B 背叛，那你也应该背叛，因为 2 年监禁比 3 年监禁要好。</p><p>囚徒困境在英国游戏节目金球奖的最后一轮“Split or Steal”中最为流行：</p><iframe width="485" height="273" src="https://www.youtube.com/embed/S0qjK3TWZE8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>出于这个原因，背叛是一种优势策略，因为其他玩家做什么并不重要。 总是选择背叛能获得最多的胜利，最坏的情况是平局。 就成本/积分而言，如果您总是背叛其他玩家，您实际上不会输。 要了解原因，请观看英国游戏节目 Golden Balls 中最著名的时刻（上面的视频），参赛者 Nick Corrigan 使用这种优势策略对抗另一位参赛者 Ibrahim Hussein 以取胜。<p>从这个角度来看，<strong>平衡意味着在你的系统中避免出现能获得最高理论收益的优势策略</strong>。 如果存在一个优势策略，那么理论上所有理性的玩家都会选择它，这使得其余策略无关紧要，因此是不平衡的。</p><h4 id="Feedback-loops"><a href="#Feedback-loops" class="headerlink" title="Feedback loops"></a>Feedback loops</h4><p>加热器是一种简单的自平衡系统。当加热器检测到太冷时，它会加热；当加热器检测到太热时，它会停止加热。在<a href="https://en.wikipedia.org/wiki/System_dynamics">系统动力学</a>中，这个负反馈回路（negative feedback loop）是一个平衡回路，因为它稳定了系统的状态。相比之下，想象一个加热器，当变得更热时，它继续加热，最终导致着火并烧毁房子——这是一个正反馈循环（positive feedback loop），一个加强自身效果的强化循环。</p><p>在游戏中，<strong>平衡的循环给予处于劣势的玩家翻盘的机会</strong>。例如，赛车游戏通常会通过给予他们更快的速度奖励（例如 Gran Turismo 中的人工智能汽车）或更好的物品（例如马里奥赛车中的蓝色冲刺）来“左右局势”，从而使比赛感觉更刺激和有竞争性。然而，这也可能导致（对于优势玩家的）不公平，或者让人感觉像是人为制造的旷日持久的僵局。强化循环有助于更强大的玩家增加他们的优势，就像在任何资源产生更多资源的游戏中一样（例如，在反恐精英中，金钱可以买到更好的枪，这使得杀戮更容易，赚更多的钱，买更好的枪……等等。 ）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Adoption_SFD_ANI_s.gif" alt="Dynamic stock and flow diagram of model _New product adoption_ (model from article by John Sterman (https://en.wikipedia.org/wiki/John_Sterman &quot;John Sterman&quot;) 2001)"></p><h4 id="Balancing-for-feel"><a href="#Balancing-for-feel" class="headerlink" title="Balancing for feel"></a>Balancing for feel</h4><p>游戏平衡现在看起来像是一个可以证明的数学问题——如果结合所有的克制关系、反馈循环和数字，那么你的游戏或关卡现在就完美平衡了！</p><p>看哪，标准石头剪刀布的完美平衡收益矩阵：</p><table><thead><tr><th align="left"></th><th align="left">B 出石头</th><th align="left">B 出布</th><th align="left">B 出剪刀</th></tr></thead><tbody><tr><td align="left">A 出石头</td><td align="left">A: 0  ,  B: 0</td><td align="left">A: 0  ,  B: +1</td><td align="left">A: +1  ,  B: 0</td></tr><tr><td align="left">A 出布</td><td align="left">A: +1 , B: 0</td><td align="left">A: 0 , B: 0</td><td align="left">A: 0 , B: +1</td></tr><tr><td align="left">A 出剪刀</td><td align="left">A: 0 , B: +1</td><td align="left">A: +1 , B: 0</td><td align="left">A: 0 , B: 0</td></tr></tbody></table><p>理论上，石头剪刀布是完美平衡的，所有选项有着相同胜率。 没有导致连续获胜的强化循环，过去的回合不会影响未来的回合。 这种完美的平衡是否让石头剪刀布成为有史以来最伟大的游戏？相反，有些人可能会说完美的平衡最终使它成为一个无聊的游戏！ 所有的出招感觉都是一样的，没有办法冒很大的风险来获得丰厚的回报，并且有 33% 的几率无事发生。</p><p>不平衡的克制、优势策略或失控的负反馈循环在游戏中不一定是坏事。 如果优势策略实现了我们的体验目标，那么，让它存在！即使它不那么让人难以抉择，使用优势策略仍然会让人感到戏剧性和影响力。 除非是非常明显的胜利，否则普通胜利的冲击可能并不强烈。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506224943.png"></p><p>若想让“石头”感觉像是一个重大的戏剧性的决定：<br>| |B 出石头|B 出布|B 出剪刀|<br>|:—-|:—-|:—-|:—-|<br>|A 出石头|A: -10 , B: -10|A: 0 , B: +5|A: +15 , B: 0|<br>|A 出布|A: +5 , B: 0|A: 0 , B: 0|A: 0 , B: +1|<br>|A 出剪刀|A: 0 , B: +15|A: +1 , B: 0|A: 0 , B: 0|</p><p>Journey 是一款游戏，玩家可以在彼此附近“啁啾”以补充其他玩家的跳跃能量。 合作显然是这里的主导战略，但这就是重点：</p><table><thead><tr><th align="left"></th><th align="left">B 叽喳（合作）</th><th align="left">B 不叽喳（不合作）</th></tr></thead><tbody><tr><td align="left">A 叽喳（合作）</td><td align="left">A: +1 jump , B: +1 jump</td><td align="left">A: +0 jump , B: +1 jump</td></tr><tr><td align="left">A 不叽喳（不合作）</td><td align="left">A: +1 jump , B: +0 jump</td><td align="left">A: +0 jump , B: +0 jump</td></tr></tbody></table><p>这也意味着：一个平衡的游戏/关卡通常并不是我们所想要的</p><h4 id="Fairness"><a href="#Fairness" class="headerlink" title="Fairness"></a>Fairness</h4><p>公平是玩家对平衡的心理感知。但公平与否与是否真的平衡其实并不一定相关。通常竞技性的多人地图应为双方提供 50 % 的平均胜率。</p><p>一般优先考虑公平而不是平衡。公平并不是完美数学，而是理解玩家体验和反应。玩家就是事实的制定者，如果玩家都说 2+2=5，那就等于 5 又有何妨。</p><p>游戏设计师对“公平”的定义不同。 <a href="https://www.sirlin.net/articles/balancing-multiplayer-games-part-3-fairness">David Sirlin 将公平定义</a>为“技巧水平相同的玩家有平等的获胜机会，无论他们的开局条件如何。”</p><h5 id="Match-tournament-design"><a href="#Match-tournament-design" class="headerlink" title="Match/ tournament design"></a>Match/ tournament design</h5><p>规则和程序会影响玩家使用地图的方式，特别是在竞技性的多人游戏中。</p><ul><li>换边。当双方在比赛中切换阵营时，地图平衡的重要性会降低。</li><li>层级列表。常见于 MOBA 和格斗游戏中。将不同等级、角色、装备等进行等级分类，仅在相同等级内平衡。 Sirlin 认为所有 S 级（过于好）和 F 级（过于差）角色都该被重新设计。</li><li>锦标赛。竞技性多人锦标赛的分支设计是一门完整的科学，可以说这基本上是元关卡设计。开放式/封闭式？循环赛/淘汰赛？一支队伍在某地图上比另一只队伍更拿手怎么办？队伍可以否决地图吗？地图池怎么决定？</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506232146.png" alt="photo of the Green Monster wall at Fenway Park by &quot;wallyg&quot; under CC-BY license (https://commons.wikimedia.org/wiki/File:Fenway_Park_Home_Plate_and_Green_Monster.jpg)"></p><p>以下是关于上图的解说，直翻：</p><blockquote><p>例如，上图是美国波士顿美国职棒大联盟芬威球场左侧场地后侧的一堵异常高大的绿墙“绿魔”。在关卡设计和地图平衡方面，绿魔在场上为防守团队提供了巨大的优势；绿魔如此高（11.3米），击球手很难击出本垒打翻墙。</p><p>但在整个棒球比赛的大背景下，球队在多局比赛中反复转换角色，这是公平的，因为两支球队都处于类似的劣势。整体游戏设计框架我们如何理解平衡，有时地图平衡甚至有些无关紧要。</p><p>（棒球书呆子争论绿色怪物是否对击球手不利。击球手可以瞄准墙壁并将球从墙上反弹，这对于左外野手来说更难接球。左撇子投手在芬威经常遭受更糟糕的统计，因为右-击球手在这些“墙球双打”中得分更多。）</p></blockquote><hr><h3 id="Map-balance"><a href="#Map-balance" class="headerlink" title="Map balance"></a>Map balance</h3><p>地图平衡涉及以下方面：</p><ul><li>实用性：该区域有用/有趣？为什么玩家到这里/在这里停留？</li><li>成本：区域是否容易到达/停留？玩家是否需要耗费大量时间/资源才能这么做？玩家在这里会让别的地方更脆弱吗？</li><li>信息：玩家知道这里存在吗？玩家必须追踪/记忆多少信息才能使用该区域？有隐藏成本吗？误解会发生什么有趣的事吗？</li></ul><p>关卡设计目标并不是最大化实用性。在关卡设计中设计一个总是有用（高实用性）、容易到达（低成本）、明显（可见信息）的“完美”区域实际上并不理想。因为所有“理性”玩家都会选这样的地区。那构建其他地区的意义何在？</p><p>理想情况下，地图的每个部分都应该有特定的用途，具体取决于游戏状态，并通过情境弱点阻止玩家停留太久，通过有限的信息过滤让玩家犯有趣的错误。</p><h4 id="Territory-map-control"><a href="#Territory-map-control" class="headerlink" title="Territory/ map control"></a>Territory/ map control</h4><p>领地：玩家可追踪，防御，且通常从中受益的区域。</p><p>拥有更多领地就有更多地图控制权。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506233409.png" alt="map control diagram with &quot;P&quot; (player) on left, and &quot;E&quot; (enemy) territory on right -- from &quot;The Door Problem of Combat Design&quot; by Andrew Yoder"></p><h4 id="Chokepoints"><a href="#Chokepoints" class="headerlink" title="Chokepoints"></a>Chokepoints</h4><p>领土通常以阻塞点（chokepoints），即较小的区域或通道为界，这些区域可以被占领以防御敌人入侵。</p><p>在多人 PvP 地图中，在地图上分布 3-4 个阻塞点，每条路一个阻塞点。 不应该能够从一个点覆盖所有阻塞点。</p><p>例如，在 Counter-Strike 地图 de_cache 中，上车道  (A) 有两个小阻塞点，中车道有一个大阻塞点，而下车道 (B) 有一个大阻塞点。<br>反恐（CT）小组的工作是保护橙色炸弹点，这两个炸弹点在开始时都牢牢地在他们的领土内（战线左侧）。 CT 有一种安全的方式从中间迂回到 A，但 T 可以从两个阻塞点攻击 A。 B 更靠近 CT 和 Ts，但从 B 迂回需要更长的时间。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506233744.png" alt="battle line and chokepoint breakdown on de_cache by Sal Garozzo and Shawn Snelling for Counter-Strike: Global Offensive, from GDC 2015: Community Level Design for Competitive CS:GO"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul><hr><h2 id="暂告段落"><a href="#暂告段落" class="headerlink" title="暂告段落"></a>暂告段落</h2><p>后面有些部分感觉并未写完。毕竟本“书”还处于不断填坑过程中，暂时打算等坑再填填再来继续随译/笔记。</p><p>至目前为止其实看下来更多是一个体系梳理的感觉，但要真正落到生产设计中，感觉还需要更精细化和深入的内容。后面可能会暂时转向关卡设计的另一本书。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220505 - Level Design Book - BOOK 1. PROCESS - Combat - Encounter</title>
      <link href="2022/05/05/20220505-leveldesignbook-combat-encounter/"/>
      <url>2022/05/05/20220505-leveldesignbook-combat-encounter/</url>
      
        <content type="html"><![CDATA[<h2 id="Encounter"><a href="#Encounter" class="headerlink" title="Encounter"></a>Encounter</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/encounter">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>通常与 NPC 进行的连续不断的开放式挑战</p></blockquote><h3 id="What-is-an-encounter"><a href="#What-is-an-encounter" class="headerlink" title="What is an encounter?"></a>What is an encounter?</h3><p>遭遇战是一系列支持多种玩家策略的系统性挑战：</p><ul><li>序列：可以有连续多个 beats/ waves/ 挑战</li><li>系统性：使用重复游戏元素设计语言</li><li>多样性：理想情况下，不仅有一种特定解决方案或最佳策略</li><li>战术：即兴的短期玩法风格/行为</li></ul><p>许多游戏以非暴力形式来构建挑战：如谜题，对话，或是迷你游戏等。但是在关卡设计文化中，“遭遇战”通常指的是动作/射击/RPG 品类游戏中的单人战役及 PVE（player vs. enemy）</p><p>原文里没填的坑：有关更多非暴力挑战设计，请看谜题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505211328.png" alt="combat front diagram for a cover-based military shooter, from &quot;Creating Conflict: Combat Design for AAA Action Games&quot; by Michael Barclay, Sam Howels, Pete Ellis at GDC Europe 2016 (via GdcVault.com) (https://www.gdcvault.com/play/1023791/Creating-Conflict-Combat-Design-for)"></p><hr><h3 id="Combat-story"><a href="#Combat-story" class="headerlink" title="Combat story"></a>Combat story</h3><p>遭遇战是有关<a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/">节奏</a>的艺术。何时，在哪里，发生了什么，会让玩家有何种反应？</p><p>可以把它当成一个故事，但是是通过战斗来讲述的——一场有起因，经过，结果的遭遇故事：</p><ul><li>起因，在战斗开始前：<ul><li>敌人们已经在战场中了吗，还是毫无察觉，或是在来的路上？</li><li>是否由玩家选择合适加入战斗</li><li>玩家是否知道敌人的布局和构成？</li></ul></li><li>经过，战斗中：<ul><li>短线作战还是长时作战？多少波或阶段？</li><li>有任何会影响战斗的脚本事件吗</li><li>有特别需要强调的路线或是策略吗</li></ul></li><li>结果，战斗后：<ul><li>玩家怎样知道战斗结束了</li><li>是否有多种可能结果</li></ul></li></ul><p>好的遭遇战能够帮助玩家理解发生了什么，也能讲述一个拥有清晰起因和后果的连贯故事。</p><p>这里配了龙叔电影中遭遇战的录制 233：</p><iframe width="735" height="413" src="https://www.youtube.com/embed/YX327SIoSMk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>下面这段话直翻了：> 在上面的纪录片《成龙：我的特技》（1999）的视频片段中，成龙为大片《尖峰时刻》（1998）编排并导演了一个打斗场景。 成龙对每个演员的动作都强调了一种“身体逻辑”； 因此，当他和克里斯·塔克的行为相互影响时，这意味着他们角色的合作关系达到了情感高潮。 布雷特·拉特纳 (Brett Ratner) 经常提出的关于枪支的愚蠢问题完全没有抓住重点。 性格就是行动，行动不断流动。 枪无所谓，它只是帮助观众遵循身体逻辑的工具。<h3 id="Starting-an-encounter-footholds"><a href="#Starting-an-encounter-footholds" class="headerlink" title="Starting an encounter: footholds"></a>Starting an encounter: footholds</h3><p>对于强调掩护的单人动作射击游戏，让玩家在战斗真正开始前有机会调查竞技场：</p><ul><li>从哪里开始打</li><li>了解敌人的进攻路线</li><li>如果打不过从哪里跑</li></ul><p>如果不帮玩家理解布局，他们只会在门口毫无想象力的战斗，竞技场的设计就白做了，玩家会反过来怪游戏提供的信息不够多，不知道什么时候利用竞技场。</p><p>怎么吸引玩家进入竞技场，了解布局，而后交战？Andrew Yoder 将之称为 <a href="https://andrewyoderdesign.blog/2019/08/04/the-door-problem-of-combat-design/">战斗设计的门问题</a></p><p>让玩家找到立足点的方法：</p><h4 id="方法-1：玩家伏击敌人"><a href="#方法-1：玩家伏击敌人" class="headerlink" title="方法 1：玩家伏击敌人"></a>方法 1：玩家伏击敌人</h4><p>开始时让敌人意识不到玩家存在，玩家可从入口处进入。这让玩家有一些时间来制定计划，并在准备好时开始攻击。</p><p>玩家一开始可能会很容易消灭暴露在外的不知情敌人，但可以在拐角处隐藏/产生更多敌人，在战斗开始时引入这些敌人增援。</p><p>这种模式在开放世界游戏或任何点缀着敌人前哨的大型景观中很常见。符合这些品类行动自由的美学。</p><h4 id="方法-2：敌人包围玩家"><a href="#方法-2：敌人包围玩家" class="headerlink" title="方法 2：敌人包围玩家"></a>方法 2：敌人包围玩家</h4><p>开始时没有敌人，玩家就能够在竞技场中游荡到中央。一旦越过某些范围，或是机关，就触发遭遇战。可以放置一些东西和资源到场中作为“诱饵”。</p><p>有经验的玩家一眼就能识破这种明显的陷阱，并且一看到空旷的竞技场房间或者看到“免费”的诱饵就提高警惕。</p><p>这种伎俩其实用一次就不好使了。防止敌人保卫战很困难，因为重复死亡以及缺乏对战斗的掌控会让玩家感到后悔或不公。</p><p>这种模式常见于经典射击/恐怖游戏。玩家们通常都会对此有心理准备。</p><h4 id="方法-3：带有可选单向入口的-Vista"><a href="#方法-3：带有可选单向入口的-Vista" class="headerlink" title="方法 3：带有可选单向入口的 Vista"></a>方法 3：带有可选单向入口的 Vista</h4><p>Vista 应该指的是制高点。</p><p>设计玩家在开始时会处于一个制高点，从这里可以看到远处的竞技场内部，但不能攻击到敌人。玩家可以收集信息，制定计划，并在愿意的时候开始战斗。</p><p>可以让玩家从一个单向通道进入，在玩家进入时可以选择将其身后的门关闭，这样一旦玩家入场，敌人也知晓，类似一种“公平战斗”。</p><p>如果玩家测试的时候没有很好利用 vista，可以尝试：a. 在 vista 上放置资源；b. 使得通往 vista 的路更加顺畅；c. 一开始阻塞通往竞技场的路，并混淆入口（如 U 型转弯路，这里说实话一下子看到觉得不是很直观，没想出来指的是哪种）；d. 以上所有。</p><p>这种模式在 BOSS 战或是大型高潮编排中很常见。强迫玩家在一个故意建造的 vista 停留是一个强有力的设计暗示，警告玩家：不要草率，做好准备。</p><hr><h3 id="Encounter-design-tools"><a href="#Encounter-design-tools" class="headerlink" title="Encounter design tools"></a>Encounter design tools</h3><h4 id="Define-play-styles"><a href="#Define-play-styles" class="headerlink" title="Define play styles"></a>Define play styles</h4><p>玩家一般不会每种机制都喜欢使用，一些人会偏爱某种策略，主升某种流派，或是偏爱特定武器。这里必须区分一下玩法风格和玩家个性：</p><p>玩法风格/打法（play style）：短期的战术或是模式。玩家的模式就像天气一样，毫无预兆就可能更改。<br>玩家个性（player persona）：整体的长期行为和动机。玩家个性，是玩家整体行为的氛围，一般不会改变。</p><p>在以上前提下，建议：遭遇战应该迫使玩家改变打法，但不要挫败玩家个性。</p><p>有关定义和研究玩家的更多内容，请看<a href="https://book.leveldesignbook.com/process/blockout/playtesting/persona">玩家个性</a>。</p><p>对于每个项目，定义一些玩家打法：</p><ol><li>定义一些可能的玩家战术/行为/模式</li><li>用简短易读的名字标记它</li></ol><p>例子：</p><ul><li>平台跳跃游戏：跑者（runners）、跳者（jumpers）、滑翔者（gliders，啥意思，一直滑铲？）、游泳者（swimmers，啥意思，爱走水路不爱走陆路？）</li><li>设计游戏：狙击手（snipers），霰弹枪手（shotgunners），喷雾（spray，这…也没懂）和祈祷（pray，啥意思，这个真没懂），露营者（campers，蹲点的）</li><li>开放世界游戏：探险家（explorers）、战士（fighters）、司机（drivers，滴滴滴）、收藏家（collectors，仓鼠）</li><li>策略游戏：冲刺者（rushers）、海龟者（turtlers，疯狂保命，苟）、扩张者（expansionists）、微观/宏观（micro/macro，这啥，细节和大局观？）</li><li>所有游戏：完成者（completionists）、速通（speedrunners）、知识猎人（lore hunters，全成就吧应该是）、直播（streamers，主播）、新手（newbs）等。</li></ul><p>然后把玩法风格应用到遭遇战设计中：</p><ul><li>哪些关卡/遭遇应该支持哪些游戏风格？</li><li>你是否试图同时支持太多的游戏风格？（贪多嚼不烂啊）</li></ul><hr><h3 id="Arena-design"><a href="#Arena-design" class="headerlink" title="Arena design"></a>Arena design</h3><p>也是没填完的坑：分解 sock 的图表并单独讨论它们</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505224014.png" alt="different floor design diagrams for encounters by Simon O&#39;Callaghan"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505224039.png" alt="different fps encounter elements by Simon O&#39;Callaghan"></p><hr><h3 id="Example-combat-bosses-in-God-of-War-2018"><a href="#Example-combat-bosses-in-God-of-War-2018" class="headerlink" title="Example: combat bosses in God of War (2018)"></a>Example: combat bosses in God of War (2018)</h3><p>纵观第三人称动作游戏《战神》（2018），玩家可以尝试击败 9个被称为“女武神”（Valkyries）的可选 BOSS。所有女武神共享相似的角色美术、动画和招式，但在不同条件下以不同顺序使用，在构建战斗变化的同时有效重用了相同资源。</p><p>玩家游玩并解锁区域来解锁 BOSS，这种区域解锁的方式暗含了一种顺序，但并没有强制玩家按照这种顺序来进行战斗。前三个专门设计为一种松散教程（loose tutorials）供玩家来识别和学习，尽管有时候设计师也会利用这种潜在的建议顺序，通过混合以前的模式（prior patterns）来强迫玩家重新学习（已经学过的内容的）新的使用时机（relearn new timings）。</p><p>Sony 前战斗设计师 Jason de Heras <a href="https://twitter.com/jasondeheras/status/1376005093028335617">在 Twitter 上详述了战斗设计</a>:</p><p>下面直翻：</p><blockquote><p>Gunnr 有 2 次独立攻击，其作用是鼓励招架（黄色 FX）；他们的预期窗口/攻击速度相似，以允许一致的招架时间。 [它] 鼓励玩家招架，但不是必须招架。 Gunnr 的所有攻击都可以左/右/后躲避或招架，[除了] 有 1 次不可招架（红色）攻击 […] 在一系列初始攻击之后执行，因此玩家有足够的时间准备。不可阻挡的攻击几乎为零跟踪，因此玩家可以以最小的精度向右躲避。</p></blockquote><blockquote><p>Gunnr 通常会躲开以发起她的独立攻击。这给了玩家一个明显的视觉感受，但也有大量的分层预期时间，大约 2-3 秒来准备和应对随后的攻击。 […] Gunnr 在躲避然后攻击之后几乎没有停机时间（virtually no downtime after evading and then attacking，指的应该是攻击被格挡后不会下坠，玩家可以直接发起攻击？），这可以说使战斗更容易了。这减少了玩家必须制定策略的变量。设计者让战斗保持高强度，但实际上将敌人置于易受攻击的位置。</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/LDB_GodOfWar_JasonDeHeras_ValkyrieTelegraph.gif" alt="animated GIF showing Gunnr&#39;s attacks with long anticipation and yellow FX to encourage parry / evade (https://twitter.com/jasondeheras/status/1376005121830658049)"></p><blockquote><p>与 Gunnr 不同，Kara 的 2 次攻击强烈迫使玩家回避/阻挡。 由于这些攻击具有相似的启动姿势，因此玩家必须识别红色 FX 以选择回避或阻挡。 […]  Kara 共享 Gunnr’s 短跑/俯冲?，但是 [如果] 玩家在招架/防守时失误，他们将很容易受到附近 Draugrs 的攻击，[增加紧张感。] Kara’s 翅膀滑击（wing swipe） 是一种独立的攻击，给了她另一种躲避并重置战斗的混招。 […] Kara’s 翅膀滑击 的范围会导致它故意 miss。 如果玩家大意或贪了，这种设计会让他们更容易错失机会（sleep）或者进行攻击。 最后一小段向前短冲使这种攻击具有欺骗性。</p></blockquote><blockquote><p>Geirdriful 分享了 Gunnr 和 Kara 的一些招式，但增加了 2 种独特的攻击来打造强大/全面的招式 […] 可以招架的攻击。 […] Geirdriful 的侧翼挥击组合与 Gunnr 的相同，但用作独立攻击（与 Gunnr 的反击相反），这是另一种使战斗更难预测的组合。 Geirdriful 共享 Gunnr 不可阻挡的翅膀冲击（wing thrust），但作为独立攻击增加了平移/速度。 如果玩家先与 Gunnr 战斗，那么在无法阻挡的翅膀冲击之前移除翅膀滑击（wing swipes）将迫使他们重新学习此攻击的节奏。<br><a href="https://twitter.com/jasondeheras/status/1376005093028335617">– Jason de Heras (@JasonDeHeras)</a></p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505230700.png" alt="spreadsheet breakdown showing the moveset matrix for valkyrie bosses in God of War (2018), by Jason de Heras (via Twitter)(https://twitter.com/jasondeheras/status/1376005158656638977)"></p><hr><h3 id="Example-stealth-boss-in-Dishonored"><a href="#Example-stealth-boss-in-Dishonored" class="headerlink" title="Example: stealth boss in Dishonored"></a>Example: stealth boss in Dishonored</h3><p>在第一人称潜行游戏《耻辱》中，任务 7 “洪水区”中，玩家面对的是一个 Boss NPC。 他们可以偷偷溜过它而不被发现或试图与老板战斗。 Arkane Studios 的关卡设计师 Dana Nightingale 评论了她的设计文件：</p><blockquote><p>通常我讨厌 BOSS 战，所以设计一个规避了所有我不喜欢的部分的 BOSS 战让我感到兴奋。 […] 设计与 Daud 的相遇仍然是我最自豪的事情之一。 我喜欢看人们玩它。</p></blockquote><blockquote><p>大块的文本很适合“开发评论”（dev commentary），但如果你有一百个文档要保持最新状态，或者你是必须阅读它们的人，那么它就不能很好地工作。 更简单，但传达更多，始终是我们的目标。 这真的很难。</p></blockquote><blockquote><p><a href="https://twitter.com/DanaENight/status/1371022031886635011">– Dana Nightingale (@DanaENight)</a></p></blockquote><p>Nightingale 的原始设计文件（见下方）概述了这次遭遇战的明确设计目标，以证明异常封闭的竞技场布局是合理的。 此外，由于《耻辱》是一款具有许多不同玩家能力的“沉浸式模拟”RPG 游戏，她使用流程图格式来想象不同的玩家策略以及遭遇脚本如何优雅地处理边界情况。 然而，正如她所指出的，阅读内容很多。 在设计简介中写太多细节并不一定会改善规划或设计。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/LDB_Encounter_Daud_Dishonored_DanaNightingale.png" alt="design documents for boss encounter in Dishonored, by Dana Nightingale (https://twitter.com/DanaENight/status/1370643659792744449)"></p><p>BOSS 战的其中一个通关例子，它满足了 Nightinggale 的设计目标吗？和初始的设计意图有何不同呢？</p><p>（视频里面玩家用了类似“子弹时间”的技能来顺利偷到了东西，并且也没有触发战斗，算是满足了原始设计中的“逃课”目的，但却并非直接溜走，玩家用自己的方式做到了“雁过无痕”。）</p><iframe width="485" height="273" src="https://www.youtube.com/embed/yE3yO4zMMgg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr><h3 id="Further-reading"><a href="#Further-reading" class="headerlink" title="Further reading"></a>Further reading</h3><ul><li><a href="https://www.gameaipro.com/">Game AI Pro</a> is the main game industry publication about game AI programming and techniques – professionally written and edited – and <strong>free to read.</strong> If you’re not a programmer, some of it will be difficult to understand, but try to push through it anyway. If you can understand 50% of it, it’ll still help you a lot. A valuable community resource for combat designers.</li><li><a href="https://www.youtube.com/watch?v=oB4JMy9OjKk"><strong>“Basics of Classic FPS Combat Encounter Design”</strong></a> (47 min video) by Andrew Yoder</li><li><a href="https://www.nathanielchapman.games/pedrothedagger/encounter-design-topics-rng-in-encounter-design">“Encounter Design Topics: RNG in Encounter Design”</a> by Nathaniel Chapman is about when and how to apply randomness to combat, especially in a multiplayer or MMO context.</li><li>  <a href="https://www.youtube.com/watch?v=s9bleQCTdTo">“Quake Mapping Tips: Difficulty Balance in Level Design” (8 min) video by Michael Markie</a> workshops Quake 1 combat encounters at different difficulty tiers, while offering general design commentary and advice. Markie uses different monster behavior and weapon / ammo placement to encourage different player movement within the same room layout. A great primer even if you’re not mapping for Quake.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220504 - Level Design Book - BOOK 1. PROCESS - Combat - Enemy Design</title>
      <link href="2022/05/04/20220504-leveldesignbook-combat-enemydesign/"/>
      <url>2022/05/04/20220504-leveldesignbook-combat-enemydesign/</url>
      
        <content type="html"><![CDATA[<h2 id="Enemy-design"><a href="#Enemy-design" class="headerlink" title="Enemy design"></a>Enemy design</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/enemy">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>为具有不同行为，强弱项的 NPC 制作原型</p></blockquote><h3 id="What-is-enemy-design"><a href="#What-is-enemy-design" class="headerlink" title="What is enemy design?"></a>What is enemy design?</h3><p>以下是一些有关敌人设计的类型的行业共识/建议：</p><ul><li>多样性：与每种类型的敌人战斗时都应该有不同的感觉，避免过于相似的敌人</li><li>等级：敌人有强有弱，需要明确定义</li><li>长生命周期：敌人类型不应该存在过时的说法。一个弱小的早期敌人在游戏后期应该仍然有趣，一个中期的 BOSS 后期也可以转化为普通怪等</li><li>紧急性（也许该理解为多变性？）：不同类型的敌人组合应该造就不同的应对策略。玩家不应该存在可以应付所有情况的“万金油”/“一招鲜”</li><li>智能：敌人应该给人不同的智力和情感错觉（恐惧、愤怒等）</li><li>“聪明”的敌人应该有与之对应的生存能力，否则还没来得及展示他们有多聪明就挂了</li><li>一致性：敌人应该有清晰的模式/特征以供玩家进行识别和利用</li></ul><p>敌人设计通常是一项与 AI 设计师，程序，角色美术，动画，声效设计等团队成员共同合作的复杂工作。要注意，这并不是一本战斗设计的书。</p><p>一些敌人设计的例子，可以看<a href="https://book.leveldesignbook.com/process/blockout/metrics/doom">Doom metrics</a> 和 <a href="https://book.leveldesignbook.com/process/blockout/metrics/quake">Quake metrics</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504120238.png" alt="Enemy rosters can be surprisingly complicated and varied; monster sprites from Doom 2 (1994) by id Software"></p><hr><h3 id="Enemy-roster"><a href="#Enemy-roster" class="headerlink" title="Enemy roster"></a>Enemy roster</h3><p>想象一下我们要制作一款动作游戏。以下是一些用于填充敌人名单的基本角色，包含它们的敌人类型以及相应战斗职能。<br>|角色|行为|<br>|:—-|:—-|<br>|Grunt|无脑攻击玩家，直截了当，容易搞定|<br>|Squad|轮流组团进攻，也会后退/迂回|<br>|Leader|高生存能力，会给附近的盟友增益|<br>|Tank|高生存能力，但速度慢且体积大（容易被玩家击中或躲避其攻击）|<br>|Swarm|小型快速攻击者，生命值低但近距离伤害高|<br>|Sniper|慢速远程攻击，没有队友掩护就很脆弱|</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504121403.png" alt="different Combine soldier designs from Half-Life 2 (2004) and Half-Life: Alyx (2020) by Valve Software"></p><h3 id="Balancing-a-roster"><a href="#Balancing-a-roster" class="headerlink" title="Balancing a roster"></a>Balancing a roster</h3><p>用表格方式来组织敌人列表很直观也很有效：</p><table><thead><tr><th align="left">ROLE</th><th align="left">SPEED</th><th align="left">HEALTH</th><th align="left">RANGE</th><th align="left">DPS</th></tr></thead><tbody><tr><td align="left">Grunt</td><td align="left">Medium</td><td align="left">Weak</td><td align="left">Close</td><td align="left">Low</td></tr><tr><td align="left">Squad</td><td align="left">Medium</td><td align="left">Average</td><td align="left">Mid</td><td align="left">Low</td></tr><tr><td align="left">Leader</td><td align="left">Medium</td><td align="left">Average</td><td align="left">Mid</td><td align="left">Medium</td></tr><tr><td align="left">Tank</td><td align="left">Slow</td><td align="left">Strong</td><td align="left">Close</td><td align="left">Medium</td></tr><tr><td align="left">Swarm</td><td align="left">Fast</td><td align="left">Weak</td><td align="left">Close</td><td align="left">High</td></tr><tr><td align="left">Sniper</td><td align="left">Slow</td><td align="left">Weak</td><td align="left">Long</td><td align="left">High</td></tr></tbody></table><p>表格形式可以帮助设计师对敌人进行平衡以及定位差距。但思维不要局限于表格，对于上面的表格也许可以考虑下面这些方面：</p><ul><li>只有 1 个快速的敌人？ 也许Leader 也应该 Fast，才能感觉与Squad 更加不同？</li><li>没有高 DPS 中距离攻击范围的敌人。 应该有吗？会增添乐趣？还是作为功能型敌人来设计？</li><li>这个矩阵设计是不是太简单了？ 我们需要一个 Size 列，一个 Behavior 列吗？ 等等</li></ul><p>要分析一个已有游戏中的敌人列表：游玩多个关卡，制作自己的表格。</p><ul><li>哪种地形/布局最适合哪种敌人</li><li>哪些敌人类型可以很好地配合？为什么？</li><li>在关卡中出现了敌人的哪些组合方式？</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504122510.png" alt="the Grunt, Elite, Jackal, and Hunter are distinctive Covenant faction enemies from Halo 1 (2001) by Bungie"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220503 - Level Design Book - BOOK 1. PROCESS - Combat</title>
      <link href="2022/05/03/20220503-leveldesignbook-combat/"/>
      <url>2022/05/03/20220503-leveldesignbook-combat/</url>
      
        <content type="html"><![CDATA[<h2 id="Combat"><a href="#Combat" class="headerlink" title="Combat"></a>Combat</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>设计玩家、NPC 之间或内部的物理冲突</p></blockquote><h3 id="What-is-combat-design"><a href="#What-is-combat-design" class="headerlink" title="What is combat design"></a>What is combat design</h3><p>战斗是游戏设计中最常见也是被探索得最为深刻的话题。一些工作室甚至有专门的战斗设计师，专门负责构建战斗系统和调整战斗。这是 2010 年代随着军事射击游戏/掩护射击游戏/黑魂等游戏的兴起才出现的行业惯例。</p><p>如果没有一些已经制作好的战斗设计，想要直接制作战斗关卡是很难的。这也是为什么建议做 mod：这样就可以直接重用游戏中已经得到验证的核心战斗系统，而不用自己重建。</p><p>如果没有选择冲突类型的游戏，可以直接学习有关<a href="https://book.leveldesignbook.com/process/layout">布局</a>的内容。</p><hr><h3 id="Combat-concepts"><a href="#Combat-concepts" class="headerlink" title="Combat concepts"></a>Combat concepts</h3><p>设计战斗系统时，考虑以下方面：</p><ul><li><a href="https://book.leveldesignbook.com/process/combat/enemy">敌人设计</a>：定义不同类型的敌对 NPC 类型<ul><li>理想情况下，每种类型都有不同的行为、优势、劣势</li><li>如果敌人类型过于重复，战斗体验会感觉枯燥单一</li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/encounter">遭遇战</a>：与 NPC 对抗的结构型战斗<ul><li>开放式战斗谜题：玩家需要即兴解决</li><li>游戏内的遭遇战通常会涉及一些<a href="https://book.leveldesignbook.com/process/scripting">脚本</a></li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/balance">平衡</a>：主观（觉得平衡）和客观（真的平衡）都要体现，通常体现在 PvP 中<ul><li>玩家可以哪里，他们能控制什么东西</li><li>平衡的关卡有能构建玩家对于布局的信任，并想着期望的目标不断加码</li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/arena">竞技场设计</a>：专门为战斗而设的空间<ul><li>设计可能的立足点，阻塞点，覆盖模式等</li><li>这部分会稍晚些提到。在理解敌人设计和遭遇战设计之前是无法很好地知道竞技场设计的需求的</li></ul></li></ul><hr><h3 id="Combat-mechanics"><a href="#Combat-mechanics" class="headerlink" title="Combat mechanics"></a>Combat mechanics</h3><p>战斗机制是玩家用于对抗敌人的可重用的动作/技能/武器。常见战斗机制有：</p><ul><li><strong>收集</strong>有关布局和敌人的信息</li><li><strong>远离</strong>危险，<strong>占领</strong>目标</li><li><strong>瞄准</strong>特定的敌人类型/弱点</li><li>当看到<strong>攻击信号</strong>（或者进攻机会时） <strong>示意</strong>攻击</li><li>将攻击/武器动作组成<strong>连招</strong></li><li><strong>阻挡</strong>敌人的攻击：在正确的时间<strong>招架</strong>/<strong>反击</strong>/<strong>闪避</strong></li><li>在敌人无法击中或看到你的地方<strong>寻找掩护</strong></li><li>管理<strong>资源</strong>，清点<strong>拾取物</strong>（血包，弹药等）</li><li>在环境中布置<strong>陷阱</strong>（爆炸桶、水、岩浆、悬崖等）</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/GodOfWar2014_CombatPrototype.gif" alt="在简单的测试地图中测试战神（2018）的战斗原型，来源为 https://80.lv/articles/evolution-of-god-of-war-from-2014-to-2018/"></p><h3 id="Weapon-design"><a href="#Weapon-design" class="headerlink" title="Weapon design"></a>Weapon design</h3><p>许多游戏为玩家提供了多种可用武器。武器设计是有关概念化、制作和平衡武器库的过程。需要考虑：</p><ul><li>武器的感觉和幻想：较大的射速较慢的枪 vs. 偷偷摸摸的刀 vs. 轰鸣电锯</li><li>关于伤害，射程，射速，弹药供应等方面的统计数据<ul><li>对于枪而言：需要考虑不同的散射度，后坐力，瞄具，穿透力，弹匣大小，装填速度等</li></ul></li><li>态势感知：挑选最合适/有效的武器</li><li>弹药经济的管理：不浪费资源</li><li>武器升级，装备升级等</li></ul><hr><h3 id="TODO-Combat-examples"><a href="#TODO-Combat-examples" class="headerlink" title="TODO: Combat examples"></a>TODO: Combat examples</h3><p>原文还没填这里的坑</p><hr><h3 id="TODO-Combat-workflow"><a href="#TODO-Combat-workflow" class="headerlink" title="TODO: Combat workflow"></a>TODO: Combat workflow</h3><ul><li>制作测试用的战斗关卡原型</li><li>怎么知道一个战斗“足够好了”</li></ul><p>原文还没填这里的坑</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220502 - GDC2017 塞尔达：旷野之息的三角之力</title>
      <link href="2022/05/03/20220502-gdc2017-zelda/"/>
      <url>2022/05/03/20220502-gdc2017-zelda/</url>
      
        <content type="html"><![CDATA[<h2 id="塞尔达：旷野之息的三角之力"><a href="#塞尔达：旷野之息的三角之力" class="headerlink" title="塞尔达：旷野之息的三角之力"></a>塞尔达：旷野之息的三角之力</h2><p> 虽然以前已经看过一次视频，但所谓好记性不如烂笔头，这里重新复习一下最出色的开放世界的设计理念，本文基本整理自参考文章 <a href="https://cowlevel.net/article/2091350">荒野之息-用乘法打造开放世界玩法</a>，也感谢作者 <a href="https://cowlevel.net/people/ThouSun">ThouSun</a> 的辛苦整理。</p><p>原视频：<a href="https://www.youtube.com/watch?v=QyMsF31NdNc">Breaking Conventions with The Legend of Zelda: Breath of the Wild</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502224332.png" alt="三角之力"></p><ul><li>the wisdom to make - Takuhiro Dohta</li><li>the power to show - Satoru Takizawa</li><li>the courage to say - Hidemaro Fujibayashi</li></ul><h2 id="P1-旷野之息设计核心-乘法式玩法"><a href="#P1-旷野之息设计核心-乘法式玩法" class="headerlink" title="P1 旷野之息设计核心-乘法式玩法"></a>P1 旷野之息设计核心-乘法式玩法</h2><p>Hidemaro Fujibayashi</p><h3 id="立项之初的两个核心问题"><a href="#立项之初的两个核心问题" class="headerlink" title="立项之初的两个核心问题"></a>立项之初的两个核心问题</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502233204.png" alt="立项之初的核心问题"></p><ol><li><p>塞尔达系列游戏最重要的核心是什么</p><ul><li>让玩家自由选择<ul><li>自由决定去哪里</li><li>自由决定干什么</li></ul></li></ul></li><li><p>如何打破塞尔达常规，挖掘新内容</p><ul><li>之前作品中的相同点<ul><li>空气墙的存在阻碍了玩家移动</li><li>线性推进的剧情和流程</li><li>事先设计好的游戏体验</li><li>所有谜题都能在网上找到答案</li></ul></li><li>如何打破<ul><li>被动游玩 -&gt; 玩家主导的主动游玩（active game）</li></ul></li></ul></li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502224615.png" alt="具有启发意义的地图"><br>来自地图的启发：玩家起初对整个世界是无知的，通过一步步探索，发现这个世界的美妙之处。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502233754.png" alt="打破前作的限制"></p><h3 id="Active-Game"><a href="#Active-Game" class="headerlink" title="Active Game"></a>Active Game</h3><p>怎么做</p><ul><li>移除空气墙，并且添加攀爬能力<ul><li>原本阻碍玩家前进的墙现在成为了可选择的新道路</li><li>这样玩家在游玩时会不断问自己：你要选哪条路</li></ul></li><li>有了攀爬后，玩家爬到顶端会想干什么呢？——跳下去，所以引入滑翔能力</li></ul><h3 id="乘法式游戏"><a href="#乘法式游戏" class="headerlink" title="乘法式游戏"></a>乘法式游戏</h3><p>前作的设计</p><ul><li>使用自然理论或简单科学知识创造谜题</li><li>在每个谜题中独立运用知识作为谜题提示</li><li>很多道具/机制是专属于谜题的<ul><li>可以严格把控游戏体验细节</li><li>消耗很多开发资源</li><li>不适合开放世界</li></ul></li></ul><p>旷野之息的设计</p><ul><li><p>行为（Action） x 场景（Field）</p><ul><li><p>让每个行为在不同场景下有不同用途</p></li><li><p>玩家可以自由组合</p></li><li><p>让物品对玩家行为做出反应</p></li><li><p>物品与物品也能相互影响</p></li><li><p>例子</p><ul><li><p>攻击</p><ul><li>对敌人造成伤害</li><li>对树，砍倒</li></ul><p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/log.gif" alt="用攻击砍倒树木"></p></li><li><p>火把</p><ul><li>点燃物体</li></ul><p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fire.gif" alt="用火点燃物体"></p></li><li><p>扇子</p><ul><li>吹飞</li></ul></li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/defence.gif" alt="打回怪物投掷的石块" style="zoom:70%;" /><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/timestop.gif" alt="“发射”经过时停蓄力的炸药桶"></p><p>想法验证：2D Demo</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d2.gif" alt = "用弓箭穿过火焰来点燃木质物品" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d3.gif" alt= "砍倒树木后利用浮木过河" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d4.gif" alt= "点燃火把后用其点燃其他可燃烧物体" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502225648.png" alt= "动作 x 处境 x 物体的无限可能" style="zoom:105%;" /><p>Player Action x Field x Object</p><p>游戏中玩家在面对一个处境以及相应的目标时，可以充分组合自身行为以及场景物体，并基于交互逻辑自由游玩，从而实现了玩家主导（active game）</p><h2 id="P2-乘法式玩法的技术实现"><a href="#P2-乘法式玩法的技术实现" class="headerlink" title="P2 乘法式玩法的技术实现"></a>P2 乘法式玩法的技术实现</h2><p>Satoru Takizawa</p><h3 id="游戏物理"><a href="#游戏物理" class="headerlink" title="游戏物理"></a>游戏物理</h3><p>塞尔达作为一款动作游戏，其最重要的部分是什么呢？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502235706.png" alt="处理碰撞和移动的物理引擎"></p><p>动作游戏 = 碰撞+人物移动+物体状态</p><ul><li>游戏物理<br>碰撞和移动的核心都是物理<br>游戏中，为了得到更好的操纵性，更好的反馈以及充分满足游戏设计的需求，需要的不是真实世界中的物理，而是游戏物理。</li></ul><p> havoc 引擎为游戏物理提供了可行性</p><p>物理为塞尔达创造的行为（action）</p><ul><li>爬墙，墙的陡峭程度会影响体力消耗<ul><li>可以爬墙，那可不可以爬怪？</li><li>爬蓄力后的箱子？<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502230231.png" alt="利用经过时停蓄力后的箱子移动到对岸"></li></ul></li><li>用磁力操纵金属物体</li><li>砍树，树会倒下变成木头</li><li>让时间停止，反复敲打以积攒能量</li></ul><p>游戏物理支撑了玩家的可能行为</p><h3 id="化学引擎"><a href="#化学引擎" class="headerlink" title="化学引擎"></a>化学引擎</h3><p>物理引擎解决了移动规则（碰撞和移动），化学引擎用于解决状态变化</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502230406.png" alt="处理状态变化的化学引擎"></p><p>核心定义</p><ul><li>元素<ul><li>火</li><li>水</li><li>风</li><li>电</li></ul></li><li>材质<ul><li>木</li><li>铁</li><li>角色</li></ul></li></ul><p>化学引擎的三条核心规则</p><ul><li>元素可以改变材质状态<ul><li>如火将青葱大树变为光秃树干</li></ul></li><li>元素可以改变元素状态<ul><li>如水可以灭火</li></ul></li><li>材质和材质无法相互影响</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/chem1.gif" alt="火燃木，水灭火"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/chem2.gif" alt="导电现象"></p><p>化学引擎就是状态计算器，处理状态变化。之所以叫做化学引擎就是希望它能做游戏中创造“化学反应”：游戏规则由物理、化学引擎统一管理，直观理解的同时可以通过 action x field x object 创造无限可能，也希望玩家能主动发掘有趣的行为。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>如何做出乘法玩法——通过物理和化学来连接游戏中的所有东西</p><p>物体/玩家行为/元素等都经过精心设计，可以相互产生影响</p><p>物体之间的相互影响又与常见物理/化学现象相关，从而创造出旷野之息的有趣开放世界</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502231706.png" alt="物理+化学引擎所创造的无限可能"></p><h3 id="乘法玩法在开放世界中的应用"><a href="#乘法玩法在开放世界中的应用" class="headerlink" title="乘法玩法在开放世界中的应用"></a>乘法玩法在开放世界中的应用</h3><p>旷野之息与前作不同，一般不会有明显谜题摆在玩家面前，那么如何利用乘法玩法创造谜题呢？</p><p>答案是 处境 x 目标</p><ul><li>玩家可能面对的小目标<ul><li>打败敌人</li><li>到达目的地</li></ul></li><li>玩家需要做的<ul><li>在当前处境下探索实现目标的方法</li></ul></li><li>体验目标<ul><li>无限选择</li><li>让玩家感到“我真是个天才”</li></ul></li><li>为实现体验目标所做的<ul><li>为其提供充分的物体<ul><li>河边的石头<ul><li>静止 蓄力 飞到对岸</li></ul></li><li>沟壑边的大树<ul><li>砍倒成为桥</li></ul></li><li>沟壑两旁的草<ul><li>点燃后乘风而起</li></ul></li><li>在地图上各个地方放宝箱以引导玩家到达 主动创造产生“天才”时刻的机会</li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/wind2.gif" alt= "乘着火焰燃烧处而生成的风起飞" style="zoom:85%;" /><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/wind.gif" alt="乘风破浪"></p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/mag.gif" alt= "电引雷" style="zoom:85%;" /><h2 id="P3-为玩法打造的艺术风格"><a href="#P3-为玩法打造的艺术风格" class="headerlink" title="P3 为玩法打造的艺术风格"></a>P3 为玩法打造的艺术风格</h2><h3 id="旷野之息艺术风格的探索"><a href="#旷野之息艺术风格的探索" class="headerlink" title="旷野之息艺术风格的探索"></a>旷野之息艺术风格的探索</h3><p>塞尔达系列一贯的标准：在充分满足玩法需求前提下，尽可能满足真实感。</p><p>这也意味着，艺术为玩法服务是第一优先级，让风格尽可能真实是次要的。</p><p>制作了历代塞尔达的高清重置 Demo 后选择了风之杖的风格：保持一定真实感的同时，可以更轻松地实现为玩法服务的动作/画面。并且这种风格也有较高独特性和辨识度。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502232523.png" alt="塞尔达：风之杖"></p><h3 id="旷野之息画风如何满足玩法设计需要"><a href="#旷野之息画风如何满足玩法设计需要" class="headerlink" title="旷野之息画风如何满足玩法设计需要"></a>旷野之息画风如何满足玩法设计需要</h3><p>为了让玩家直观理解前面所提到的基于物理和化学变化所实现的玩法，不能在美术表现上完全不重视真实感。</p><p>风之杖的画面风格可能过于卡通画，会让玩家觉得游戏是面向小孩子的，这并非我们所愿。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502232705.png" alt="美术风格的平衡"></p><p>于是决定取中间值：满足风之杖中的玩法易于落地的特点，同时加入更多真实感。</p><p>例子：旷野之息中将树砍倒的动作很真实，但再砍一下地上的树木，就会噗地一下变成整理好的树枝。这些是精心考虑了玩法和真实性之间的平衡之后的结果：尽可能提供直观理解的同时（充分真实性），也保障了流畅操作性（玩法）。</p><p>做饭，滑翔，滑盾等行为也同理。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cook.gif" alt="做饭"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fly.gif" alt="滑翔和滑盾"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220502 - Level Design Book - BOOK 1. PROCESS - Pre-production - Scope</title>
      <link href="2022/05/02/20220502-leveldesignbook-pre-production-scope/"/>
      <url>2022/05/02/20220502-leveldesignbook-pre-production-scope/</url>
      
        <content type="html"><![CDATA[<h2 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/scope">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>项目周期代表了一个项目的规模以及复杂度，通常在原型推进过程中不断对周期进行验证。</p></blockquote><p>在 <a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-pre-production/">pre-production</a> 一节中，我们已经设定了最初的周期和期望。</p><p>游戏开发中的传统智慧是假设每个项目开始时都超期了。即使是小型的合理的项目也可能有隐藏问题。关卡设计也不例外，即使是很小的关卡也可能需要多次迭代和游戏测试才能验证通过。如果有疑问的话，就缩减周期以及去掉不必要的非支柱性的游戏设计吧。</p><p>随着工作经验（或是团队信任度）的提升，最终会在估计项目周期方面做得越来越好。如果是游戏开发新手，建议遵循 50% 的原则：想想尽可能小的项目，然后直接砍掉 50% 内容，这样就有 50%的机会来真正做完。</p><hr><h3 id="Feasibility"><a href="#Feasibility" class="headerlink" title="Feasibility"></a>Feasibility</h3><p>对于大型/商业项目，pre-production 其实就是可行性研究：项目能否在给定时间和资源下完成？项目是否合理还是太理想化了？其可行性到底如何？</p><p>游戏引擎和工具的选择极大地影响了机制和系统的制作可行性。 例如，使用 Doom 3 引擎制作开放世界驾驶游戏将非常困难，因为该引擎没有内置对大型景观或车辆的支持。</p><h4 id="Engine-and-tools"><a href="#Engine-and-tools" class="headerlink" title="Engine and tools"></a>Engine and tools</h4><p>可行性可不只意味着使用最喜欢的游戏引擎。每个项目都有着不同的需求和目标。</p><ul><li>所有权：依赖另一家公司是否明智？许多大型工作室使用的是自研引擎而不是 Unity 或 Unreal。</li><li>劳工：能招聘到和留住人才吗？比如小型工作室无法避免大型工作室以更高的薪资挖人，他们可能会避免使用 Unreal。（大概是技术不互通所以不好挖的意思？）</li><li>技术优先：能改变设计以契合技术吗？比如对于使用 Doom 引擎的工作，制作一个射击游戏比起平台跳跃游戏就更加可行（Doom 没有跳跃键）。</li></ul><hr><h3 id="Pipeline"><a href="#Pipeline" class="headerlink" title="Pipeline"></a>Pipeline</h3><p>游戏开发中的管线可以理解为多个不同的生产步骤。Pre-production 是搞清楚大多数管线的时候。</p><p>Build 管线可将可玩的可执行文件分发给玩家，而 art 管线会关注于将 2D 图像或 3D 模型转换为游戏引擎所支持的格式。以下这些词基本都是管线的一部分：convert，import，export，compile，bake。</p><p>关卡设计管线有一些差异。有时候可能需要单独的工具或插件来生成景观或是搭建建筑。在 2010 年前，游戏引擎在加载关卡文件之前需要对地图编译进行优化或是对其进行错误检查是很常见的步骤。</p><hr><h3 id="Prototyping"><a href="#Prototyping" class="headerlink" title="Prototyping"></a>Prototyping</h3><p>最好的验证可行性的方式就是制作原型。原型是一个小型的项目，可视其为专门回答了某一个问题。</p><p>1997 年，Apple 的研究者 Stephanie Houde 和 Charles Hill 发表了一篇名为 <a href="https://hci.stanford.edu/courses/cs247/2012/readings/WhatDoPrototypesPrototype.pdf">“What Do Prototypes Prototype?”</a> 的著名文章。Houde 和 Hill 定义了三种原型的通用分类：</p><ul><li>功能验证型，Role：它怎么来满足用户需求，在其生命周期内它扮演了什么样的角色？</li><li>技术验证型，Implementation：技术可行吗？怎么来制作？</li><li>感官验证型，Look and feel：看起来会是什么样的？感觉如何？</li></ul><p>在针对其中任何一项进行原型制作时，这一过程就被称之为概念验证（proof of concept）。原型的形式可能是纸面的，引擎的技术 demo，或是一个玩家可游玩的测试关卡。</p><p><a href="https://book.leveldesignbook.com/process/layout">Layouts</a> 和 <a href="https://book.leveldesignbook.com/process/blockout">blockouts</a> 也是用于回答设计问题的原型。</p><hr><h3 id="Vertical-Slice"><a href="#Vertical-Slice" class="headerlink" title="Vertical Slice"></a>Vertical Slice</h3><p>当尝试将多方面组合成一个更大的集成原型时就是在制作一个垂直切片——一个带有体验设计（role），音视频润色（look and feel），功能技术基础（implementation）的已完成游戏的“示例”切片。（其实就是早期演示视频）</p><p>制作垂直切片可以让团队验证管线可行性。如果能够使用当前工具盒流程制作出出色的切片，那么工具可能就够用了。如果做不出，那么可能需要对工作方式进行调整。</p><p>垂直切片还有助于衡量项目周期。如果制作 10% 的内容需要 5 个月，那么可以大概推算全部做完可能要 50 个月。（真实情况远比这复杂，但大概意思，领会精神）</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220501 - Level Design Book - BOOK 1. PROCESS - Pre-production - Worldbuilding</title>
      <link href="2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/"/>
      <url>2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/</url>
      
        <content type="html"><![CDATA[<h2 id="Worldbuilding"><a href="#Worldbuilding" class="headerlink" title="Worldbuilding"></a>Worldbuilding</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/worldbuilding">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何概念化以及设计游戏世界中的虚构历史</p></blockquote><h3 id="What-is-worldbuilding"><a href="#What-is-worldbuilding" class="headerlink" title="What is worldbuilding?"></a>What is worldbuilding?</h3><p>这是一个在较高维度对游戏世界的虚构历史及设定进行概念化的过程。</p><p>这一过程其实沿袭自小说写作，特别是科幻或奇幻小说家们通常会构建用于详细描述背景故事、传说、人物关系的“圣经”。</p><p>在世界观文档中可以描述星球的其后、游戏事件之前所发生的的详细的政治历史，甚至是一些平凡的细节，比如每个人早上的起床时间，或是主角的母亲喜欢吃什么样的晚餐。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501224225.png" alt="map of &quot;Dunwall&quot;(https://dishonored.fandom.com/wiki/Dunwall), the fictional city featured in Dishonored (2012) by Arkane Studios; strongly inspired by London"></p><h3 id="Worldbuilding-for-games"><a href="#Worldbuilding-for-games" class="headerlink" title="Worldbuilding for games"></a>Worldbuilding for games</h3><h4 id="Avoid-premature-worldbuilding"><a href="#Avoid-premature-worldbuilding" class="headerlink" title="Avoid premature worldbuilding"></a>Avoid premature worldbuilding</h4><p>从关卡设计，而不是从叙事设计的角度出发，要避免过早进行世界构建。世界构建也是一项工作，但是如果做得太早，那么只是非生产性的精力浪费。在最开始的时候只构建必须的部分。</p><p>在整个 pre-production 制作过程中，游戏世界的形状和内容可能会发生巨大改变。如果一开始就太早地囿于细节，那么这部分的工作很可能会被浪费。想象一下你写了 10 页关于房子历史的文档，但最终房子关卡被项目砍了。如果写了 20 页关于怪物及其文化的文档，但随后怪物都被替换为了制式的人形 NPC。不要陷入细节中，这样可以让自己免于被砍的失望，也可以让项目保持灵活。</p><p>虽然世界构建有趣也有用，但对于新手而言，这个过程通常会分散对于基本核心工作的注意力，即用角色和动作来讲述引人入胜的故事。谨记，人们所喜欢的史诗奇幻、科幻和超级英雄的世界是由数千名经验丰富的专业人士花费多年构建，并在无数次迭代中有丰厚资金支持。当我们孤身工作时，少给自己挖坑。</p><h4 id="Embrace-functional-worldbuilding"><a href="#Embrace-functional-worldbuilding" class="headerlink" title="Embrace functional worldbuilding"></a>Embrace functional worldbuilding</h4><p>克林特·霍金（Clint Hocking）创造了 <a href="https://clicknothing.typepad.com/click_nothing/2007/10/ludonarrative-d.html">ludonarrative dissonance</a> 来描述当玩家的表现（“ludo”）和设计师的预期故事（“narrative”）不合拍（“dissonance”）时的情况</p><p>但其实大部分玩家对于这种漏洞或冲突是很包容的（或是不在乎）。</p><p>所以对于游戏叙事而言，这本书中更偏爱所谓的功能性世界构建：故事是用于解决游戏中的问题和消除不连贯性的。</p><ul><li>设计问题：玩家“穿越重复的走廊和射击广场” vs. “套利外星人入侵后的巨大地下军事综合体”</li><li>技术问题：怪物“因为寻路 AI 坏了所以无法在水中游弋” vs. “怕水”</li></ul><h4 id="Minimal-worldbuilding"><a href="#Minimal-worldbuilding" class="headerlink" title="Minimal worldbuilding"></a>Minimal worldbuilding</h4><p>从最重要，不可缺少的部分开始构建，以建立关卡设定以及支撑体验目标。</p><p>建立最基本的关卡需要回答的问题：</p><ul><li>Past<ul><li>谁创造了这个地方（为什么？玩家如何知道）</li></ul></li><li>Present<ul><li>现在谁在这里活动（为什么？玩家怎么知道）</li></ul></li><li>Future<ul><li>玩家将以什么方式影响这个地方（为什么？玩家怎么知道过去发生了什么？这里的居民会作何反应）</li></ul></li></ul><p>以下是一个动作游戏关卡的最简故事：</p><ol><li>谁创造了这个地方——一个人类家庭建造了一个小木屋<ul><li>玩家怎么知道的<ul><li>看起来就是一个以人类居住习惯建造而成的小木屋，并且里面有人类家具和多张床</li></ul></li></ul></li><li>现在谁住这里——一些吃掉了人的怪兽<ul><li>玩家怎么知道<ul><li>里面有怪物，有上了年头的尸骨，没有活人</li></ul></li></ul></li><li>玩家如何影响这个地方——玩家可以杀死怪物<ul><li>玩家怎么知道<ul><li>怪物是敌对势力，会在其可见范围内攻击玩家</li></ul></li></ul></li></ol><p>即使是这样的简短故事在未来也拥有巨大的叙事潜力。什么类型的木屋？多大的家庭？为什么他们挑了这个地方定居？为什么怪物攻击人类？有没有不杀掉怪物来解决这个问题的办法？“家庭 vs. 怪物”的主题如何在关卡的其余部分或是游戏其他部分来引起共鸣？</p><hr><h3 id="Comprehensive-worldbuilding"><a href="#Comprehensive-worldbuilding" class="headerlink" title="Comprehensive worldbuilding"></a>Comprehensive worldbuilding</h3><p>对于一个大型/长期项目而言，世界观的构建就显得重要许多。世界观圣经通常由三种世界设计文档构成：地图（maps），时间线（timelines），笔记（notes）。</p><p>可以从<a href="https://book.leveldesignbook.com/appendix/tools">工具列表</a>中寻找用于维护设计文档的工具，如个人 wiki 或是笔记库。</p><h4 id="Maps"><a href="#Maps" class="headerlink" title="Maps"></a>Maps</h4><p>绘制一个不仅仅只是有可游玩区域的游戏世界地图。关卡与这个更广阔世界或宇宙的关系是什么？地图制作在虚构小说写作中非常常见，对于关卡设计师而言，地图也是最直观有效的世界构建工具。</p><p>最简单的让玩家参与的方式就是合理性。如果你刚开始学世界构建，试着从熟悉的，类似地球的东西开始入手。</p><h5 id="Terrain-climate-map"><a href="#Terrain-climate-map" class="headerlink" title="Terrain/ climate map"></a>Terrain/ climate map</h5><p>先绘制地形/气候图。为了构建像地球一样的合理性，从一些基本的地球科学原则开始：</p><ol><li>绘制大洲。模拟<a href="https://en.wikipedia.org/wiki/Continental_drift">大陆漂移</a> 并确保它们能拼在一起。</li><li>画出风和维度。<a href="https://en.wikipedia.org/wiki/Prevailing_winds">盛行风</a>随维度变化，并与陆地相互作用。</li><li>画出山和海。<a href="https://en.wikipedia.org/wiki/Mountain_formation">山脉</a>沿着断层线或是火山形成。<a href="https://en.wikipedia.org/wiki/River">河流</a>一般从山顶或湖泊流向大海。</li><li>标记气候。赤道更热，两极更冷。山脉可以阻挡/困住降雨。气候潮湿，还是刮风？下雨？暴风雨？</li></ol><p>更多有关设计地形/生物群落的信息，看<a href="https://book.leveldesignbook.com/process/blockout/massing/landscape">这里</a>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501233837.png" alt="example worldbuilding climate map, from &quot;Growing Your Iceberg&quot; by N. K. Jemisin (https://nkjemisin.com/2015/08/worldbuilding-101/)"></p><p>一旦有了世界的坚实基础，就可以通过夸大/极端化某些方面让其变得独特/奇幻。</p><p>在上面的示例地图中，作者 N.K. 杰米辛创造了一个世界，两个大陆略高于赤道。 随后杰米辛将目光聚焦在了两大洲之间的一段高能量赤道海域，并将其放大为一条名为“眼泪之海”的“地狱走廊”，沿岸生长着珍贵的“怒木”树。 虽然一个不断遭受海啸困扰的地区生长着魔法树木本身是不可信的，但当这样的设定融入一个更平凡的世界时，它会感觉更加合理和特别。</p><h5 id="Political-maps"><a href="#Political-maps" class="headerlink" title="Political  maps"></a>Political  maps</h5><p>在构建完自然景观之后，就可以开始构建人文景观了。人们住在哪里，为什么住在那里？对于人们来说什么是重要的东西？</p><p>在设计社会时，作者 N. K. Jemisin 强烈推荐学习一些基本的<a href="https://en.wikipedia.org/wiki/Sociology">社会学知识</a>并进行研究——并避免依赖对现有现实世界中的文化的隐晦刻板印象。</p><p>现实世界中存在的一些政治冲突和紧张氛围可能也会成为让你的世界更有趣的原因：边界争夺，区域命名，政治归属。</p><ul><li>定义地图制作者，他们是谁，制作地图的动机是什么？他们与所绘制地区的关系是什么？</li><li>对于同一个地区从不同角度绘制多种地图。同一地区 100 年前什么样，500 年前什么样？不同特征或背景的人在绘制同一地区时会不会有所不同，或是用他们单独的名字？世界中的模糊和冲突点是什么？一张“错误”的地图可能比起一张精确的地图更加有趣。</li><li>绘制没有边界和地标的非几何地图。一个城市的“社会地图”会是什么样呢？经济地图？情绪地图？</li><li>将一些区域留白。世界上的每个角落并不是在一开始都与每个人都相关的，没有神秘感，就不能驱使玩家探索和冒险。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501235206.png" alt="uncertainty is natural; a not-very-helpful in-game player map for mission &quot;The Sword&quot; in Thief: The Dark Project (1998)"></p><h4 id="Timelines"><a href="#Timelines" class="headerlink" title="Timelines"></a>Timelines</h4><p>构建游戏世界的历史时间线，并辅以简短标记。</p><p>这个地区或地方的历史是什么？人们发生了怎样的变化？历史和地理一样，也有浓厚政治色彩，会根据编写历史的人的立场和视角而改变。构建历史时，必须考虑历史学家及其背景，他们写给谁看，最重要的是，他们夸大了什么，隐瞒了什么？</p><p>目标并不是构建权威的史实，思考一下每一段历史所隐含的宏大主题或想法是什么。</p><p>（来自 Heaven’s Vault? 的时间线例子）</p><ul><li>定义历史学家。他们是从何时何地开始写作的？他们的时间和地点将如何影响他们的感知、记忆或所涉及的内容？</li><li>设计多个重叠的时间线。最好具有特定的相似性和矛盾性。</li><li>在每个时间轴上留下被遗忘的漏洞。想想历史学家忘记了什么或他们记错了什么。您在游戏中的部分体验可能涉及改写历史、填补这些空白，或找出没人知道的历史新漏洞。</li></ul><h4 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h4><p>关卡设计师可能偏爱可视化文档，但叙事设计师可能更依赖于以指引卡，私人 wiki 或其他组织过的文字性笔记，可能包括：</p><ul><li>人物传记、日常生活、家史</li><li>位置描述、旅游指南、地质或生态调查</li><li>文化入门、宗教经典、地方历史</li><li>世界内的书籍、小册子、演讲</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000050.png" alt="worldbuilding docs / concept art for Half-Life 2 (2004) / Episode 3; short story by Marc Laidlaw, concept art by Andrea Wicklund"></p><hr><h3 id="Examples-of-worldbuilding"><a href="#Examples-of-worldbuilding" class="headerlink" title="Examples of worldbuilding"></a>Examples of worldbuilding</h3><h4 id="The-Witness-2016"><a href="#The-Witness-2016" class="headerlink" title="The Witness (2016)"></a>The Witness (2016)</h4><p>Thekla Studio 花费六百万美刀，七年时间来构建了这个第一人称解密探险游戏的世界。</p><p><a href="https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments">Fletcher 继续接手了这个世界的重新设计</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000423.png" alt="screenshot of the middle island area from the final released version of The Witness (2016) by Thekla Studios"></p><p>后面还有几段详细的设计过程没有写在本文中，引述自<a href="https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments">“The Witness: Designing Video Game Environments” by Fletcher Studio, 26 May 2017</a>。有需要可以到原文中查看。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000656.png" alt="aerial ecological collage study conducted by architecture firm Fletcher Studio in 2011 for The Witness (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000715.png" alt="geological collage study conducted by Fletcher Studio in 2011 for The Witness (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000737.png" alt="timeline of the three fictional civilization that inhabited the island in The Witness, worldbuilding by Fletcher Studio (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><hr><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><ul><li>世界构建是关于构建整个游戏世界的历史以及概念设计的过程<ul><li>游戏中的世界构建既可能是面向开发者的（设计文档），也可能是面向玩家的（故事）</li><li>对于动作游戏的关卡设计，不要太早地做太多有关世界设计的工作。更改世界观来契合关卡要容易得多</li></ul></li><li>最小世界构建：谁建造了这个地方，谁现在住在这里，玩家在这里能干什么？对于大多数关卡，简单的答案足矣</li><li>详尽世界构建：构建地图，时间线，笔记。只有当项目足够大或是以团队方式推进的时候才需要这么做</li></ul><hr><h3 id="Further-reading-sources"><a href="#Further-reading-sources" class="headerlink" title="Further reading/ sources"></a>Further reading/ sources</h3><ul><li><p>  <a href="https://nkjemisin.com/2015/08/worldbuilding-101/"><strong><em>“Worldbuilding 101: Growing Your Iceberg”</em></strong></a> by <a href="https://nkjemisin.com/about/">N.K. Jemisin</a>, for Writer’s Digest Online Workshop 2015 is our recommended general introduction to worldbuilding. Much of the material on this page is paraphrased from Jemisin’s excellent talk.</p></li><li><p>  <a href="https://researchportal.port.ac.uk/portal/en/theses/story-as-a-function-of-gameplay-in-first-person-shooters-and-an-analysis-of-fps-diegetic-content-19982007(ae0dcf2e-43a0-4549-973f-340c88ba4815).html"><strong><em>“Story as a function of gameplay in First Person Shooters and an analysis of FPS diegetic content 1998-2007”</em></strong></a> by Dan Pinchbeck. Useful overview of academic theories applied to action game design, with focus on Gibson’s affordance, suzjet / fabula, Barthes’ functions and indices, the academic basis of this book’s stance on functional worldbuilding.</p></li><li><p>  <a href="http://twitch.tv/handeyesociety"><strong><em>“Collaborative Critical World-building in 30 Minutes or Less”</em></strong></a> by <a href="https://kaelan.online/">Kaelan Doyle Myerscough</a>, for <a href="https://www.handeyesociety.com/event/wordplay2020/">WordPlay 2020</a> explores alternative methods for worldbuilding, especially in groups.</p></li><li><p>  <a href="https://emshort.blog/2018/03/06/books-on-worldbuilding/"><strong><em>“Books on Worldbuilding”</em></strong></a> (2018) by <a href="https://emshort.blog/">Emily Short</a> is a great list of worldbuilding books and resources, along with Short’s insightful commentary on applying the methods to game narrative.</p></li><li><p>  <a href="https://www.game-cities.com/virtual-cities"><strong>“Virtual Cities: An Atlas and Exploration of Video Game Cities”</strong></a> (2020) by urban planner <a href="https://www.game-cities.com/">Konstantinos Dimopoulos</a> is a book that analyzes the urban worldbuilding in 45 different virtual cities, with a mostly Western / European urban focus.</p></li></ul><hr><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>正如文中所提到的一样，这里所涉及的世界构建，特别是详尽世界构建可能绝大部分情况下都用不到？但是在构建关卡过程中如果有与之契合的世界观架构肯定是能够更好地进行设计的。只是这种能够将一个概念“一以贯之”的团队，恐怕屈指可数（希望自己有一天也能效力于这样的团队哈哈）。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220430 - Level Design Book - BOOK 1. PROCESS - Pre-production - Research</title>
      <link href="2022/04/30/20220430-leveldesignbook-pre-production-research/"/>
      <url>2022/04/30/20220430-leveldesignbook-pre-production-research/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production-Research"><a href="#Pre-production-Research" class="headerlink" title="Pre-production-Research"></a>Pre-production-Research</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/research">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何学习、分析、拆解其他的关卡/真实世界的参照</p></blockquote><h3 id="Why-do-research"><a href="#Why-do-research" class="headerlink" title="Why do research?"></a>Why do research?</h3><ul><li>设计并不是孤立存在的，有其历史，有其发展，也必然会有其依托。</li><li>有一群参考可以启发并帮助你开始设计。</li><li>收集参考，拆解细节，学习架构。并且可以自己构建一个由许多参考图像共同构建的“通用模式”（类似归纳总结）。</li></ul><p>原文中也提供了可用于以上过程的 <a href="https://book.leveldesignbook.com/appendix/tools#2d-art-tools">2D 美术工具列表</a>。</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>设计并非凭空想象，想要把人画好，就要大量观察人；想绘制地标，就多看地标。没有调查，就没有设计依凭。（也是<a href="https://www.gcores.com/radios/101694">张兆弓老师所讲过的成长三步</a>中的第一步，观察）</p><p>参考的意义所在：</p><ul><li>为了创新，就要了解现有的东西，然后打破常规</li><li>为了创造奇怪的感觉，就需要先创造常规的东西，而后打破常规（有点像另一篇关卡设计文章中所讲的<a href="https://www.worldofleveldesign.com/categories/game_environments_design/silhouette-environment-design-basics.php">如何创造多样化的剪影环境设计</a>）</li></ul><h3 id="Real-world-reference"><a href="#Real-world-reference" class="headerlink" title="Real world reference"></a>Real world reference</h3><p>如果真实感和位置合理性（sense-of-place）对项目很重要，那么就要在 <a href="https://book.leveldesignbook.com/process/layout">布局</a> or <a href="https://book.leveldesignbook.com/process/blockout">白模搭建</a> 前充分调研。</p><p>真实世界调研的注意事项：</p><ul><li>（当没有发生世界灾难时）亲临现场（哈哈哈哈）</li><li>通过<a href="https://www.google.com/maps/@35.5940327,139.744906,3a,90y,62.41h,87.97t/data=!3m7!1e1!3m5!1sAF1QipOL0pvY1l6N5XUyeMzQhvP_uNACjyE6iGb2AfK5!2e10!3e12!7i10000!8i5000?hl=zh-Hans">谷歌街景</a>来虚拟造访</li><li>对于一些著名建筑或景观，可以试着在政府/建筑归档中找找蓝图或者建造计划，甚至可以在 <a href="https://sketchfab.com/">SketchFab</a> 上找找有没有 3D 扫描的模型。</li></ul><p>接下来便可以开始：</p><ul><li>创造一个永远不会出现在游戏中的原型</li><li>把布局画出来，或是搭建白模关卡，这时关注还原度，先不考虑游戏性。观察参照物本身，而不是你所想象的样子。</li></ul><p>这种类型的二次创作经验其实不仅仅意味着观察，它也会迫使你来回答关于架构本身以及一些你可能从未想过的问题。</p><p>你并不会用这个布局或是白模，他在之后它们可以让你实际的布局或白模变得更好。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430113453.png" alt="recreating an authentic British village in Untitled Goose Game; from &quot;Google Maps, Not Greyboxes: Digital Location Scouting for Untitled Goose Game&quot; for GDC 2021 by Jake Strasser, https://www.youtube.com/watch?v=cCsMz5tUXmc"></p><h3 id="In-game-reference"><a href="#In-game-reference" class="headerlink" title="In-game reference"></a>In-game reference</h3><p>比如说你想建造一个拥有隧道/地下通道的关卡。那调研就会涵盖学习其他具有这些元素的经典关卡。比如经典 CS 地图 de_dust，好消息是<a href="https://www.johnsto.co.uk/design/making-dust/">地图创作者 Dave Johnston 写过他是如何进行设计</a>的：</p><blockquote><p>My past mapping experience was mostly creating tight interiors rather than not vast exteriors, and so I was feeling very lost. Desperate, I shoe-horned a bend in the road leading to a downward slope, and at the end of it - an underground cavern.<br>It didn’t work, of course. While the CT spawn area was light and airy, this giant room was gloomy, boxy and felt dead compared to the sunny exterior I’d already made. Observing it also lacked any gameplay potential, I swiftly deleted it. Dust would be an outdoor map.<br>[…] The shallow decline into the underpass is perhaps one of my favourite aspects, both aesthetically and as a player who spent many hours armed with a Steyr Scout at the crest popping off opponents’ heads.</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430114506.png" alt="underpass in de_dust by Dave Johnston for Counter-Strike 1.6"></p><p>他的话提供了一些思路：避免建造阴暗、像洞穴一样和死气沉沉的东西。把现有的长长的，阳光明媚的缓坡，通向未知环境的内部隧道和一开始的不成熟想法比对一下，你会发现这种<a href="https://book.leveldesignbook.com/process/combat/balance">平衡</a>创造出了一个危险的，具有微妙垂直度以及远处视野的狙击小巷。</p><p>这里的关键不是学习 de_dust 本身，让我们关注一下这个调研过程：</p><ol><li>我想知道更多关于 de_dust 地下通道的内容</li><li>我搜索了 <code>de_dust underpass</code></li><li>我阅读了设计师关于创造这个地下通道的原因和心路历程</li><li>从结果而言，我现在注意到了一些原来我没有关注的内容</li></ol><p>其他学习一个参考设计的方法：</p><ul><li>游玩关卡，自己分析，做笔记或是绘制草图</li><li>搜索网站、粉丝社群、论坛，看看其他人对此有何评论</li><li>在视频网站上搜索 gameplay 视频，看其他人是怎么游玩的</li><li>询问其他人对此设计的想法以及关注点</li></ul><hr><h3 id="Breakdown"><a href="#Breakdown" class="headerlink" title="Breakdown"></a>Breakdown</h3><p>最直接的拆解方式就是用关卡设计器或 3D 查看器进入关卡，飞来飞去，好好研究。</p><blockquote><p>注意：<br>有时候可以解包关卡文件或者下载翻录的地图几何图形，常用网站有 <a href="https://www.models-resource.com/">Models Resource</a> 或者 <a href="noclip.website">noclip.website</a>。只可以出于个人教育目的这么做，也不要重新发布或是用这些作品作为自己的作品。</p></blockquote><p>但大多数情况下，你都没法拿到地图源文件，这时候就需要利用利用照片或是截图来对其进行绘画分解。</p><p>先把截图导入你熟悉的 <a href="https://book.leveldesignbook.com/appendix/tools#2d-art-tools">2D 美术工具</a>中，把主要的线条，图形，和物体高亮。用相同的颜色来标记重复出现的部分，注意分层堆叠（tiered stacks）和对称。</p><p>比如下面的布鲁克林大桥的绘画分解，上半部分有两个尖尖的哥特式拱门，每个垂直部分都沿着高度进行了严格的切分（with strong trim segmenting each vertical division along its height）；结构的其余部分是一些四四方方的米色砖块。并且具有明显的左右对称，这意味着可以先绘图分解其中一侧，然后复制粘贴另一侧来节省时间。对于现实世界参考，还可以看设计图来更好理解形状和比例。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430120808.png" alt="example paintover breakdown of a Brooklyn Bridge tower, with color blocks highlighting symmetry and repetition"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430120830.png" alt="example concept art breakdown by Lea Kronenberger; concept art by Chong Fei Giap, via Beyond Extent, https://www.beyondextent.com/articles/balancing-modularity-and-uniqueness-in-environment-art"></p><h3 id="Moodboard"><a href="#Moodboard" class="headerlink" title="Moodboard"></a>Moodboard</h3><p>深度拆解某一个不是那么有用，或是拥有大量参考时，更适合的一种方式是把它们放到一起来作为一个情绪板（moodboard）。情绪板由许多拥有相似物体，体验，或感受的不同参考和图片组成。图片，电影截图，游戏截图，示意图，概念美术，任何形式的媒体都可以放进去。当对他们整体进行学习时，你会发现他们的通用模式或是趋势。</p><p>情绪版可以帮助我们确定原本模糊的体验目标。如果想制作一个令人恐惧的关卡，那么，“恐惧”意味着什么？意思是令人不安的恐惧，还是某些地方“不对劲”？还是指怪诞的僵尸？那么是什么样的僵尸呢，缓慢的蹒跚僵尸，还是那种精神错乱乱跑的？</p><p>收集参考资料来比较分析时，更容易产生有利于实现体验目标的更加具体的想法。情绪版也可以帮助你向具有不同想法的其他团队成员来解释你的想法。</p><p>![example moodboard (screenshots from Hitman), blockout, and art pass for an “Italian Villa” project <a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430121621.png">by Stavaas, via Polycount, https://polycount.com/discussion/171905/ue4-italian-villa-environment</a></p><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><p>调研能够帮助你规划和构建关卡</p><ul><li>为了调研，先搜集一堆参考材料<ul><li>为了更好地研究参照物，对其进行仔细研究——小型的二次创作/依葫芦画瓢，关注于还原度，并仔细观察</li></ul></li><li>对于某个具体的参照物进行细节拆分，视觉剖析<ul><li>绘图拆解参考图像，添加标签和笔记</li></ul></li><li>在 moodboard 中寻找多个参考间的共性</li></ul><hr><h3 id="Now-what"><a href="#Now-what" class="headerlink" title="Now what?"></a>Now what?</h3><ul><li>  Use research to inform the <a href="https://book.leveldesignbook.com/process/layout"><strong>layout</strong></a> and <a href="https://book.leveldesignbook.com/process/blockout"><strong>blockout</strong></a>.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220429 - Level Design Book - BOOK 1. PROCESS - Pre-production - Pacing</title>
      <link href="2022/04/29/20220429-leveldesignbook-pre-production-pacing/"/>
      <url>2022/04/29/20220429-leveldesignbook-pre-production-pacing/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production-Pacing"><a href="#Pre-production-Pacing" class="headerlink" title="Pre-production-Pacing"></a>Pre-production-Pacing</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/pacing">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>在一个关卡中为玩家规划多种供其体验的活动和事件</p></blockquote><h3 id="What-is-pacing"><a href="#What-is-pacing" class="headerlink" title="What is pacing?"></a>What is pacing?</h3><p>Pacing 是一个关卡中通常所说的活动和时间的顺序和节奏。</p><p>单人游戏关卡倾向于设计更强烈的 pacing。如果玩家在关卡中对于发生了什么感到迷惑，或是不知道他们该干什么，那么这可能意味着该关卡的 pacing 有问题。</p><p>一个有效的 pacing 计划应该强调下满这些方面：</p><ul><li>Scope：在每个关卡中玩家能做什么</li><li>Hierarchy：关卡的哪一部分是最重要的</li><li>Causality：为什么先做这个后做这个（活动）</li><li>Information：何时告诉玩家什么内容</li><li>Intensity：玩家该在什么时候投入更多精力，而在什么时候休息和恢复</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429193812.png" alt="用于 Journey （2012）的好看的 pacing/叙事表，取自 GDC 2013 &quot;Designing Journey&quot; 演讲"></p><h3 id="Beats-and-variation"><a href="#Beats-and-variation" class="headerlink" title="Beats and variation"></a>Beats and variation</h3><p>在你的关卡中会发生些什么？体验是由哪些丰富的时刻和地点来定义的？</p><p>Beat 是一个关卡中自成一体的一小部分。一个单独的区域，事件，活动，或是元素。</p><p>可以把这些 beats 比作一首音乐中的节拍。当这些节拍被一起演奏时就汇聚成了音符和旋律。它们可以被单独辨明理解，但也可以作为整体的一部分。为了让节拍更加有趣，音乐作曲家们用不同的方法来排列节拍来创造变奏：</p><ul><li>pulse：为节拍创建规律的模式，就像心跳一样。参见<a href="https://zh.wikipedia.org/wiki/%E8%8A%82%E6%8B%8D">音乐中的节拍</a>。<ul><li>如每一关都会有一个单独的出口</li></ul></li><li>accent/ stress：强调或加强某些节拍。<ul><li>比如有些时候难以找到/到达的出口</li></ul></li><li>rest：加入一些较弱的节拍或是沉默，可以使听众对于节拍再次敏感起来。<ul><li>如有时出口很容易可以找到/到达</li></ul></li><li>motif：一个短暂的重复街拍序列。<ul><li>如有时玩家在到达出口前会与 BOSS 作战</li></ul></li><li>variation：以不同的旋律、节奏来重复一系列的节拍。<ul><li>如某些关卡有多个出口</li></ul></li><li>syncopation：离谱（go off-beat）节拍，也是现代流行音乐的基础。<ul><li>如 BOSS 战进行到一半时，另一个 BOSS 出现了</li><li>或者是一个其后隐藏了怪物的假的出口</li><li>有时 BOSS 会摧毁出口，从而无处可逃了</li><li>玩家获得了创造出口的能力</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429195236.png" alt="强调音乐理论中的不同节拍（metric、rhythmic、syncopation、anticipation）来自 Jack Perricone 的“Melody in Songwriting”"></p><h3 id="Set-pieces"><a href="#Set-pieces" class="headerlink" title="Set pieces"></a>Set pieces</h3><p>布景（set piece）是一种具有独特概念或是令人难忘的活动的特别制作的节拍。</p><p>该做法通常来自电影制作，具有高预算的电影项目通常会会制作具有特殊布景和复杂计划的昂贵场景——观众会记住的刺激场面。<br>比如，好莱坞动作大片本质上就是一系列布景——精心制作的大型战斗，追逐，或反抗死亡的特技（death defying stunts）。电影中的其余部分主要是以一种半连贯的方式来将这些布景连接起来，并在紧张的布景间让观众们“得以喘息”。大型的动作游戏的思路其实也差不多。<br>但是布景并不一定意味着大型的劲爆动作片段。喜剧的一大特点就是令人尴尬的场景，浪漫故事可能会重点强调第一次约会或是婚礼，戏剧可能更倾向于催人泪下的忏悔或是背板，而谋杀之谜会以侦探对于真相的讲述而告终。<br>游戏或电影中任何感觉到重要、令人难忘或是昂贵的场景，都可能是一个布景。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429200316.png" alt="still from the memorable Lobby shootout set piece from the action film The Matrix (1999)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429200340.png" alt="still from the memorable dance scene set piece from the film Pulp Fiction (1994)"></p><p>游戏中的布景通常有以下特点：</p><ul><li>昂贵。这些布景通常需要许多特制的美术及动画资源，并且经过了大量迭代。无法轻易地重制或是用于它途，所以它们的生产本就有风险。</li><li>不可跳过。这些布景和项目的核心 pillars 和体验目标紧密相连。如果存在玩家有可能因为错过了它们而反过来怪游戏制作不好的风险，为什么还费心制作呢？</li><li>脚本意味很重，并且一定程度上是线性的，以确保可靠的体验。<ul><li>如果一个布景可以以三种不同的方式被游玩/播放，它就相当于三个布景，就有三倍的制作成本。</li></ul></li></ul><hr><p>这样貌似速度太慢了，也不利于学习，后面的会转为笔记的形式。</p><p>布景的关卡设计通常包括</p><ul><li>BOSS 战，大型谜题，或是大型编排——包含大量<a href="https://book.leveldesignbook.com/process/scripting">关卡脚本</a>的东西。</li><li>竞技场战斗，玩家在完成被困在一个大房间中，直到完成挑战</li><li><a href="https://book.leveldesignbook.com/process/env-art#hero-props-landmarks">地标性建筑</a></li></ul><p>一个项目中应该至少包含一个布景。</p><p>不要人心不足蛇吞象，再好的布景想法做不出来也是白搭。</p><h3 id="“Pile-of-beats”-approach"><a href="#“Pile-of-beats”-approach" class="headerlink" title="“Pile of beats” approach"></a>“Pile of beats” approach</h3><p>可用于基于战斗或是解密游戏的布景设计流程：</p><ol><li>构思，布局，白模搭建一个独立的战斗/谜题</li><li>对白模进行测试迭代，直到玩法被验证或被证实不可行</li><li>重复上述两步骤直到有足够原型（数十个）</li><li>基于需要来安排这些原型来构建节拍</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429205736.png" alt="screenshot of test chamber sign in Portal 1, with icons showing the different elements present in this puzzle"></p><h3 id="Teach-test-twist"><a href="#Teach-test-twist" class="headerlink" title="Teach, test, twist"></a>Teach, test, twist</h3><ul><li>Teach：教会玩家怎么玩</li><li>Test：稍微提升难度后，看看玩家到底会玩没有</li><li>Twist：可以开始魔改了</li></ul><p>“teach” and “test” beats in Test Chamber 10 of Portal 1, walkthrough let’s play video：</p><iframe width="805" height="453" src="https://www.youtube.com/embed/ZFwxnKY7CUo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="Critical-path"><a href="#Critical-path" class="headerlink" title="Critical path"></a>Critical path</h3><p>关键路径的几种形式：</p><ul><li>对于遭遇战，关键路径可能是击败敌人的理想策略</li><li>对于谜题，关键路径是可能最让人满意的解题思路</li><li>对于移动/跑酷游戏，关键路径是完成关卡的理想路线，更多内容参见<a href="https://book.leveldesignbook.com/process/layout/flow">Flow</a></li></ul><h3 id="Plotting-and-documentation"><a href="#Plotting-and-documentation" class="headerlink" title="Plotting and documentation"></a>Plotting and documentation</h3><p>Beats 不同的组织/可视化方式:</p><ul><li>Beat sheet<ul><li>文字形式的列表</li></ul></li><li>Flowchart<ul><li>可以展示 beats 之间关系</li></ul></li><li>intensity plot<ul><li>配有时间线和玩家行为的柱状图</li></ul></li></ul><h4 id="Beat-sheet"><a href="#Beat-sheet" class="headerlink" title="Beat sheet"></a>Beat sheet</h4><ul><li>一些可用于团队合作的在线黑板<ul><li><a href="https://trello.com/">Trello</a>, <a href="https://www.notion.so/">Notion</a>, <a href="https://miro.com/">Miro</a>, <a href="https://www.codecks.io/">Codecks</a></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429210719.png" alt="internal pinboard for planning The Last Of Us (2013) by Naughty Dog from V&amp;A Videogames (2018)"></p><p>其实感觉像是 user journey？</p><h4 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h4><ul><li>在线 flowchart 工具<ul><li><a href="https://miro.com/">Miro</a></li></ul></li></ul><p>一些制作原则：</p><ul><li>保持简洁<ul><li>少词</li><li>省略不重要的节拍</li></ul></li><li>尽可能让其往一个方向“流”</li><li>根据 beat 类型对其进行区别着色</li><li>把大的流程图划分为多个小流程图</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211028.png" alt="flowchart design documentation for a stealth boss encounter in Dishonored, by Dana Nightingale"></p><h4 id="Graph"><a href="#Graph" class="headerlink" title="Graph"></a>Graph</h4><p>为了在《半条命 2》和《Left 4 Dead》中调整关卡节奏，Valve 设计师将节拍分为四类：</p><ul><li>探索、四处走动和导航空间。 通常是一个关卡的开始和结束。</li><li>战斗，与敌人战斗。</li><li>Choreo，一些对话或编排的脚本序列。 通常安排在在战斗之前或之后。</li><li>解密，找到物品藏匿处，打开一扇门。 用于分隔战斗序列。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211405.png" alt="intensity graph for White Forest Inn encounter in Half-Life 2: Episode Two, GDC China 2014"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211519.png" alt="internal spreadsheet for Journey (2012) by thatgamecompany, from V&amp;A Videogames (2018)... note multiple rows for different experience goals, and the intensity bars at the top"></p><h3 id="Pacing-advice"><a href="#Pacing-advice" class="headerlink" title="Pacing advice"></a>Pacing advice</h3><ul><li>开始时舒缓而静谧</li><li>高低有致（松弛有度）</li><li>避免让最终 BOSS 或遭遇战成为强度最大的部分<ul><li>这里原文引了传统叙事理论中的 <a href="https://en.wikipedia.org/wiki/Three-act_structure">Three-Act Structure</a>, <a href="https://en.wikipedia.org/wiki/Dramatic_structur">Gustav Freytag’s Five-Act Structure</a>, and <a href="https://en.wikipedia.org/wiki/Poetics_(Aristotle)">Aristotle’s Poetics</a>。</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429212124.png" alt="diagram of a typical five act plot structure by StoryboardThat... the vertical axis is better understood as &quot;suspense&quot; rather than &quot;intensity&quot;"></p><p>经典叙事理论当然有用，但也不要被其限制，有时候这样的手法会让人感觉过于老套。</p><h3 id="Multiplayer-pacing"><a href="#Multiplayer-pacing" class="headerlink" title="Multiplayer pacing"></a>Multiplayer pacing</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429212519.png" alt="much of the pacing in multiplayer maps like League of Legends (left) or de_dust2 (right) depends heavily on travel time, layout, and flow"></p><p>竞技游戏中尤其要考虑平衡性问题，如双方到达相同地点的时间。如 CS 中需要让双方几乎在相同的时间到达阻塞点，详见<a href="https://zhuanlan.zhihu.com/p/24324182">这篇文章</a>。</p><h3 id="Open-world-nonlinear-pacing"><a href="#Open-world-nonlinear-pacing" class="headerlink" title="Open world / nonlinear pacing"></a>Open world / nonlinear pacing</h3><p>开放世界中的节奏需要通过关卡布局以及<a href="https://book.leveldesignbook.com/process/blockout/metrics">Metrics</a> 来把控。</p><p>随着与目标的距离越来越近，通常会有更多的阻碍物出现。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429213122.png" alt="open world mission diagram with safe observation area in green and high security objective area in red, for Assassin&#39;s Creed, by Phillippe Bergeron for GDC 2016: &quot;Level Design Workshop: 360 Approach for Open World Mission Design&quot;"></p><h3 id="Against-pacing"><a href="#Against-pacing" class="headerlink" title="Against pacing"></a>Against pacing</h3><p>规划 pacing 当然有用，但只限于早期。随着项目推进，要更关注于做出来的东西本身。</p><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><p>Pacing 是关卡中理想的活动/事件顺序或节奏。Beat 代表着一个活动/事件.</p><ul><li>单人游戏关卡通常有清晰地关键路径和大的布景。</li><li>对于带有战斗和解密系统的“遭遇式”游戏，先创建一堆 beats 再来组合的方法通常不错。记得 teach-test-twist。</li><li>多人游戏的 pacing 更多由关卡布局调控而不是由预制事件调控。</li><li>开放世界/非线性游戏的 pacing 需要更宽松的“区域”方法。越靠近核心区域，强度越高。</li></ul><p>Pacing 的设计文档可能包括：</p><ul><li>Beat sheet<ul><li>书面性的大纲，pacing 列表</li></ul></li><li>Flowchart<ul><li>带有箭头和逻辑标识的可视化大纲</li></ul></li><li>Graph<ul><li>根据玩家指标（如 intensity）绘制图形</li></ul></li></ul><p>这些文档在开发时通常会过时，按需更新或舍弃。</p><h3 id="Further-reading-on-pacing"><a href="#Further-reading-on-pacing" class="headerlink" title="Further reading on pacing"></a>Further reading on pacing</h3><ul><li>A lot of industry theory about pacing / plotting comes from film and TV screenwriting, where <a href="https://en.wikipedia.org/wiki/Robert_McKee">Robert McKee</a>‘s influential book <em>Story: Substance, Structure, Style and the Principles of Screenwriting</em> (1997) looms large. Critics argue that McKee’s methods result in stale formulaic storytelling, but for better or worse, it’s hard to deny his influence.</li><li>  The narrative design field has spent much more time thinking about pacing than level designers. Anytime an author talks about “plot”, they’re talking about pacing, and you can relate their insights to level design.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Level Design Book 随译/笔记</title>
      <link href="2022/04/29/20220428-leveldesignbook-toc/"/>
      <url>2022/04/29/20220428-leveldesignbook-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="Level-Design-Book-随译-笔记"><a href="#Level-Design-Book-随译-笔记" class="headerlink" title="Level Design Book 随译/笔记"></a>Level Design Book 随译/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>最近在学习关卡设计有关知识，对《Level Design Book》中相关章节进行随译/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.leveldesignbook.com/">官网</a>：</p><blockquote><p><strong>The Level Design Book</strong> gathers level design knowledge for 3D video games in an approachable, up-to-date, and critical way. It is for level designers of all experience levels and game engines.</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="BOOK-1-PROCESS"><a href="#BOOK-1-PROCESS" class="headerlink" title="BOOK 1. PROCESS"></a>BOOK 1. PROCESS</h3><h4 id="Pre-production"><a href="#Pre-production" class="headerlink" title="Pre-production"></a>Pre-production</h4><ol><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-pre-production/">20220428 - Level Design Book - BOOK 1. PROCESS - Pre-production</a></li><li><a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/">20220429 - Level Design Book - BOOK 1. PROCESS - Pre-production - Pacing</a></li><li><a href="https://medill-east.github.io/2022/04/30/20220430-leveldesignbook-pre-production-research/">20220430 - Level Design Book - BOOK 1. PROCESS - Pre-production - Research</a></li><li><a href="https://medill-east.github.io/2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/">20220501 - Level Design Book - BOOK 1. PROCESS - Pre-production - Worldbuilding</a></li><li><a href="https://medill-east.github.io/2022/05/02/20220502-leveldesignbook-pre-production-scope/">20220502 - Level Design Book - BOOK 1. PROCESS - Pre-production - Scope</a></li></ol><h4 id="Combat"><a href="#Combat" class="headerlink" title="Combat"></a>Combat</h4><ol><li><a href="https://medill-east.github.io/2022/05/03/20220503-leveldesignbook-combat/">20220503 - Level Design Book - BOOK 1. PROCESS - Combat</a></li><li><a href="https://medill-east.github.io/2022/05/04/20220504-leveldesignbook-combat-enemydesign/">20220504 - Level Design Book - BOOK 1. PROCESS - Combat - Enemy Design</a></li><li><a href="https://medill-east.github.io/2022/05/05/20220505-leveldesignbook-combat-encounter/">20220505 - Level Design Book - BOOK 1. PROCESS - Combat - Encounter</a></li><li><a href="https://medill-east.github.io/2022/05/06/20220506-leveldesignbook-combat-balance/">20220506 - Level Design Book - BOOK 1. PROCESS - Combat - Balance</a></li></ol><h2 id="暂告段落"><a href="#暂告段落" class="headerlink" title="暂告段落"></a>暂告段落</h2><p>后面有些部分感觉并未写完。毕竟本“书”还处于不断填坑过程中，暂时打算等坑再填填再来继续随译/笔记。</p><p>至目前为止其实看下来更多是一个体系梳理的感觉，但要真正落到生产设计中，感觉还需要更精细化和深入的内容。后面可能会暂时转向关卡设计的另一本书。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>案例汇总</title>
      <link href="2022/04/28/index-showcase/"/>
      <url>2022/04/28/index-showcase/</url>
      
        <content type="html"><![CDATA[<h2 id="Game-Related"><a href="#Game-Related" class="headerlink" title="Game Related"></a>Game Related</h2><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><ul><li><a href="https://medill-east.github.io/2025/08/09/2025-0809-after-finishing-gmtk-game-jam-2025/">Eric the Office Breaker &amp; Slices of Shadow 制作复盘</a></li><li><a href="https://medill-east.github.io/2024/02/25/20240225-simulator-of-the-meaning-of-life/">人生意义模拟器 Demo 展示及制作复盘分析</a></li><li><a href="https://medill-east.github.io/2022/08/29/20220829-earnthenamebackforshadowpuppets-demo-showcase-analysis/">悬灯与玄灯 Demo 展示及制作复盘分析</a></li><li><a href="https://medill-east.github.io/2022/05/29/20220529-yinyangmeseenger-demo-showcase-analysis/">Yin Yang Messenger Game Demo 展示及分析</a></li><li><a href="https://haodongliao.itch.io/my-3d-platformer">Space Jumper Game Demo</a></li><li><a href="https://medill-east.github.io/2021/10/26/for-love-demo-showcase-and-analysis/">For Love Demo 展示及分析</a></li></ul><h3 id="Design-Thinking"><a href="#Design-Thinking" class="headerlink" title="Design/Thinking"></a>Design/Thinking</h3><ul><li>Challenges for Game Designers<ul><li>CHAP2-Challenge1-Path A to B<ul><li><a href="https://medill-east.github.io/2023/08/13/20230813-the-way-of-create-and-destory/">《生克之路》One-Page Design</a></li></ul></li><li>CHAP2-Challenge2-Territorial Acquisition<ul><li><a href="https://medill-east.github.io/2023/09/03/20230903-ten-continents-in-the-sea/">《海内十洲》One-Page Design</a></li></ul></li><li>CHAP2-Challenge3-Exploration<ul><li><a href="https://medill-east.github.io/2023/09/24/20230924-cfgd-chap2-challenge3-exploration/">《灵宅救孩》One-Page Design</a></li></ul></li><li>CHAP2-Challenge4-Collection<ul><li><a href="https://medill-east.github.io/2023/10/08/20231008-cfgd-chap2-challenge4-collection">以 Collection 为核心的机制拆解</a></li></ul></li><li>CHAP3-Challenge1-Bomb<ul><li><a href="https://medill-east.github.io/2023/11/05/20231105-cfgd-chap3-challenge1-bomb">对游戏中“禁锢”机制的解构及为百战天龙构思的炸弹谜题</a></li></ul></li><li>CHAP3-Challenge2-Maze<ul><li><a href="https://medill-east.github.io/2023/11/26/20231126-cfgd-chap3-challenge2-maze">《卦象迷宫》One-Page Design</a></li></ul></li><li>CHAP3-Challenge3-Password<ul><li><a href="https://medill-east.github.io/2024/01/07/20240107-cfgd-chap3-challenge3-password">密码谜题</a></li></ul></li><li>CHAP3-Challenge4-Electricity<ul><li><a href="https://medill-east.github.io/2024/01/21/20240121-cfgd-chap3-challenge4-electricity">《Pull the Trigger》 One-Page Design</a></li></ul></li></ul></li></ul><h3 id="Document"><a href="#Document" class="headerlink" title="Document"></a>Document</h3><ul><li><a href="https://medill-east.github.io/2021/07/26/shen-jiang-san-guo-first-recharge-plan/">神将三国首充策划案</a></li></ul><h3 id="Experience-Report"><a href="#Experience-Report" class="headerlink" title="Experience Report"></a>Experience Report</h3><ul><li><a href="https://medill-east.github.io/2021/07/26/shen-jiang-san-guo-game-experience-report/">神将三国游戏体验报告</a></li></ul><h2 id="PKM-Related"><a href="#PKM-Related" class="headerlink" title="PKM Related"></a>PKM Related</h2><h3 id="Zettelkasten"><a href="#Zettelkasten" class="headerlink" title="Zettelkasten"></a>Zettelkasten</h3><ul><li><a href="https://medill-east.github.io/2023/11/05/20231105-pkm-my-workflow">PKM 在 Obsidian 上的卡片盒笔记法实践</a></li></ul><h3 id="Obsidian-Plugin"><a href="#Obsidian-Plugin" class="headerlink" title="Obsidian - Plugin"></a>Obsidian - Plugin</h3><ul><li><a href="https://medill-east.github.io/2023/08/26/20230826-obsidian-content-linker-plugin-development-review">Obsidian Content Linker 插件开发回顾</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏拆解/分析/设计反思汇总</title>
      <link href="2022/04/28/index-gameanalysis/"/>
      <url>2022/04/28/index-gameanalysis/</url>
      
        <content type="html"><![CDATA[<h2 id="拆解分析"><a href="#拆解分析" class="headerlink" title="拆解分析"></a>拆解分析</h2><ul><li>Avatar: The Game<ul><li><a href="https://medill-east.github.io/2022/08/14/20220813-teardown-analysis-avatar-the-game/">Avatar: The Game 拆解分析</a></li></ul></li><li>暗黑破坏神 3<ul><li><a href="https://medill-east.github.io/2022/03/06/teardown-analysis-diabolo/">暗黑破坏神 3 拆解分析</a></li></ul></li><li>枪火重生<ul><li><a href="https://medill-east.github.io/2021/12/12/teardown-analysis-gunfire-reborn/">枪火重生 Teardown Analysis</a></li></ul></li></ul><h2 id="目标体验及设计反思"><a href="#目标体验及设计反思" class="headerlink" title="目标体验及设计反思"></a>目标体验及设计反思</h2><ul><li>艾尔登法环<ul><li><a href="https://medill-east.github.io/2022/07/30/20220730-why-i-think-elden-ring-is-attractive/">为什么《艾尔登法环》如此吸引我？</a></li><li><a href="https://medill-east.github.io/2023/06/18/20230618-why-does-elden-ring-offer-me-the-best-offline-gaming-experience/">为什么艾尔登法环给予了我目前为止最好的非联机游戏体验</a></li></ul></li><li>Florence<ul><li><a href="https://medill-east.github.io/2021/11/16/thinking-of-the-florence/">Florence 目标体验及设计反思</a></li></ul></li><li>Clash Heros<ul><li><a href="https://medill-east.github.io/2021/11/06/thinking-of-the-clash-heroes/">Clash Heroes 目标体验思考及设计反思</a></li></ul></li><li>英雄联盟与王者荣耀<ul><li><a href="https://medill-east.github.io/2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/">英雄联盟与王者荣耀玩家分段分析</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随想汇总</title>
      <link href="2022/04/28/index-thinking/"/>
      <url>2022/04/28/index-thinking/</url>
      
        <content type="html"><![CDATA[<h2 id="Game"><a href="#Game" class="headerlink" title="Game"></a>Game</h2><ul><li><a href="https://medill-east.github.io/2024/03/01/20240301-thinking-on-game-replayability/">为什么玩游戏时“根本停不下来” - 从可重玩性出发的思考</a></li><li><a href="https://medill-east.github.io/2024/06/13/20240613-thinking-on-game/">游戏之于我</a></li><li>一路走来困扰我的问题<ul><li><a href="https://medill-east.github.io/2024/07/07/20240707-thinking-on-game-production-workflow/">如何和所有的成员一起从无到有推进功能落地</a></li></ul></li></ul><h3 id="Emotional-Game-Design-System"><a href="#Emotional-Game-Design-System" class="headerlink" title="Emotional Game Design System"></a>Emotional Game Design System</h3><ul><li><a href="https://medill-east.github.io/2024/04/13/20240413-emotional-game-design-system-0-narrative-structure/">情感化游戏设计系统 - 0 - 从叙事结构出发</a></li><li><a href="https://medill-east.github.io/2024/04/14/20240414-emotional-game-design-system-1-create-the-system/">情感化游戏设计系统 - 1 - 构建系统</a></li><li><a href="https://medill-east.github.io/2024/04/28/20240428-emotional-game-design-system-2-intrinsic-feeling-exploration">情感化游戏设计系统 - 2 - 探索感作为感性感受如何被纳入系统中进行分析</a></li><li><a href="https://medill-east.github.io/2024/11/23/20241123-emotional-game-design-system-3-boss-fight-design-structure">情感化游戏设计系统 - 3 - BOSS 战设计框架</a></li></ul><h3 id="玩后感"><a href="#玩后感" class="headerlink" title="玩后感"></a>玩后感</h3><ul><li><a href="https://medill-east.github.io/2025/09/07/2025-0907-after-playing-the-beginner-guide/">The Beginner’s Guide</a></li><li><a href="https://medill-east.github.io/2025/05/11/20250511-after-playing-33-expedition/">33 Expedition &amp; JRPG</a></li></ul><h2 id="PKM"><a href="#PKM" class="headerlink" title="PKM"></a>PKM</h2><ul><li><a href="https://medill-east.github.io/2023/08/26/20230826-how-i-know-and-practice-pkm/">与 PKM 的相识和实践</a></li><li><a href="https://medill-east.github.io/2025/01/05/20250105-use-obsidian-clipper-with-deepseek/">利用 Deepseek 结合 Obsidian Web Clipper 实现快速剪藏及内容总结</a></li><li><a href="https://medill-east.github.io/2025/07/19/20250719-pkm-review-2025">在 2025 审视我的 PKM</a></li></ul><h2 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h2><ul><li>《乌合之众》<ul><li><a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></li></ul></li><li>《人生的意义》<ul><li><a href="https://medill-east.github.io/2022/11/27/20221127-after-reading-the-meaning-of-life/">借助游戏媒介在探寻自己实现的同时助力他人的自己实现</a></li></ul></li></ul><h2 id="观影感"><a href="#观影感" class="headerlink" title="观影感"></a>观影感</h2><ul><li>《瞬息全宇宙》<ul><li><a href="https://medill-east.github.io/2022/05/21/20220521-everything-everywhere-all-at-once/">Meaningful Meaningless</a></li></ul></li><li>《新世纪福音战士》<ul><li><a href="https://medill-east.github.io/2023/10/01/20231001-after-watching-eva/">真切地生活</a></li></ul></li><li>《四月是你的谎言》<ul><li><a href="https://medill-east.github.io/2024/01/31/20240131-after-watching-your-lie-in-april/">向死而生，生之回响</a></li></ul></li><li>《进击的巨人》<ul><li><a href="https://medill-east.github.io/2024/09/22/20240922-after-watching-attack-on-titan/">本就不可能存在</a></li></ul></li></ul><h2 id="随想"><a href="#随想" class="headerlink" title="随想"></a>随想</h2><ul><li><a href="https://medill-east.github.io/2021/11/02/drinking-games/">喝酒游戏列举与思考</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220428 - Level Design Book - BOOK 1. PROCESS - Pre-production</title>
      <link href="2022/04/28/20220428-leveldesignbook-pre-production/"/>
      <url>2022/04/28/20220428-leveldesignbook-pre-production/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production"><a href="#Pre-production" class="headerlink" title="Pre-production"></a>Pre-production</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何用机制（mechanics），体验目标（experience goals）和支柱（pillars）来规划游戏关卡</p></blockquote><h3 id="What-is-pre-production"><a href="#What-is-pre-production" class="headerlink" title="What is pre-production?"></a>What is pre-production?</h3><blockquote><p>计划（plans）不那么重要，但是规划这件事本身（planning）很关键。——某个人</p></blockquote><p><strong>预生产</strong>是项目的早期阶段，在这一阶段你产生想法，并且试图来弄清这个项目到底是干嘛的。这一阶段需要回答一些宏观的设计问题：</p><ul><li>你在做的是什么<ul><li>玩家们能在这里干什么（机制，体验目标，节奏（pacing））</li><li>哪一部分是最重要的（支柱）</li></ul></li><li>你要如何来进行制作<ul><li>面对同一问题时，别人是怎么解决的（research，调研）</li><li>你需要多少时间，这可行吗？（scope，周期）</li></ul></li></ul><p>你对于这些问题的答案在项目推进过程中会发生改变，这没问题。</p><p>规划是有用的，但它并不神奇。直到你真的开始动手制作之前，你不会完全理解你所做的东西。</p><hr><h3 id="Project-planning"><a href="#Project-planning" class="headerlink" title="Project planning"></a>Project planning</h3><p>“规划一个关卡”具有多种形式。一些人在真正落实到某一个概念前先制作并测试小型的原型，你也可以先写下设计目标以及限制。</p><p>为了能实现团队合作的目标，你必须制定计划以及确保不同计划之间有充分的交流，否则你会对其他人失望，项目最终会以失败告终。</p><p>但对于一个小型的、单人的、爱好性质的项目，规划没有那么重要。制定一个简单的计划，然后享受整个即兴创作和发现过程中的兴奋与刺激吧。</p><h4 id="Minimal-Checklist"><a href="#Minimal-Checklist" class="headerlink" title="Minimal Checklist"></a>Minimal Checklist</h4><p>如果你能够回答以下几个基本问题，就足以开始一个小型的单人 jam 项目了：</p><ul><li><input disabled="" type="checkbox"> 电梯演讲<ul><li>在三句话之内，描述项目概念以及什么让这个项目变得有趣</li></ul></li><li><input disabled="" type="checkbox"> 工具<ul><li>你使用什么引擎或工具？</li><li>它们适合于这个项目吗？</li><li>从功能性而言，你有什么问题吗？</li></ul></li><li><input disabled="" type="checkbox"> 粗略划定周期<ul><li>这个项目将花费多长时间</li><li>多少个关卡</li><li>关卡大小（大关卡还是小关卡）</li><li>工作量（大关卡指的是多大的关卡）</li></ul></li></ul><h4 id="Recommended-checklist"><a href="#Recommended-checklist" class="headerlink" title="Recommended checklist"></a>Recommended checklist</h4><p>但实际上，除了以上基本问题外，你还应该能够回答以下设计相关问题：</p><ul><li><input disabled="" type="checkbox"> 支柱<ul><li>这个项目最重要的 2-3 个主题/特性是什么</li></ul></li><li><input disabled="" type="checkbox"> 目标体验<ul><li>你期望玩家们在面对每个关卡时有什么样的反应</li><li>或者说期待他们有什么样的情绪或行为</li></ul></li><li><input disabled="" type="checkbox"> 机制<ul><li>玩家最常经历或使用的活动/交互/技能是什么</li></ul></li><li><input disabled="" type="checkbox"> 资源列表<ul><li>对于每一个关卡，需要什么样的模型，纹理，音效</li><li>已经准备好这些资源了吗，还是需要某人来进行制作</li></ul></li></ul><h4 id="Full-checklist"><a href="#Full-checklist" class="headerlink" title="Full checklist"></a>Full checklist</h4><p>对于一个三人以上或是预期三个月以上的项目，还需要进一步回答下列问题：</p><ul><li><input disabled="" type="checkbox"> 节奏<ul><li>在每一个关卡具体发生了什么</li><li>为什么会发生这些</li><li>关卡之间怎么连接</li></ul></li><li><input disabled="" type="checkbox"> 调研<ul><li>关卡的设计启发/来源/参考是什么</li><li>团队成员之间对于同一件事是否有相同的理解和解释</li><li>以更大的文化或者产业视角，如何看待这个项目</li></ul></li><li><input disabled="" type="checkbox"> 世界观架构<ul><li>这些关卡所在的世界/宇宙是什么样子的</li><li>是谁创造了这些地方</li><li>什么样的逻辑/情绪指导着关卡建造和使用？（不是很能理解这里的 use 使用的指代，也许指的是游玩？）</li><li>详细的周期指定<ul><li>每一周，甚至更加具体的事件段，应该在做什么</li><li>在最终发版前，什么样的特性/关卡是锦上添花，有了更好，但是却可以被砍掉的</li><li>这一过程实际非常复杂，一些商业化工作室甚至聘请一个或多个制作人来主要负责周期</li></ul></li></ul></li></ul><h3 id="Mechanics"><a href="#Mechanics" class="headerlink" title="Mechanics"></a>Mechanics</h3><p>游戏机制指的是在游戏中任何重复出现的活动，系统或策略，基本是玩家经常进行或使用的任何行为。核心机制是一个游戏最常被使用和基础的动作或是系统，而不太频繁的活动可被称为次要机制。</p><blockquote><p>何为“机制（mechanic）”有诸多讨论，本书中融合了各家意见。如果想详细了解机制之争，可以<a href="https://en.wikipedia.org/wiki/Game_mechanics">看这里</a>。</p></blockquote><p>一些讨论游戏机制的例子：</p><ul><li>超级马里奥 64 的游戏机制由在平台间奔跑跳跃以到达出口的核心机制组成。一些马里奥 64 的关卡也含有通过撞击砖块来触发的隐藏快捷通道等次要机制。</li><li>Doom 的核心机制包括奔跑和射击，几乎没有或者只含有少量的跳跃。有时玩家能够引诱怪物们互相攻击，这是一种被称为内斗（in-fighting）的次要机制。</li><li>《神偷：暗黑计划 (Thief: The Dark Project)》是一款关于避免直接冲突的潜行游戏，其核心机制是响亮、快速的脚步声会吸引守卫。和马里奥和 Doom 相反，该游戏不鼓励快速移动，奔跑也是一个次要机制。</li></ul><p>以上的三款游戏在某种程度上是类似的——都是 3D 动作游戏，都需要在不死亡的前提下到达出口。然而，它们也拥有不同于彼此的规则和游戏机制，而这些其实意味着不同的关卡设计方法。若是使用制作马里奥风格的平台跳跃关卡手法来制作 Doom 关卡可能会让其非常难，而使用制作 Doom 的关卡手法来制作神偷的关卡也会使其难得难以想象。</p><p>不要为了这些品类而设计，不要限于熟悉的模式和惯例中。要为了实际存在的游戏而进行设计，感受游戏本身。如果你是在为一个已经存在的游戏来制作 mod，至少先玩这个游戏几个小时，也玩玩其他社区作品。看看 YouTube 上的游玩视频，并注意其他玩家（应该指的是其他 modder？）如何结合不同的机制和游戏系统。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428131527.png" alt="超级马里奥 64 游戏手册的某一页，其中详细描述了不同的动作和机制"></p><h4 id="What-if-you-haven’t-finalized-mechanics-yet"><a href="#What-if-you-haven’t-finalized-mechanics-yet" class="headerlink" title="What if you haven’t finalized mechanics yet?"></a>What if you haven’t finalized mechanics yet?</h4><p>不知道机制时，创建关卡是很难的。机制和关卡互相依存。不在关卡中测试就无法评估机制，而在确立机制前也没办法很好地评估一个关卡。</p><p>如果改变机制，你最终会做很多无用功，得到很多基于废弃机制的过时关卡。但如果没有建立足够的测试关卡来衡量机制的潜力，你最终可能会得到一个第一关后就变得无趣的无聊机制。</p><p>在游戏开发的整个过程中，你很可能会推翻或者重做关卡。你甚至可能需要重做同一关好几次。没关系，不要将这视作一种无用功，把每一个废弃的版本都视作宝贵的调研。这就是为何我们称之为游戏开发——开发是一个耗费时间的渐进过程。搞清楚什么是一个好的关卡和好的游戏是需要花费时间的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428143052.png" alt="大金刚（1981）的早期设计文档，其中展现了机制，控制和玩法流向。取自 Shigeru Miyamoto (from https://twitter.com/forestillusion/status/1443284433268666368/"></p><h4 id="Build-test-maps"><a href="#Build-test-maps" class="headerlink" title="Build test maps"></a>Build test maps</h4><p>作为规划过程的一部分，游戏设计师们经常需要制作简易的可玩地图——一种 blockout 风格的测试地图。这些简陋的关卡只限于开发者内部使用，并且通常不会在最终的公开版本中发布。</p><p>从我们的目的而言，这些地图基本不含任何的关卡设计，它们只是大的方形场地，填充着随机的物体和 NPC。</p><p>但这并不意味着这些地图没用。这些简单的用于测试的可玩地图对于测试游戏机制、物体表现以及游戏整体感觉是非常中啊哟的。</p><p>有关构建用于内部使用的测试地图的更多内容，可以<a href="https://book.leveldesignbook.com/process/blockout/metrics">看这里</a>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/GodOfWar2014_CombatPrototype.gif" alt="在简单的测试地图中测试战神（2018）的战斗原型，来源为 https://80.lv/articles/evolution-of-god-of-war-from-2014-to-2018/"></p><h3 id="Experience-Goals"><a href="#Experience-Goals" class="headerlink" title="Experience Goals"></a>Experience Goals</h3><p>体验目标指的是让玩家在游玩过程中能够理解或经历的某种想法，感觉，或是活动。为了提出概念性的目标体验，可以试着补充下面的句子：“在这一关中，玩家应该【学会/感到/经历】”</p><ul><li>在这一关中，玩家应该…<ul><li>学会如何使用双跳能力（教程体验）</li></ul></li><li>在这一关中，玩家应该…<ul><li>感到脆弱，在到达安全屋后放松下来（情感体验）</li></ul></li><li>在这一关中，玩家应该<ul><li>躲避致命的陷阱并在最后解锁一条捷径。 （活动体验）</li></ul></li><li>在这一关中，玩家应该…<ul><li>感觉就像他们正在逃离中世纪的监狱。 （幻想体验）</li></ul></li></ul><h4 id="Advice-for-setting-goals"><a href="#Advice-for-setting-goals" class="headerlink" title="Advice for setting goals"></a>Advice for setting goals</h4><ul><li>要具体</li></ul><p>目标体验不必复杂或深刻，但明确而清晰的体验目标可以帮助你决定要构建的内容以及辨别哪些是不必要的。<br>比如，“玩家应该玩得高兴”，这是一个模糊的目标，这样的目标无法帮助你进行设计决策。玩家应该体会到什么类型的乐趣？轻松休闲的乐趣，还是一种深度参与的乐趣？<br>或者说，如果目标是“让玩家感到恐惧”，那么具体指的是什么类型的恐惧？有身体恐惧（body horror），存在恐惧（existential horror），对失败的恐惧，对拒绝的恐惧，中年危机等。</p><ul><li>从玩家角度思考</li></ul><p>体验目标应该避免过度抽象，试着从玩家对其进行思考。理想情况下，当玩家游玩这一关卡时，他们会有怎样的理解，或如何描述他们的感受呢？<br>比如说，“玩家应该享受非线性（non-linearity）”是一个大多数人难以把握或甚至都不会考虑到的抽象结构。这就不是一个有用的体验目标。这里所指的享受是什么意思，非线性又是什么意思呢？<br>想象一下在玩家游玩之后进行一场采访，关于这个关卡，你希望他们说些什么呢？如果他们说“感觉，很…非线性…”，你可能会觉得这是种侮辱。</p><ul><li>定义多重目标</li></ul><p>关卡通常都不止有一个体验目标。即使是一个简单直白的教程关卡，也可以从额外设定的某些叙事情节，幻想或情绪体验目标中受益。这些体验目标肯定不如教会玩家如何游玩来得重要，但它们仍然能引导设计决策。<br>比如，“玩家应该一次性面对五个敌人”是关卡中一个和战斗相关的机制目标。但是有太多的细节还有待确定。一次面对五个敌人应该是一种让玩家感到容易还是困难的体验？这一关卡该被设计在什么地方，是否需要为了可以容纳更多的敌人而设计更大的空间？</p><p>让我们尝试为其添加额外的体验设计目标：“玩家应该感到不知所措，但之后发现了一个强化道具”，“玩家应该觉得他们正在保护营地免受丧尸攻击”等等。这样就将足智多谋，防御，生存，和家园的主题引入了进来。营地的概念意味着应该有一个中等大小的户外场地，现在可以就具体的营地类型进行调研（军事营地？徒步旅行营地？冬季营地？），从而让规划更加具体。</p><h3 id="Pillars"><a href="#Pillars" class="headerlink" title="Pillars"></a>Pillars</h3><p>贯穿整个项目的最重要的目标体验就是支柱（pillars）——结构性地支撑和证明整个设计的最重要的想法。设定 pillars 可以帮助团队在项目推进过程中有一个共同视野，并且免除那些并不直接服务于主要目标的“冗余”工作。<br>对于每一个关卡或地区，pillars 是一种帮助你概念化其短期体验目标的设计规划工具。你的关卡的每一个更小的体验目标或是玩法节奏都应该某种程度上服务于你的 pillars，并最终服务于更宏观的游戏体验。<br>为了便于这些大的设计目标在团队中进行沟通（原文用的 Internalize），用简短的短语或单词来为每个 pillar 命名。比如索尼圣莫尼卡的战神（2018）的内部设计 pillars 是战斗，父/子和探索：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428221919.png" alt="战神（2018）的核心体验目标/pillars，由 SIE Santa Monica Studio 呈现"></p><p>因为这是一个具有高额预算的 3A 游戏，他们的体验目标也包括了像是“高光学【动作捕捉】保真度”这样的生产价值目标。<br>你可能在想，这个和角色动画有关的目标与关卡设计关系不大，但想想一个让动捕角色动画看起来很糟的关卡——谁应该对此负责来改变工作呢，关卡设计师还是动画师？<br>因为整个团第都已经同意将动捕动画作为具有高优先级的 pillar，这样的实现公示意味着关卡设计师也应该调增关卡以适应已有的动画。<br>如此，pillars 能够帮助我们来定义什么才是对整个项目而言重要的东西，从而使得整个开发过程中能够做出更加一致和连贯的决策。</p><hr><h3 id="Example-“Mask-of-the-Rose”"><a href="#Example-“Mask-of-the-Rose”" class="headerlink" title="Example: “Mask of the Rose”"></a>Example: “Mask of the Rose”</h3><p>Mask of the Rose 是一个由 Failbetter Games 制作的 2D 视觉小说/基于选择的叙事游戏。尽管它并不是一个具有 3D 关卡的射击游戏，它也有一些相似的 pre-production 需求：</p><blockquote><p>“在 Failbetter，当我们从预生产全面投入生产中时，游戏必须有一个合理紧凑的设定好的周期，必须建立用于生产不同类型内容的管线，并且有关游戏本质的问题都有相应的答案。<br>什么样的问题？在 Mask of the Rose 项目中，它们包括：<br>将使用什么引擎和中间件来制作游戏？<br>制作管线是什么样的，它是自动化的吗？<br>游戏中会有哪些【玩法系统】？是否已经对这些系统进行了充分的原型设计？<br>在游戏中会出现多少个角色？制作角色的美术流程是什么？玩家如何自定义主角？”<br>—— Stuart Young, <a href="https://www.failbettergames.com/news/leaving-pre-production-on-mask-of-the-rose">“Leaving Pre-Production on Mask of the Rose”</a>, 16 August 2021</p></blockquote><h3 id="Example-Dishonored-2-“Clockwork-Mansion”"><a href="#Example-Dishonored-2-“Clockwork-Mansion”" class="headerlink" title="Example: Dishonored 2, “Clockwork Mansion”"></a>Example: Dishonored 2, “Clockwork Mansion”</h3><p>Dishonored 是一个有关探索复杂地区的 3A 品质第一人称潜行动作 RPG 游戏系列。在 耻辱 2 中，有一个“发条大厦”关卡，其中的关卡结构会动态变化。</p><p>Arkane Studios 设计师 Dana Nightingale 构建了一个概念验证预生产原型：（原文括号中为 Twitter thread，不是很理解这里所代表的含义）</p><blockquote><p>“我在 2013 年初，早在该地图被获准加入游戏中之前就创立了这个概念验证原型。当时的想法介于“它好棒”和“我还是应该继续打磨”之间。确实如此，但在地图正式确定之前，仍有超过一年的时间。<br>但可以肯定的是，我能够让一堆方块移动变形为我想要的样子。如果使用真实几何来做是不可能的，这也是我制作这个原型的原因。<br>这个原型引入了房间的概念，这些房间像货物集装箱一样移动和嵌入不同地方，让整个地图的布局完全动态，并且没有使房间产生形变。很高兴我们没有走让房间形变的那个方向。<br>…<br>在对其他原型进行了将近一年的工作后，是时候重新审视这一关卡并最终对其进行验证了。我做了一个新的版本，其中曲折的房间更少了，但是更加强调“场景背后”的区域。”<br>—— <a href="https://twitter.com/DanaENight/status/1448582302855045124">Dana Nightingale (@DanaENight), 14 October 2021</a></p></blockquote><p>这个关卡在预生产阶段花费了 7 个月，在大约 18 个月后被纳入了最终的版本中。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/-BgynKsHKUo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><ul><li>机制是游戏中的重复系统和重复交互<ul><li>核心机制是出现频率最高的，次要机制偶尔会丰富更有经验的玩家的游戏体验</li></ul></li><li>体验目标是整个关卡与玩家有关的设计目标</li><li>Pillars 是整个游戏的主要设计目标。想让玩家从中学习、感受或理解什么？</li><li>多大程度上需要预生产的规划？这需要具体情况具体分析：<ul><li>小型的随意项目可以几乎不需要规划<ul><li>大型的长期项目可能需要一个大型的的内部 wiki</li><li>对于从来没有一起合作过的团队，预生产的规划可以帮助合作者们相互协调和信任</li></ul></li></ul></li><li>规划可以帮助你，但不要让其限制你。一旦已经进入项目中，根据需要来改变或者重新制定计划。</li></ul><h3 id="Now-what"><a href="#Now-what" class="headerlink" title="Now what?"></a>Now what?</h3><ul><li>Pre-production in more detail:<ul><li><a href="https://medill-east.github.io/2022/04/30/20220430-leveldesignbook-pre-production-research/"><strong>Research</strong></a> is vital for projects focusing on story or realism.</li><li>Single player projects require special attention to <a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/"><strong>pacing</strong></a>.</li><li>Projects often start too big and must be <a href="https://medill-east.github.io/2022/05/02/20220502-leveldesignbook-pre-production-scope/"><strong>scoped</strong></a> down.</li><li>Big narrative projects benefit from <a href="https://medill-east.github.io/2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/"><strong>worldbuilding</strong></a>.</li></ul></li><li>Or you might move on to the <a href="https://book.leveldesignbook.com/process/layout"><strong>layout</strong></a> phase of level design.</li></ul><h3 id="Further-reading-and-resources"><a href="#Further-reading-and-resources" class="headerlink" title="Further reading and resources"></a>Further reading and resources</h3><ul><li><a href="https://www.youtube.com/watch?v=R75g3elj7y4"><strong>“A Series of First Steps - Overcoming the Digital Blank Page”</strong> by Seth Marinello</a> (GDC 2014)</li><li><a href="https://www.youtube.com/watch?v=CpOoTAVeEcU"><strong>“An Approach to Holistic Level Design”</strong> by Steve Lee</a> (GDC 2017)</li><li><a href="https://www.youtube.com/watch?v=kzQDVtysXjA"><strong>“Finding Duskers: Innovation Through Better Design Pillars”</strong> by Tim Keenan</a> (GDC 2017)</li><li><a href="https://www.playfulproductionprocess.com/"><strong>“A Playful Production Process”</strong></a> (2021) by Richard Lemarchand is an approachable textbook that introduces game production methods, ideal for late high school / university students.</li><li>  <a href="https://en.wikipedia.org/wiki/Pre-production">Pre-production (Wikipedia)</a> is a formalized process for film and music industries.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记汇总</title>
      <link href="2022/04/28/index-notes/"/>
      <url>2022/04/28/index-notes/</url>
      
        <content type="html"><![CDATA[<h2 id="游戏设计相关"><a href="#游戏设计相关" class="headerlink" title="游戏设计相关"></a>游戏设计相关</h2><ul><li><a href="https://medill-east.github.io/2022/09/06/20220906-bayonetta-toc">【白金游戏工作室：爆款游戏 创作心法】系列视频</a></li><li><a href="https://medill-east.github.io/2022/08/31/20220900-toc/">【Masahiro Sakurai on Creating Games】系列视频</a></li><li><a href="https://medill-east.github.io/2022/05/29/20220529-theartofgamedesign-toc/">游戏设计艺术 摘抄/笔记</a></li><li><a href="https://medill-east.github.io/2022/06/02/20220601-gcores-playbeyondthegame/">机核 游戏理论系列播客笔记</a></li><li><a href="https://medill-east.github.io/2022/05/03/20220502-gdc2017-zelda/">【GDC】GDC2017——塞尔达：旷野之息的三角之力</a></li><li>Challenges For Game Designer (其他相关的在 <a href="https://medill-east.github.io/2022/04/28/index-showcase/">Showcase</a> 页面中)<ul><li><a href="https://medill-east.github.io/2024/01/28/20240128-cfgd-chap3-challenge5-eleusis-express">CFGD-CHAP3-Challenge5-Eleusis Express</a></li></ul></li><li><a href="https://medill-east.github.io/2024/05/19/20240519-game-brainstorm/">游戏头脑风暴方法</a></li><li><a href="https://medill-east.github.io/2025/08/24/20250824-how-to-run-a-good-playtest/">如何进行好的游戏测试</a></li></ul><h3 id="枪械设计"><a href="#枪械设计" class="headerlink" title="枪械设计"></a>枪械设计</h3><ul><li><a href="https://medill-east.github.io/2022/09/24/20220924-yyy001-gundesign/">【鱼一元001】射击游戏设计一把枪有多复杂</a></li></ul><h2 id="游戏关卡设计相关"><a href="#游戏关卡设计相关" class="headerlink" title="游戏关卡设计相关"></a>游戏关卡设计相关</h2><ul><li><a href="https://medill-east.github.io/2022/04/29/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li><li><a href="https://medill-east.github.io/2022/06/18/20220617-gdc-makecognitivemap/">【GDC】用构建认知地图的方式构建关卡 Layout</a></li><li><a href="https://medill-east.github.io/2022/06/19/20220619-gmtk-ittakestwo/">【GMTK】双人成行关卡设计师分享树之章的设计心得</a></li><li><a href="https://medill-east.github.io/2022/12/19/20221219-gdc-invisible-intuition-blockmesh/">【GDC】关卡设计的 14 种引导方式</a></li><li><a href="https://medill-east.github.io/2023/01/02/20230102-gdc-building-a-living-world-from-ancient-ruins-in-assasins-creed-odyssey/">【GDC】基于古代废墟建立生动的刺客信条奥德赛世界</a></li></ul><h2 id="游戏叙事设计相关"><a href="#游戏叙事设计相关" class="headerlink" title="游戏叙事设计相关"></a>游戏叙事设计相关</h2><ul><li><a href="https://medill-east.github.io/2022/09/06/20220906-how-games-move-us/">【读书笔记】游戏情感设计如何触动玩家的心灵</a></li><li><a href="https://medill-east.github.io/2022/06/22/20220622-gdc-yarnspinner/">【GDC】利用 Yarn Spinner 构建叙事类游戏</a></li></ul><h2 id="游戏引擎相关"><a href="#游戏引擎相关" class="headerlink" title="游戏引擎相关"></a>游戏引擎相关</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul><h2 id="AIGC-相关"><a href="#AIGC-相关" class="headerlink" title="AIGC 相关"></a>AIGC 相关</h2><ul><li><a href="https://medill-east.github.io/2023/07/09/20230709-chatgpt-prompt-engineering-for-developers/">ChatGPT Prompt Engineering for Developers</a></li></ul><h2 id="图形学相关"><a href="#图形学相关" class="headerlink" title="图形学相关"></a>图形学相关</h2><ul><li><a href="https://medill-east.github.io/2021/07/16/games101-introduction-to-mordern-computer-graphics/">GAMES101——现代计算机图形学入门笔记</a></li></ul><h2 id="心理学相关"><a href="#心理学相关" class="headerlink" title="心理学相关"></a>心理学相关</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><h2 id="练字"><a href="#练字" class="headerlink" title="练字"></a>练字</h2><ul><li><a href="https://medill-east.github.io/2022/05/25/20220525-writing/">随便写写</a></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://medill-east.github.io/2022/07/03/20220703-toolsoflife/">对《人生艰难，如何才能过得好一点》一文的摘录</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暗黑破坏神 3 拆解分析</title>
      <link href="2022/03/06/teardown-analysis-diabolo/"/>
      <url>2022/03/06/teardown-analysis-diabolo/</url>
      
        <content type="html"><![CDATA[<h2 id="《-暗黑破坏神-3》-Teardown-Analysis"><a href="#《-暗黑破坏神-3》-Teardown-Analysis" class="headerlink" title="《 暗黑破坏神 3》 Teardown Analysis"></a>《 暗黑破坏神 3》 Teardown Analysis</h2><h3 id="游戏概况"><a href="#游戏概况" class="headerlink" title="游戏概况"></a>游戏概况</h3><ul><li>开发公司：暴雪</li><li>上线时间：2012 年 5 月 15 日</li><li>类型：RPG + PVE 刷宝</li><li>特色：<ul><li>多种职业+套装+技能组合可供选择</li><li>几乎无尽的难度可供挑战</li><li>鲜明的装备阶梯</li><li>不断变强的可能性（巅峰等级系统）</li><li>有趣的隐藏机制（藏宝秘窟、奶牛关等）</li></ul></li></ul><h3 id="游戏截图展示"><a href="#游戏截图展示" class="headerlink" title="游戏截图展示"></a>游戏截图展示</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/screenshot.jpg" style="zoom: 50%;" /><h3 id="Core-Loop-展示"><a href="#Core-Loop-展示" class="headerlink" title="Core Loop 展示"></a>Core Loop 展示</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/CoreLoopDiablo202203061208.jpeg"  /><p>这次的拆解分析会采用和上次稍不同的方式来进行。首先会从玩家视角出发对其需求进行分析，而后会从策划视角出发对一些拆解过程中所思所想的设计问题进行分析思考。</p><h3 id="玩家视角-需求分析"><a href="#玩家视角-需求分析" class="headerlink" title="玩家视角 - 需求分析"></a>玩家视角 - 需求分析</h3><p>从 Coreloop 中可以看出，玩家追求基本分为三大方面，即观看新剧情、角色能力提升，以及天梯排名提升。其中观看新剧情的需求主要是满级前的基础需求，而角色能力提升是满级后的进阶需求，最终的天梯排名提升算是玩家的最终需求，三种需求分别对应基础玩家，进阶玩家和顶级玩家。</p><h4 id="玩家基础需求-观看新剧情"><a href="#玩家基础需求-观看新剧情" class="headerlink" title="玩家基础需求 - 观看新剧情"></a>玩家基础需求 - 观看新剧情</h4><p>可以从 Coreloop 中看到，新剧情的解锁需要完成剧情任务。而剧情任务完成后一般可以获得经验奖励以及可能的普通装备奖励。这一阶段的基础需求完成后，玩家便会产生更高层级的角色能力提升需求。</p><h4 id="玩家进阶需求-角色能力提升"><a href="#玩家进阶需求-角色能力提升" class="headerlink" title="玩家进阶需求 - 角色能力提升"></a>玩家进阶需求 - 角色能力提升</h4><p>在主线剧情通关后，玩家等级基本会达到接近满级的水平，此时可以选择通过以下几种方式来升到满级：</p><ul><li>完成悬赏任务</li><li>到普通地图中杀怪</li><li>到秘境地图中杀怪</li></ul><p>而升到满级之后，玩家的技能和天赋也会全部解锁，此时算是正式开始了下一阶段，渴望提升角色能力。</p><p>可以从 Coreloop 中看到，玩家角色能力的提升有两大途径，即装备增强和角色增强，下面会分别对两种途径进行梳理。</p><h5 id="角色能力提升-装备增强"><a href="#角色能力提升-装备增强" class="headerlink" title="角色能力提升 - 装备增强"></a>角色能力提升 - 装备增强</h5><p>游戏中的装备分为次级(灰色)/高等(白色)/魔法(蓝色)/稀有(黄色)/传奇/ 5种，其中传奇为橙色，套装为绿色。不同装备带有不同的词缀以及数值。后文中会主要使用颜色对装备进行指代，普通装备包括了灰色，白色，蓝色和黄色装备。传奇装备包括了橙色和绿色装备。</p><ul><li>新普通装备</li></ul><p>从 Coreloop 中可以看到，新普通装备的获取可以通过以下途径：1. 完成剧情任务；2. 地图中击杀掉落；3. 血岩碎片抽取。<br>普通装备主要服务于满级前的阶段，属于过渡装备，所以其淘汰率很高，后期可能会有两种用途：1. 分解之后获取材料；2. 黄色品质装备可在卡奈模仿处消耗材料升级为同类传奇品质装备。</p><ul><li>新传奇装备</li></ul><p>如前所述，传奇装备包含了橙色传奇装备和绿色套装装备。不仅如此，传奇品质之上还有更高品质的远古传奇和太古传奇装备。传奇装备也是角色能力提升的核心。这里一并将剩余几个装备增强机制介绍后统一梳理玩家通过装备增强角色的思路。</p><ul><li><p>装备附魔（洗装备属性）<br>装备附魔是一种通过重置现有装备的其中一条属性来实现的装备增强方式，即所谓的“洗装备属性”。同一件装备只能洗一条属性，并且每一条原属性可洗出的属性类型是预设的（但数值随机）。</p></li><li><p>宝石镶嵌<br>宝石镶嵌是一种通过将宝石镶嵌到有孔装备中来达到增强装备目的的方式，不同的宝石镶嵌到不同部位中会有不同的效果。</p></li><li><p>卡奈魔方能力<br>卡奈魔方是游戏中的一种特殊道具，其获取需要通过在特定普通地图中完成特殊任务。最常用的卡奈魔方能力可能涉及：1. 属性萃取；2. 套装转换；3. 稀有物品升级。</p></li></ul><p><em>属性萃取</em>：传奇物品本身可能会带有特殊属性（橙字描述），但由于身上可装备物品的数量限制，很有可能出现想要 A 和 B 装备的特殊属性，但是只能装备一件装备的情况。可以通过卡奈魔方萃取 A 的特殊属性（A 在被萃取后会被毁坏）并装备该词条，此时相当于共同拥有了 A 和 B 两件装备的特殊属性。</p><p><em>套装转换</em>：游戏过程中很可能出现的情况是一个套装的相同部件重复爆出了，此时可以通过卡奈魔方的套装转换功能，通过消耗材料将该部件转换为同一套装下的其它部件（有可能还是会转换出相同部件）。</p><p><em>稀有物品升级</em>：该功能可以通过消耗材料对稀有物品进行品质升级。但因为消耗材料较多，所以并不是一种性价比很高的方式，玩家通常在缺少特定传奇装备情况下才会使用该功能来获取传奇物品。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232538.png" style="zoom: 33%;" /><p>玩家的装备增强大致分为两个路线：1. 基于套装的装备增强思路；2. 基于散件的装备增强思路。无论哪种路线，其装备获取和增强方式都是一样的：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Equip202203061235.jpeg"></p><p>这里主要关注新传奇装备。从图中可以看到，新传奇装备的获取可以通过以下途径：1. 地图中击杀掉落；2. 完成悬赏任务；3. 血岩碎片抽取。</p><ul><li><p>地图击杀掉落<br>如图所示，普通地图的爆率较低，玩家一般会选择通关秘境地图（以下简称小秘境）和宏伟秘境（以下简称大秘境）来获取新传奇装备。其中小秘境的怪物和普通怪物一样，会正常掉落物品，即玩家在通关小秘境过程中就可以有几率获取新传奇装备，在击杀小秘境最终 BOSS 也有较高几率获取新传奇装备。而大秘境的区别在于，其中除最终 BOSS 之外的怪物是不会掉落物品的，所以玩家只有成功击杀大秘境的最终 BOSS 才能有几率获取新传奇装备。</p></li><li><p>完成悬赏任务<br>玩家完成悬赏任务一般是为了获取特殊的悬赏材料用于卡奈魔方。完成悬赏任务虽然有几率获取新传奇装备，但因为其出货率不稳定，且不确定具体会拿到什么装备，所以一般玩家可能不会将悬赏任务作为获取新传奇装备的主要途径。除非是为了某些具有特殊出货率的装备，如完成第一章的悬赏任务有较高的几率获得降低一件套装所需件数效果的皇家华戒。</p></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232622.png" style="zoom:50%;" /><ul><li>血岩碎片抽取<br>血岩碎片的获取方式有如下几种：1. 通关秘境（大或小均可）；2. 完成悬赏任务；3. 击杀血岩盗宝贼（小几率出现的特殊宝箱怪）。玩家可以通过花费血岩碎片抽取特定部位的装备，不同部位的抽取费用不同（武器（75）&gt;首饰（50）&gt;其他饰品（25））。该方式也是获取新传奇装备的常用方式之一。</li></ul><p>在获取到心仪装备后，玩家便可根据需要，使用装备附魔（洗装备属性），宝石镶嵌来对装备属性进行提升。</p><h5 id="角色能力提升-角色增强"><a href="#角色能力提升-角色增强" class="headerlink" title="角色能力提升 - 角色增强"></a>角色能力提升 - 角色增强</h5><p>角色增强主要包括了以下几个方面：1. 新技能/天赋的获取；2. 巅峰属性提升；3. 特殊能力提升。</p><p>其中新技能/天赋的获取需要依托于英雄等级，而玩家的技能和天赋搭配通常需要结合装备属性（如套装对某个技能有特殊加成情况下就会专门点出与之相关的技能与天赋）。</p><p>巅峰属性的提升依托于玩家的巅峰等级，巅峰等级与玩家账号绑定，其升级消耗的是角色满级之后所获得的经验值。巅峰等级每提升一级就可以获得一点巅峰属性。玩家可以根据自己的需求进行加点。其中部分属性是有加成上限的（50 点），但主属性的加点是没有上限的。这意味着只要能够不断提高巅峰等级，就能够不断增加主属性，实现角色增强的目的。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/peakattribute.jpg" style="zoom:50%;" /><p>角色增强的最后一部分和特殊能力有关。这里的特殊能力指的是通关宏伟秘境之后能够获取的特殊宝石上的能力，通过宝石镶嵌机制可以将宝石镶嵌到特定部位（我所玩的秘法师职业的特殊宝石镶嵌部位通常为戒指）的装备中来得到这些特殊能力加成。一共 22 枚传奇宝石，在全部获取前，每次限时通关大秘境都能获取一枚新的传奇宝石，直到全部获取。且每次限时通关大秘境之后都能获得 3 次（如果在进入大秘境前选择加强大秘境则可以获得 4 次）传奇宝石的升级机会。每枚传奇宝石的效果都不一样，且升级到 25 级之后会解锁特殊能力。每次升级传奇宝石都可以对特殊宝石能力词条中的数值进行提升。</p><h4 id="玩家最终需求-天梯排名提升"><a href="#玩家最终需求-天梯排名提升" class="headerlink" title="玩家最终需求 - 天梯排名提升"></a>玩家最终需求 - 天梯排名提升</h4><p>大部分玩家其实会停留在前一阶段，而有这一阶段需求的玩家基本可以称为该游戏的最核心玩家。玩家在这一阶段的追求是在尽可能短的时间内通关更高等级的大秘境，从而获得更高的天梯排名（基于大秘境等级，同等级则用时少的排名高），收获荣誉与游戏内奖励。</p><h3 id="策划视角-相关设计反思"><a href="#策划视角-相关设计反思" class="headerlink" title="策划视角 - 相关设计反思"></a>策划视角 - 相关设计反思</h3><p>这里对拆解过程及游玩过程中所想到的一些点从策划视角进行设计反思。</p><h4 id="游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？"><a href="#游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？" class="headerlink" title="游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？"></a>游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？</h4><p>我个人认为暗黑破坏神 3 的目标体验有以下几方面：1. 爽快感；2. 挑战感；3. 目标感。</p><ol><li>爽快感<br>何为爽快：这里的爽快主要有两方面，即装备掉落时的获得感以及造成伤害时的满足感。<br>何以爽快：如上所言，爽快感主要体现在装备掉落和伤害机制。</li></ol><p>设计师通过视觉和听觉两方面加强了装备掉落时的获得感。<br>视觉层面上，传奇物品掉落时会有相应的橙色或绿色光柱冲天而立，十分抓眼。而听觉层面上，物品掉落时会有金属坠地的声音，这也在另一方面加强了玩家“出货了”的心理预期，令人满足。此外，玩家在 NPC 处消耗血岩碎片抽取物品时也会有“大量出货”的兴奋感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/equip.jpg" style="zoom:50%;" /><p>而造成伤害的满足感主要通过视觉层面和机制层面得以加强。<br>视觉层面上，在玩家打开伤害显示后（默认打开），玩家的每一次伤害都通过飘字形式得以显现，暴击伤害还会以橙色字体突出显示。这样的即时视觉反馈很好地满足了玩家“造成了成吨输出”的心理预期，令人满足。而机制层面主要指的是玩家借助套装或特殊装备可以实现的伤害质变。套装在完全组装之后其伤害提升是质变的，玩家在套装组成前和组成后能够体会到明显的伤害变化，非常爽快。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232710.png" style="zoom:50%;" /><ol start="2"><li>挑战感<br>何为挑战：这里的挑战主要有两方面，即角色装备提升的困难感和通关更高难度秘境的困难感。<br>何以挑战：角色装备提升的困难感主要是通过装备掉落几率体现的，而限时通关秘境的困难感主要通过相关机制体现。</li></ol><ul><li>装备提升的困难感</li></ul><p>游戏进行到中后期，基本能够凑齐所玩英雄的所有套装以及大部分传奇物品，再之后想要提升需要靠以下几种方式： 1. 通过装备附魔对装备属性进行提升；2. 继续刷图来获取同一装备的更高品质装备。</p><p>其中通过装备附魔对装备属性进行提升的方式只能在一定程度上实现伤害的量变提升，无法达到质变提升。并且前面也提到过，附魔时能够“洗”的属性是基于物品原本的属性类型的，并不能“洗”出所有的属性，所以这一方式对于角色装备的提升其实较小。</p><p>前面已经大致提过游戏中的装备阶层是次级(灰色)/高等(白色)/魔法(蓝色)/稀有(黄色)/传奇/ 5种，其中传奇为橙色，套装为绿色。而传奇物品中也有更细的品级分类，从低到高依次是传奇，远古传奇，太古传奇。远古和太古物品和传奇物品大致相同，但基础属性（伤害或护甲）以及非百分比词缀的上下限数值都较高。</p><p>只有达到70级的角色，才能在苦痛难度下获得远古物品，掉落在地时，远古物品的橙色光效和普通传奇物品相同，只有在辨识后才能确定是否是远古物品。在经过辨识后，远古物品的物品图标会有橙色的边框（套装物品为绿色边框），物品描述中也会标明“远古”。它们会通过全部途径掉落，包括怪物、宝箱、卡达拉、赫拉迪姆宝箱、卡奈魔盒，或者由铁匠与珠宝匠制造。</p><p>太古物品掉落在地时会带有闪亮的红色光柱，游戏中任何产出传奇物品的途径都可能掉落，包括赫拉迪姆宝箱、卡达拉和卡奈魔盒，但你必须先单人成功完成一个最低70层的大秘境才有获取太古物品的资格。太古物品比远古更加稀有，并且所有词缀都呈现完美的远古级别数值，包括物品的传奇威能。</p><p>在查找相关资料时正好找到了暴雪官方新闻中对于太古物品与开发理念的解读，这里直接引用过来：</p><blockquote><p>太古物品主要面向基本完成了角色技能配置或赛季旅程，但还想要继续玩下去的玩家。装备很好并且将大部分时间花在升级巅峰和传奇宝石的非赛季玩家也能通过太古物品中获得乐趣。在每个部位都得到远古物品以后，我们希望延续玩家看到装备掉落、在卡达拉处消耗血岩碎片时的兴奋感。太古为专注型玩家提供了完成一整套完美配置的途径，不再需要去升级。</p></blockquote><p>可以看到官方对于太古物品的描述基本将其作为了游戏的最终阶层物品。在这样的前提下，其爆率其实也极低（据说是 1%，即 100 件传奇物品中能出一件）。越往后其实能用的新装备的获取也越来越困难，符合心理预期，但也确实令人挫败。</p><ul><li>通关更高难度秘境的困难</li></ul><p>这一点主要是通过以下几种机制实现的：1. 限时通关；2. 难度倍增；3. 死亡后复活时长延长；4. 装备损毁；</p><p><em>限时通关</em>：小秘境的通关是不限时的，玩家只需要击杀足量怪物便可通关，但大秘境的通关是限时的，这一机制其实大大增大了通关大秘境的难度。<br><em>难度倍增</em>：这个主要是通过数值调整实现的，高难度秘境每高一个等级，其怪物属性会成倍提升，玩家在游玩时会面临“你打怪物在磨血，怪物打你就一刀”的局面。<br><em>死亡后复活时长延长</em>：玩家每在秘境中死亡一次，复活时间就会延长五秒（至多三十秒）。而在限时机制下，每分每秒都显得格外珍贵。<br><em>装备损毁</em>：游戏中的装备是具备耐久度属性的，除去日常情况下的损耗，玩家每次死亡都会使得装备耐久度整体下降 10%，也就是说如果你以装备满耐久度进入秘境，但在其中死亡达到十次，装备就会损毁（不会消失，但需要回到城镇找铁匠修复后才能恢复），这样的机制也增强了通关秘境的难度。</p><ol start="3"><li>目标感<br>何为目标：即玩家游玩时对于变强的追求。<br>何以目标：游戏目标感依靠装备和巅峰等级系统塑造。</li></ol><p>玩家在游戏中的目标简言之是让自己变得更强，而实现这一目标的途径会随着角色的不断增强最终聚焦到装备属性和巅峰等级的提升。<br>如前所述，游戏中的高级装备会有颜色和词条的区分，前中期会让玩家产生一种绿色强于橙色的颜色偏见，但随着角色不断增强，也随着玩家获得了远古和太古物品的获取资格，这种颜色偏见会逐渐消失，也让玩家一直有“更强的装备”能够追求。<br>变强的另一途径是不断获取经验，提升巅峰等级，从而提升巅峰属性。不设上限的巅峰等级使得玩家永远可以变强。</p><h4 id="作为一款刷宝游戏，其重复可玩性如何保证？"><a href="#作为一款刷宝游戏，其重复可玩性如何保证？" class="headerlink" title="作为一款刷宝游戏，其重复可玩性如何保证？"></a>作为一款刷宝游戏，其重复可玩性如何保证？</h4><p>暗黑三的重复可玩性主要通过以下三方面的机制来保证：</p><ol><li>装备可提升性</li><li>难度增长非线性</li><li>等级可提升性</li></ol><ol><li>装备可提升性<br>如前所述，暗黑 3 中透明的装备阶层使得绝大部分情况下玩家总有更高等级的装备可以追求，此种情况下会促使玩家通过不断刷图来获取可能的新装备。</li><li>难度增长非线性<br>暗黑 3 中的难度提升是非线性的，越往后难度会越来越高，这意味着玩家在后期想要通关更高等级的秘境不是一件容易的事情，此种情况会促使玩家选择通关更低等级的秘境来获取可能的新装备以及增长角色等级。</li><li>等级可提升性<br>巅峰等级系统的引入使得玩家永远都有变强的机会，面对难以打过的高等级秘境，设计师为玩家保留了一丝只要不断刷图，即使无法获取心仪装备，也能变强从而通关的可能性。</li></ol><h4 id="巅峰等级系统的设计意图"><a href="#巅峰等级系统的设计意图" class="headerlink" title="巅峰等级系统的设计意图"></a>巅峰等级系统的设计意图</h4><ol><li><p>降低游戏挫败感<br>如前所述，巅峰系统的引入为玩家保留了 一条永远能够变强的道路，若是没有巅峰系统，在面对无法攻克的高等级秘境时，能做的只有刷出更好的装备这一条路，在后期心仪装备出货率极低的情况下无疑会让玩家产生挫败感。而巅峰等级系统的引入带来的另一条变强之路会让这样的挫败感减少。</p></li><li><p>保障老玩家利益的同时利于引入赛制机制<br>巅峰等级系统的出现可以使得一直游玩的老玩家始终在装备和角色属性上领先于后面进入游戏的新玩家。若是没有巅峰等级系统，那么新老角色的差距便只有装备属性，即使只有较低概率，但是新玩家很可能会在短时间内就“赶上”玩了很久的老玩家，这不利于保障老玩家的利益。但正因如此，为了让新老玩家有机会“同台竞技”，赛制机制的引入使得玩家均需“从零开始”。如此一来，巅峰等级系统的引入便实现了保障老玩家利益的同时利于引入赛制机制的双赢局面。</p></li></ol><h4 id="为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？"><a href="#为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？" class="headerlink" title="为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？"></a>为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？</h4><p>从现象出发，即越往后设计师将经验的比重视为比金币更高。从 Coreloop 中可知，经验的流向只有一个地方，即用于提高巅峰等级，属于角色增强，而金币的流向却有很多，但主要都是用于装备增强。结合前面对于巅峰等级系统的分析，从现象出发可知到后期玩家能够实现的装备增强较少，所以对金币的需求会减少，但是巅峰属性作为能够在后期增强玩家的唯二途径之一，其增长需要依靠巅峰等级的提升。该设计强化了巅峰等级系统的作用，保障了玩家不断变强的可能性。</p><h4 id="宝箱怪物，宝箱关，奶牛关的设计意图"><a href="#宝箱怪物，宝箱关，奶牛关的设计意图" class="headerlink" title="宝箱怪物，宝箱关，奶牛关的设计意图"></a>宝箱怪物，宝箱关，奶牛关的设计意图</h4><p>宝箱怪物，即游戏中的各式盗宝地精，击杀后通常会有丰厚奖励（装备/血岩碎片/宝石/金币/材料），玩家周围有宝箱怪物时可以听到其笑声的特殊音效。宝箱关，即拥有多个宝箱怪物的藏宝秘窟，可以通过在卡奈魔方中放入连环戒并直接转化来打开通往藏宝秘窟的传送门。奶牛关，是另一个特殊地图，可以通过在卡奈魔方中放入牛王戟斧并直接转化来打开通往奶牛关的传送门。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232750.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306211538.png" style="zoom:50%;" /><p>虽然无论是击杀宝箱怪物，通关藏宝秘窟或是奶牛关中能获得较多的软货币或是材料，甚至是好的装备，但因为碰见宝箱怪物的几率较低，以及刷出这两件特殊装备的概率也不高，所以这些机制的设计其实偏向于游戏中的调节机制。</p><p>玩家在进行大量刷图后肯定会感到疲惫，而这些调节机制的引入可以在很大程度上增强游戏乐趣性以及缓解玩家疲劳。盗宝贼特殊音效的出彩设计也形成了一种操作性条件反射，即让玩家一听到盗宝贼的笑声就会兴奋地在周遭寻找它的身影。</p><h4 id="拆解系统的设计目的"><a href="#拆解系统的设计目的" class="headerlink" title="拆解系统的设计目的"></a>拆解系统的设计目的</h4><p>和大多数游戏中的拆解系统一样，其设计是为了提升无用装备的价值，让玩家即使进行到中后期不再需要这些较低级装备时也能让它们派上用场。但暗黑 3 的拆解系统有两点值得一提：1. 白装拆解材料；2. 连环戒。</p><ol><li>白装，即次级装备，在游戏中属于很早期的装备，一些游戏中虽然也设计了拆解系统，但玩家看到白装也会直接忽视。但暗黑 3  中白装能够拆解出其它品质装备无法拆解获得的<code>万用材料</code>，其他途径要获取该材料较为困难（开地图中的箱子有较小几率获得）或性价比较低（通过卡奈魔方消耗高级材料转换）。这一设计使得白装的被拾取率和价值大大提高。</li><li>连环戒，即上面分析宝箱关时的特殊装备，其特殊属性是能够召唤一只盗宝地精为你拾取普通装备，并在拾取一定件数后掉落一件稀有装备，这一特殊属性的设计很好地增添了游戏性。</li></ol><h3 id="发现的潜在问题和思考"><a href="#发现的潜在问题和思考" class="headerlink" title="发现的潜在问题和思考"></a>发现的潜在问题和思考</h3><ol><li>后期提升乏力，目标感不足</li></ol><p>虽然前面分析过，游戏的目标感是不断变强，而不断变强的手段便是追求可知的更高阶装备或是不断提升巅峰等级和属性。但我作为玩家在后期基本完成配装后，想要限时通关更高等级大秘境确实非常困难，而除获取更好装备的另一种增强途径就只有重复刷图提升巅峰等级，疲倦的同时提升也较小，这就导致在中后期会产生乏力和目标感不足的情况。</p><p>针对这种情况其实能做的不多，只能为玩家提升路上做一些锦上添花的小机制，以作为玩家不断提升的鼓励。游戏本身已经设计了类似的机制，即当玩家巅峰等级不断提升时，可以获取到更加炫酷的头像框。与之类似的，我个人认为可以为宠物也添加这样的机制，即随着玩家巅峰等级不断提升，宠物的形态也会发生进化。这样的机制设计能在不改变游戏本身的情况下作为玩家不断提升的潜在动力。</p><ol start="2"><li>部分套装可用性不高</li></ol><p>从玩家角度出发，我个人较为熟悉的是秘法师角色，而在游戏进行到中后期时发现部分套装的可用性其实并不高的这一现象。和玩了多个赛季的老玩家聊过之后了解到其实随着赛季更迭，不同套装的强度是在不断变化的。另一方面，游戏本身的天梯系统其实为这一问题也算是设计了相应的解决方案：即为穿戴不同套装（或是只穿戴散件）的玩家单独设计天梯排行，这样的设计使得每一种装备搭配都有其发挥的舞台，在某种层面上实现了“百花齐放”。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这次的拆解分析除了 Coreloop 之外，从玩家视角和策划视角分别对玩家需求和相关设计进行了分析和反思。期间确实也加深了一些对于游戏的理解。在和友人聊天过程中还了解到了暗黑 3 中的宠物掉落机制：宠物会作为白装掉落，玩家即使爆出宠物之后也很有可能会发生忽视不捡取或是直接将其分解的情况。这样的机制虽免不了发生玩家不小心“错失”宠物的情况，但却无形之中调动了玩家的游戏参与感以及保障了游玩新鲜度，不得不说是一个出色的设计。</p><p>综上，本文借助 Teardown Analysis 方法对游戏《暗黑破坏神 3》进行了分析，而后阐述了此次分析期间发现的潜在问题和思考。</p><p>感谢您的阅读，欢迎大家批评指正！</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://news.blz.cn/zh-cn/diablo3/17900086/%E4%BC%A0%E5%A5%87%E7%89%A9%E5%93%81%EF%BC%9A%E8%BF%9C%E5%8F%A4%E4%B8%8E%E5%A4%AA%E5%8F%A4%E6%8C%87%E5%8D%97">传奇物品：远古与太古指南</a></li><li><a href="http://games.sina.com.cn/o/z/diablo3/2015-09-01/fxhkafa9529522.shtml">看图识怪：暗黑3盗宝地精家族怪物图鉴</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枪火重生 Teardown Analysis</title>
      <link href="2021/12/13/teardown-analysis-gunfire-reborn/"/>
      <url>2021/12/13/teardown-analysis-gunfire-reborn/</url>
      
        <content type="html"><![CDATA[<h2 id="《枪火重生》-Teardown-Analysis"><a href="#《枪火重生》-Teardown-Analysis" class="headerlink" title="《枪火重生》 Teardown Analysis"></a>《枪火重生》 Teardown Analysis</h2><p>最近在 B 站上看 <a href="https://space.bilibili.com/618369?spm_id_from=333.788.b_765f7570696e666f.1">鱼一元 001</a> 大大的相关视频，并在 <a href="https://space.bilibili.com/618369/channel/detail?cid=96395">挺进游戏公司</a> 系列下学到了 <a href="https://www.bilibili.com/video/BV1GJ411y7fj?spm_id_from=333.999.0.0">Teardown Analysis</a> 这一游戏拆解方法，现动手实践之！</p><h3 id="Keynote-展示"><a href="#Keynote-展示" class="headerlink" title="Keynote 展示"></a>Keynote 展示</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.001.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.002.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.003.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.004.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.005.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.006.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.007.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.008.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.009.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.010.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.011.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.012.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.013.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.014.jpeg"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>第一次做 Teardown Analysis，全部算下来应该花了快有十二个小时左右…推翻重画了好几次，期间也有一些疑惑、反思或是延伸思考：</p><ul><li>Core Loop 按理来说应该是围绕资源进行绘制，但总会牵涉到一些无法进行资源展示的系统，如何合理引入是一个需要考虑的问题</li><li>Teardown Analysis 的目的应该是为了帮助我们更好理解游戏资源流向及设计目的，本次分析中其实在 Core Loop 之后更多是对于系统的描述以及设计概述，对设计目的的反思还不够深入</li><li>一开始直接在 PPT/Keynote 上对线框图进行绘制，后觉麻烦，改用飞书云文档中的流程图工具（我将其当做免费版的  ProcessOn）进行绘制，顺畅许多</li><li>感觉下次再分析的时候，可以将目标体验作为设计反思的重点，但届时势必会出现更加纷繁的走线，需要好好思考如何合理结合</li></ul><p>综上，本文借助 Teardown Analysis 方法对游戏《枪火重生》进行了分析，而后阐述了此次分析期间的一些疑惑、反思、延伸思考。</p><p>感谢您的阅读，欢迎大家批评指正！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Florence 目标体验及设计反思</title>
      <link href="2021/11/16/thinking-of-the-florence/"/>
      <url>2021/11/16/thinking-of-the-florence/</url>
      
        <content type="html"><![CDATA[<h2 id="《Florence》目标体验及设计反思"><a href="#《Florence》目标体验及设计反思" class="headerlink" title="《Florence》目标体验及设计反思"></a>《Florence》目标体验及设计反思</h2><blockquote><p>全文约 4 千字，预计需要 13 分钟阅读。配合背景音乐阅读体验更佳哦 (￣▽￣)”</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=571339489&auto=1&height=66"></iframe><h3 id="游戏概述"><a href="#游戏概述" class="headerlink" title="游戏概述"></a>游戏概述</h3><p>作为一款精简的互动小说类游戏，你将在这短短的三十分钟里和主角一起经历一段平凡、起伏但也温暖的时光。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116172206.png" style="zoom:50%;" /><h3 id="目标、路径、挑战、体验分析"><a href="#目标、路径、挑战、体验分析" class="headerlink" title="目标、路径、挑战、体验分析"></a>目标、路径、挑战、体验分析</h3><p>基于 PC 端的手柄游玩体验，以下将从目标、路径、挑战、体验四个方面对游戏进行整体概述：</p><h5 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h5><p>即游戏的结束条件：玩家需要跟随主角一起推动故事，直至结局。</p><h5 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h5><p>即玩家达到目标的手段：玩家需要通过点击按键、操纵遥感等方式进行交互，以推进故事。</p><p>其中涉及的元素包括但不仅限于：</p><ul><li>【按键点击】</li><li>【遥感滑动】</li></ul><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116173140.png" alt="按键点击" style="zoom:70%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116173346.png" alt="遥感滑动" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><h5 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h5><p>即玩家在实现目标的路径中可能碰到的障碍。</p><p>在 Florence 中，也许可以为挑战换一种说法，即任务，或事件。玩家需要在游玩过程中作为主角完成一些事情，从而推进故事的进行。</p><p>其中涉及的事件包括但不仅限于：</p><ul><li>【刷社交媒体】</li><li>【上班】</li><li>【涂色】</li></ul><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174206.png" alt="刷社交媒体" style="zoom:50%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174240.png" alt="上班" style="zoom:50%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174322.png" alt="涂色" style="zoom:50%; align:middle;" border=0></td> </center></tr></table><h5 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h5><p>即期望玩家在游玩时获得的情感体验。<br>在后面部分会展开描述，这里只进行列举：</p><ul><li>轻快</li><li>代入</li><li>温暖</li></ul><h3 id="目标体验反思"><a href="#目标体验反思" class="headerlink" title="目标体验反思"></a>目标体验反思</h3><h4 id="轻快"><a href="#轻快" class="headerlink" title="轻快"></a>轻快</h4><p>何为轻快：玩得没有负担，没有压力。<br>何以轻快：游戏从美学、交互机制和流程设计三方面共同构建了最终的轻快体验。</p><ul><li>美学</li></ul><p>这里提到的美学，主要指的是音乐、画面和色彩。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=571339489&auto=1&height=66"></iframe><p><strong>音乐：</strong> 上面所提供的便是开头呈现的背景音乐，进入游戏后会自动播放。该曲明快的音调能让还未开始正式游玩的玩家一听到音乐就不由自主地放松下来。在故事不断推进的过程中，除冲突部分外，其余部分的音乐都给人一种轻松愉悦的感觉，整体呈现出的音乐营造了一种明快的氛围。</p><p><strong>画面和色彩：</strong> 【开局画面】中 Florence Yeoh（女主）以微笑姿态映入眼帘，头发不停摇曳，给人一种微风拂面的清爽感。而以色彩中代表着光明、积极和温暖的黄色作为主色，也能舒缓玩家游玩时的心绪。在游玩过程中，极简风格的画面和笔触产生了大量留白，结合【局部色彩】的使用来突出画面主体，同时也起到了视线引导的作用。最终构建了玩家没有负担，没有压力的轻快游玩体验。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116172206.png" alt="开局画面" style="zoom:40%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116185109.png" alt="局部色彩" style="zoom:60%; align:middle;" border=0></td> </center></tr></table><ul><li>交互机制</li></ul><p>这里提到的交互机制，主要指的是以手柄操作的【按钮点击】和【遥感滑动】。<br>简单的交互操作既减少了玩家对于操控方式的记忆需求，也减少了玩家需要熟练操作的需要，这些“省下来”的认知资源让玩家可以毫无负担和压力地专注到故事中。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117133727.png" alt="按键点击" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117133802.png" alt="遥感滑动" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><ul><li>流程设计</li></ul><p>这里指的流程设计，主要指的是没有失败和故事简练。</p><p><strong>没有失败：</strong> 通常在进行游戏过程中，难免会遇到因操作失败等因素导致的“非理想结局”，从而产生挫败感。但在游玩 Florence 的时候，这样的挫败感几乎是不存在的，玩家唯一有可能“犯错”的点是在进行【计算】和【工作】时，即使在这样的事件中，其成功难度也是很低的，所以几乎不会出现失败的挫败感。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134509.png" alt="计算" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134533.png" alt="工作" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><p>在除此之外的其他游玩过程中，玩家可以随意选择决策顺序，甚至可以选择【放弃决策】，任凭其自由发展。如此设计使得玩家在决策时的心理负担降到最低，从而构建玩家游玩时的轻快体验。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134946.png" alt="放弃决策"></p><p><strong>故事简练：</strong> 这里的故事简练指的不仅是游戏总体的游玩时长较短，也体现在其分段化的叙事手法中。游戏中采用了【按事件划分章节】的方式来进行整体情节推进，如此一来，将关卡设计细化为了事件设计，一方面能够很清晰地呈现出游戏整体的起承转合的变化，另一方面也使得玩家能以很快地速度在不觉间就推进了故事的进行，从而构建游戏整体的轻快感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117135329.png" alt="按事件划分章节" style="zoom: 67%;" /><h4 id="代入"><a href="#代入" class="headerlink" title="代入"></a>代入</h4><blockquote><p>注意：此部分存在明显剧透，请小心食用！</p></blockquote><p>何为代入：体验主角的故事时，也想到了自己。<br>何以代入：游戏主要从整体故事设计，细节设计和美学呈现的角度来构建玩家代入感。</p><ul><li>整体故事设计</li></ul><p>如前所述，Florence 采用按事件划分章节的方式来推进故事，从其章节名其实便可一窥其代入感设计的精髓。游戏中将几个连续的章节归为一幕，但没有为每一幕起名，我将在这里尝试为其命名，便于分析其代入感设计：</p><ul><li>幕一：无聊生活中的回忆之甜和乍见之欢</li><li>幕二：再见，再见，“怦然”相撞的再次相见</li><li>幕三：趁年轻，去探索，去追梦</li><li>幕四：唇齿也会打架，但我们同居啦！</li><li>幕五：生活终将归于平淡，而我们彼此可能也只能陪伴人生中的一段</li><li>幕六：收拾心情再出发，不知道明天的我又会遇见什么颜色呢</li></ul><p>从我蹩脚的文字中也可窥见，这样的故事每天都在发生，而我们自己，可能就是那个故事中的人。特别是在最后一章中，主角 Florence 成功办了画展，其间人来人往，而此时的分镜中出现了【让我无比期待的转身】这样的画面，当时在游玩的我也在不断想“那个当时鼓励我追梦的他会不会突然出现呢”。但是，他最终没有出现，设计者并没有选择呈现完美结局，难免失望，总会释然，生活如此，这样的设计极大地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117143703.png" alt="让我无比期待的转身" style="zoom:67%;" /><ul><li>细节设计</li></ul><p>这里的细节设计主要指的是在游玩过程中，一些很细微的用户体验和情节细节。如【叫不醒的闹钟】，【自己不接电话就不断打来的妈妈】，【时光流逝，物是人非】等等，再辅以恰当的手柄震动，这些能够引起玩家共鸣的细节设计极大地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160811.png" alt="叫不醒的闹钟" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160836.png" alt="自己不接电话就不断打来的妈妈" style="zoom:67%;" /><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160928.png" alt="时光流逝" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117161018.png" alt="物是人非" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><ul><li>美学呈现</li></ul><p>这里的美学呈现主要指的是色彩和形状的呈现。</p><p><strong>色彩：</strong> 这里的色彩主要指的是游戏中对于色彩的运用：如【枯燥乏味的上班】，【多姿多彩的朋友圈】，【充满想象力的涂色】，【令人气愤的争吵】，【破碎的记忆】以及【对新生活的憧憬】等画面，都用了恰当的色彩来凸显了人物主体，也渲染了相应的氛围，从而最终增强了玩家的代入感。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117150542.png" alt="枯燥乏味的上班" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117150613.png" alt="多姿多彩的朋友圈" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152116.png" alt="充满想象力的涂色" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152202.png" alt="令人气愤的争吵" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152249.png" alt="破碎的记忆" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152408.png" alt="对新生活的憧憬" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><p><strong>形状：</strong> 这里的形状主要指的是游戏中对于特定场景下的形状的运用。特别让人印象深刻的是【争吵升温】这一画面中，将二人的对话转化为了拼图，而且在升温过程中，拼图的形状由一开始的【圆滑】，变得【有棱角】，最后甚至变得【尖锐】，这一非常优秀的设计让人眼前一亮，很好地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117155959.png" alt="圆滑" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160037.png" alt="棱角" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160144.png" alt="尖锐" style="zoom:67%;" /><h4 id="温暖"><a href="#温暖" class="headerlink" title="温暖"></a>温暖</h4><p>何为温暖：在最终游玩结束之后，会心一笑，心中微暖。<br>何以温暖：游戏主要从情节设计，交互节奏和美学呈现的角度为玩家营造温暖感。</p><ul><li>情节设计</li></ul><p>如前所述，游戏最终并没有给玩家呈现一种完美结局，主角 Florence 也并不是如超人一般，受到打击之后能立马释怀，放步前行。她也经历了任何普通如你我的人都会经历的痛苦与迷茫，通过旅行来放空自我。但她并没有停步于此，她最终走出来了，重新积攒了力量，重新拾起画笔，做自己想做的事，【在乎身边的人】，努力向前。所谓“不完美”的结局也正是生活的常态，这样的情节设计最终也予人以温暖和希望。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117161813.png" alt="在乎身边的人" style="zoom:67%;" /><ul><li>交互节奏</li></ul><p>这里的交互节奏指的是游戏中的交互方式和交互频率。玩家在游玩过程中大可以不紧不慢地轻轻点击，【慢慢滑动】，而不用担心错过什么，或做错什么，这样舒缓的交互节奏最终给玩家营造了温暖的游玩体验。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117162220.png" alt="慢慢滑动" style="zoom:67%;" /><ul><li>美学呈现</li></ul><p>这里的美学呈现主要指的是色彩和音乐。<br>除去特殊的争吵场景外，游戏整体以低对比度的【温暖色系】来进行画面着色，如此设计使得玩家在游玩过程中始终能以舒缓的心情来进行游戏。此外，再搭配游戏出色的配乐，最终予人以温暖。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117162626.png" alt="温暖色系" style="zoom:67%;" /><p>以上对游戏的目标体验及其设计进行了一些反思，下面会对其他的一些出彩设计进行分析和反思。</p><h3 id="其余出彩设计分析与反思"><a href="#其余出彩设计分析与反思" class="headerlink" title="其余出彩设计分析与反思"></a>其余出彩设计分析与反思</h3><p>以下部分的分析与反思主要设计交互机制，美学呈现等方面。</p><h4 id="交互机制"><a href="#交互机制" class="headerlink" title="交互机制"></a>交互机制</h4><ul><li>【形象有趣的聚焦方式】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117165710.png" alt="形象有趣的聚焦方式" style="zoom:67%;" /><p>如图所示，这里采用了可左右调整的不同的聚焦尺来模拟摔倒之后重新聚焦的这一过程，既表现了看见中意的人时因为小鹿乱撞而跌得七荤八素的狼狈，又很好地为双方交换了联系方式这一情节做了铺垫，十分形象有趣。</p><p>延伸思考：在未来，如果可能的话，在跌倒之后使双摇杆随机晃动，以模拟被摔得七荤八素的感觉，而玩家需要努力将其恢复到“平静”状态，从而模拟努力按住头来重新聚焦的过程，这样的交互方式应该也很有趣！</p><ul><li>【摇晃拍立得！】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117171417.png" alt="摇晃拍立得！" style="zoom:67%;" /><p>如图所示，设计者需要玩家在点开相片后通过晃动摇杆来模拟现实中人们真实的甩底片动作，确实很有意思。</p><p>延伸思考：在这里其实可以考虑引入手柄体感机制，让玩家真正地甩起来！<br>题外话：甩底片这一操作其实源自早期的老式拍立得时期，当时拍完之后需要将附有显像药剂的纸材快速与底片分离，通过甩动可以让药剂快速边干，但随着技术的发展和进步，现在的拍立得所拍出的照片其实已经可以不用甩啦，用力过猛甚至有可能会出现显像错误哦！（不过轻轻甩底片的动作也确实别有一番趣味(￣▽￣)”）</p><ul><li>【不进则退】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117172810.png" alt="不进则退" style="zoom:67%;" /><p>如图所示，这里需要玩家不断点击，以模拟不断向前推男主人公的动作。有趣的是如果在推了一半的时候不再继续点击，男主人公就会不断退缩回到原地，这样的设计十分真实的同时也让我们切实体会到了有人能在这时推自己一把是多么不容易而又令人温暖的事情。</p><p>延伸思考：在这里的反馈呈现其实是不变的，也就是说玩家每次按键能够推动的距离是一定的，也许可以为其引入非线性的反馈机制，即一开始的时候一次按键点击就能推动很多，但越往后越难推动，临门一脚的时候需要玩家更努力地来进行点击才能最终实现鼓励男主人公报名的目的，如果在前面鼓励的时候中途放弃了，下一次重新鼓励的时候的阻力就会更大。这样的设计也许能让玩家最终实现目标的时候有更强的获得感和成就感。</p><h4 id="美学呈现"><a href="#美学呈现" class="headerlink" title="美学呈现"></a>美学呈现</h4><ul><li>【以色彩进行画面引导】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117165418.png" alt="以色彩进行画面引导" style="zoom:67%;" /><p>如图所示，这里采用了显式的音符及音乐流向来引导玩家向前，十分自然。</p><p>延伸思考：这里让我想到的其实是好奇心、探索欲以及有限操作空间下的强制性选择。设计师采用了局部色彩的方式来突出了主体与可交互性，当画面出现如此抓眼的元素时玩家会不自主地想要进行探索，但凡事有例外，这里的交互空间有限，玩家能做的只有向右前进这一个选项，这里并不是想要反驳设计师对于操作空间的限制，因为有时确实需要做这样的决策以让玩家推进，只是一个题外话，如何在放开交互可能性的情况下更好地让玩家“正常推进”，特别对于线性叙事类游戏而言，这可能是一个需要关注的点。</p><ul><li>以色彩和形状反映心情</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175435.png" alt="组织语言" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175404.png" alt="相谈甚欢" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175958.png" alt="激烈争吵" style="zoom:67%;" /><p>如图所示，在前两个图中，设计师很好地用恰当的颜色和形状很好地反映了恋爱开始时仔细组织语言的小心翼翼，到相恋之时相谈甚欢的不谋而合。前面的颜色温暖而含蓄，后面的颜色温馨而幸福；前面的形状多样且需要多次拼接，后面的形状彼此相配，且拖拽一个时，另一个也会自然靠近。色彩、形状、再辅以恰当的交互，很好地体现了主角，甚至是玩家当时的心境。<br>而在最后的图中，刺眼的红色以及都不用再组织的语言让人也直观感受到了争吵之时的激烈与口不择言，不断变快的话语速度也反映了二人心中激荡的情绪。真实，而又心疼。</p><p>延伸思考：又是一个题外延伸，有没有可能，未来可以结合音频输入设备来进行交互呢？这里指的并不是真的让玩家参与到争吵当中（当然了也不失为一种选择 (￣▽￣)”），而是识别玩家声音中的情绪，从而让画面产生相应的一些变化，包括玩家发声的频次，音调等，都以另一种方式来组成了主角的语言。（甚至能延伸出“骂爽 TA”的奇怪玩法哈哈…）</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>综上，本文从目标、路径、挑战、体验的角度对游戏《Florence》进行了整体分析，而后又对游戏轻快、代入、和温暖的目标体验进行了反思，最后对游戏中其余的出彩设计进行了分析和反思。</p><p>总的而言，如概述中所言，这是一个平凡、起伏而又温暖的故事。<br>感谢您的阅读，欢迎大家批评指正！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clash Heroes 目标体验思考及设计反思</title>
      <link href="2021/11/06/thinking-of-the-clash-heroes/"/>
      <url>2021/11/06/thinking-of-the-clash-heroes/</url>
      
        <content type="html"><![CDATA[<h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><p>不知道为何 Youtube 的视频无法在这里嵌套展示，所以在这里提供视频传送门：<a href="https://youtube.com/clip/UgkxFq-TIaDR8SPzRPFo4lYH-Tv9vCs9dWsH">点击访问视频</a></p><h3 id="Gif-展示"><a href="#Gif-展示" class="headerlink" title="Gif 展示"></a>Gif 展示</h3><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/冲撞技能与地形的交互.gif" alt="冲撞技能与地形的交互" style="zoom: 33%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom: 50%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="战斗场景" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="物品拾取" style="zoom:33%; align:middle;" border=0></td>         <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/貌似 BOSS 战斗.gif" alt="精英怪物" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><h2 id="《Clash-Heroes》目标体验思考及设计反思"><a href="#《Clash-Heroes》目标体验思考及设计反思" class="headerlink" title="《Clash Heroes》目标体验思考及设计反思"></a>《Clash Heroes》目标体验思考及设计反思</h2><h3 id="游戏概述"><a href="#游戏概述" class="headerlink" title="游戏概述"></a>游戏概述</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif"></p><p>从目前放出的一些预览视频来看，《Clash Heroes》 是一款合作类的角色扮演闯关手游，玩家将以俯视角操纵英雄进行实时游玩。每个游戏角色都有独立的角色特性和技能。</p><h4 id="目标、路径、挑战、体验分析"><a href="#目标、路径、挑战、体验分析" class="headerlink" title="目标、路径、挑战、体验分析"></a>目标、路径、挑战、体验分析</h4><p>基于视频，以下将从目标、路径、挑战、体验四个方面对游戏进行整体设想：</p><h5 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h5><p>即游戏的结束条件：玩家需要带领角色冲破重重关卡，直至通关</p><h5 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h5><p>即玩家达到目标的手段：玩家需要通过不断杀敌，从而不断向前。<br>其中涉及的元素有：</p><ul><li><p>杀敌</p></li><li><p>收集</p><table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="掉落资源收集" style="zoom:45%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="场景（右上方）宝箱收集" style="zoom:45%; align:middle;" border=0></td> </center></tr></table></li><li><p>场景道具交互</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" style="zoom:60%;" /></li><li><p>地形交互</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:30%;" /></li></ul><h5 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h5><p>即玩家在实现目标的路径中可能碰到的障碍。<br>目前视频中所反映出的障碍基本有以下几种：</p><ol><li>怪物障碍：即通关过程中会不断遭遇的怪物<br>怪物类型：</li></ol><ul><li>普通怪物<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" style="zoom: 30%;" /></li><li>精英怪物<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/貌似 BOSS 战斗.gif" style="zoom:30%;" /></li><li>BOSS<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" style="zoom:70%;" /></li></ul><ol start="2"><li>陷阱/建筑障碍：即会对玩家造成直接或间接伤害的地图陷阱/建筑<br>陷阱/建筑类型：</li></ol><ul><li>防御塔：如下图 Gif 中出现的会对角色进行攻击的防御塔</li><li>兵工厂：如下图 Gif 中右上角出现的会不断产生新怪物的兵工厂<table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow.gif" alt="防御塔" style="zoom: 80%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterWorrior.gif" alt="兵工厂" style="zoom:80%; align:middle;" border=0></td> </center></tr></table></li></ul><ol start="3"><li>地形障碍：即通关过程中需要跨越地形<br>地形类型：沟壑 - 需要借助地形交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:40%;" /></li></ol><h5 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h5><p>即期望玩家在游玩时获得的情感体验。<br>在后面部分会展开描述，这里只进行列举：</p><ul><li>爽快感</li><li>合作感</li><li>策略感</li></ul><h3 id="目标体验反思"><a href="#目标体验反思" class="headerlink" title="目标体验反思"></a>目标体验反思</h3><h4 id="爽快感"><a href="#爽快感" class="headerlink" title="爽快感"></a>爽快感</h4><p>爽快感解析：换言之我觉得也可以称之为顺畅感、割草感<br>爽快感实现方式：</p><ol><li>系统角度</li></ol><ul><li><p>操作简单：采用了市面通行的左右摇杆机制，让玩家几乎没有学习和适应成本</p></li><li><p>攻击机制简单：每个角色只有一个普攻按键和一个技能按键</p></li><li><p>怒气积累机制直观：角色每次成功攻击都能积累一档怒气（即生命条下方的紫色状态条），当怒气集满之后不同角色会有独特的状态：</p><ul><li><p>战士是会进入狂暴状态，应该是能得到攻击加成</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" alt="战士" style="zoom:70%;" /></li><li><p>弓箭手和炸弹师都是能在下次普攻时自动发动一次强力攻击</p><table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="弓箭手" style="zoom:70%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" alt="炸弹师" style="zoom:70%; align:middle;" border=0></td> </center></tr></table></li><li><p>自动选择攻击单位（参见上方炸弹师 Gif）：在进行普通攻击时，玩家不需要选择供给单位，系统会自动选择离自己最近的敌方单位进行攻击</p></li><li><p>技能方向选择简单（参见上方炸弹师 Gif）：对于需要选择攻击方向的技能，采用了以玩家自身为锚点的方式，玩家只需要根据按钮方向对攻击方向进行选择</p></li></ul></li><li><p>交互机制简单</p><ul><li>攻击即可触发道具交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" style="zoom: 60%;" /></li><li>移动到特殊地形即可触发地形交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:40%;" /></li><li>移动到一定范围内即可对掉落物进行自动收集<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/objectCollection.gif" style="zoom:40%;" /></li></ul></li></ul><ol start="2"><li>UX 角度</li></ol><ul><li>美学呈现（以视觉举例）<ul><li>卡通风格简明：卡通风格既能保证战斗体验，也不会耗费玩家太多的注意力资源</li><li>攻击飘字颜色简单：如图所示，目前的飘字一共有两种，己方造成的伤害是白色，敌方造成的伤害是红色，这样的飘字呈现方式简单直白  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" style="zoom:40%;" /></li><li>范围呈现明显：无论是敌方的攻击范围，还是所控制角色的技能释放范围，都有很明显的视觉辅助，从而能让玩家产生爽快的战斗体验  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" style="zoom:80%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" style="zoom:80%;" /></li></ul></li><li>即时交互：即时交互机制能让玩家很容易进入全神贯注的心流状态</li></ul><h4 id="合作感"><a href="#合作感" class="headerlink" title="合作感"></a>合作感</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/coop.gif" alt="合作杀敌"></p><p>合作感解析：即需要与玩家配合杀敌通关<br>合作感实现：在所展示的 Gif 中，不同玩家操纵着不同角色在同一地图中共同作战，但从目前放出的资料来看，合作感还有待加强，本文后续部分也会再次提到这部分内容。</p><h4 id="策略感"><a href="#策略感" class="headerlink" title="策略感"></a>策略感</h4><p>策略感解析：这里的策略感指的是玩家可以以多种方式进行游玩和参与到游戏中<br>策略感实现：</p><ol><li>角色设计<br>如图所示，目前放出的视频中一共有三种角色，我称之为战士，弓箭手和炸弹师。<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" alt="战士" style="zoom:80%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="弓箭手" style="zoom:80%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" alt="炸弹师" style="zoom:80%;" /></li></ol><p>据称还会有更多职业放出，多样化的职业为玩家提供了更多的游玩可能性<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characters.jpg" alt="角色造型" style="zoom: 33%;" /></p><ol start="2"><li><p>可交互地形设计<br>如图所示，目前的除了有可交互的特殊区域可以帮助进行地形跨越外，还增加了令人眼前一亮的技能与地形的交互，这样的交互可能性会极大增强可玩性和策略性（但想必实现难度不低，BUG 也会很多哈哈）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom:40%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/冲撞技能与地形的交互.gif" alt="技能与地形的交互" style="zoom:40%;" /></li><li><p>道具设计<br>如图所示，目前放出的视频中，地图中也有可供玩家交互的道具，这些道具的出现势必会丰富玩家的策略空间</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom: 67%;" /></li></ol><p>以上对目前所放出的视频中的目标体验进行了一些反思，下面我会对未来可能的一些设计方向提出一些自己的思考。</p><h3 id="对未来可能的设计方向的思考"><a href="#对未来可能的设计方向的思考" class="headerlink" title="对未来可能的设计方向的思考"></a>对未来可能的设计方向的思考</h3><p>以下将从战斗、养成、社交的经典三元素出发，对未来可能的设计方向进行一些思考。</p><h4 id="战斗"><a href="#战斗" class="headerlink" title="战斗"></a>战斗</h4><ol><li>丰富战斗交互空间<br>这里的战斗交互空间主要指的是玩家的可操作空间。丰富战斗交互空间可以增强玩家【策略感】。<br>目前只为玩家提供了普通攻击、怒气攻击和一个技能，玩家可操作空间较少，所以也许可以考虑以下的几种方式丰富战斗交互空间：</li></ol><ul><li>丰富技能<ul><li>即为各个角色增加更多的技能选项</li></ul></li><li>丰富攻击方式<ul><li>其中一种丰富攻击方式的方法是引入武器系统，并且为每种武器赋予独特的攻击方式和技能系统</li></ul></li><li>丰富攻击属性<br>  从下面的图中我们可以看到目前已经拥有冰属性和雷属性的攻击，在未来也许可以考虑以下的方式来丰富攻击属性：<ul><li>武器附魔</li><li>利用不同的技能/道具状态改变攻击属性<table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="冰属性攻击" style="zoom:80%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif" alt="雷属性攻击" style="zoom:80%; align:middle;" border=0></td> </center></tr></table></li></ul></li></ul><ol start="2"><li>丰富场景道具<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom:67%;" />如上所示，目前已经有可供交互的道具，未来也许可以考虑以下的方式来丰富场景道具：</li></ol><ul><li>丰富道具功能<ul><li>如交互后可为角色带来不同的状态改变：<ul><li>生命恢复</li><li>攻击提升</li><li>攻击属性授予</li><li>防御提升</li><li>一段时间内不消耗怒气等</li></ul></li></ul></li><li>丰富道具属性<ul><li>图中所示的为一次性交互道具，也许可以考虑为其增加可重复使用的可携带道具，可设计为同账号不同角色间通用道具，也可为不同角色设计专属道具，如为弓箭手角色设计专属道具【翎羽】，效果为可几率触发普攻连发等。</li></ul></li></ul><ol start="3"><li>丰富视觉效果<br>这里的视觉效果主要指场景中的可见元素的效果。丰富视觉效果可以增强玩家战斗【爽快感】。</li></ol><ul><li>丰富飘字效果<ul><li>目前放出的版本中只有两种飘字，即己方伤害为白色，敌方伤害为红色，未来可丰富飘字效果，如暴击则飘字为黄色等。</li></ul></li></ul><ol start="4"><li>丰富职业/角色<br>目前已经放出的角色有三种，我称之为战士、弓箭手和炸弹师，未来可考虑对角色进行丰富。丰富角色可以增强玩家【策略感】。<br>也许可以考虑增加以下职业/角色：</li></ol><ul><li>召唤师：可召唤宝宝辅助进行战斗</li><li>陷阱师：可设置陷阱诱捕敌人/对敌人造成伤害</li><li>工程师：可建造炮塔等设施辅助进行战斗</li><li>法师：可利用强大的法术进行战斗</li><li>诅咒师：可利用诅咒辅助进行战斗，如施加负面效果或造成伤害</li><li>盗贼：如拥有隐身和背刺等技能，背后攻击会有攻击加成</li><li>狼人：可拥有变身技能，变身后提供状态加成，且攻击方式、攻击技能改变</li><li>魅惑师：可利用魅惑技能让敌方单位反为己用等</li></ul><ol start="5"><li><p>丰富地形的同时提供反悔的选项，此举可以增强玩家【爽快感】。<br>如图所示，当前版本为玩家提供了地形交互选项，我想到的是可能还得为玩家提供反悔的选择，如设置为可返回前一地形，或者添加位移技能，防止出现玩家想要返回前一地形却无计可施，从而产生挫败感的情况。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom: 40%;" /></li><li><p>丰富玩法<br>这里的玩法主要指的是游戏中的各种交互机制，玩法的丰富可以增加玩家的【策略感】。<br>可以考虑如下的方式来丰富玩法：</p></li></ol><ul><li>增加解密元素：目前放出的资料中基本只涉及战斗，所以可以考虑增加解谜元素以丰富玩法，同时不断给玩家带来新鲜感。</li><li>引入天气系统：目前放出的资料中并不涉及天气系统，所以可以考虑增加天气系统，并且将其与战斗系统挂钩，如雨天环境下，雷属性攻击的范围变大，且攻击力变强等。</li><li>引入时间系统：目前放出的资料中并不涉及时间系统，所以可以考虑增加时间系统，并且将其与战斗系统挂钩，如黑夜环境下，玩家视野变小，但也更不容易被敌人发现；其上所提到的狼人角色，其在黑夜状态下的变身时间会延长等。</li></ul><h4 id="养成"><a href="#养成" class="headerlink" title="养成"></a>养成</h4><p>即丰富养成空间：这里的养成空间主要指的是可让角色提升的方方面面，养成空间的丰富可以增强玩家的【策略感】。<br>目前所体现的角色变化只有怒气值的变化：<br>虽然怒气集满后可持续时间增长了，但是积累所需的攻击次数也变多了，如此使得养成系统的体现并不明显，也会降低玩家提升的动力。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="三档怒气" style="zoom: 40%;" /><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterWorrior.gif" alt="五档怒气" style="zoom: 80%;" /></p><p>目前资料中还体现了收集元素，应该也是服务于养成系统的：<br>    <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="掉落元素收集" style="zoom:40%;" /></p><p>可以考虑如下的方式来丰富养成空间：</p><ol><li>个人养成</li></ol><ul><li>属性养成：这里的属性养成指的是各个角色自身的属性，如可以对角色的以下属性进行提升：<ul><li>攻击力</li><li>防御力</li><li>暴击率</li><li>攻击属性</li><li>耐性：用于抵抗倒地等</li></ul></li><li>技能/熟练度养成：玩家在不断使用技能过程中，也许可以考虑为技能引入熟练度，从而对技能达到以下效果的提升：<ul><li>攻击力</li><li>攻击范围</li><li>冷却速率等</li></ul></li><li>装备养成：这里的装备指的是可以对玩家属性造成影响的装备</li><li>装饰养成：这里的装饰指的是不会对玩家属性造成影响，只会影响角色外观的装备</li></ul><ol start="2"><li>道具养成：这里的道具养成指的是对玩家在游戏中可交互道具的养成，如</li></ol><ul><li>增加道具增益状态的持续时间</li><li>增加道具效果等</li></ul><h4 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h4><p>即丰富社交空间：这里的社交空间指的是游戏中需要与其他玩家共同达成的事件，社交空间的丰富可以增强玩家【合作感】。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif" alt="合作作战"></p><p>如图所示，个人认为目前版本中玩家之间的合作感还不强，只是各自为战，未来也许可以考虑如下的方式来丰富社交空间：</p><ul><li>增加合作任务：可以考虑增加合作任务，并为合作任务设置奖励加成甚至是专属奖励（如只有在合作模式下才有几率掉落）</li><li>增加合击技：可以考虑为不同职业之间增加合击技，或者是为不同攻击属性之间增加交互可能性，如火属性攻击和水属性攻击会互相减弱伤害，但先施加水属性攻击后施加雷属性攻击会带来伤害加成等。</li></ul><p>以上是基于战斗、养成、社交角度对未来可能的设计方向的一些思考，但需要明确的是在未来的设计中还是要围绕目标体验出发，达到合理的取舍与平衡。</p><h2 id="《Clash-Heroes》官方网站"><a href="#《Clash-Heroes》官方网站" class="headerlink" title="《Clash Heroes》官方网站"></a>《Clash Heroes》官方网站</h2><p><a href="https://clash.com/en">Clash</a></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喝酒游戏列举与思考</title>
      <link href="2021/11/02/drinking-games/"/>
      <url>2021/11/02/drinking-games/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><span id="jump"></span></p><p>最近在看《游戏设计、原型与开发》一书，第一章中提到了对一个牌类游戏 Bartok 进行规则更改以达到不同的游玩体验一事，于是想到了可以把平时在玩喝酒游戏时的一些“突发奇想”也记录在此，同时也算是锻炼自己的游戏设计思维，遂有此文。</p><h2 id="喝酒游戏列举（及可能的设计反思）"><a href="#喝酒游戏列举（及可能的设计反思）" class="headerlink" title="喝酒游戏列举（及可能的设计反思）"></a>喝酒游戏列举（及可能的设计反思）</h2><p>虽然说是喝酒游戏，但其实也可以用于平时打发时间，以下会列举一些我所知的此类游戏，也会从更改目标游戏体验的角度出发，对部分游戏提出一些设计反思。</p><h3 id="1-Bartok"><a href="#1-Bartok" class="headerlink" title="1. Bartok"></a>1. Bartok</h3><p>这便是在【背景】中所提到的牌类游戏。</p><h4 id="1-1-规则列举"><a href="#1-1-规则列举" class="headerlink" title="1.1 规则列举"></a>1.1 规则列举</h4><ul><li>游戏目标<ul><li>第一个出完手牌的玩家获胜</li></ul></li><li>游戏规则<ul><li>一副标准扑克牌，去掉大小王，剩余 52 张</li><li>洗牌后向每个玩家发牌 7 张</li><li>其余牌反扣作为抽牌堆</li><li>从抽牌堆顶上抽牌，明牌，作为弃牌堆</li><li>玩家顺时针参与游戏，如果可以出牌，必须出一张牌到弃牌堆，若不能出，必须从抽牌堆抽取一张牌加入手牌</li><li>出牌规则：玩家的手牌若与当前明牌满足如下关系，则可以出一张牌：<ul><li>花色一致</li><li>数字一致</li></ul></li><li>第一个出完手牌的获胜</li></ul></li></ul><h4 id="1-2-Demo-体验"><a href="#1-2-Demo-体验" class="headerlink" title="1.2 Demo 体验"></a>1.2 Demo 体验</h4><p>该 Demo 来自 <a href="https://book.prototools.net/">Introduction to Game Design, Prototyping, and Development</a> 一书的官方网站，点击<a href="https://book.prototools.net/BartokWebBuild/BartokWebBuild.html">跳转进行体验</a>。</p><h3 id="2-21-点半买牌"><a href="#2-21-点半买牌" class="headerlink" title="2. 21 点半买牌"></a>2. 21 点半买牌</h3><h4 id="2-1-原始规则列举"><a href="#2-1-原始规则列举" class="headerlink" title="2.1 原始规则列举"></a>2.1 原始规则列举</h4><ul><li>游戏目标<ul><li>第一个将手牌凑齐 21 点半的玩家胜出</li></ul></li><li>游戏规则<ul><li>一副标准扑克牌，共 54 张牌<ul><li>其中 A<del>10 分别代表数字 1</del>10，共 40 张</li><li>J，Q，K，以及大小王都代表数字 0.5，共 14 张</li></ul></li><li>洗牌后将所有牌都作为抽牌堆</li><li>从抽牌堆顶上抽牌进行明牌公示，每次抽一张</li><li>以拍卖形式对当前明牌进行拍卖，玩家以任意顺序参与喊价，筹码自定（如酒）<ul><li>价高者支付筹码（如喝掉喊出量的酒），并获得当前明牌</li></ul></li><li>第一个凑齐 21 点半的玩家胜出，其余玩家都需要支付一定筹码</li></ul></li></ul><h4 id="2-2-规则反思与迭代-增加未知性"><a href="#2-2-规则反思与迭代-增加未知性" class="headerlink" title="2.2 规则反思与迭代 - 增加未知性"></a>2.2 规则反思与迭代 - 增加未知性</h4><p>在原始规则条件下，所有玩家的当前点数都是公示的，导致游戏缺少了未知性与刺激性，玩家能直接知道其余玩家还需多少点数才能胜利。</p><p>基于此，添加一条新的规则：<br>为每位玩家都添加一张其余人不可见的初始手牌</p><p>引入此规则后，参与者只能看到其余玩家场上的明牌点数，但并不能直接知道玩家还需多少点数才能胜利，从而增加了未知性和可玩性。</p><p>当前完整规则如下：</p><ul><li>一副标准扑克牌，共 54 张牌<ul><li>其中 A-10 分别代表数字 1-10，共 40 张</li><li>J，Q，K，以及大小王都代表数字 0.5，共 14 张</li></ul></li><li>洗牌后向每位玩家发牌 1 张</li><li>将其余牌都作为抽牌堆</li><li>从抽牌堆顶上抽牌进行明牌公示，每次抽一张</li><li>以拍卖形式对当前明牌进行拍卖，玩家以任意顺序参与喊价，筹码自定（如酒）<ul><li>价高者支付筹码（如喝掉喊出量的酒），并获得当前明牌</li></ul></li><li>第一个凑齐 21 点半的玩家胜出，其余玩家都需要支付一定筹码</li></ul><h4 id="2-3-规则反思与迭代-增加随机性与不可控性"><a href="#2-3-规则反思与迭代-增加随机性与不可控性" class="headerlink" title="2.3 规则反思与迭代 - 增加随机性与不可控性"></a>2.3 规则反思与迭代 - 增加随机性与不可控性</h4><p>在【2.2】版本的基础上，是否还可以增加一些随机性与不可控性呢？<br>基于此，添加一条新的规则：</p><ul><li>为参与者分配号数，在当前轮次拍卖结束后，从抽牌堆中抽出 1 张牌，若颜色为红色，则拍卖者成功获取当前拍卖牌，若颜色为黑色，则从包含参与者号数中的号数牌堆中抽出一张，将当前拍卖牌给予相应号数的玩家</li></ul><p>此规则的引入增加了游戏的随机性与不可控性，若是想要获取当前明牌就需要参与拍卖，但即使价格最高，支付了筹码，最终也有可能无法获取当前明牌，而为他人作嫁衣裳，或是为其他玩家制造“飞来横祸”，从而输掉游戏。</p><hr><h2 id="Roadmap"><a href="#Roadmap" class="headerlink" title="Roadmap"></a>Roadmap</h2><ul><li>待列举游戏<ul><li>青蛙跳水</li><li>瞄炮</li><li>柳树</li><li>十五的月亮十六圆</li><li>捞腌菜</li><li>牛肉面刀削面直升机</li><li>金字塔</li><li>游戏牌</li><li>七上八下</li><li>梦幻 3P</li><li>干瞪眼</li><li>斗牛</li><li>抢数字</li></ul></li><li>未来计划<ul><li>也许以后可以把这篇帖子的内容汇总成为一个喝酒游戏推荐软件，根据用户所需的游戏性、参与度、运气所占比例等指标为其推荐合适的喝酒游戏，谁知道呢 (￣▽￣)”</li></ul></li></ul><hr><h2 id="2024-0128-更新"><a href="#2024-0128-更新" class="headerlink" title="2024-0128 更新"></a>2024-0128 更新</h2><p>在《Challenges For Game Designers》一书中发现了新游戏</p><ul><li><a href="https://medill-east.github.io/2024/01/28/20240128-cfgd-chap3-challenge5-eleusis-express">CFGD-CHAP3-Challenge5-Eleusis Express</a></li></ul><hr><h2 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h2><p>封面图片由 <a href="https://unsplash.com/@no_noe?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Noémie Cauchon</a> 拍摄，取自 <a href="https://unsplash.com/">Unsplash</a></p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>For Love Demo 展示及分析</title>
      <link href="2021/10/27/for-love-demo-showcase-and-analysis/"/>
      <url>2021/10/27/for-love-demo-showcase-and-analysis/</url>
      
        <content type="html"><![CDATA[<h2 id="《For-Love》Demo-展示"><a href="#《For-Love》Demo-展示" class="headerlink" title="《For Love》Demo 展示"></a>《For Love》Demo 展示</h2><h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><video width="480" height="270" controls>  <source src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/ForLoveCompression.mp4" type="video/mp4"></video><h3 id="截图展示"><a href="#截图展示" class="headerlink" title="截图展示"></a>截图展示</h3><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223000.png" alt="开始画面" style="zoom: 33%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223154.png" alt="蓄力" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223222.png" alt="发射" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223248.png" alt="通过点击进行避障" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223333.png" alt="通关" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><h2 id="《For-Love》Demo-设计思路分析"><a href="#《For-Love》Demo-设计思路分析" class="headerlink" title="《For Love》Demo 设计思路分析"></a>《For Love》Demo 设计思路分析</h2><h3 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h3><p>此次 Gamejam 的关键词为 Transmission，头脑风暴后后最终将立意确定为【生命的传递】，基于此将游戏故事定为了对<strong>受孕过程的模拟</strong>，最终其实也希望玩家能在游玩之后体会到生命诞生的不易与伟大。</p><h3 id="游戏整体说明"><a href="#游戏整体说明" class="headerlink" title="游戏整体说明"></a>游戏整体说明</h3><p>以下将从目标、路径、挑战、体验四个方面对游戏进行整体说明：</p><ul><li>目标<ul><li>即游戏的结束条件</li><li>玩家需要通过操作，操纵尽可能多的生命体规避障碍，到达终点</li></ul></li><li>路径<ul><li>即玩家达到目标的手段</li><li>玩家需要通过不断点击屏幕产生反向推力，从而推动生命体不断向前</li></ul></li><li>挑战<ul><li>即玩家在实现目标的路径中可能碰到的障碍</li><li>游戏中设计的障碍结合受孕生理背景共有以下几种：<ul><li>屏幕滚动<ul><li>说明<ul><li>即屏幕会自动向上滚动，超出屏幕范围内的生命体便会消失</li></ul></li><li>寓意<ul><li>想要孕育新的生命需要不断向上，停滞便会被淘汰</li></ul></li></ul></li><li>边界<ul><li>说明<ul><li>生命体碰到边界便会消失</li></ul></li><li>寓意<ul><li>模仿子宫壁，若是生命体在不恰当的位置停留，便会被淘汰<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027132838.png" alt="子宫壁" style="zoom:67%;" /></li></ul></li></ul></li><li>隔断<ul><li>说明<ul><li>即路径中可能出现的粉色阻隔，生命体碰到便会消失</li></ul></li><li>寓意<ul><li>用绒毛的形象代替受孕生理过程中的阻碍，生命体若碰到便会消失<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027131926.png" alt="地图中随机生成的绒毛" style="zoom:80%;" /></li></ul></li></ul></li><li>掉落物<ul><li>说明<ul><li>即路径中可能掉落的白色球状物，生命体碰到便会消失</li></ul></li><li>寓意<ul><li>模仿白细胞，若是生命体碰到便会消失<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027132940.png" alt="随机掉落的白细胞" style="zoom:80%;" /></li></ul></li></ul></li></ul></li></ul></li><li>体验<ul><li>即期望玩家在游玩时获得的情感体验</li><li>在后面部分会展开描述，这里只进行列举<ul><li>生命诞生的不易</li><li>生命诞生的伟大</li><li>恍然大悟</li></ul></li></ul></li></ul><h3 id="目标体验分析"><a href="#目标体验分析" class="headerlink" title="目标体验分析"></a>目标体验分析</h3><p>前面提到了期望玩家能在游玩时获得的目标体验为生命诞生的不易和生命诞生的伟大，以下将对两种目标体验及实现手段进行分析。</p><ul><li>生命诞生的不易<ul><li>理解<ul><li>若想让玩家体会生命诞生的不易，便需要让其<strong>难以轻易通关</strong>，换言之便是会为玩家设计较高的游戏难度</li></ul></li><li>实现手段<ul><li>关卡难度<ul><li>地图设计<ul><li>整体的地图设计虽然简易，但也体现了<strong>先宽后窄</strong>的设计思想，目的是为了让玩家越往后的操作难度越大</li><li>而通过地图中最后的最窄部分也是玩家非线性体验的最高点  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027150313.png" alt="最难通过的部分" style="zoom:80%;" /></li></ul></li><li>障碍设计<ul><li>不管是在地图中随机生成的阻挡物（绒毛），还是在行进过程中随机掉落的白色球状物（白细胞），其目的都是为了增加玩家通关难度</li></ul></li></ul></li><li>操作难度<ul><li>生命机制<ul><li>最开始有很多生命，但只有一次发射机会，之后只能通过不断操作来操控生命体不断向前，一旦生命体被全部淘汰，整局游戏便结束。</li></ul></li><li>操作机制<ul><li>游戏采取的是反作用力机制<ul><li>即以玩家点击点为中心，会向周围施加反向推力</li></ul></li><li>单次点击所能施加的力很小<ul><li>单次点击所能施加的力很小，这就要求玩家需要高频次地点击屏幕，相对的，也对玩家的<em>微操</em>能力提出了更高的要求</li></ul></li></ul></li><li>这样的生命和操作机制使得想要操控的生命体越多，操作难度便越大。</li></ul></li></ul></li></ul></li><li>生命诞生的伟大<ul><li>理解<ul><li>若想让玩家体会生命诞生的伟大，考虑从量方面入手，一为<strong>增强生命诞生的不易感</strong>，二为<strong>增强通关的获得感和成就感</strong></li></ul></li><li>实现手段<ul><li>增强生命诞生的不易感<ul><li>这一点可以参考上一部分【生命诞生的不易】中的内容</li></ul></li><li>增强通关的获得感和成就感<ul><li>分别从视觉和听觉层面来强化该体验<ul><li>视觉层面<ul><li>即用数字明显标识最终通关的生命体的数量</li></ul></li><li>听觉层面<ul><li>在通关视觉信息呈现的同时，也呈现<strong>婴儿哭声</strong>作为听觉刺激，从而强化通关的获得感和成就感，目的也是为了让玩家体会“自己真的带来了新生命”的感觉<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027135400.png" alt="通关" style="zoom: 50%;" /></li></ul></li></ul></li></ul></li></ul></li></ul></li><li>恍然大悟<ul><li>解释<ul><li>玩家在开始游玩时其实并不知道整个游戏过程是对于受孕过程的模拟，只有最后通关后看到通关文字以及听到婴儿哭声后才反应过来，从而产生恍然大悟的感觉</li></ul></li><li>实现手段<ul><li>恍然前<ul><li>即揭晓游戏本身的背景是受孕模拟前，需要以尽可能隐喻的方式对游戏元素进行呈现</li></ul></li><li>恍然<ul><li>即揭晓游戏本身是对受孕过程的模拟，这需要强有力的刺激才能让玩家感受到恍然大悟，所以以视觉（文字）+听觉（婴儿哭声）刺激的形式共同呈现</li></ul></li></ul></li></ul></li></ul><h3 id="其他设计细节"><a href="#其他设计细节" class="headerlink" title="其他设计细节"></a>其他设计细节</h3><h4 id="反作用力机制"><a href="#反作用力机制" class="headerlink" title="反作用力机制"></a>反作用力机制</h4><ul><li>设计背景<ul><li>目标平台是手机，所以玩家的可选操作空间较少</li></ul></li><li>设计思考<ul><li>反作用力机制带来的操作不习惯<ul><li>和传统的“指哪儿打哪儿”的操作不同，反作用力机制下，玩家的操作会带来反作用力，一开始可能需要一些时间适应</li></ul></li><li>Fat Fingers Problem（胖手指问题）<ul><li>解释<ul><li>即人们在使用移动设备时因为设备和视觉的限制，导致人们无法直接看到自己所点击的位置，从而出现的误触（想点击的位置和真实被点击的位置不一致）问题</li></ul></li><li>解决<ul><li>视觉呈现<ul><li>通过为玩家点击位置添加【波纹】，来帮助玩家确定所点击的位置，此举同时也可以视作力的一种具象化<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027142958.png" alt="通过呈现波纹来缓解 Fat Fingers Problem" style="zoom:80%;" /></li></ul></li><li>全局机制<ul><li>玩家通过点击所造成的影响是全局的，即在屏幕中任意位置都可以对生命体施加反作用力，其中会涉及的两个变量是力的源头和力的大小<ul><li>力的源头<ul><li>以点击点为圆心，向周围方向施加反作用力</li></ul></li><li>力的大小<ul><li>为反作用力设计了衰减机制，距离生命体越远，则生命体最终受到的力便越小</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>反作用力的大小思考<ul><li>背景<ul><li>因为游戏是对着床这一生理现象的模拟，所以需要尽可能还原其自然选择和自由游动的状态</li></ul></li><li>反作用力大小的对比<ul><li>如果反作用力过大，那么会带来以下问题<ul><li>对自由游动这一状态的人为干预过大，对自然状态的还原度下降</li><li>反作用力过大会导致玩家操作难度极大上升，难以实现对生命体的微操</li><li>如果反作用力过大，那么即使是在有波纹的视觉辅助缓解了 Fat Fingers Problem，但是反而会产生的问题是玩家点击位置和最终的反馈点距离过远，即增大了玩家理解其操作所造成影响（系统反馈）的难度，导致玩家的操控感降低，这就是所谓的 Gulf of Evaluation 问题</li></ul></li><li>反之，反作用力小所带来的好处有<ul><li>更好地还原了“需要不断努力向前游动”这一生理过程</li><li>结合波纹，可以更好地感受到反馈</li><li>可以更好地进行微操</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="可能的扩展思路"><a href="#可能的扩展思路" class="headerlink" title="可能的扩展思路"></a>可能的扩展思路</h2><ul><li>关卡优化<ul><li>操作手感调整<ul><li>对力的大小进行调整，越往后的力越小，以凸显“力竭”的状态</li></ul></li><li>障碍物调整<ul><li>随着关卡的不断推进，可以在后期逐渐增多障碍物和掉落物，以增大通关游戏难度</li></ul></li><li>关卡拓展<ul><li>如为最后通关前增加【破壁】环节，以模拟进入卵巢的过程</li></ul></li></ul></li><li>增加社交元素<ul><li>如增加排行榜，以对比玩家表现</li></ul></li></ul><h2 id="可能的商业化思路"><a href="#可能的商业化思路" class="headerlink" title="可能的商业化思路"></a>可能的商业化思路</h2><p>如前所说，该游戏的目标平台是手机，所以最终预期成品的商业化思路是一次性买断制游戏。</p><h2 id="Gamejam-作品官方外链"><a href="#Gamejam-作品官方外链" class="headerlink" title="Gamejam 作品官方外链"></a>Gamejam 作品官方外链</h2><p><a href="https://v3.globalgamejam.org/2018/games/love-0">For Love</a></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第一章 太初之时 有设计师</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap1/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap1/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第一章-太初之时，有设计师"><a href="#第一章-太初之时，有设计师" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h2><h3 id="咒语"><a href="#咒语" class="headerlink" title="咒语"></a>咒语</h3><blockquote><p>我是游戏设计师</p></blockquote><h3 id="游戏设计师需要什么技能"><a href="#游戏设计师需要什么技能" class="headerlink" title="游戏设计师需要什么技能"></a>游戏设计师需要什么技能</h3><ul><li>动画</li><li>人类学<ul><li>了解受众</li></ul></li><li>建筑学<ul><li>世界的建造</li><li>人与空间的关系</li></ul></li><li>头脑风暴<ul><li>新想法的产生</li></ul></li><li>商业</li><li>电影制作方法<ul><li>镜头语言</li><li>有冲击力的情感</li></ul></li><li>沟通<ul><li>平息争论</li><li>了解彼此对于游戏的真实感受</li></ul></li><li>创意写作<ul><li>创造完整的虚拟世界及其中的住民</li><li>决定其中发生的一切</li></ul></li><li>经济学<ul><li>经济系统</li></ul></li><li>工程学<ul><li>有创意的设计师必须了解技术的局限和能力</li></ul></li><li>玩游戏<ul><li>相互借鉴</li></ul></li><li>历史<ul><li>汲取灵感</li></ul></li><li>管理<ul><li>共同目标</li><li>向上管理</li></ul></li><li>数学<ul><li>不能有所畏惧</li></ul></li><li>音乐<ul><li>触达灵魂</li></ul></li><li>心理学<ul><li>目标是令人感到幸福</li><li>了解心理运作机制</li></ul></li><li>公开演讲<ul><li>向人展示想法</li><li>自信、清晰、自然而有趣</li></ul></li><li>声音设计<ul><li>耳闻为实</li></ul></li><li>技术协作<ul><li>技术文档</li><li>不留遗漏</li></ul></li><li>视觉艺术<ul><li>熟练运用图形设计语言创造想要的感觉</li></ul></li></ul><h3 id="最重要的技能"><a href="#最重要的技能" class="headerlink" title="最重要的技能"></a>最重要的技能</h3><ul><li>倾听<ul><li>团队</li><li>受众</li><li>游戏</li><li>客户</li><li>自己</li></ul></li></ul><blockquote><p>需要经过思考来倾听</p></blockquote><blockquote><p>当我们倾听时,我们也将自己置于险境,接受这样的可能性:接下来听到的事情可能让我们心神倾覆,与我们的一切知识龃龉。这是开放思想的终极形式。这是了解真相的唯一途经。你必须像孩子一样看待一切,不带假设,观察全部,像赫尔曼·黑塞(Hermann Hesse)在《悉达多》中描述的那样:</p><blockquote><p>以一颗宁静的心灵、一种期盼而又宽容的心境去倾听,抛弃一切欲望和激情，抛弃一切评判与见解。</p></blockquote></blockquote><h4 id="五种倾听"><a href="#五种倾听" class="headerlink" title="五种倾听"></a>五种倾听</h4><ul><li>团队的声音<ul><li>互补</li><li>共享技能</li></ul></li><li>受众的声音<ul><li>了解他们的想法</li><li>胜于他们自身</li></ul></li><li>游戏的声音<ul><li>了解游戏的方方面面</li><li>知道哪里出了问题</li></ul></li><li>客户的声音<ul><li>辨别他们真正的需求</li></ul></li><li>自己的声音<ul><li>创意来源</li></ul></li></ul><h3 id="天才的秘密"><a href="#天才的秘密" class="headerlink" title="天才的秘密"></a>天才的秘密</h3><ul><li>天赋<ul><li>小天赋<ul><li>先天擅长</li></ul></li><li>大天赋<ul><li>对工作的爱</li></ul></li></ul></li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第一章-太初之时，有设计师-1"><a href="#第一章-太初之时，有设计师-1" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h3><ul><li><p>《太阳马戏团:火花-点燃我们心中的创意之火》 (Cirque du Soleil: The Spark-Igniting the Creative Fire that Lives within Us All) 约翰.U.培根 (John U. Bacon) 、琳恩·休厄德(Lyn Heward)著。这是一本很棒的小书,教你怎么找到自己的道路。</p></li><li><p>【游戏设计师修炼秘笈》 (Challenges for Game Designers) , Brenda Brathwaite、施雷伯(lan Schreiber)著。这是一套非常出色的习题集,当你想要锻炼游戏设计肌肉时可以做。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三章 体验发生与场景</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap3/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap3/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三章-体验发生于场景"><a href="#第三章-体验发生于场景" class="headerlink" title="第三章 体验发生于场景"></a>第三章 体验发生于场景</h2><h3 id="流沙般的平台"><a href="#流沙般的平台" class="headerlink" title="流沙般的平台"></a>流沙般的平台</h3><ul><li><p>我们把生活中使用技术的地方称之为场景</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813122146.png" style="zoom: 67%;" /></li></ul><h3 id="私人场景"><a href="#私人场景" class="headerlink" title="私人场景"></a>私人场景</h3><ul><li>游戏玩法常常具有私密性<ul><li>家<ul><li>安全</li><li>不孤单</li><li>不被人们包围</li></ul></li></ul></li></ul><h4 id="炉边"><a href="#炉边" class="headerlink" title="炉边"></a>炉边</h4><ul><li><p>人类定义的一个方面就是与火的关系</p><ul><li>光线</li><li>温暖</li><li>安全感</li></ul></li><li><p>例子</p><ul><li>任天堂 Wii<ul><li>为炉边设计</li><li>能让整个家庭一起玩</li><li>能在虚拟世界使用体感<ul><li>仅仅观赏游戏就能带来足够的快乐</li></ul></li></ul></li><li>舞力全开<ul><li>炉边跳舞</li></ul></li></ul></li></ul><h4 id="工作台"><a href="#工作台" class="headerlink" title="工作台"></a>工作台</h4><ul><li><p>感觉</p><ul><li>孤独</li><li>安静</li><li>有些凌乱</li></ul></li><li><p>工作台游戏</p><ul><li>难度更高</li><li>更紧张</li><li>持续时间长</li></ul></li><li><p>例子</p><ul><li>Valve Steam</li><li>魔兽世界和其他 MMORPG</li></ul></li></ul><h4 id="读书角"><a href="#读书角" class="headerlink" title="读书角"></a>读书角</h4><ul><li><p>典型读书角</p><ul><li>后仰姿势远离电视</li></ul></li><li><p>例子</p><ul><li>iPad 抓住了读书角的游戏机会</li></ul></li><li><p>读书角游戏 - 与读书体验类似</p><ul><li>难度更低</li><li>更简单</li><li>更放松</li></ul></li></ul><h3 id="公共场合"><a href="#公共场合" class="headerlink" title="公共场合"></a>公共场合</h3><ul><li>给予玩家在家中无法得到的体验</li></ul><h4 id="剧场"><a href="#剧场" class="headerlink" title="剧场"></a>剧场</h4><ul><li>特点<ul><li>大量人聚集</li><li>共同见证某事</li></ul></li></ul><blockquote><p>我们的潜意识能够感觉到其他人对这场表演的感受。这帮助我们专注于自己的感受。<br>这可能就是为什么电视秀总是播放哈哈大笑的声音——共同参与一种体验能够带来满足感</p></blockquote><ul><li>问题<ul><li>人太多了</li><li>游戏需要交互，想要成为每个玩家独特的体验<ul><li>交互的换了被大量座位打了折扣<ul><li>可能是因为人们容易感到疲倦</li><li>可能因为剧院太小而无法体现</li></ul></li></ul></li></ul></li></ul><h4 id="竞技场"><a href="#竞技场" class="headerlink" title="竞技场"></a>竞技场</h4><ul><li>特点<ul><li>庞大</li><li>露天</li><li>专为游戏玩法设计</li><li>输赢公开</li></ul></li></ul><blockquote><p>既然人们能够对他们所看到的游戏产生很强的兴奋感，许多<strong>竞技场的外围就是剧院</strong>，在一个地点创造了两种场景！</p></blockquote><ul><li>例子<ul><li>多人 FPS<ul><li>技术在工作台/炉边</li><li>大脑在竞技场</li></ul></li></ul></li></ul><h4 id="博物馆"><a href="#博物馆" class="headerlink" title="博物馆"></a>博物馆</h4><ul><li><p>特点</p><ul><li>从日常生活解放</li><li>观赏外来事物/浏览新的地点带来全新变化</li><li>拓宽知识</li><li>带回新观念 让家中熟悉事物焕然一新</li></ul></li><li><p>例子</p><ul><li>成都游戏展 GAMEON</li></ul></li></ul><h3 id="半公开-半私人场景"><a href="#半公开-半私人场景" class="headerlink" title="半公开/半私人场景"></a>半公开/半私人场景</h3><h4 id="游戏桌"><a href="#游戏桌" class="headerlink" title="游戏桌"></a>游戏桌</h4><ul><li>例子<ul><li>木板游戏</li><li>卡片游戏</li><li>骰子游戏</li></ul></li></ul><h4 id="操场"><a href="#操场" class="headerlink" title="操场"></a>操场</h4><ul><li>孩子们很喜欢</li><li>目前被忽视</li></ul><h4 id="随时随地"><a href="#随时随地" class="headerlink" title="随时随地"></a>随时随地</h4><ul><li><p>例子</p><ul><li>字谜</li><li>数独</li><li>找词语</li></ul></li><li><p>特点</p><ul><li>较低可玩性</li><li>简单互动和故事</li><li>只是为了填补碎片时间<ul><li>玩家并不倾向消费很多 可以的话希望免费</li></ul></li></ul></li></ul><h3 id="场景之间的混合与搭配"><a href="#场景之间的混合与搭配" class="headerlink" title="场景之间的混合与搭配"></a>场景之间的混合与搭配</h3><h4 id="3-号透镜：场景"><a href="#3-号透镜：场景" class="headerlink" title="3 号透镜：场景"></a>3 号透镜：场景</h4><ul><li>3号透镜:场景<ul><li>在我们的游戏设计中,我们玩游戏的场景对游戏会产生巨大的影响。为了确定你没有凭空设计游戏,问你自己这几个问题:<ul><li>我想要制作的游戏最适合哪种场景?</li><li>我的场景中是否有一些特殊的属性会影响到我的游戏?</li><li>我的游戏中有哪些元素能够与场景和谐共处?哪些元素不行?</li></ul></li></ul></li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第三章-体验发生与场景"><a href="#第三章-体验发生与场景" class="headerlink" title="第三章 体验发生与场景"></a>第三章 体验发生与场景</h3><ul><li>克里斯多弗·亚历山大等人撰写的《模式语言》 (A Pattern Language by Christopher Alexander et al)。这是一本令人深思的著作,讲述了人类与居住空间的关系。我们将会在第21章《空间》中再次介绍这本书。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二章 设计师创造体验</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap2/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap2/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二章-设计师创造体验"><a href="#第二章-设计师创造体验" class="headerlink" title="第二章 设计师创造体验"></a>第二章 设计师创造体验</h2><blockquote><p>游戏设计师真正关注的就是创造体验。</p></blockquote><h3 id="游戏不等于体验"><a href="#游戏不等于体验" class="headerlink" title="游戏不等于体验"></a>游戏不等于体验</h3><blockquote><p>游戏能够带来体验，但它并不是体验本身。</p></blockquote><blockquote><p>游戏设计师的能力需要通过想象体验的品质来衡量，因为这就是人们玩游戏的目的。</p></blockquote><h3 id="游戏特有于其他艺术形式的体验"><a href="#游戏特有于其他艺术形式的体验" class="headerlink" title="游戏特有于其他艺术形式的体验"></a>游戏特有于其他艺术形式的体验</h3><ul><li>书籍或剧本<ul><li>线性体验</li></ul></li><li>游戏<ul><li>非线性体验<ul><li>赋予玩家很强的控制能力</li><li>可以改变体验节奏/事件顺序</li><li>加入随机事件</li></ul></li></ul></li></ul><h3 id="追寻彩虹的三种途径"><a href="#追寻彩虹的三种途径" class="headerlink" title="追寻彩虹的三种途径"></a>追寻彩虹的三种途径</h3><ul><li>目标<ul><li>制作一种能够带来美妙和难忘体验的游戏</li></ul></li><li>三个学科<ul><li>心理学<ul><li>了解人类作出某种行为的机制</li></ul></li><li>人类学<ul><li>在人类层面上了解人们</li></ul></li><li>设计学<ul><li>让人们变得开心</li></ul></li></ul></li></ul><h4 id="心理学"><a href="#心理学" class="headerlink" title="心理学"></a>心理学</h4><ul><li>研究<ul><li>控制人类大脑的机制</li></ul></li><li>二十世纪早期分类<ul><li>行为学家<ul><li>只关注可量化行为</li><li>采用黑盒方式进行思维探究</li><li>主要工具是客观可控实验</li></ul></li><li>现象学家<ul><li>研究人类体验的本质和对事物的感受</li><li>主要工具是反思——在事情发生后感受自己的体验</li></ul></li></ul></li></ul><blockquote><p>游戏设计师不需要被科学的严谨责任感束缚,我们能够同时使用行为主义的实验和现象主义的反思学习我们想要了解的知识。因为<strong>作为设计师,我们并不关注客观现实世界中的绝对正确,而只关注在主观体验世界中的相对正确。</strong></p></blockquote><h4 id="人类学"><a href="#人类学" class="headerlink" title="人类学"></a>人类学</h4><ul><li><p>研究</p><ul><li>人类及其思想行为</li><li>采用比心理学更综合的方式观察人类<ul><li>身体</li><li>精神</li><li>文化</li></ul></li><li>研究世界上各种人群的相同点和不同点<ul><li>贯穿人类历史</li></ul></li></ul></li><li><p>方法</p><ul><li>field study<ul><li>居住在他们研究课题的所在地，尝试把自己完全融入到目标人群的世界中</li><li>努力客观地观察文化并进行实践，同时不断反思，将自己放在实验对象的位置。帮助人类学家 更好地想象实验对象的感受</li></ul></li></ul></li><li><p>与玩家交谈，学习他们的一切，把自己放到他们的位置，获得客观观点中没有的洞察力</p></li></ul><h4 id="设计学"><a href="#设计学" class="headerlink" title="设计学"></a>设计学</h4><ul><li><p>研究</p><ul><li>人类体验</li></ul></li><li><p>所有的设计原则都源于人类大脑，我们在理想情况下能够通过相同的心理学和人类学基础找到连接所有设计原则的方法。</p></li><li><p>我们必须开放四位并且勇于实践——优秀的创意能够来源于任何地方，但只有帮助提升游戏体验的创意才是好创意。</p></li></ul><h3 id="反思：力量、风险和实践"><a href="#反思：力量、风险和实践" class="headerlink" title="反思：力量、风险和实践"></a>反思：力量、风险和实践</h3><blockquote><p>通过深刻地体会自身的感受,观察评估和描述自己的体验,你能够对你的游戏做出迅速地判断:哪些地方做得不错,而哪些地方没有达到目标以及为什么。</p></blockquote><h4 id="危险-1：反思可能导致对事实的错误结论"><a href="#危险-1：反思可能导致对事实的错误结论" class="headerlink" title="危险 1：反思可能导致对事实的错误结论"></a>危险 1：反思可能导致对事实的错误结论</h4><blockquote><p>这一教训很简单:当处理人们的内心思维、尝试理解体验、感受事物时,反思是一种强有力且可信赖的工具。作为游戏设计师,我们不需要担忧这第一个危险。<strong>我们应当更加关注事物的感受而不是真实的正确。这样我们就能够更加信任自己的感受和本能去决定体验的品质。</strong></p></blockquote><h4 id="危险-2：自己的体验不一定适用于其他人"><a href="#危险-2：自己的体验不一定适用于其他人" class="headerlink" title="危险 2：自己的体验不一定适用于其他人"></a>危险 2：自己的体验不一定适用于其他人</h4><ul><li><p>“我只为与我一样的玩家设计游戏”有这些问题:</p><ul><li>游戏设计师更倾向于有特殊的偏好。也许与你一样的玩家的数量不足以让你的游戏具有投资价值。</li><li>你很难一个人设计或者开发游戏。如果团队中的不同成员对于最佳设计有不同的想法,你将很难与他们达成一致。</li><li>许多类型的游戏和受众都在你可接触的范围之外。</li></ul></li><li><p>“不能相信个人的观点”有这些问题:</p><ul><li>你无法用游戏测试解决所有的问题,尤其是在早期的设计阶段,你根本没有可供测试的游戏。这时候必须用“个人观点”的方法判定游戏设计的好坏。</li><li>在一个游戏完全成型之前,测试者也许难以接受一个非同寻常的创意。也许直到完成整个游戏时,他们才会欣赏这种想法。如果你不相信自己关于游戏好坏的感受,也许你的游戏本可以成为美丽的天鹅,但测试者认为只是个“丑小鸭”</li><li>游戏测试只能偶尔进行,但你每天都需要做出重要的游戏设计决定。</li></ul></li></ul><blockquote><ul><li>倾听！发掘自己的体验和其他人体验间的差异，把自己放到他们的位置上</li></ul></blockquote><h3 id="仔细分析想法"><a href="#仔细分析想法" class="headerlink" title="仔细分析想法"></a>仔细分析想法</h3><ul><li>想法需要具体<ul><li>是什么导致了感受</li><li>是什么让你思考</li><li>是什么让你做这件事</li></ul></li><li>你应该能分析任何可能产生的体验</li></ul><h4 id="1-号透镜：情感"><a href="#1-号透镜：情感" class="headerlink" title="1 号透镜：情感"></a>1 号透镜：情感</h4><ul><li><p>人们可能忘掉你的言语,但他们永远不会忘掉他们对你的感受。 一玛雅·安杰洛(Maya Angelou)</p></li><li><p>为了确定你创造的情感是正确的,问自己这几个问题:</p><ul><li>我希望玩家能够体验到怎样的情感?为什么?</li><li>当人们(包括我自己)玩游戏时,他们产生了怎样的情感?为什么?</li><li>我怎样缩小人们的实际体验与我的设想之间的距离?</li></ul></li></ul><h3 id="战胜海森堡原理"><a href="#战胜海森堡原理" class="headerlink" title="战胜海森堡原理"></a>战胜海森堡原理</h3><ul><li>反思仍然有一个巨大的挑战。我们怎样才能获得不受干扰的体验?由于观测行为本身就是一种体验。我们往往会面临这样一个问题。当你尝试观察自己打字时,你会发现你的打字速度减慢了,并且会产生很多错误。</li><li>在享受一个游戏或者电影时尝试观察你自己,享受感会很快消失殆尽。有人把这称作“分析的无奈”,也有人把这比作“海森堡原理”。<ul><li>这条原理引用自量子力学中的“海森堡不确定原理” 。</li><li>这个原理指出,无法在不干扰一个物体运动的情况下测量这个物体的运动。</li><li>类似的,体验的本质无法在不被干扰的情况下获得。</li></ul></li></ul><h4 id="分析记忆"><a href="#分析记忆" class="headerlink" title="分析记忆"></a>分析记忆</h4><ul><li>我们很难在体验发生时分析记忆</li><li>最好选择强有力的体验（通常会带来最好的灵感）和清晰的记忆进行分析<blockquote><ul><li>不要刻意抱着分析的目的玩游戏，而是等游戏结束之后，立即分析这段游戏的体验。</li><li>带着分析的目的能够帮助你记忆更多体验的细节而不会干涉体验本身。</li></ul></blockquote></li></ul><h4 id="两次经历"><a href="#两次经历" class="headerlink" title="两次经历"></a>两次经历</h4><ul><li><p>分析的另一个方法就是重复你的体验</p><ul><li>第一次不要停下来分析 —— 仅注重体验</li><li>第二次要分析所有的体验 <ul><li>甚至可以停下来记笔记</li></ul></li></ul></li><li><p>第二次经历体验会让脑海中一些纯粹的新鲜体验释放，让你有机会停下来思考体验的感觉和原因</p></li></ul><h4 id="暗中一瞥"><a href="#暗中一瞥" class="headerlink" title="暗中一瞥"></a>暗中一瞥</h4><ul><li><p>有没有可能观察体验而不破坏它</p><ul><li>偷偷的快速一瞥</li><li>在脑海中质疑并回答太多问题时，体验就毁了</li></ul></li><li><p>一个快速一瞥更像是</p><ul><li>“刺激吗” “是的” 这样的过程</li><li>立即停止分析回到体验中，直到下一次暗中一瞥</li></ul></li></ul><h4 id="默默观察"><a href="#默默观察" class="headerlink" title="默默观察"></a>默默观察</h4><ul><li>类似禅道自我审视</li><li>听从内心，理解人类本质</li></ul><h3 id="本质体验"><a href="#本质体验" class="headerlink" title="本质体验"></a>本质体验</h3><blockquote><p>一个优秀的游戏不需要你完美复制真实地体验。你需要做的是<strong>为你的游戏找出这种体验的精髓</strong>。</p></blockquote><ul><li><p>寻找能够定义所想要的体验的基本元素，并想办法让他们成为游戏中的一部分</p><ul><li>本质体验能够通过一种形式传递，这与真实的体验不同</li></ul></li><li><p>例子</p><ul><li>打雪仗<ul><li>天气很冷<ul><li>美术效果<ul><li>呼吸白气</li><li>动作颤抖</li></ul></li><li>音效<ul><li>呼啸寒风</li></ul></li><li>先关游戏规则<ul><li>脱去手套能够制造更好的雪球</li><li>手太冷就必须把手套穿上</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="2-号透镜：本质体验"><a href="#2-号透镜：本质体验" class="headerlink" title="2 号透镜：本质体验"></a>2 号透镜：本质体验</h4><ul><li><p>要想使用这个透镜,你需要停止你的游戏,开始思考游戏给玩家的体验。问你自己这几个问题：</p><ul><li>我想要让玩家获得怎样的体验?</li><li>这种体验的本质是什么?</li><li>我应该如何让我的游戏抓住这种体验的本质?</li></ul></li><li><p>需要清晰地表明想要创造的体验，找出尽可能多的方法把这种体验放入游戏中</p></li><li><p>例子</p><ul><li>will sports 棒球游戏<ul><li>本质体验：挥棒</li></ul></li><li>James Bond 007<ul><li>本质体验：风险行为</li><li>游戏机制：英雄点</li></ul></li></ul></li></ul><blockquote><ul><li>游戏设计师的终极目标是<strong>传达体验</strong></li></ul></blockquote><h3 id="你的感受都是真实的"><a href="#你的感受都是真实的" class="headerlink" title="你的感受都是真实的"></a>你的感受都是真实的</h3><blockquote><p>实际上所有对体验的讨论都会带来一个很奇怪的想法。我们所能了解的现实都是现实的体验。我们又知道我们的体验“并不是真的现实”。我们会用自己的意识和大脑过滤现实。<strong>我们实际体验到的意识是一种幻觉–一点也不真切。但这种幻觉是我们所能拥有的最真实的东西。因为这就是我们自己。</strong>这是个让哲学家头痛的问题,但是对游戏设计师是一件好事。这意味着<strong>我们的游戏创造了所设计的体验,并且这种体验可能比日常体验更真实,更有意义。</strong></p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第四章 体验从游戏中诞生</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap4/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap4/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第四章-体验从游戏中诞生"><a href="#第四章-体验从游戏中诞生" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h2><ul><li>所有类型的游戏都可以被视为一种<ul><li>桌面</li><li>卡牌</li><li>体育</li><li>操场</li><li>聚会</li><li>赌博</li><li>解密</li><li>街机</li><li>电子</li><li>电脑</li><li>视频</li><li>…</li></ul></li></ul><h3 id="定义的争吵"><a href="#定义的争吵" class="headerlink" title="定义的争吵"></a>定义的争吵</h3><blockquote><ul><li>我们面临的真正问题并不是缺少描述游戏设计元素的单词——而是对这些想法的真正含义缺少清晰的思考。</li><li>当你评判一个设计是好是坏以及原因的时候，你需要清楚地陈述你想要表达的意思</li><li>是否知道游戏设计的词汇并不重要——重要的是知道游戏设计的理念——我们认为这些词汇都无关紧要</li></ul></blockquote><blockquote><ul><li>定义术语能够让你清晰简洁并有分析性地进行思考</li></ul></blockquote><h3 id="什么是游戏"><a href="#什么是游戏" class="headerlink" title="什么是游戏"></a>什么是游戏</h3><ul><li><p>游戏是一种玩的东西</p></li><li><p>玩具是一些你可以玩的东西</p></li><li><p>玩具是一种可以玩的物品</p></li><li><p>好的玩具是一件玩起来很有乐趣的物品</p></li><li><p>乐趣是一种带有惊喜的愉悦感</p></li><li><p>什么是玩</p><blockquote><ul><li>玩耍就是漫无目的地浪费旺盛的精力。 -弗兰德里奇·席勒( Friedrich Schiller)</li><li>玩耍是指那些伴有愉悦、兴奋、力量和自我认知感的活动。 -.巴纳德·吉尔摩(J. Barnard Gilmore )</li><li>玩耍就是在一个更加坚固的结构中的自由移动。 -凯蒂·赛伦和埃里克·齐默尔曼( Katie Salen and Eric Zimmerman )《玩乐之道》（Rules of Play）</li><li>玩耍是那些自发的并且<strong>纯粹</strong>为此的活动。 –乔治·桑塔亚那(George Santayana )</li></ul></blockquote></li></ul><blockquote><p>我发现当我想要定义一个人类的活动时,减少关注这个活动本身而更多关注驱动这个活动的想法和感受会很有用。</p></blockquote><blockquote><ul><li>玩耍是沉迷于好奇心的活动</li></ul></blockquote><h4 id="4-号透镜：惊喜"><a href="#4-号透镜：惊喜" class="headerlink" title="4 号透镜：惊喜"></a>4 号透镜：惊喜</h4><ul><li>惊喜是一种我们很容易忘记的基础情绪。使用这个透镜来提醒你自己让你的游戏充满惊喜。问你自己这几个问题:<ul><li>当玩家们玩我的游戏时,什么会让他们感到惊喜?</li><li>我的游戏中的故事有惊喜吗?或者规则呢?或者艺术呢?或者技术呢？</li><li>你的规则能够让玩家之间互相带来惊喜吗?</li><li>你的规则能够让玩家们给自己带来惊喜吗?</li><li>惊喜是所有娱乐活动的重要组成部分–它是幽默、策略和解决问题的基础。我们的大脑很容易感受到惊喜。在一个实验中,测试者将糖水或者普通水喷到参与者的口中,获得随机模式喷雾的参与者会比获得固定模式喷雾的参与者有更好的体验,即使他们获得了同样数量的糖水。在另外的实验中,大脑扫描显示了即使在不愉快的惊喜中,大脑的愉悦中心也会被触发。</li></ul></li></ul><h4 id="5-号透镜：乐趣"><a href="#5-号透镜：乐趣" class="headerlink" title="5 号透镜：乐趣"></a>5 号透镜：乐趣</h4><ul><li>尽管有时候乐趣无法被分析,但在几乎所有的游戏中乐趣都是令人喜爱的。为了最大化游戏的乐趣,问你自己这几个问题:<ul><li>我的游戏中的哪个部分很有趣,为什么?</li><li>哪个部分需要变得更加有趣?</li></ul></li></ul><h4 id="6-号透镜：好奇心"><a href="#6-号透镜：好奇心" class="headerlink" title="6 号透镜：好奇心"></a>6 号透镜：好奇心</h4><ul><li>要使用这个透镜,思考玩家的真的动机-不是游戏的目标,而是玩家想要完成目标的真正原因。问你自己这几个问题:<ul><li>我的游戏给玩家的大脑提出了怎样的问题?</li><li>我正在做哪些努力让他们在意这些问题?</li><li>我能做什么来使他们提出更多的问题?</li><li>比如,一个解谜电子游戏在每一关中都可能有一个时间限定的目标。玩家们尝试回答这样一个问题: “我能在30秒之内找到过关的方法吗? ”一个让他们更加在意的方法是,当他们解决了任意一个谜题后播放一段有趣的动画,那么玩家就会问这样一个问题: “我想知道下一个动画是什么吗? ”</li></ul></li></ul><h3 id="不，认真一些，什么才是游戏呢"><a href="#不，认真一些，什么才是游戏呢" class="headerlink" title="不，认真一些，什么才是游戏呢"></a>不，认真一些，什么才是游戏呢</h3><ul><li>游戏<ul><li>游戏是一种对自主控制系统的练习,其中包含了力量的竞争,被规则限制以产生一个不平衡的结果。一艾略特·埃夫登和布莱恩·萨顿·史密斯 (Elliot Avedon and Brian Sutton-Smith)<ul><li>对自主控制系统的练习<ul><li>游戏与玩耍一样，是完全的自主行为</li></ul></li><li>力量的竞争<ul><li>游戏有目标</li><li>游戏也有冲突</li></ul></li><li>被规则限制<ul><li>游戏有其规则</li></ul></li><li>不平衡的结果<ul><li>游戏从平衡开始，最后有人获得了胜利</li></ul></li></ul></li><li>(游戏是)一个拥有内在意义的交互结构，需要玩家们努力完成目标。 —格雷格·科斯蒂基安(Greg Costikyan )<ul><li>交互结构<ul><li> 玩家是主动的</li><li> 游戏有一种结构（被规则定义），你可以与之交互，它也能与你交互</li></ul></li><li>努力完成目标<ul><li> 优秀的游戏的挑战恰到好处</li></ul></li><li>内生意义<ul><li> 内生：由器官或者系统的内部因素引起，或者内在发生</li><li>在游戏中有价值的部分也仅仅在游戏中才有价值<ul><li> 是游戏本身给了它这种意义</li><li> 游戏越吸引人，游戏中产生的内生价值就越大</li></ul></li><li>例子<ul><li>《大笨猫》 Bubsy<ul><li> 标准平台类游戏</li><li> 闯关 + 收集纱线球获得分数（分数只与收集了多少物品有关）</li><li> 玩家开始还会去收集 但后来完全忽视了纱线球 因为更高的分数并没有任何效果 即纱线球没有内在价值</li></ul></li><li>《刺客索尼克 2》 sonic the hedgehog 2<ul><li> 相似的平台游戏</li><li>可以收集戒指<ul><li> 携带截止能够保护避免被打败，每当收集到 100 个戒指就能获得新的生命，这增加了通关机会</li><li> 戒指有很强的内生价值</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>游戏是一个封闭的正式系统,会给玩家带来结构化的冲突,并产生一个不平衡的结果。一特雷西·富勒顿、克里斯·斯维因和史蒂文·霍夫曼 (Tracy Fullerton, Chris Swain, and Steven Hoffman)<ul><li>吸引玩家</li><li>一个封闭的正式系统<ul><li>系统<ul><li>游戏由相互关联并协同工作的元素构成</li></ul></li><li>正式<ul><li>系统被清晰地定义了，有其自己的规则</li></ul></li><li>封闭<ul><li>说明了系统边界</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="7-号透镜：内生价值"><a href="#7-号透镜：内生价值" class="headerlink" title="7 号透镜：内生价值"></a>7 号透镜：内生价值</h4><ul><li>7号透镜:内生价值<ul><li>一个游戏的成功与玩家认为它是否重要紧密相关。要使用这个透镜来思考一下,在你的游戏中,玩家对道具、目标和分数的感受。问你自己这几个问题:<ul><li>在我的游戏中哪些东西对玩家很有价值?</li><li>怎样让这些东西对玩家更有价值?</li><li>游戏中的价值与玩家的动机之间有怎样的关系?</li><li>记住,道具的价值和游戏的比分直观地反映了玩家想要在游戏中获胜的程度。通过思考玩家真正关心的事物及其原因,你就知道应该怎样改进你的游戏了。</li></ul></li></ul></li></ul><h4 id="游戏特性列表"><a href="#游戏特性列表" class="headerlink" title="游戏特性列表"></a>游戏特性列表</h4><ul><li><p>Q1 游戏是完全自主的</p></li><li><p>Q2 游戏有目标</p></li><li><p>Q3 游戏有冲突</p></li><li><p>Q4 游戏有规则</p></li><li><p>Q5 游戏有输赢</p></li><li><p>Q6 游戏是可交互的</p></li><li><p>Q7 游戏具有挑战性</p></li><li><p>Q8 游戏能够创造他自己的内在价值</p></li><li><p>Q9 游戏能吸引玩家</p></li><li><p>Q10 游戏是封闭的正式系统</p></li><li><p>人们为什么这么喜欢游戏</p><ul><li>喜欢解决问题</li></ul></li></ul><h3 id="解决问题的入门"><a href="#解决问题的入门" class="headerlink" title="解决问题的入门"></a>解决问题的入门</h3><ul><li>我们在解决问题时做了什么，怎样与游戏特性列表联系起来<ul><li>第一件事就是描述我们想要解决的问题<ul><li>Q2 游戏有目标</li></ul></li><li>为问题构建框架，确定其范围和问题空间的本质，也要确定可以用哪些方法来解决问题<ul><li>Q4 游戏有规则</li></ul></li><li>我们很难描述应该怎样去做。这并不是一个完整的口头进程。我们仿佛在大脑中建立了一个内在的最小简化版本的现实世界,这个世界只包含了一些用于解决问题的必要关系。它就像是一个更干净的微型现实世界环境,让我们可以更轻松地在其中思考、操作或者交互(Q6)。<ul><li>Q6 游戏是可交互的</li></ul></li><li>在某种意义上,我们确立了一个带有目标的封闭的正式系统(Q10) 。<ul><li>Q10 游戏是封闭的正式系统</li></ul></li><li>在我们努力完成目标时,会遇到许多挑战(Q7) ,因为这个系统包含了一些冲突(Q3) 。<ul><li>Q7 游戏具有挑战性</li><li>Q3 游戏有冲突</li></ul></li><li>如果我们在意这个问题,我们会很快沉浸到解决问题之中(Q9) 。<ul><li>Q9 游戏能吸引玩家</li></ul></li><li>这个时候,由于我们专注于内在的问题空间,我们会有些忘记现实世界。既然问题空间只是现实世界的一个简化版本,而解决问题对我们又很重要,那么如果问题空间中的元素能让我们更接近于解决问题的目标,这些元素很快就会获得一种内在的重要性,这种重要性不需要被关联到问题内容的外部(Q8) 。<ul><li>Q8 游戏能够创造他自己的内在价值</li></ul></li><li>最终,我们击败了这个问题或者被这个问题击败,这就是胜利或者失败(Q5)<ul><li>Q5 游戏有输赢</li></ul></li></ul></li></ul><blockquote><ul><li>游戏是一种解决问题的活动 —— 缺少 Q1</li><li>游戏是一种以嬉戏的态度进行的解决问题的活动</li></ul></blockquote><h4 id="8-号透镜：解决的问题"><a href="#8-号透镜：解决的问题" class="headerlink" title="8 号透镜：解决的问题"></a>8 号透镜：解决的问题</h4><ul><li>8号透镜：解决的问题<ul><li>要使用这个透镜,需要思考一下游戏中的问题。由于每个游戏都有一些等待解决的问题,在你的游戏中,玩家需要解决那些问题才能在游戏中获胜。问你自己这几个问题：<ul><li>我的游戏要求玩家解决哪些问题?</li><li>是否有一些隐藏的问题作为玩法的一部分出现?</li><li>在我的游戏中,怎样产生新的问题来对玩家保持吸引力?</li></ul></li></ul></li></ul><h3 id="我们努力的成果"><a href="#我们努力的成果" class="headerlink" title="我们努力的成果"></a>我们努力的成果</h3><ul><li>快乐是一种带有惊喜的满足感。</li><li>玩耍是一种满足好奇心的行为。</li><li>玩具是你玩耍的对象。</li><li>优秀的玩具是一个能够带来乐趣的物品。</li><li>游戏是一种以嬉戏的态度进行的解决问题的活动。</li></ul><blockquote><p>定义这些属于最终的目的是获得新的视角——这些视角才是我们努力的成果，而不是定义本身</p></blockquote><blockquote><p>我们无法在洞悉生命本身的全部事实之前了解玩乐的全部事实。 一雷曼和威蒂(Lehman and Witty)</p></blockquote><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第四章-体验从游戏中诞生-1"><a href="#第四章-体验从游戏中诞生-1" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h3><ul><li><p>罗格·卡洛伊斯撰写的《男人、玩乐与游戏》 (Man, Play, and Games byRoger Callois)。这本写于1961年的书长久以来都是学者们研究游戏的最爱。不仅如此,这本书对游戏玩法的本质有许多与众不同的观点,读起来让人爱不释手。</p></li><li><p>詹姆斯·P.卡斯撰写的《有限与无限的游戏》 (Finite and Infinite GamesbyJames P. Carse)。这是一本简短而令人鼓舞的书,它对游戏与生活的关系有着迷人的哲学陈述。</p></li><li><p>尼科尔·拉扎罗撰写的《我们为什么玩游戏:故事以外情感的四个关键要素》 (Why We Play Games: Four Keys to Emotion without Story by NicoleLazzaro) 。这是一次对乐趣维度的激进探索。</p></li><li><p>卡蒂·萨伦与埃里克·齐默尔曼撰写的《玩乐之道》的第7章与第8章 (Rules of Play by Katie Salen and Eric Zimmerman, Chapters 7 and 8) 。这两章包含了一些关于游戏定义的值得深思的结论。</p></li><li><p>巴纳德·休茨撰写的《蝈蝈:游戏、生活与乌托邦》 (The Grasshopper: Games, Life, and Utopia by Bernard Suits ( pronounced “sweets”) 。这是一场关于游戏本质的不可思议的心理学试验。休茨对游戏的定义激怒了我,然而我却无法驳倒他。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第五章 游戏由元素构成</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap5/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap5/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第五章-游戏由元素构成"><a href="#第五章-游戏由元素构成" class="headerlink" title="第五章 游戏由元素构成"></a>第五章 游戏由元素构成</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813200614.png" style="zoom: 50%;" /><h3 id="什么组成了小游戏"><a href="#什么组成了小游戏" class="headerlink" title="什么组成了小游戏"></a>什么组成了小游戏</h3><h3 id="四种基本元素"><a href="#四种基本元素" class="headerlink" title="四种基本元素"></a>四种基本元素</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813200747.png" style="zoom:67%;" /><ol><li>机制<ul><li>定义<ul><li>游戏中的过程和规则</li><li>机制描述了玩家怎样才能完成你的游戏目标，当他们尝试时，会发生什么。</li></ul></li><li>对比<ul><li>线性体验（小说、电影）并不包含机制，是机制让游戏成为了游戏</li></ul></li><li>与其他元素的关系<ul><li>当你选择了一系列对玩法有重要作用的机制时，需要选择技术来支持；需要选择美学来呈现；需要故事来让（有时很奇怪）机制吸引玩家</li></ul></li></ul></li><li>故事<ul><li>定义<ul><li>是游戏中事件展开的顺序</li><li>可能是线性/预先设定的；也可能是有分支/随机发生的</li></ul></li><li>与其他元素的关系<ul><li>当想通过游戏讲述故事</li><li>需要合适的机制来推动故事发展，让故事浮出水面</li><li>通过美学来加强故事表现力</li><li>通过技术来配合游戏中将要出现的特定故事</li></ul></li></ul></li><li>美学<ul><li>定义<ul><li>是游戏的外观、声音、气味、味道和感觉</li><li>对玩家体验有最直接影响，因而是游戏设计中非常重要的一个方面</li></ul></li><li>与其他元素的关系<ul><li>如果想让玩家体验到特定的外观、语音并让玩家沉浸其中</li><li>需要选择技术，不仅能够将美学表达出来，而且能够放大它们</li><li>需要选择一种机制让玩家们感受到游戏世界中的美学已经被确定了</li><li>需要一个有一系列事件的故事让美学在合适的时机凸显出来，展现出最强的影响力</li><li>美学能够强化其他游戏元素，创造一个更有纪念意义的体验</li></ul></li></ul></li><li>技术<ul><li>定义<ul><li>不是特指高科技</li><li>对于任何让你游戏实现的材质和交互，就像纸和铅笔，塑料原型或者高能激光一样，你选择的技术英爱能让你的游戏完成特定目标，并禁止它完成其他事情</li></ul></li><li>与其他元素的关系<ul><li>技术从本质上来讲是一种媒介</li><li>美学通过它展现</li><li>机制通过它产生作用</li><li>故事通过它被讲述</li></ul></li></ul></li></ol><blockquote><p>没有任何一种元素比其他的更重要</p></blockquote><h4 id="9-号透镜：四种元素"><a href="#9-号透镜：四种元素" class="headerlink" title="9 号透镜：四种元素"></a>9 号透镜：四种元素</h4><ul><li><p>9号透镜:四种元素</p><ul><li>要使用这个透镜,观察你的游戏实际上是由什么构成的,单独考虑各种元素然后将它们统一看待,问你自己这几个问题:<ul><li>我的游戏设计使用了全部的四种元素吗?</li><li>我的设计能够通过增强一种或者多种分类的元素来获得提高吗?</li><li>四种元素是否和谐,互相作用并向同一个主题努力?</li></ul></li></ul></li><li><p>例子</p><ul><li>太空侵入者<ul><li>技术:<ul><li>所有的新游戏在某种程度上都有所革新。《太空入侵者》背后的技术是为这款游戏量身定做的。这是第一款允许玩家与不断逼近的军队战斗的视频游戏。这个设计只有通过为它特地定制的主板才可以实现。通过这项技术,一系列新的游戏机制能够展现出来。这项技术也为这个目的而产生。</li></ul></li><li>机制: <ul><li>《太空入侵者》的游戏机制是崭新的,非常刺激。更重要的是,这很有趣并且是平衡的。玩家不仅能与外星人互相射击,还能躲在可被摧毁的盾牌之后(玩家自己也可以选择摧毁) 。不仅如此,通过设计神秘的飞碟,玩家还能获得额外的分数奖励。没有时间限制,因为游戏能够通过2种方式结束:玩家的飞船被外星人摧毁,或者外星人抵达玩家的星球。外星人靠得越近,就越容易射击,但是分数也越低。远处的外星人拥有更高的分数。另一个有趣的机制是,你每击落48个外星人,外星人的入侵就会加速。这带来了兴奋感,让有趣的故事体现出来。从根本上说, 《太空入侵者》背后的机制在当时十分坚固、平衡,而充满了革新。</li></ul></li><li>故事:<ul><li>这个游戏不需要故事。它本可以是个抽象的游戏,玩家操纵三角形向方块射击。但是故事能够让游戏更加令人兴奋并且更容易理解。《太空入侵者》的故事最初并不是一个关于外星人入侵的故事。它原本是这样一个游戏,你向逼近的人类军队开火。据说太东公司认为这会传达一种不好的信息,所以故事就改变了。一个关于外星人的新故事会更有效,理由如下:<ul><li>市面上已经发布了一些战争主题的游戏(例如, 1976年发布的《海狼》 (Sea Wolf) ) ,但当时关于外太空战争的游戏却十分新颖。</li><li>一些人对于在游戏中向人类射击感到恶心(1976年发布的《死亡竞速》 (Death Race)已经让暴力成为了视频游戏中的敏感问题)</li><li>高科技的电脑绘图技术让他们能够创造未来主题。</li><li>进攻的战士需要在地上跑步,这意味着游戏必须有一个从上至下的视角。《太空入侵者》给你这样一种感觉:外星人正在向你的行星表面降落,你正在朝上向他们射击。从某种程度上,悬停飞行的外星人是可信的,并让这个故事更有戏剧性。如果他们降落了,我们的末日就到了。故事的改变带来了摄像视角的改变。这对美术的变化也是戏剧性的。</li></ul></li></ul></li><li>美学:<ul><li>有人嘲笑它的视觉表现看起来很原始。但是设计师在游戏中设计了许多细节。外星人并不完全相同,他们有3种不同的设计,每一种都拥有不同的分数。他们有2帧效果不错的行进动画。它原本并不能显示颜色-但一种基本技术的改变解决了这个问题!既然玩家被限制在屏幕的底部,外星人在中部而飞碟在顶部,设计师设置了透明的彩色塑料条来分割屏幕,你地飞船和护盾是绿色的,外星人是白色的,飞碟是红色的。因为游戏的机制极大的增强了美术表现,这改变了游戏中的技术。声音是美学中一个重要的组成部分。行进的入侵者会产生一种心跳声。当它们加速时,心跳声也会加速,让玩家觉得身临其境。游戏中还有其他音效帮助讲述这个故事。最有纪念意义的是,当你的飞船被外星人的导弹击中时,会有惩罚性的嗡嗡声。但不是所有的美学都被禁锢在游戏本身里面,在《外星人入侵者》的街机筐体上,有一个引人注目的招贴画,简单地表现了外星人入侵者的故事。</li></ul></li><li>《太空入侵者》的成功的关键在一定程度上可以归功于这四种基本元素,它们都向同一个目标努力-让玩家体验到与外星人之间绚丽的太空战斗。每一种元素会兼顾其他的元素,一种元素的不足会激发设计师的灵感来调整其他元素。在通过元素四分透镜看待你的设计时,你需要拥有一些敏锐的洞察力。</li></ul></li></ul></li></ul><h3 id="皮肤与骨骼"><a href="#皮肤与骨骼" class="headerlink" title="皮肤与骨骼"></a>皮肤与骨骼</h3><ul><li><p>游戏的皮肤</p><ul><li>玩家体验</li></ul></li><li><p>游戏的骨骼</p><ul><li>组成游戏的元素</li></ul></li><li><p>游戏设计中的巨大挑战</p><ul><li>在理解元素及其关系是如何产生体验的同时感受游戏体验</li><li>你必须同时看到皮肤和骨骼<ul><li>如果只专注于皮肤<ul><li>会思考体验的感受</li><li>却不理解为什么会有这样的感受或者怎样提高这种感受</li></ul></li><li>如果只关注骨骼<ul><li>可能让一个游戏结构在理论上十分完美</li><li>而在实践中十分糟糕</li></ul></li><li>同时专注于这两件事<ul><li>就能在看到游戏运行的方式的同时感受到游戏体验的力量</li></ul></li></ul></li></ul></li></ul><h4 id="10-号透镜：全息设计"><a href="#10-号透镜：全息设计" class="headerlink" title="10 号透镜：全息设计"></a>10 号透镜：全息设计</h4><ul><li>10号透镜:全息设计<ul><li>要使用这个透镜,你必须一次性看到游戏的全部:四种元素和玩家体验,以及它们是怎样关联起来的。你可以把注意力从皮肤转移到骨骼再到皮肤,但更好的方法是全息观察游戏和体验。</li><li>问你自己这几个问题：<ul><li>游戏中的哪一种元素产生了令人享受的体验?</li><li>游戏中的哪一种元素会让玩家在体验中分心?</li><li>怎样改变游戏元素来提高游戏体验?</li></ul></li></ul></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第七章 游戏始于一个创意</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap7/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap7/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第七章-游戏始于一个创意"><a href="#第七章-游戏始于一个创意" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h2><h3 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h3><blockquote><p>秘密就是：不要从其他杂技演员那里寻找灵感——到其他地方去看看。</p></blockquote><h4 id="13-号透镜：无尽灵感"><a href="#13-号透镜：无尽灵感" class="headerlink" title="13 号透镜：无尽灵感"></a>13 号透镜：无尽灵感</h4><ul><li>13 号透镜：无尽灵感<ul><li>当你知道如何倾听时，每个人都可以成为大师。——拉姆·达斯（Ram Dass）</li><li>要使用这个透镜，不要思考你的游戏，也不要观察那些看起来差不多的游戏。正相反，你要四处看看。</li><li>问你自己这几个问题<ul><li>我的生活中有怎样的体验想要与他人分享？</li><li>有哪些小技巧可以让我捕捉到体验的本质，并把它纳入我的游戏中？</li></ul></li><li>使用这个透镜需要开放的心态和强大的想象力。你需要了解自己的感受，观察周围发生的一切事物。你必须尝试一些不可能的事——一场比武不可能用掷骰子的方式来获得兴奋感，一个电子游戏也无法让玩家害怕黑暗。使用这个透镜寻找一些非游戏体验，为你的游戏提供灵感。四个不同的元素（技术、机制、故事和美学）能够被一个单纯的灵感组合起来，也能构筑不同的灵感，你应该将它们混合起来创造一些崭新的游戏。当你以现实生活为基础作为方向指导你的决定时，你的体验将会获得无可匹敌的力量和独一无二的特点。</li><li>这个透镜与体验本质透镜（2 号透镜）能够结合起来。使用无尽灵感透镜来寻找美妙的体验，使用体验本质透镜将它们纳入你的游戏中。</li></ul></li></ul><p>灵感是最优秀的游戏背后隐藏的秘密之一。怎样才能将一个灵感变为一个伟大的游戏设计？</p><p>第一步就是承认你遇到了一个难题。</p><h3 id="陈述问题"><a href="#陈述问题" class="headerlink" title="陈述问题"></a>陈述问题</h3><p>设计的目的就是解决问题。想出创意之前，需要确定为什么要做这件事。好的问题描述能体现目标与约束。</p><blockquote><blockquote><p>“为什么”这件事实在是致命而重要</p></blockquote></blockquote><p>最初的问题描述可能是：</p><blockquote><p>怎样制作一款基于网页的，能让孩子们真正喜欢的游戏呢</p></blockquote><p>目标：孩子们真正喜欢的游戏<br>约束：web-based</p><p>这里其实并没有限定只能做游戏，所以可能需要用更宽泛的术语来重新描述问题：</p><blockquote><p>怎样才能创造出一种让孩子们喜欢的，基于网页的体验呢</p></blockquote><p>正确的问题描述很重要</p><ul><li>太宽泛：会想到不符合目标的设计</li><li>太狭窄：可能拒绝潜在的明智解决方案，因为认定只有特定类型解决方案才适用</li></ul><p>清晰陈述问题的优势：</p><ol><li>更广阔的的创造空间。</li><li>更清晰地评估。</li><li>更顺畅的交流。</li></ol><p>一个完整游戏设计将会覆盖所有四种基本元素：技术、机制、故事和美学。问题陈述往往会把你约束在一个或多个已确立元素之上。尝试陈述问题时，用四维度观点来检视陈述。</p><p>比如：</p><ol><li>怎样制作一个利用磁铁特性（机制限制）的有趣的桌面游戏（技术限制）</li><li>怎样制作一个能够讲述奇幻森林历险记（故事限制）的电子游戏（技术限制）</li><li>怎样制作一个感觉像超现实主义绘画（美学限制）的游戏</li><li>怎样改进俄罗斯方块（算是 故事限制吧？）</li></ol><p>把游戏看作问题的解决方案，这是一种有用的视角，也是 14 号透镜。</p><h4 id="14-号透镜：问题陈述"><a href="#14-号透镜：问题陈述" class="headerlink" title="14 号透镜：问题陈述"></a>14 号透镜：问题陈述</h4><p>要是用这个透镜，需要把你的游戏当做解决问题的方案。</p><p>问你自己这几个问题：</p><ul><li>我真正想要解决什么问题？</li><li>我是否做过一些与真正目标无关的游戏设定？</li><li>游戏是不是这个问题最好的解决方案？为什么？</li><li>我将怎样分辨出问题是否已经解决了？</li></ul><p>为游戏定义好约束条件和目标，并把这些作为问题陈述，这能帮助你更快地进入清晰的游戏设计中。</p><h3 id="如何睡眠"><a href="#如何睡眠" class="headerlink" title="如何睡眠"></a>如何睡眠</h3><blockquote><p>睡眠是产生创意的重要组成部分——优秀的设计师会最大化地利用睡眠的力量。</p></blockquote><p>接下来的部分（达利的秘密 3）是从超现实主义画家萨尔瓦多·达利（Salvador Dali）的书《五十个魔法技术的秘密》（Fifty Secrets of Magic Craftsmanship）中的摘录：</p><blockquote><p>利用睡眠的关键是你必须坐在一张扶手椅上，最好是西班牙风格的。让你的头后仰，靠在拉伸的皮革背面。把你的双手放置在椅子的扶手处。让你自己进入一个完全放松的状态。<br>在这种姿势下，你必须用左手的拇指与食指抓住一把沉重的钥匙并保持悬空的状态。在钥匙的下方事先放置好一个翻过来盘子。完成这些准备工作后，你只要等待午间的睡意轻轻袭来，仿佛你身体的方糖中凝结出了一滴精神上的美酒。钥匙从你的指尖滑落时，你会被掉落到盘子上的声音惊醒。你同样也能肯定，这个小憩在你无法获得真正的睡眠时是完全足够的，因为你知道通过这样的休息，你的整个身心都再次恢复了活力。</p></blockquote><h4 id="你的无声伙伴"><a href="#你的无声伙伴" class="headerlink" title="你的无声伙伴"></a>你的无声伙伴</h4><blockquote><p>我们被自己的潜意识迷惑和纠缠，以至于忘记了很久以来的事实，上帝主要在睡梦与幻觉中出现。 —— 卡尔·荣格（Carl Jung）</p></blockquote><blockquote><blockquote><p>确实，这些看似无意义的放松瞬间很多时候是创意与灵感真正涌出的时刻。</p></blockquote></blockquote><p>在梦中解决重要问题的实例：化学家凯库勒（Friedrich Von Kekule）在梦中想出了苯环的结构。</p><p>在某种层面上，潜意识就是我们的一部分：但在另一种层面上，它看起来又是分离的。一些人很不喜欢把潜意识当做另一个人的观点。<br>大多数人的创造性潜意识都有一些共同的特点：</p><ul><li>无法交谈。或者至少不选择用语言交流。它也不会通过文字交流，而倾向于通过想象力和情感交流。</li><li>冲动。不会提前做好规划，想要活在当下。</li><li>情绪化。会扫过你所有的感受，潜意识对事物的感受看起来比显意识（用荣格的话来说应该是自我）更加深刻和强大</li><li>贪玩。总是充满好奇心，喜欢玩文字游戏和恶作剧</li><li>荒谬的。不被逻辑和理性约束，潜意识带来的想法经常毫无意义。</li></ul><p>你如果正在做关于游戏的头脑风暴，你无声的伙伴会比你更强大！</p><h5 id="潜意识建议"><a href="#潜意识建议" class="headerlink" title="潜意识建议"></a>潜意识建议</h5><ol><li>潜意识建议 1：给予关注</li></ol><blockquote><p>“我们应该留意梦境吗？”约瑟夫问到，“我们能解读它们吗？”<br>大师看着他的眼睛，说到：“我们应该留意任何事，因为我们可以解读所有的事。” ——赫尔曼·海塞，《玻璃念珠游戏》<br>（Herman Hesse, The Glass Bead Game）</p></blockquote><p>与往常一样，倾听是关键，这一次是倾听你自己（的一部分）。<br>潜意识和其他人没有区别：若常被忽视，它会停止提供建议；若你习惯于倾听它，认真考虑它的想法，当它为你提供了一个优秀创意时感谢它，它就会开始给予更多更好的建议。</p><p>怎样倾听？<br>对你的思想、你的感受、你的情感以及你的梦境给予更多的关注，因为这些都是潜意识与你交流的方式。你对潜意识所表达的关注越多，它就会为你完成越多的工作。</p><blockquote><blockquote><p>最近的梦确实多了起来，谢谢你啊无声的朋友。</p></blockquote></blockquote><ol start="2"><li>潜意识建议 2：记录你的创意</li></ol><p>记下你的所有创意，会发生两件事。</p><ul><li>如果不记下来，你会把许多创意统统忘掉</li><li>你会清空你的大脑来思考其他事情</li></ul><blockquote><blockquote><p>别忘了重要的 5 ± 2 原则，认知容量，也就是人脑中能暂存的东西可是有限的 (￣▽￣)”</p></blockquote></blockquote><p>日本人把“记下想法从而清空大脑”这一过程称为“mizu no kokoro”，经常被翻译为“如水一般清澈的思维”。</p><p>便宜的录音机或录音应用也能发挥作用</p><blockquote><blockquote><p>但后面还得整理，可以的话还是直接记下来比较好。合适的手机软件或者随身带纸笔！</p></blockquote></blockquote><ol start="3"><li>潜意识建议 3：（明智地）满足它的欲望</li></ol><p>潜意识有其欲望，其中一些很原始。这些欲望看起来是它工作的一部分，就好像理性大脑的工作是决定哪些欲望可以被放心的满足和怎样去满足。</p><p>如果潜意识的某些欲望过于强烈，就会陷于其中。当它沉迷于此，就无法完成漂亮的创意工作了。</p><p>解决好那些让你分心的思想，它们可能来源于潜意识！<br>有选择地满足潜意识，不要听之任之。</p><ol start="4"><li>潜意识建议 4：睡眠</li></ol><blockquote><p>常识就是，晚上的难题在第二天早上会被解决，因为睡眠已经把它解决了。 —— 约翰·斯坦贝克（John Steinbeck）</p></blockquote><p>睡眠很重要，主要是为了大脑。</p><p>没有得到充足睡眠时，潜意识也会罢工。</p><ol start="5"><li>潜意识建议 5：尽力而为</li></ol><blockquote><p>那么现在，你必须开动你的脑筋，克制自己的活动，然后看看会出现怎样伟大的灵魂。 —— 拉尔夫·沃尔多·艾默生（Ralph Waldo Emerson）</p></blockquote><blockquote><p>我没有任何创意——它们准备好时才会让你知道。 —— 史蒂芬·莫法特（Stephen Moffat）</p></blockquote><p>到了嘴边的话说不出来？本来记得的东西突然想不起来了？放一放，一会儿自然会想起来。“自然”不是别的，是潜意识在帮你呢。</p><h4 id="个人关系"><a href="#个人关系" class="headerlink" title="个人关系"></a>个人关系</h4><p>每个人和潜意识的关系可能并不相同，重要的是找到适合自己的方法。<br>跟随直觉（被潜意识暗示）找到什么才是最有创造力的，然后不断尝试和实验。<br>探索吧！找到和潜意识的良好相处方式！</p><h3 id="十六个关键的头脑风暴建议"><a href="#十六个关键的头脑风暴建议" class="headerlink" title="十六个关键的头脑风暴建议"></a>十六个关键的头脑风暴建议</h3><blockquote><p>创造力就是为了那些不能再第一时间想到优秀创意的人准备的。—— 佚名</p></blockquote><ol><li>头脑风暴建议 1：记下答案</li></ol><p>记下来可以清空大脑，解放认知负载，让它更好的工作！为新创意腾出空间！</p><ol start="2"><li>头脑风暴建议 2：写字还是打字</li></ol><p>选择合适自己的就好</p><blockquote><blockquote><p>我觉得写在一张平面上（ipad 上也可以）其实效果会好一些</p></blockquote></blockquote><p>书中也写到他喜欢在没有线条的纸上书写，这样可以圈画，可以连线。最后再把有用的部分导入电脑。</p><ol start="3"><li>头脑风暴建议 3：草图</li></ol><p>不要怕画得不好，尽量尝试！<br>如果能生动表达创意，不仅会更容易记得，图画还会激发更多创意！</p><ol start="4"><li>头脑风暴建议 4：玩具</li></ol><p>选择一些和问题有关的玩具，再选一些无关玩具放到桌上！<br>玩具不只是通过外形，还通过触觉方式促进创造力<br>黏土！橡皮泥！为创意制作小小雕塑！</p><ol start="5"><li>头脑风暴建议 5：改变视角</li></ol><p>从另一个角度看待你的游戏。<br>不要只是坐在椅子上，试着站在椅子上！<br>尝试在在公交车上、海滩边、商场中，玩具店里头脑风暴！<br>任何能带来想象力或思考新事物的方法都值得一试——倒立！</p><ol start="6"><li>头脑风暴建议 6：沉浸自己</li></ol><p>已经陈述了自己的问题，现在将自己沉浸其中！<br>在商场中找到目标受众，他们在买什么？为什么？去偷听他们——他们在谈论什么？什么对他们很重要？你需要密切关注这些人。</p><p>你已经设定了一项技术了吗？学习关于它的一切——在你的墙上写满它的规则——找出它从未有人注意到的秘密。</p><p>你已经锁定了一个主题或故事线吗？找出其他相似的改变故事然后阅读他们。</p><p>你需要将一些古老的玩法机制推陈出新吗？找到所有运用这套机制的游戏，尽可能多地玩——还要玩一些不使用这套机制的游戏！</p><blockquote><blockquote><p>争取把以后家里的墙面做成可以写写画画的材质哈哈哈</p></blockquote></blockquote><ol start="7"><li>头脑风暴建议 7：开几个玩笑</li></ol><p>在头脑风暴过程中，一些笑话能够帮助你完成工作。<br>笑话能够放松我们的大脑，然后让我们从之前错过的角度看待事物，新角度就是新创意的源头！<br>笑话可能会让你们跑题，但要记得拉回正轨。</p><p>头脑风暴应该遵循一条规则：谁先跑题，就要负责将话题引回正轨。</p><ol start="8"><li>头脑风暴建议 8：不要节约</li></ol><p>头脑风暴不是节约的时候，不要让纸张和墨水成为创意的阻碍。</p><p>写大字！平铺纸面与想法！这样甚至可以有机会远距离地思考所有想法。</p><p>头脑风暴时需要做你认为感觉不错的事——任何你做的让你更有创造力的小事都能增加你想出伟大创意的机会。</p><p>找到合适自己的方式，找不到也不要纠结，不要忘了还有工作没有完成！</p><ol start="9"><li>头脑风暴建议 9：写在墙上</li></ol><p>墙上的方案可以让所有人能立刻看到</p><p>大的可以粘贴的纸也可以！（方便收纳，且易于复现）</p><blockquote><blockquote><p>刚说什么来着 (￣▽￣)”</p></blockquote></blockquote><ol start="10"><li>头脑风暴建议 10：空间记忆</li></ol><p>把创意放置在墙上的另一个理由是：我们对清单的记忆很糟糕，但我们对身边事物位置的记忆却很优秀。通过把围绕着你的创意放置在房间中，你能更清楚地记住它们的位置。</p><p>这很重要，因为你将要试着找到几十种创意之间的联系，你需要获得任何可能的帮助——尤其是如果要进行多个环节的头脑风暴。这样做的效果很显著。</p><ol start="11"><li>头脑风暴建议 11：记下所有东西</li></ol><blockquote><p>获得优秀创意的最佳方法就是先获得一大堆创意。 —— 莱纳斯·鲍林（Linus Pauling）</p></blockquote><p>已经有了钢笔、纸张、咖啡、玩具、黏土，所有你认为能让你富有创造力的东西。</p><p>写下一切觉得与问题隐隐相关的想法，愚蠢也无所谓！不要检查，写就完了！</p><ol start="12"><li>头脑风暴建议 12：为清单计数</li></ol><p>制作清单时，为它们标号，好处有二：</p><ol><li>让清单讨论起来更方便</li><li>标上数字后，清单条目就有了优先级</li></ol><p>有数字的清单在某种程度上看起来更重要，若是其中之一消失，会更容易让人察觉，这能让所有人更严肃地对待清单上的创意。</p><ol start="13"><li>头脑风暴建议 13：颠覆你的设定</li></ol><p>从设计师罗伯·达维奥（Rob Daviau）学到了这个建议</p><p>列出关于游戏的清单，包含认为假定正确的项目，如：</p><ul><li>假设游戏要在室内玩</li><li>假设玩家们将会看着屏幕</li><li>假设玩家只用一个手指触摸屏幕</li></ul><p>清单可能很长，一旦完成，浏览每一个条目，仔细思考如果这条假设是错的，游戏会怎样</p><p>大多情况，假设必须成立，但打破假设会给你带来深刻洞察力</p><ol start="14"><li>头脑风暴建议 14：组合和搭配分类</li></ol><p>一个帮助聚集创意的好办法：按照分类进行头脑风暴</p><p>四个基本元素（技术、美学、机制、故事）在这里很合适</p><p>假如决定为少女制作一款游戏，列出清单，开始互相组合搭配。一些清单如下：</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529013236.png" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529013303.png" style="zoom:25%;" /><p>一旦有了几份清单，自由组合搭配</p><ul><li>以类似俄罗斯方块的智能手机游戏</li><li>以动物为角色的医院主题游戏<br>有需要也可以设定其它分类</li></ul><ol start="15"><li>头脑风暴建议 15：自言自语</li></ol><p>独自进行头脑风暴时，有些人觉得自言自语很有帮助——大声说出一些事物比只在大脑中思考更实际。</p><p>找个合适地方，放心自言自语！</p><p>另一个技巧，如果在公共场合，假装打电话然后自言自语！</p><blockquote><blockquote><p>这也太搞笑了 </p></blockquote></blockquote><ol start="16"><li>头脑风暴建议 16：找一个搭档</li></ol><p>与其他人一起头脑风暴和自己单独头脑风暴完全不同<br>合适的头脑风暴搭档能为彼此创意互补</p><p>找一些人大声谈论，即使他们什么也没有说，有时也能让进展变得更快</p><p>一般来说，不多于四人的小团体最合适</p><p>记得限定头脑风暴范围</p><p>对于刚刚组建的团队，更好的解决方案可能是先独立进行头脑风暴，然后聚集在一起分享、交换和匹配创意</p><p>远离不好的（挑刺/偏好狭隘）头脑风暴搭档</p><h3 id="看看这些创意！接下来该怎么办"><a href="#看看这些创意！接下来该怎么办" class="headerlink" title="看看这些创意！接下来该怎么办"></a>看看这些创意！接下来该怎么办</h3><p>下一步是缩小宽泛的创意清单，用这些创意做一些有用的事</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第七章-游戏始于一个创意-1"><a href="#第七章-游戏始于一个创意-1" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h3><ul><li><p>林达·巴里撰写的《这是什么》和《设想一下》 (What It Is and PictureThis by Lynda Barry) 。这两本伟大的著作无缝整合了文字与艺术作品,它们将用创作过程中的残酷现实激励你,鞭策你。</p></li><li><p>萨尔瓦多·达利撰写的《五十个魔法技术的秘密》 (Fifty Secrets of Magic Craftsmanship by Salvador Dali) 。这本书并不出名,但它为创造天才的大脑打开了一扇新的窗户。</p></li><li><p>凯尔·加布勒,凯尔·格雷,马特·库契奇和沙林·舍第汗撰写的《怎样 在七天内完成一个游戏原型》 (Prototyping a Game in 7 Days by Kyle Gray, Kyle Gabler, Matt Kucic, and Shalin Shodhan) 。这篇短论文充满了对快速制作原型的绝妙建议。</p></li><li><p>朱利安·杰恩斯撰写的《左右脑分解中的意识起源》的第1章(The Origin of Consciousness in the Breakdown of the Bicameral Mind by Julian Jaynes Chapter 1) 。这本有争议的书会让你再次思考意识的本质以及你与潜意识的关系。</p></li><li><p>约拿·莱勒撰写的《群体思想:头脑风暴神话》 (Groupthink: The Brainstorming Myth by Jonah Lehrer in The New Yorker. January 30) 。这本书是对过去、现在和未来头脑风暴的概述。</p></li></ul><p> - 大卫·林奇撰写的《钓上大鱼》 (Catching the Big Fish by David Lynch)这本简短的书由一位电影制片人撰写,提供了一些绝佳的创意快照</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第六章 元素支撑起主题</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap6/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap6/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第六章-元素支撑起主题"><a href="#第六章-元素支撑起主题" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813203012.png" style="zoom:50%;" /><blockquote><p>一部伟大的著作必然有一个伟大的主题。—— 赫尔曼·梅尔維尔</p></blockquote><h3 id="微不足道的游戏"><a href="#微不足道的游戏" class="headerlink" title="微不足道的游戏"></a>微不足道的游戏</h3><ul><li><p>痛苦的现实</p><ul><li>在许多人的观念中，游戏只是一种毫无意义的消遣活动</li><li>一些人认为游戏，尤其是电子游戏，不可能具有深刻的意义，因为它们是粗制滥造的<ul><li>如 20 世纪初对于电影的争论</li><li>媒体技术的更新会让这种争论烟消云散</li></ul></li></ul></li><li><p>游戏的问题在于它是在最近才作为不严肃的表达媒介产生的。</p></li><li><p>我们的目标不是艺术化的表达，而是创造伟大的体验。</p></li></ul><h3 id="统一主题"><a href="#统一主题" class="headerlink" title="统一主题"></a>统一主题</h3><blockquote><p>如果你的设计围绕了一个单一的主题,那么它最大的优势就是<strong>游戏中的所有元素将互相强化,因为它们向着一个共同的目标发挥作用</strong>。在你制作游戏的过程中形成主题是再好不过的。你越快确定一个主题,接下来的制作将会越简单,因为你能够用一个简单的方式来<strong>决定哪些元素应该或者不该出现在你的游戏中</strong>:如果这个元素能够强化主题,就留下,反之就从游戏中去掉。</p></blockquote><ul><li><p>利用主题增强游戏体验的步骤</p><ul><li>步骤一<ul><li>确定你的主题是什么</li></ul></li><li>步骤二<ul><li>采用所有可能的方法来强化这个主题</li></ul></li></ul></li><li><p>什么是主题</p><ul><li>主题就是你的游戏是关于什么的<ul><li>这是一种能把整个游戏联系起来的创意——一种所有元素都必须支撑的创意</li></ul></li><li>大多数游戏的主题都基于体验<ul><li>设计的目标是给玩家传达必要的体验</li></ul></li></ul></li></ul><ul><li>例子<ul><li>大象<ul><li>设计师里奇·戈尔德(Rich Gold)在他的著作《丰饶》 (The Plenitude)中阐述了一个确定主题的简单案例。<ul><li>当他还是个孩子时,他拿起了一本关于大象的书。这本书的想法很简单:给孩子们传达一种体验,让他们能够理解大象是什么。在某种意义上,你会说这个主题就是“大象是什么?”那么,步骤1已经完成了。这把我们带到了步骤2:采用所有可能的方法来强化这个主题。作者很明显地这么做了-这本书包含了关于大象的各种各样的问题和图片。另外,他们把整本书包括封面和内页都裁剪为大象的形状。在每一次翻页中,你都需要寻找机会用更聪明和难以预期的方式来强化你的主题。</li></ul></li></ul></li><li>加勒比海盗：海盗宝藏之战<ul><li>让我们给出一个更详细的案例,这个案例是基于一个我为迪士尼制作的虚拟现实的游戏,它的名字叫作《加勒比海盗:海盗宝藏之战》 (Pirates of the Caribbean: Battle for the Buccaneer Gold) 。<ul><li>我们的团队(迪士尼VR工作室)被赋予了一项任务:为广受欢迎的加勒比海盗主题公园中的游乐设施制作一个交互改编的版本,让它可以出现在所有的迪士尼公园中。我们知道要把 它放入一个计算机增强虚拟环境中(Computer Augmented Virtual Environment,CAVE) ,这是一个位于迪士尼探索世界(迪士尼世界中的虚拟现实中心)中的带有3D投射的小房间,体验大约需要持续五分钟,但我们还没有设定故事线或者特定的游戏目标。</li><li>主题的确定<ul><li>主题开端：主题的吸引力将是关于海盗的</li><li>想要用哪种视角来看待海盗？<ul><li>可能的创意<ul><li>一步关于海盗的历史纪录片</li><li>一场海盗船之间的海战</li><li>一起搜寻海盗财宝的行动</li><li>海盗们是必须被打败的坏人</li></ul></li><li>艰难探索<ul><li>加勒比海盗的游乐设施并不是关于海盗本身，而是关于海盗的生活</li><li>整个游乐设施的目标就是满足人们的幻想：把社会规则泡在一边，开始成为一名真正的海盗！</li></ul></li><li>最终定题<ul><li>这不是历史的再现</li><li>也不是一个关于击败海盗的故事</li><li>而是在每个人内心中涌动的，成为海盗之梦</li></ul></li><li>主题<ul><li>海盗梦</li></ul></li></ul></li></ul></li><li>采用所有可能的方法来强化这个主题<ul><li>CAVE外形:<ul><li>过去我们通常使用正方形或六边形的CAVE。但这一次为了适合模拟一条海盗船,我们创造了一个全新的、带有四块屏幕的CAVE.</li></ul></li><li>立体投影:<ul><li>不是每个CAVE体验都会使用立体投影。但是我们选择这么做,因为立体投影能够带来纵深感。让你的眼睛聚焦于远方能够帮助你产生海上的感觉。</li></ul></li><li>定制的3D眼镜:<ul><li>许多剧院使用现成的3D眼镜。这种眼镜在侧边有遮挡物,会在看电影的时候分散人们的注意力。我们知道一个人的运动感在很大程度上会被周边的视野影响,所以这种遮挡物就是个问题了-由于玩家们无法获得足够的航海感,主题对他们的影响就减少了。我们与制造商达成了协议,定制了不带遮挡的3D眼镜。</li></ul></li><li>运动平台:<ul><li>我们想要让玩家感觉身处摇晃的船只上,一个运动平台看起来是个好主意,但是应该选用哪种类型呢?最终我们定制了一个充气的平台,因为它很像一艘船。</li></ul></li><li>操作界面:<ul><li>海盗梦的一部分是驾驶海盗船,而另一部分是发射大炮。原本我们能够使用控制手柄或者其他现成的硬件设施,但与主题并不搭配。最后,我们用舵轮驱动整艘船只,玩家能够操作一个真实的金属大炮瞄准和射击。</li></ul></li><li>视觉表现:<ul><li>我们需要把每个物体都变得漂亮。游乐设施的特性是一种“超现实”的外观,这完美地适合我们的主题。我们使用高端的图像硬件、大量的纹理和模型来完成相似的外观。</li></ul></li><li>音乐:<ul><li>尽管有些麻烦,我们获得了使用游乐设施中音乐的许可。它能够完美地衬托出主题并用一种怀旧的方式把游戏与游乐设施联系起来。</li></ul></li><li>音效:<ul><li>我们的音效设计师定制了一套包含十个扬声器的音效系统,这个系统能够从任意一个方向播放声音,让你感觉仿佛就在大海之上。一些扬声器的设计为只播放大炮爆炸声,它们被精确地设置在距离船只合适的位置上。这样大炮的音波就可以震撼你,你不仅能听到而且能感受到大炮的轰鸣。</li></ul></li><li>自由感:<ul><li>海盗是自由的代表。我们把游戏机制设计为让玩家能够航行到他们选择的任何海域,同时保证玩家获得兴奋的体验。我们将在第18章《空间控制》中详细讨论如何完成这一点。</li></ul></li><li>死人不会泄密:<ul><li>在游戏中处理死亡是一大难题。一些人建议既然这是个电子游戏,我们应该像传统的电子游戏一样处理这个问题:如果你死了,就会有一些惩罚,然后你就可以再次复活回归到游戏中。但但这并不适合海盗梦这样的主题-在海盗梦中,你不会死。即使你死了,也会以一个戏剧性的方式离开,而且你无法复活。更进一步地说,既然戏剧性是海盗梦的一部分,我们就要努力尝试为我们的五分钟体验保持戏剧兴趣曲线(将在第16章解释) 。如果玩家在游戏过程中突然死亡,就会毁了这种体验。我们的解决方案是让玩家们毫发无损地通过大部分的游戏,但是如果他们在体验过程中受到了太多的攻击,在最终的战斗结束时,他们的船只就会以戏剧性的方式沉没。虽然这打破了电子游戏的传统,但主题显然比传统更重要。</li></ul></li><li>宝藏:<ul><li>收集各种各样的部落宝藏是海盗梦的基本组成部分。不幸的是,在电子游戏中很难渲染出大堆真实的金子。我们使用了一项特殊的技术,可以让手绘的平面财宝看起来像是固态的三维物体,并把这些财宝放置在船的甲板上。</li></ul></li><li>灯光:<ul><li>我们需要点亮玩家所在的房间。怎样才能把灯光与主题结合起来?我们在灯上使用了特殊的滤镜,让光线上看起来好像是从水中反射而出的。</li></ul></li><li>摆放物品的地方:<ul><li>在人们玩游戏的时候,他们需要一个地方来放置他们的背包、钱包等。我们原本只需要制作一个架子,但我们没有这么做,而是用渔网制作了一个包,渔网看起来仿佛本身就属于这艘船。</li></ul></li><li>空调：<ul><li>场地上主管器材的人问我们,是否考虑过在游戏房间的何处放置空调的出风口。我们的第一想法是“谁在意呢? ”但是我们之后想到了“我们怎样利用空调加强我们的主题? ”最后,出风口被放置在船的前端向后吹风,所以玩家们会感觉到微风拂过,就像他们在船上航行一样</li></ul></li><li>蓝胡子的眼睛:<ul><li>我们无法找到让3D眼镜符合主题的好方法。我们试验过让它们看起来像是海盗帽和头巾,但效果并不好。一个机智的绅士提议道应该让玩家都带上眼罩,这样3D效果就没必要了。最终,我们放弃了这些想法。当游戏被装载进迪士尼世界时,我们亲自去尝试了一下。让我们惊讶的是,带领我们去甲板的角色成员预先声明道:“在登上甲板之前,你们必须戴上蓝胡子的眼睛。”这太令人惊奇了,因为这并不包含在给角色成员的“官方剧本”中。游乐设施的工作人员弥补了我们的失败设计。这是个简单有效的方式把一个从我们手中逃脱的细节主题化。这也有力地说明了当你有一个很强的统一主题时,团队中的任何人都能够更加简便地做出贡献。</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="11-号透镜：统一"><a href="#11-号透镜：统一" class="headerlink" title="11 号透镜：统一"></a>11 号透镜：统一</h4><ul><li>11号透镜:统一<ul><li>要使用这个透镜,就要尽可能地考虑这背后所有的原因。问你自己这几个问题：<ul><li><p>我的主题是什么?</p></li><li><p>我已经采用了所有可能的方法来强化这个主题吗?</p></li><li><p>统一透镜与9号透镜元素四分透镜很搭配。使用元素四分透镜从你的游戏中分割出元素,你就能够从统一主题的角度更方便地研究它们。</p></li></ul></li></ul></li></ul><h3 id="共鸣"><a href="#共鸣" class="headerlink" title="共鸣"></a>共鸣</h3><ul><li><p>最好的主题能够引起玩家的共鸣——这些主题能够触碰到玩家的内心深处</p></li><li><p>海盗梦</p><ul><li>一个有力的主题</li><li>因为每个人一度想要</li><li>在某种程度上，它与我们想要的自由欲望产生了共鸣——把我们从义务中解放出来，从担忧和关心中解放出来，让我们自由地做任何想做的事</li></ul></li><li><p>基于本质体验的主题和基于真相的主题</p><blockquote><p>当你设法触及某一共鸣性主题时,你就有了一些深刻而有力的东西——这些东西有一种真正的能力,能够让人们感动并给予他们一个卓越和革新的体验。我们之前讨论过的一些主题是基于体验的,传达一种本质的体验。当这种体验能够与玩家的幻想和欲望产生共鸣时,它就能迅速转变为对他们重要的体验。还有另外一种主题能够像基于体验的主题一样产生共鸣,有时甚至更加有力,这就是基于真相的主题。</p></blockquote></li><li><p>例子</p><ul><li>泰坦尼克号<ul><li>想一想电影《泰坦尼克号》。这部电影深深地打动了全世界的观众。为什么?</li><li>当然它拍摄得很好,有很棒的特效和甜蜜的(尽管有时过分感伤)爱情故事。但大多数电影都有这些元素。</li><li>特殊的是,电影中所有的元素都强化了一个深刻而能引起共鸣的主题。<ul><li>那么它的主题是什么?最初,你可能会认为它的主题就是泰坦尼克本身和它的悲剧事故。这当然是电影的一个重要组成部分。事实上,你可能争论说这是一个电影的主题之一,但并不是最重要的主题。</li><li>实际上最重要的主题不是基于体验的。相反的,它只是基于一个陈述,</li><li>我能够用一些像<strong>“爱情比生命更重要,比死亡更强大”</strong>这样的短语。</li><li>这是个有力的陈述,也是我们很多人在心中都深信不疑的陈述。</li><li>当然这不是一个科学真理,但对很多人来说,这是一个深埋心底,很少表达的个人真理。</li></ul></li><li>很多好莱坞的内部人员都不相信这个电影能够成功:因为观众们已经知道了电影的结局。但是你能找到一个比这艘会杀死几乎所有人的船更好的地方来讲述一个有着如此有力主题的故事吗?昂贵的特效不是毫无理由的——这些特效能够紧紧抓住主题的入口,我们一定觉得所有的都像是真的一样,就像我们身临其境,就像我们自己就要死了。</li></ul></li><li>魔女嘉莉<ul><li>史蒂芬·金(Stephen King)</li><li>他在写第二遍草稿时才意识到这是一个关于鲜血的小说<ul><li>不仅是恐怖电影的鲜血</li><li>而且是一种对鲜血的含义的探索<ul><li>从受伤到家庭羁绊到成年</li></ul></li><li>当他意识到这些时，他知道可以通过很多方式调整和强化这个故事</li></ul></li></ul></li><li>危机·遗产<ul><li>罗伯·达维奥(Rob Daviau)的奇幻桌面游戏《危机:遗产》 (Risk:Legacy)就是一个优秀的基于真相主题的案例。</li><li>在这个不同寻常的游戏中,达维奥完成了一些世界上其他桌面游戏从未有过的尝试——他创造了一种游戏机制,比如当你玩的时候,你的抉择总会永久地改变游戏。</li><li>这个规则坚持让你用不可移动的贴纸改变游戏板,用永久的马克笔在游戏板上书写来主张领地,扯掉和丢弃游戏卡片,甚至对游戏规则书做出永久性的改变。这些不同寻常的游戏机制很新颖,让人着迷,但是更重要的是,它们都强化了游戏的中心主题:“战争改变了世界。”</li></ul></li><li>海格力斯 hercules 的故事<ul><li>故事被再传播时会有偏差，但这些故事都有一个共同的元素。在每个故事中，海格力斯都非常高尚，所以他战胜了死亡。这个真理如此神课以至于它成为了很多信仰的核心：<strong>如果你足够高尚，你就能战胜死亡。</strong></li><li>迪士尼动画家在海格力斯和冥界之主哈迪斯 hades 冲突中体现了这个主题</li><li>我们继续把这个主题放到游戏中<ul><li>大部分故事发生在冥界</li><li>直到最后，你成功进入生者世界，并在空中与哈德斯战斗</li></ul></li></ul></li><li>卡通城 Online<ul><li>迪士尼首款大型多人游戏</li><li>无法确定主题<ul><li>卡通城虽然强大，但并不在任何一个地方有明确定义<ul><li>每个人对卡通城都有一个先入为主的印象——好像他们知道一直有一个特殊的地方，当卡通角色不在屏幕上时，都住在那里</li><li>这个事实有点令人惊悚</li><li>我们正在触及一些基本和隐藏的要素</li></ul></li><li>理想中卡通城样子的列表<ol><li>与朋友们开心地玩耍<ul><li>适合在线网络游戏</li></ul></li><li>逃离现实生活<ul><li>有很多层含义——卡通是一种优秀的逃离现实的形式</li></ul></li><li>天真的和超然的<ul><li>卡通城比现实世界更单纯，你在卡通城也比在现实世界中更强大</li></ul></li></ol></li><li>所有的这些都帮助我们阐明了我们想要在游戏中看到的事物,但是没有一个能告诉我们一个明确的主题。这些看起来更像是子主题。在某种程度上,我们意识到这三个特点一起增强了其中一些我们已经在第4章中讨论过的细节:<strong>玩</strong>。玩是关于获得快乐并与你的朋友们逃离现实,一个游戏世界比现实世界更单纯,而且你有更多的力量。但我们并不认为玩本身能够作为一个有力的主题。我们需要一些更加有冲突的元素。这就引导我们找到了<strong>游戏本质的反面:工作</strong>。这就很清楚-“<strong>工作vs.玩</strong>”将会是个强有力的主题。更详细的描述是, “<strong>工作试图消灭玩,但玩耍必须生存</strong>”,这就是我们找到的基于真理的主题。就像我们在第4章做的那样,<strong>把工作和玩换成“奴役”和“自由”,这个主题的力量就更加清晰了</strong>。这感觉就真的对了。我们想要创造一个孩子们和他们的父母能够一起玩的游戏,他们能够通过玩联系在一起——还有比探索他们生活中的主要冲突更好玩的事情吗?我们就这么做了。</li><li>《卡通城Online》就是这样一个故事:机器人管理员(齿轮们)想要把彩色的卡通城变为昏暗的办公室。卡通人物联合起来用笑话和恶作剧反抗这些齿轮,齿轮们则用办公用品反击。这个故事很奇怪,以至于它在公司中吸引了一些注意力,但我们对这个故事的成功有信心,因为我们知道它表达的主题能够引起观众的共鸣。</li></ul></li></ul></li></ul></li></ul><blockquote><ul><li>共鸣主题能把你的作品升华为艺术。艺术家会引领你进入无法独自到达的领域，而主题就是让你前行的工具。</li><li>当你找到一个深刻的共鸣主题，就值得你好好利用它。</li><li>这些主题中一些是基于体验的</li><li>另一些是基于真相的</li></ul></blockquote><h4 id="12-号透镜：共鸣"><a href="#12-号透镜：共鸣" class="headerlink" title="12 号透镜：共鸣"></a>12 号透镜：共鸣</h4><ul><li><p>12号透镜:共鸣</p><ul><li><p>要使用这个透镜,你必须去寻找隐藏的力量,问你自己这几个问题:</p><ul><li>在我的游戏中,能感觉到哪些有力的或者特殊的元素?</li><li>将我的游戏描述给他人听时,那些创意能让他们真的兴奋吗?</li><li>如果没有任何限制,这个游戏将会变成怎样?</li><li>我对这个游戏的方向有特定的直觉,那到底是什么在驱动这种直觉呢?</li></ul></li><li><p>共鸣透镜是一件安静美妙的乐器,也是一件倾听自己和他人的工具。我们把重要的事物都埋藏在内心的深处,当某些东西引起了它们的共鸣时,就会触动我们的内心。事实上这些隐藏的特性给了它们力量,也让我们难以寻找。</p></li></ul></li></ul><blockquote><p>共鸣主题能够为你的作品增加巨大的力量。但即使没有引发共鸣的特性，一个统一的主题依然能欧股通过集中的体验强化游戏</p></blockquote><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第六章-元素支撑起主题-1"><a href="#第六章-元素支撑起主题-1" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h3><ul><li>里奇·戈尔德撰写的《丰饶》 (The Plenitude by Rich Gold) 。在任天堂力量手套设计师的智慧宝库中,提供主题仅仅只是话题之一。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英雄联盟与王者荣耀玩家分段分析</title>
      <link href="2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/"/>
      <url>2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>据统计：</p><ul><li>《王者荣耀》玩家段位分布<ul><li>青铜 5.22% </li><li>白银 1.97% </li><li>黄金 10.37% </li><li>铂金 17.48%</li><li>钻石 20.24% </li><li>星耀 28.67%</li><li>最强王者 12.16%</li><li>荣耀王者 3.89% </li></ul></li><li>《英雄联盟》玩家段位分布<ul><li>黑铁 3.3% </li><li>青铜 19.0% </li><li>白银 32.0% </li><li>黄金 29.0% </li><li>铂金 11.0%</li><li>钻石 2.4% </li><li>钻石以上 3.3%</li></ul></li></ul><p>本文希望从该现象出发，分析其出现原因及各自优劣。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/%E5%88%86%E6%AE%B5%E6%8A%98%E7%BA%BF%E5%9B%BE.png"></p><p>首先以折线图形式看一下二者的分段分布情况，可以看到二者基本呈现正态分布，差异点主要在于英雄联盟玩家的段位分布高峰主要在白银（超过 42.86% 的段位），位居中游；而王者荣耀玩家的段位分布高峰主要在星耀（超过 75 % 的段位），接近最高段位。基于此观察回答进行如下分析：</p><h2 id="为什么存在段位分布上的差异"><a href="#为什么存在段位分布上的差异" class="headerlink" title="为什么存在段位分布上的差异"></a>为什么存在段位分布上的差异</h2><p>首先需要明确的是分段差异出现的原因是因为设计者的设计，个人认为产生分段差异的原因有以下几点：</p><ol><li><p>游玩门槛导致的玩家基数不同</p><ul><li>英雄联盟作为一款 PC 端游，其游玩需要特定的环境与设备支持，存在游玩门槛。</li><li>王者荣耀作为一款手游，与英雄联盟相比，其游玩的门槛大大降低。</li><li>由此导致的结果是王者荣耀的玩家数量远超英雄联盟。设计师需要为大多数玩家带来良好的游戏体验，而在大玩家基数的基础之上，设计师需要为更多不同背景的玩家设计契合的玩法机制。</li></ul></li><li><p>想要打造的游戏体验不同</p><ul><li>英雄联盟想要打造的游戏体验是竞技感<ul><li>作为一款成功的 MOBA 类端游，每一局游戏的胜利都需要玩家投入时间与精力到每一个小细节上，玩家所期待的就是辛苦经营之后的酣畅胜利。整体强调的是有来有回的竞技感、博弈感。所以玩家对于越往后，受到的阻力越大，升段就越难是有心理准备的。</li></ul></li><li>王者荣耀则更加注重娱乐性和满足感<ul><li>作为一款希望玩家能够随时随地掏出手机就能玩的大众手游，玩家所追求的就是时间短、频率高的爽快体验。从玩家角度而言，在爽快娱乐的心理预期下若是花费了时间与精力却总是受挫是不可接受的。设计师需要保障绝大部分玩家都呈现一个段位整体上升的趋势。虽然玩家对于升段有难度一事有心理准备，但要尽可能避免因为玩家产生“本来玩的时间也不多，过了这么久了还总是在原地踏步”这样的挫败感而带来的留存率下降问题。</li></ul></li></ul></li></ol><h2 id="什么系统设计导致了这样的差距"><a href="#什么系统设计导致了这样的差距" class="headerlink" title="什么系统设计导致了这样的差距"></a>什么系统设计导致了这样的差距</h2><p>从策划角度考虑该问题，即设计师为了达到目标体验而设计的不同路径与挑战。</p><ol><li><p>排位机制的不同</p><ul><li>英雄联盟中存在隐藏分机制，隐藏分机制的设置是为了让玩家的段位尽可能地体现出其真实水平，所以存在胜负之后的加减分波动很大的情况。这一点也和目标游戏体验有关，英雄联盟的目标游戏体验就是竞技感，而这一机制的设定也是为了体现竞技场上强者为尊的思想，所以在隐藏分和显示段位接近情况下，基本不可能出现低段位战胜高段位的情况。</li><li>王者荣耀中存在段位保护机制，并且不存在隐藏分机制，玩家的升降段直接由胜负场决定，并且可以显式看到。还是可以从目标游戏体验分析，王者荣耀的目标游戏体验是娱乐性和爽快感，在这过程中应该尽量减少玩家的挫败感，所以王者荣耀甚至为首次到达钻石/星耀的玩家提供了排位保护卡，目的也是为了能够让持续游玩的玩家的段位达到稳定上升的目的。</li></ul></li><li><p>操作复杂度的不同导致的操作上限</p><ul><li>英雄联盟作为 PC 端游，其操作依托键鼠，通常而言左手涉及十六个按键（QWER、ASDF、1234、Tab、Ctrl、Alt、空格），右手需要操控鼠标。</li><li>而王者荣耀作为手游，其操作依托屏幕，通常涉及几个手指。</li><li>由此带来了操作熟练度的上限，对于操作而言，英雄联盟中更高的段位通常意味着对于操作的更高要求，段位越高的玩家通常也越是能“突破极限”。而王者荣耀中由于操作复杂度被简化，更高段位的玩家的操作可能与段位稍低的玩家的操作之间不会有天壤之别，由此减小了玩家之间的差距，从而增加了王者荣耀玩家的升段可能性。</li></ul></li><li><p>其余细节设计</p><ul><li>以下几种机制都加速了王者荣耀的整体游戏进度，使得玩家所控英雄能在更短时间内成型，从而推进游戏进程，使得单位时间内玩家的游戏局数增加，从而增加了王者荣耀玩家的升段可能性。<ul><li>等级机制<ul><li>英雄联盟中满级为 18 级，升到满级基本需要 30 分钟。</li><li>王者荣耀中满级为 15 级，升到满级基本只需要 10 分钟。</li><li>王者荣耀中快速的升级机制使得整体游戏进度加快。</li></ul></li><li>补刀机制<ul><li>英雄联盟中存在补刀机制，即玩家需要对目标进行最后一击达成击杀，如此才可以获取经验和经济。否则只能获取到经验（需在一定范围内）。</li><li>王者荣耀中不存在补刀机制，只要玩家在死亡单位的一定范围内就可以获取经验和经济。</li><li>如此设计同样可以从目标游戏体验出发，结合上面提到的操作复杂度，此设计使得王者荣耀的操作要求变低，玩家更容易获得满足感。这也对英雄联盟玩家的对线操作及专注度提出了更高的要求。</li></ul></li><li>补给机制<ul><li>英雄联盟中，玩家所控制英雄只能通过泉水回复效果、辅助技能效果、物品效果（补给品或者装备特效）三种途径进行回复。</li><li>王者荣耀中，除以上途径外，还有塔后补给包机制以供玩家回复。</li><li>从王者荣耀的目标游戏体验出发，该设计增长了玩家的“作战”时间，从而减少由于“无聊”的回城时间带来的阻滞感。</li></ul></li><li>装备购买机制<ul><li>英雄联盟中，玩家只能在泉水一定范围内进行装备购买。</li><li>王者荣耀中，玩家可在任意位置购买装备。</li><li>从王者荣耀目标游戏体验出发，和补给机制一样，增加了玩家的“作战”时间，降低操作复杂度，目的也是为了降低操作门槛与阻滞感。</li></ul></li><li>地图设计的不同导致战斗爆发频率高<ul><li>英雄联盟中的地图很大，除使用冷却时间很长的传送技能（并且需要在单局游戏开始前选择携带）外只能选择步行，如果爆发战斗的地点太远，很难及时进行支援，这对玩家意识就有了更高的要求，同时也增加了战斗的策略性。</li><li>王者荣耀中的地图较小，这意味着只要进行短时间的周旋就能等到队友的支援。</li><li>如此设计使得王者荣耀中战斗爆发频率更高，从而加快了游戏进程。</li></ul></li></ul></li></ul></li></ol><h2 id="各自的优缺点"><a href="#各自的优缺点" class="headerlink" title="各自的优缺点"></a>各自的优缺点</h2><p>作为各自领域的成功之作，二者的优缺点都是在服务于目标游戏人群及其体验情况下的取舍。</p><ul><li>英雄联盟在玩家分段设计方面的优点<ul><li>很好地服务于竞技感这一目标游戏体验</li><li>能力至上，强者为尊</li></ul></li><li>英雄联盟在玩家分段设计方面的缺点<ul><li>对于普通玩家而言，由于各方面能力差距导致的失败很容易产生挫败感</li></ul></li><li>王者荣耀在玩家分段设计方面的优点<ul><li>很好地服务于娱乐性与满足感的目标游戏体验</li><li>尽可能地满足了更多玩家群体的游戏需要</li></ul></li><li>王者荣耀在玩家分段设计方面的缺点<ul><li>在连胜场数过高情况下出现的胜率制裁等机制，可能使得玩家体验受到影响</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>综上，英雄联盟与王者荣耀的玩家分段不同主要是由于不同的玩家基数与目标游戏体验不同，导致设计师针对目标玩家群体及其游戏体验设计了包括排位、补刀、补给、装备购买、地图设计等不同机制，目的都是为了给玩家们带来更好的游戏体验。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神将三国游戏体验报告</title>
      <link href="2021/07/26/shen-jiang-san-guo-game-experience-report/"/>
      <url>2021/07/26/shen-jiang-san-guo-game-experience-report/</url>
      
        <content type="html"><![CDATA[<h1 id="神将三国游戏体验报告"><a href="#神将三国游戏体验报告" class="headerlink" title="神将三国游戏体验报告"></a>神将三国游戏体验报告</h1><h2 id="1-报告基础信息"><a href="#1-报告基础信息" class="headerlink" title="1. 报告基础信息"></a>1. 报告基础信息</h2><h3 id="1-1-游戏名称：神将三国"><a href="#1-1-游戏名称：神将三国" class="headerlink" title="1.1 游戏名称：神将三国"></a>1.1 游戏名称：神将三国</h3><h3 id="1-2-游戏版本：1-17-1"><a href="#1-2-游戏版本：1-17-1" class="headerlink" title="1.2 游戏版本：1.17.1"></a>1.2 游戏版本：1.17.1</h3><h3 id="1-3-体验设备：iPhone-SE2"><a href="#1-3-体验设备：iPhone-SE2" class="headerlink" title="1.3 体验设备：iPhone SE2"></a>1.3 体验设备：iPhone SE2</h3><h3 id="1-4-系统版本：iOS-14-6"><a href="#1-4-系统版本：iOS-14-6" class="headerlink" title="1.4 系统版本：iOS 14.6"></a>1.4 系统版本：iOS 14.6</h3><h3 id="1-5-体验时间：2021-7-19-2021-7-25"><a href="#1-5-体验时间：2021-7-19-2021-7-25" class="headerlink" title="1.5 体验时间：2021.7.19 - 2021.7.25"></a>1.5 体验时间：2021.7.19 - 2021.7.25</h3><h2 id="2-报告目的"><a href="#2-报告目的" class="headerlink" title="2. 报告目的"></a>2. 报告目的</h2><p>体验下载-注册-游玩的全流程，对游戏进行整体体验，分析其游戏定位、整体目标感、核心玩法定位，发掘其设计闪光点及可优化点。</p><h2 id="3-游戏进程及游戏整体分析"><a href="#3-游戏进程及游戏整体分析" class="headerlink" title="3. 游戏进程及游戏整体分析"></a>3. 游戏进程及游戏整体分析</h2><h3 id="3-1-游戏进程"><a href="#3-1-游戏进程" class="headerlink" title="3.1 游戏进程"></a>3.1 游戏进程</h3><p>截止完成报告时，主线任务推进到第七章，势力值达到 354。</p><p>阵营中盟主【贞德】的贡献为 132733，战功为 572，势力值为 21172。</p><ul><li>阵营贡献<ul><li>  主公通过攻占资源地、击败敌对阵营主攻部队、击杀城池守军、攻打城池、捐献资源和预备兵可获得贡献；近侍官职还可通过建设军旗、拒马、箭塔获得贡献</li><li>  每个途径可获得贡献有上限，达到上限后该途径不再获得贡献，每个纪年（8 天）重置一次上限</li></ul></li><li>官职晋升条件<ul><li>  阵营贡献达到官职要求时，可申请晋升官职</li><li>  六阶以上官职将分为武将、文丞、近侍三类，每一类有独立的晋升通道和官职特权</li><li>  同一级不同类的官职可进行调任，调任后一纪年内不可再次调任</li></ul></li><li>服务器中不同官阶玩家贡献及势力值一览<style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-baqh{text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead><tr>  <th class="tg-fymr">描述 </th>  <th class="tg-1wig">主线进度 </th>  <th class="tg-1wig">官阶 </th>  <th class="tg-0lax"> 贡献需求 </th>  <th class="tg-1wig"> 本年贡献 </th>  <th class="tg-1wig">势力值 </th></tr></thead><tbody><tr>  <td class="tg-0lax">个人进展 </td>  <td class="tg-0lax">第七章 </td>  <td class="tg-0lax">布衣 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">0 </td>  <td class="tg-0lax">354 </td></tr><tr>  <td class="tg-0lax">布衣中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">布衣 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">62913 </td>  <td class="tg-0lax">15322 </td></tr><tr>  <td class="tg-0lax">伍长中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">九阶-伍长 </td>  <td class="tg-baqh" rowspan="2">2000 </td>  <td class="tg-0lax">3595 </td>  <td class="tg-0lax">1257 </td></tr><tr>  <td class="tg-0lax">伍长中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">九阶-伍长 </td>  <td class="tg-0lax">8032 </td>  <td class="tg-0lax">3322 </td></tr><tr>  <td class="tg-0lax">什长中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">八阶-什长 </td>  <td class="tg-baqh" rowspan="2">5000 </td>  <td class="tg-0lax">7076 </td>  <td class="tg-0lax">5227 </td></tr><tr>  <td class="tg-0lax">什长中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">八阶-什长 </td>  <td class="tg-0lax">17050 </td>  <td class="tg-0lax">5077 </td></tr><tr>  <td class="tg-0lax">百人将中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">七阶-百人将 </td>  <td class="tg-baqh" rowspan="2">10000 </td>  <td class="tg-0lax">13259 </td>  <td class="tg-0lax">4644 </td></tr><tr>  <td class="tg-0lax">百人将中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">七阶-百人将 </td>  <td class="tg-0lax">20990 </td>  <td class="tg-0lax">5090 </td></tr><tr>  <td class="tg-0lax">六阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">六阶-牙门将 </td>  <td class="tg-baqh" rowspan="2">20000 <br> </td>  <td class="tg-0lax">35290 </td>  <td class="tg-0lax">8920 </td></tr><tr>  <td class="tg-0lax">六阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">六阶-牙门将 </td>  <td class="tg-0lax">49699 </td>  <td class="tg-0lax">14095 </td></tr><tr>  <td class="tg-0lax">五阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">五阶-虎卫 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">50209 </td>  <td class="tg-0lax">21227 </td></tr><tr>  <td class="tg-0lax">五阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">五阶-虎卫 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">90978 </td>  <td class="tg-0lax">25773 </td></tr><tr>  <td class="tg-0lax">四阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">四阶-虎贲骁骑 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">142638 </td>  <td class="tg-0lax">25123 </td></tr><tr>  <td class="tg-0lax">四阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">四阶- 先登骁骑 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">102613 </td>  <td class="tg-0lax">18063 </td></tr><tr>  <td class="tg-0lax">三阶官职中贡献最低 </td>  <td class="tg-0lax" colspan="5" rowspan="8">空缺 <br> <br> </td></tr><tr>  <td class="tg-0lax">三阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">二阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">二阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">从一阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">从一阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">一阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">一阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">盟主 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">盟主 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">132733 </td>  <td class="tg-0lax">21172 </td></tr></tbody></table></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143343.png"></p><h3 id="3-2-玩家目标分析"><a href="#3-2-玩家目标分析" class="headerlink" title="3.2 玩家目标分析"></a>3.2 玩家目标分析</h3><p>从上表中可以看出，整体而言，官阶越高，则贡献/势力值越高。玩家目标可从以下两方面进行划分：</p><ul><li>战斗+养成目标<ul><li>  势力值不断提高</li></ul></li><li>社交目标<ul><li>  贡献值不断提高</li><li>  官阶不断提高</li></ul></li></ul><h3 id="3-3-差距点设计"><a href="#3-3-差距点设计" class="headerlink" title="3.3 差距点设计"></a>3.3 差距点设计</h3><p>从图中可以看出，整体而言，随着官阶提升，相应贡献有显著提升，但是势力值上涨趋于平缓。</p><ul><li><p>设计者希望玩家拉开差距的地方 - 贡献</p><ul><li><p>原因</p><ul><li><p>贡献可看作玩家在社交+养成系统的投入，如此设计是为了</p><ol><li> 调动玩家社交积极性，鼓励玩家持续游戏</li><li> 调动玩家自豪感+阵营归属感，鼓励阵营内部合作竞争</li></ol></li></ul></li></ul></li><li><p>设计者不希望玩家拉开差距的地方 - 势力</p><ul><li><p>原因</p><ul><li><p>势力可看作玩家战力值的体现，如此设计是为了</p><ol><li> 让玩家的战力最终趋同，使不同阵营间的高等战力有相较之力</li><li> 防止头部玩家对其他玩家形成不可控的碾压局势</li></ol></li></ul></li></ul></li></ul><h3 id="3-4-游戏时长-amp-进度分布"><a href="#3-4-游戏时长-amp-进度分布" class="headerlink" title="3.4 游戏时长 &amp; 进度分布"></a>3.4 游戏时长 &amp; 进度分布</h3><p>以我个人为例，我的有效游戏时间接近 2 小时，物理时间为 7 天，势力值为 354，花费金额为 6 元。以最简单的线性函数来算要达到四阶官阶的时间：</p><ul><li>计算过程<ul><li>  取四阶官阶的势力值均值 = 21593</li><li>计算单位有效时间<ul><li>  2 小时 / 7 天 = 0.2857 小时/天</li></ul></li><li>计算单位有效时间的势力值增长<ul><li>  354 / 单位有效时间 = 1239 势力值 / 小时</li></ul></li><li>计算达到四阶官阶所需的有效时间<ul><li>  21593 / 单位有效时间的势力值增长 = 17.42776 小时</li></ul></li><li>计算物理天数<ul><li>  有效时间 / 单位有效时间 = 60.997 天</li></ul></li></ul></li><li>  也就是以最简单的线性函数估计玩家若是需要到达一个服务器的第一梯队约需要两个月的时间，而根据版本更新记录可知一个赛季时长约为 3-4 个月，计算与实际相符，即玩家在达到第一梯队后还有很长一段时间可以深度参与阵营间的合作竞争。</li></ul><h3 id="3-5-游戏未来设计趋势"><a href="#3-5-游戏未来设计趋势" class="headerlink" title="3.5 游戏未来设计趋势"></a>3.5 游戏未来设计趋势</h3><ul><li>游戏未来设计趋势为<ul><li>加强服务器间竞争<ul><li>  未来服务器合并后，同服务器玩家需要共同对抗外服务器玩家</li></ul></li><li>丰富已有机制<ul><li>  地图</li><li>  资源类型</li><li>  建筑类型</li><li>  兵种</li><li>  副本</li><li>  战役</li></ul></li></ul></li><li>推测依据<ul><li>  更多-天下大势-天下大势-阵营合作+竞争</li><li>  更多-天下大势-赛季说明-阵营竞争</li><li>  版本更新记录</li></ul></li></ul><h2 id="4-详细体验流程"><a href="#4-详细体验流程" class="headerlink" title="4. 详细体验流程"></a>4. 详细体验流程</h2><h3 id="4-1-下载"><a href="#4-1-下载" class="headerlink" title="4.1 下载"></a>4.1 下载</h3><h4 id="搜索情况"><a href="#搜索情况" class="headerlink" title="搜索情况"></a>搜索情况</h4><ul><li>  在 App Store 中搜索神将三国，第一个便是目标游戏。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143444.png" style="zoom:25%;" /><h4 id="游戏定位"><a href="#游戏定位" class="headerlink" title="游戏定位"></a>游戏定位</h4><ul><li>  搜索后可看到其名称中已经标注了游戏定位：<code>国战策略 slg 攻城手游</code>。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143507.png" style="zoom:25%;" /><h4 id="评分情况"><a href="#评分情况" class="headerlink" title="评分情况"></a>评分情况</h4><ul><li><p>  可以看到其拥有 4301 个评分，总评分高达 4.4/5，在模拟类排行榜中排行 83，是不错的成绩。</p></li><li><p>从截取的最有帮助的和差评中可以提取出以下负面评价关键词，可以为版本迭代提供一些思路</p><ul><li><p>  bug</p></li><li><p>闪退</p></li><li><p>卡顿</p></li><li><p>平衡性太差</p></li><li><p>  工作室太多</p></li></ul></li></ul><blockquote><p>玩家的评价是版本迭代的重要参考之一，既会影响潜在玩家的游玩可能性，也可以提示策划们可以对玩家哪方面的游戏体验进行优化</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/%E8%AF%84%E5%88%86%E5%8F%8A%E8%AF%84%E8%AE%BA.jpg" style="zoom:25%;" /><h4 id="版本历史记录"><a href="#版本历史记录" class="headerlink" title="版本历史记录"></a>版本历史记录</h4><ul><li><p>  可以看到最早的版本 1.0.0 发布于六个月之前，之后的一个月进行了四次更新，之后的更新频率约为一个月一次，最近一次更新在一周前。</p></li><li><p>  整体更新频率较高，说明项目组活跃程度较高</p></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143934.png" style="zoom:25%;" /><h4 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h4><ul><li>  该游戏共提供了俄文、日文、泰文、简体中文、繁体中文、英文、越南文、韩文共 8 种语言，可见其在海外市场也有布局。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143955.png" style="zoom:25%;" /><h4 id="游戏大小"><a href="#游戏大小" class="headerlink" title="游戏大小"></a>游戏大小</h4><ul><li><p>  542.5 MB</p></li><li><p>  比起动辄 10G+的手游，该大小让用户不需要太久地等待便可开始游玩。</p></li></ul><h3 id="4-2-注册"><a href="#4-2-注册" class="headerlink" title="4.2 注册"></a>4.2 注册</h3><h4 id="一键试玩"><a href="#一键试玩" class="headerlink" title="一键试玩"></a>一键试玩</h4><ul><li>  可以看到游戏中提供了一键试玩机制，可以让玩家直接进行体验，别有新意</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144014.png" style="zoom:25%;" /><h4 id="登录方式"><a href="#登录方式" class="headerlink" title="登录方式"></a>登录方式</h4><ul><li>  登录方式为手机短信验证，输入验证码后还需设置密码，并且此处设置密码时的默认状态是可见的</li></ul><blockquote><p>迭代建议：将此处密码输入时设置为默认不可见模式，以保护用户隐私。</p></blockquote><h4 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h4><ul><li><p>  画面精美，且有火焰纷飞动效，但不知道为何左上角适龄提示为 12+，在下载页面的适龄提示却是 9+</p></li><li><p>服务器信息</p><ul><li>  会自动进行选择，免去了玩家手动选择的繁琐操作</li></ul></li><li><p>用户服务协议和隐私保护协议</p><ul><li>  需要用户手动勾选，强化用户知情权</li></ul></li><li><p>点击效果</p><ul><li>  有波纹特效，方便用户获知点击位置</li></ul></li></ul><blockquote><p>迭代建议：建议统一 App Store 中与登录界面中的适龄提示信息</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144033.png" style="zoom:25%;" /><h4 id="意外情况"><a href="#意外情况" class="headerlink" title="意外情况"></a>意外情况</h4><ul><li><p>  点击开始游戏后提示登录失败</p></li><li><p>  有可能是因为在登录界面停留时间过长导致的</p></li></ul><h3 id="4-3-游玩"><a href="#4-3-游玩" class="headerlink" title="4.3 游玩"></a>4.3 游玩</h3><h4 id="4-3-1-角色创建"><a href="#4-3-1-角色创建" class="headerlink" title="4.3.1 角色创建"></a>4.3.1 角色创建</h4><ul><li>角色选择<ul><li>性别选择<ul><li>进入游戏后首先是性别选择，并且在切换时伴有角色声效，增强玩家代入感<ul><li>男：大丈夫生于乱世，当带三尺之剑，立无世之功</li><li>  女：当窗理红妆，对镜贴花黄，也无碍小女子驰骋沙场</li></ul></li></ul></li><li><code>请留下大名</code><ul><li>  会有随机生成的名称，且都具有几分古韵，增强了玩家代入感</li></ul></li></ul></li></ul><h4 id="4-3-2-新手教程-此时注意到是竖版游戏"><a href="#4-3-2-新手教程-此时注意到是竖版游戏" class="headerlink" title="4.3.2 新手教程 - 此时注意到是竖版游戏"></a>4.3.2 新手教程 - 此时注意到是竖版游戏</h4><ul><li>涉及系统<ul><li>战斗<ul><li>队伍配置（上阵）</li><li>征兵（分配兵力）</li><li>下阵</li><li>招募武将（单次可无限重复）</li><li>强调兵种克制机制</li><li>引入战斗资源<ul><li>  消耗体力</li></ul></li><li>到达士气</li><li>行军时间</li><li>行军路线</li><li>路线选择</li><li>  上阵部队</li></ul></li></ul></li><li>社交<ul><li>阵营选择<ul><li>魏国曹操<ul><li>骑兵加伤害 <code>2%</code></li><li>铁矿产量加 <code>300</code></li></ul></li><li>蜀国刘备<ul><li><p>  枪兵加伤害 <code>2%</code></p></li><li><p>  粮草产量加 <code>300</code></p></li></ul></li><li>东吴孙权<ul><li>  弓兵加伤害 <code>2%</code></li><li>  木材产量加 <code>300</code></li><li>  水战伤害提升 <code>15%</code></li></ul></li></ul></li></ul></li><li>养成<ul><li>引入不同资源类型<ul><li>铜币</li><li>木材</li><li>铁矿</li><li>粮草</li></ul></li><li>攻占资源点及领土相关规则介绍</li><li>引入内政升级机制</li><li>引入任务机制</li></ul></li><li>评价<ul><li>  总体而言若中间不停顿，新手教程整体流程在五分钟左右，节奏较快，其中基本涵盖了前期所需所有操作，便于玩家上手。</li></ul></li></ul><h4 id="4-3-3-部分游戏系统体验"><a href="#4-3-3-部分游戏系统体验" class="headerlink" title="4.3.3 部分游戏系统体验"></a>4.3.3 部分游戏系统体验</h4><h5 id="4-3-3-1-阵营重置及深夜保护"><a href="#4-3-3-1-阵营重置及深夜保护" class="headerlink" title="4.3.3.1 阵营重置及深夜保护"></a>4.3.3.1 阵营重置及深夜保护</h5><ul><li><p>情况说明</p><ul><li><p>  第一天下午因为有事出去了没有继续，等晚上重新登录游戏的时候进度回退到了阵营选择阶段，并且此时选择阵营时的推荐阵营奖励已经消失了，这次选择东吴阵营继续。</p></li><li><p>中间有两天没有登录，此时再登录游戏发现又可以重选阵营，为玩家提供了多次阵营选择的设计很人性化。</p></li></ul></li><li><p>深夜保护</p><ul><li><p>  北京时间凌晨 2 点 - 6 点会有深夜保护机制，此时体力消耗翻倍（引出了体力机制）</p></li><li><p>  因为我本人在欧洲时区，所以会稍微受到一点影响</p></li></ul></li></ul><blockquote><p>深夜保护机制还是挺人性化的，防止玩家过度沉迷。</p></blockquote><blockquote><p>但既然游戏语言中有多国语言，说明应该有海外版本，海外版本中应该考虑和当地时区同步的问题</p></blockquote><h5 id="4-3-3-2-签到系统"><a href="#4-3-3-2-签到系统" class="headerlink" title="4.3.3.2 签到系统"></a>4.3.3.2 签到系统</h5><ul><li><p>签到奖励出现时机</p><ul><li>  在完成议政殿任务之后，自动弹出了今日签到奖励，并提示<code>再签到 1 天可获得：孙策（橙）</code></li></ul></li><li><p>目的</p><ul><li>  提高玩家留存率</li></ul></li></ul><h5 id="4-3-3-3-离线收益"><a href="#4-3-3-3-离线收益" class="headerlink" title="4.3.3.3 离线收益"></a>4.3.3.3 离线收益</h5><ul><li>上线后会有离线收益的汇总<ul><li>  让玩家感觉非游戏时间也有所收获</li></ul></li></ul><h5 id="4-3-3-4-任务系统（部分）"><a href="#4-3-3-4-任务系统（部分）" class="headerlink" title="4.3.3.4 任务系统（部分）"></a>4.3.3.4 任务系统（部分）</h5><h6 id="4-3-3-4-1-第一章-展土开疆"><a href="#4-3-3-4-1-第一章-展土开疆" class="headerlink" title="4.3.3.4.1 第一章 展土开疆"></a>4.3.3.4.1 第一章 展土开疆</h6><h6 id="武将招募"><a href="#武将招募" class="headerlink" title="武将招募"></a>武将招募</h6><ul><li><p>任务描述</p><ul><li><p>  这是新手教程后的首个任务，点开后可以发现此时处在第一章 展土开疆</p></li><li><p>并且有三种任务类型</p><ul><li><p>  主线任务</p></li><li><p>支线任务</p></li><li><p>阵营任务</p></li></ul></li><li><p>  此处选择完成主线任务中的招募一名新武将</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144133.png" style="zoom:25%;" /><ul><li>武将招募<ul><li>招募类型<ul><li>可以发现一共有四类招募<ul><li>忠诚名将<ul><li>可招募类型<ul><li>可招募名将（紫色）、良将（蓝色）、偏将（绿色）</li></ul></li><li>招募方式<ul><li><p>  300 铜币招募一次</p></li><li><p>  可连续招募（10 次起底）</p></li></ul></li></ul></li><li>神将群集（默认进入）<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  首次招募免费（免费机会用掉 11 小时 30 分钟之后会再次有免费机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li><li>王佐之才<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  158 金币招募一次（但是左上角有倒计时显示，预计是倒计时之后会有免费招募一次的机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li><li>混世魔王<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  158 金币招募一次（但是左上角有倒计时显示，预计是倒计时之后会有免费招募一次的机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144151.png" style="zoom:25%;" /><ul><li><p>充值元素</p><ul><li><p>  这里首次明显出现了充值诱导元素，即再招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong>，并且第一次注意到了金币和铜币的区别</p></li><li><p>这里选择使用一次免费的招募机会</p></li><li><p>  招募过程与前面的一致</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144209.png" style="zoom:25%;" /><ul><li>  获得了四星名将（紫）王朗</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144328.png" style="zoom:25%;" /><ul><li><p>  返回发现任务已经完成</p></li><li><p>  领取任务奖励</p></li></ul><h6 id="内政系统"><a href="#内政系统" class="headerlink" title="内政系统"></a>内政系统</h6><p>升级内政【议政殿】</p><ul><li><p>任务描述</p><ul><li>  这是第一章 展土开疆中最后一个未完成的主线任务</li></ul></li><li><p>任务流程</p><ul><li>  点击【前往】按钮后会回到主页面</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144352.png" style="zoom:25%;" /><ul><li><p>此时主城有高亮提示</p><ul><li><p>  但是任务部分也有箭头提示</p></li><li><p>  会让玩家产生不知道该点哪个的错觉</p></li></ul></li></ul><blockquote><p>迭代建议：将此处任务部分的提示箭头去除</p></blockquote><ul><li><p>任务流程（接上）</p><ul><li><p>  点击主城</p></li><li><p>点击入城</p></li><li><p>点击内政</p></li><li><p>选择议政殿</p></li><li><p>点击【研究】按钮</p></li><li><p>  共需要 10 秒完成</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144409.png" style="zoom:25%;" /><ul><li><p>充值引导</p><ul><li>  此处发现可以通过使用金币来立即完成研究</li></ul></li><li><p>任务流程（接上）</p><ul><li><p>  升级之后发现二级议政殿下级有了<code>仓库</code>和<code>粮草</code>的可升级选项</p></li><li><p>此时返回主界面发现议政殿任务已完成</p></li><li><p>点击相应任务领取奖励</p></li><li><p>完成之前的步骤之后，此时箭头已经提示可以领取展土开疆任务以完成第一章节所有任务</p></li><li><p>  点击领取之后可直接完成</p></li></ul></li></ul><h6 id="4-3-3-4-2-第二章-大兴土木"><a href="#4-3-3-4-2-第二章-大兴土木" class="headerlink" title="4.3.3.4.2 第二章 大兴土木"></a>4.3.3.4.2 第二章 大兴土木</h6><ul><li><p>蔡文姬任务引导</p><ul><li>  蔡文姬发言引出当前阶段应以<strong>内政</strong>发展为重，而<strong>议政殿</strong>又为提升其他内政建筑的基础，应先行修缮。并且修缮需要资源，拓土可以增收，修筑内政建筑可以增收资源</li></ul></li><li><p>完成主线任务</p><ul><li>任务<ul><li>升级粮草</li><li>升级仓库</li><li>升级议政殿</li><li>攻占 2 个一级或更高级资源点<ul><li><p>提示</p><ul><li><p>  主公实力充沛，挑战低级资源点收益不高，浪费体力！</p></li><li><p>更多攻略请前往好友系统——百晓生</p><ul><li>  引出官方问答机制百晓生</li></ul></li><li><p>  胜利之后还需要时间进行占领</p></li></ul></li></ul></li></ul></li></ul></li></ul><blockquote><p>为什么要引入占领机制？</p></blockquote><blockquote><p>从目标游戏体验分析，原因有以下几点：</p><ol><li>增加真实感</li><li>增加节制感，由下方游戏整体目标感分析可知，此举使得玩家只需要间歇性游玩就可以不断实现实力上涨，另一方面也使得持续在线变得没有必要，从而增加了游戏节制感</li></ol></blockquote><h6 id="4-3-3-4-3-第三章-裹粮策马"><a href="#4-3-3-4-3-第三章-裹粮策马" class="headerlink" title="4.3.3.4.3 第三章 裹粮策马"></a>4.3.3.4.3 第三章 裹粮策马</h6><ul><li>主线任务类型<ul><li>外敌<ul><li>攻占敌营时引入了战场场景，存在阶段性胜利</li></ul></li><li>问答</li><li>内政</li><li>占领</li><li>  征兵</li></ul></li></ul><h6 id="4-3-3-4-4-第四章-仓箱可期"><a href="#4-3-3-4-4-第四章-仓箱可期" class="headerlink" title="4.3.3.4.4 第四章 仓箱可期"></a>4.3.3.4.4 第四章 仓箱可期</h6><ul><li>主线任务类型<ul><li>  引入了势力任务</li></ul></li></ul><h6 id="4-3-3-4-6-第六章-青出于蓝"><a href="#4-3-3-4-6-第六章-青出于蓝" class="headerlink" title="4.3.3.4.6 第六章 青出于蓝"></a>4.3.3.4.6 第六章 青出于蓝</h6><ul><li>主线任务类型<ul><li>  引入武技系统</li></ul></li></ul><h6 id="4-3-3-4-6-第七章-休养生息"><a href="#4-3-3-4-6-第七章-休养生息" class="headerlink" title="4.3.3.4.6 第七章 休养生息"></a>4.3.3.4.6 第七章 休养生息</h6><ul><li><p>主线任务类型</p><ul><li><p>  引入战役机制</p></li><li><p>  引入阵营任务</p></li></ul></li></ul><h2 id="5-游戏部分机制-系统拆解"><a href="#5-游戏部分机制-系统拆解" class="headerlink" title="5. 游戏部分机制/系统拆解"></a>5. 游戏部分机制/系统拆解</h2><h3 id="5-1-新手指引系统拆解"><a href="#5-1-新手指引系统拆解" class="headerlink" title="5.1 新手指引系统拆解"></a>5.1 新手指引系统拆解</h3><h4 id="5-1-1-玩法拆解"><a href="#5-1-1-玩法拆解" class="headerlink" title="5.1.1 玩法拆解"></a>5.1.1 玩法拆解</h4><ul><li><p>玩法规则：角色，能力+限制</p><ul><li>角色<ul><li>玩家自己</li><li>单人参与</li></ul></li><li>能力<ul><li>  跟随系统进行指定区域的点击</li></ul></li><li>限制<ul><li><p>  只能点击限定位置</p></li><li><p>只有一次新手指引教程</p></li></ul></li><li>玩法目标：终点+量化指标<ul><li>终点<ul><li>  完成新手指引相关任务</li></ul></li></ul></li></ul><h4 id="5-1-2-设计拆解"><a href="#5-1-2-设计拆解" class="headerlink" title="5.1.2 设计拆解"></a>5.1.2 设计拆解</h4></li><li><p>期望体验</p><ul><li><p>掌控感</p><ul><li>新手指引的目的就是为了让玩家尽可能快速地熟悉游戏基本系统，要让玩家有一种 <em><strong>这个我熟，以后我也知道怎么做了</strong></em> 的掌控感</li></ul></li><li><p>新鲜感和差异感</p><ul><li>  作为玩家游玩的第一部分，新手教程需要让玩家迅速体会到与同类游戏的差异点与新鲜点，从而吸引玩家继续游戏</li></ul></li><li><p>快速</p><ul><li>  新手指引系统需要玩家能尽可能快地完成，因为该过程中玩家可做操作有限，需要防止因为新手流程过长，玩家感到无聊而造成的玩家流失</li></ul></li></ul></li><li><p>目标</p><ul><li><p>  让玩家尽可能短的时间内熟悉游戏基本玩法机制</p></li><li><p>  吸引玩家继续游戏</p></li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>跟随系统进行特定位置的点击</li></ul></li><li>挑战<ul><li>  玩家很容易感到无聊</li></ul></li></ul></li></ul><h3 id="5-2-阵营机制拆解"><a href="#5-2-阵营机制拆解" class="headerlink" title="5.2 阵营机制拆解"></a>5.2 阵营机制拆解</h3><h4 id="5-2-1-玩法拆解"><a href="#5-2-1-玩法拆解" class="headerlink" title="5.2.1 玩法拆解"></a>5.2.1 玩法拆解</h4><ul><li>玩法规则：角色，能力+限制<ul><li>角色<ul><li>同服务器玩家</li><li>多人参与</li></ul></li><li>能力<ul><li><p>  同阵营玩家达成的成就自己也能享受相应奖励</p></li><li><p>与非己方阵营玩家进行作战</p></li></ul></li><li>限制<ul><li><p>  不能与同阵营玩家进行作战</p></li><li><p>作战失败会有资源损失</p></li></ul></li><li>玩法目标：终点+量化指标<ul><li>终点<ul><li>  完成赛季最终阵营任务</li></ul></li></ul></li></ul></li></ul><h4 id="5-2-2-设计拆解"><a href="#5-2-2-设计拆解" class="headerlink" title="5.2.2 设计拆解"></a>5.2.2 设计拆解</h4><ul><li><p>期望体验</p><ul><li>合作感<ul><li>阵营机制设计的期望之一就是让同阵营玩家能够荣辱与共，同阵营玩家达成成就后玩家自己也可以领取相应奖励，如此能够增强玩家的合作感</li></ul></li><li>竞争感<ul><li>  阵营机制设计的另一个期望就是让不同阵营玩家间互相竞争，此举不但能吸引玩家保持游戏积极性，并且也能促进玩家消费</li></ul></li></ul></li><li><p>目标</p><ul><li><p>  让同阵营玩家不断合作，荣辱与共</p></li><li><p>让非己方阵营玩家互相竞争，促进玩家游戏活跃度，刺激玩家消费欲望</p></li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>攻城略池</li></ul></li><li>挑战<ul><li>  失败后玩家可能会产生挫败感</li></ul></li></ul></li></ul><h3 id="5-3-问答系统拆解"><a href="#5-3-问答系统拆解" class="headerlink" title="5.3 问答系统拆解"></a>5.3 问答系统拆解</h3><h4 id="5-3-1-玩法拆解"><a href="#5-3-1-玩法拆解" class="headerlink" title="5.3.1 玩法拆解"></a>5.3.1 玩法拆解</h4><ul><li><p>玩法规则：角色，能力+限制</p><ul><li>角色<ul><li>玩家自己</li><li>  单人参与</li></ul></li></ul></li><li><p>能力</p><ul><li>  可以从备选答案中挑选答案</li></ul></li><li><p>限制</p><ul><li>只能做一次选择<ul><li>  答错了不能再次回答</li></ul></li></ul></li><li><p>玩法目标：终点+量化指标</p><ul><li>终点<ul><li>选择备选答案后无论答案正确与否都会结束</li></ul></li><li>量化指标<ul><li>  答案的正确性</li></ul></li></ul></li></ul><h4 id="5-3-2-设计拆解"><a href="#5-3-2-设计拆解" class="headerlink" title="5.3.2 设计拆解"></a>5.3.2 设计拆解</h4><ul><li><p>期望体验</p><ul><li>不紧张地答题<ul><li>不是设计为紧张的、有排名的、竞争性强的答题</li><li>设计为答对了很好，答错了也不会有什么严重后果的方式<ul><li><p>  减轻玩家答题负担</p></li><li><p>  增加玩家参与度</p></li></ul></li></ul></li><li>意犹未尽<ul><li>  答题机会是随机出现的，并且只有一次错误机会，题量通常小于 5 道，玩家基本能很快答完，无论是答对了还是答错了，都让人有一种意犹未尽的感觉，让玩家有种意犹未尽的感觉，增加玩家对下次答题的期待</li></ul></li><li>收获<ul><li><p>  既能收获游戏内的资源奖励</p></li><li><p>  又能丰富游戏内的玩法知识，从而增进玩家对于游戏的了解，丰富玩法路径</p></li></ul></li></ul></li><li><p>目标</p><ul><li>  通过正确回答问题获取资源</li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>从备选答案中做出选择</li></ul></li><li>挑战<ul><li>  存在错误答案</li></ul></li></ul></li></ul><h2 id="6-报告总结"><a href="#6-报告总结" class="headerlink" title="6. 报告总结"></a>6. 报告总结</h2><h3 id="6-1-游戏定位"><a href="#6-1-游戏定位" class="headerlink" title="6.1 游戏定位"></a>6.1 游戏定位</h3><ul><li>  <code>国战策略 slg 攻城手游</code></li></ul><h3 id="6-2-游戏整体目标感分析"><a href="#6-2-游戏整体目标感分析" class="headerlink" title="6.2 游戏整体目标感分析"></a>6.2 游戏整体目标感分析</h3><p>作为一款三国题材的 SLG 国战手游，游戏的整体目标感可归结为以下几点：</p><ul><li>掌控感<ul><li>调兵遣将<ul><li>  玩家需要作为一方首领来参与到游戏当中，无论是将领的配置还是兵种的选择都让玩家有一种_<strong>自己说了算</strong>_ 的爽快掌控感</li></ul></li><li>攻城略池<ul><li>  作为一方诸侯，玩家需要攻城略池以进行资源补给以及势力/贡献提升，此间对于目标地点的选择也增强了掌控感</li></ul></li></ul></li><li>策略感<ul><li>合纵连横<ul><li>  玩家需要作为阵营中的势力之一来共同影响天下大势，无论是对己方势力的驰援还是对敌对势力的攻占都是阵营内外合作竞争的重要抉择</li></ul></li></ul></li><li>节制感<ul><li>以下几种机制的引入使得玩家只需要间歇性游玩就可以不断实现实力上涨，另一方面也使得持续在线变得没有必要，从而增加了游戏节制感<ul><li>  占领时间</li><li>  研发种类上限</li><li>  深夜保护</li><li>  体力上限</li></ul></li></ul></li></ul><h3 id="6-3-核心玩法定位"><a href="#6-3-核心玩法定位" class="headerlink" title="6.3 核心玩法定位"></a>6.3 核心玩法定位</h3><h4 id="6-3-1-三元素分析"><a href="#6-3-1-三元素分析" class="headerlink" title="6.3.1 三元素分析"></a>6.3.1 三元素分析</h4><ul><li>  从战斗、养成、社交三元素进行分析，本游戏前期偏重战斗与养成，从其游戏定位看后期会偏重养成与社交</li></ul><h5 id="6-3-1-1-战斗"><a href="#6-3-1-1-战斗" class="headerlink" title="6.3.1.1 战斗"></a>6.3.1.1 战斗</h5><ul><li>偏重<ul><li>指令类型<ul><li>去哪儿<ul><li>选择要攻占的地方<ul><li>  涉及体力消耗及胜负</li></ul></li></ul></li><li>怎么打<ul><li><p>  武将的选择</p></li><li><p>兵种的选择</p><ul><li>  涉及兵种克制</li></ul></li></ul></li></ul></li></ul></li></ul><h5 id="6-3-1-2-养成"><a href="#6-3-1-2-养成" class="headerlink" title="6.3.1.2 养成"></a>6.3.1.2 养成</h5><ul><li>主要涉及<ul><li>武将的获取和培养<ul><li>升星<ul><li>抽到同一卡牌之后才能融合升星</li><li>最高为五星</li></ul></li><li>进阶</li><li>装备</li><li>缘分</li><li>武将技能</li></ul></li><li>科技（内政）的升级<ul><li>  快速升级需要消耗金币</li></ul></li><li>资源的获取和消耗<ul><li>  木材</li><li>  铁矿</li><li>  石料</li><li>  粮草</li></ul></li></ul></li></ul><h5 id="6-3-1-3-社交"><a href="#6-3-1-3-社交" class="headerlink" title="6.3.1.3 社交"></a>6.3.1.3 社交</h5><ul><li><p>主要涉及</p><ul><li><p>  势力值的提升</p></li><li><p>贡献度的提升</p></li></ul></li><li><p>  游玩过程中该元素还未较多体现</p></li><li><p>  但从其游戏定位中的<code>国战</code>属性中可知最终肯定会涉及到对抗型 PVP、GVG 元素</p></li></ul><h4 id="6-3-2-围绕核心玩法做了什么"><a href="#6-3-2-围绕核心玩法做了什么" class="headerlink" title="6.3.2 围绕核心玩法做了什么"></a>6.3.2 围绕核心玩法做了什么</h4><ul><li><p>新手引导</p><ul><li>  涵盖武将招募/选择，兵力分配，资源点攻占，兵种克制，土地开拓，任务机制，用户可快速上手</li></ul></li><li><p>主线剧情</p><ul><li>主线剧情的推进使得玩家渐渐熟悉游戏中的各类事务和系统<ul><li>战斗<ul><li>英雄及兵种选择</li></ul></li><li>养成<ul><li>资源获取<ul><li>攻城略池</li></ul></li><li>以战养战<ul><li>  内政升级</li></ul></li></ul></li><li>社交<ul><li><p>  阵营任务</p></li><li><p>  势力提升任务</p></li></ul></li></ul></li></ul></li></ul><h4 id="6-3-3-主要哪些系统为核心玩法服务"><a href="#6-3-3-主要哪些系统为核心玩法服务" class="headerlink" title="6.3.3 主要哪些系统为核心玩法服务"></a>6.3.3 主要哪些系统为核心玩法服务</h4><ul><li><p>战斗相关</p><ol><li><p>武将系统</p><ul><li>  通过抽卡获取（前期盈利点之一）</li></ul></li><li><p> 征兵系统</p></li><li><p> 武技系统</p></li></ol></li><li><p>养成相关</p><ol><li><p>内政系统</p><ul><li>  快速完成需要金币（消费点之一）</li></ul></li><li><p>资源系统</p><ul><li>思路<ul><li>  拓土-获取资源-提升实力</li></ul></li></ul></li><li><p>战役（副本）系统</p><ul><li>  用于获取材料/资源</li></ul></li></ol></li><li><p>社交相关</p><ol><li><p> 贡献系统</p></li><li><p> 势力系统</p></li><li><p>聊天系统</p><ul><li><p>分类</p><ul><li><p>阵营</p><ul><li>  辅助攻略型 PVE 的展开</li></ul></li><li><p>世界</p><ul><li>  辅助攻略型 PVE 、对抗型 PVP 的展开</li></ul></li><li><p>系统</p><ul><li>  了解世界玩家的高光时刻，以对游戏系统有更深地了解</li></ul></li></ul></li></ul></li></ol></li></ul><h4 id="6-3-4-基于核心玩法的设计细节进行拆分"><a href="#6-3-4-基于核心玩法的设计细节进行拆分" class="headerlink" title="6.3.4 基于核心玩法的设计细节进行拆分"></a>6.3.4 基于核心玩法的设计细节进行拆分</h4><ul><li><p>战斗前的战力分析</p><ul><li>  会有文字提示敌我差距，方便玩家进行判断</li></ul></li><li><p>战场场景的引入</p><ul><li>  在进行较大规模战斗（如攻占营地）时会有战场场景的引入，引入阶段性胜利，营造战斗氛围，增强玩家心流及代入感</li></ul></li></ul><h3 id="6-4-分析好不好玩"><a href="#6-4-分析好不好玩" class="headerlink" title="6.4 分析好不好玩"></a>6.4 分析好不好玩</h3><h4 id="6-4-1-上手难易度"><a href="#6-4-1-上手难易度" class="headerlink" title="6.4.1 上手难易度"></a>6.4.1 上手难易度</h4><ul><li><p>从操作分析</p><ul><li><p>  新手引导友好</p></li><li><p>  自动战斗省心</p></li></ul></li><li><p>从表现分析</p><ul><li><p>表现</p><ul><li><p>动作特效</p><ul><li>  形象帅气</li></ul></li><li><p>打击节奏</p><ul><li><p>  自动战斗</p></li><li><p>  频率固定</p></li></ul></li><li><p>打击反馈</p><ul><li>  飘字直观</li></ul></li><li><p>音效</p><ul><li><p>  较为真实</p></li><li><p>  战斗时定期播放</p></li></ul></li></ul></li></ul></li><li><p>从策略分析</p><ul><li><p>广度</p><ul><li><p>  所有武将共有 500 名</p></li><li><p>  所有兵种共有 7 种</p></li></ul></li><li><p>  深度</p></li><li><p>  容错</p></li></ul></li></ul><h4 id="6-4-2-耐玩程度"><a href="#6-4-2-耐玩程度" class="headerlink" title="6.4.2 耐玩程度"></a>6.4.2 耐玩程度</h4><ul><li><p>以下机制的引入使得策略要素大大加强，需要玩家选择_更高性价比_的操作方案</p><ul><li><p>  体力机制</p></li><li><p>  兵种克制</p></li></ul></li><li><p>此外还存在很多机制，玩家拥有很高的定制自由度</p><ul><li><p>城池</p><ul><li><p>内政</p><ul><li><p>  内务</p></li><li><p>  军务</p></li><li><p>  战略</p></li></ul></li><li><p>  马厩</p></li><li><p>  锻造</p></li><li><p>任命</p><ul><li><p>  主政官</p></li><li><p>  巡察使</p></li><li><p>  驯马使</p></li><li><p>  税收官</p></li><li><p>  木材官</p></li><li><p>  冶铁官</p></li><li><p>  …</p></li></ul></li><li><p>  鉴宝</p></li><li><p>  巡查</p></li></ul></li></ul></li></ul><h4 id="6-4-3-额外机制"><a href="#6-4-3-额外机制" class="headerlink" title="6.4.3 额外机制"></a>6.4.3 额外机制</h4><ol><li><p>问答机制</p><ul><li><p>触发</p><ul><li>  随机</li></ul></li><li><p>机制</p><ul><li>  回答问题，答对有奖励</li></ul></li><li><p>引入目的</p><ul><li>  增加额外获取资源的手段，并且可以在玩家没有体力时依然有事可做，从而增加玩家游戏时长</li></ul></li></ul></li><li><p>离线收益机制</p><ul><li><p>触发</p><ul><li>  离线</li></ul></li><li><p>机制</p><ul><li>  离线仍可自动运营，上线后可获取离线时间内自动运营得到的资源</li></ul></li><li><p>引入目的</p><ul><li><p>  使游戏整体呈现碎片化游玩趋势，增强目标游戏体验的节制感</p></li><li><p>  便于玩家安排时间，让玩家在非游戏时间也有参与感</p></li></ul></li></ul></li><li><p>体力机制</p><ul><li>触发<ul><li>  攻城略池时需要驱动部队前往</li></ul></li><li>机制<ul><li>  驱动部队前往城外地点时，根据距离会对体力进行相应扣减</li></ul></li><li>引入目的<ul><li>  控制玩家在线时长，突出目标游戏体验中的节制感</li><li>  要求玩家谨慎操作，增加策略性和真实感</li></ul></li></ul></li><li><p>资源过量机制</p><ul><li>触发<ul><li>  已有资源超出可负载资源上限</li></ul></li><li>机制<ul><li>  即使资源过量，但系统仍会保留该部分资源</li></ul></li><li>引入目的<ul><li>  减轻玩家因未能及时上线而导致过量资源损耗的挫败感</li><li>  强化目标游戏体验中的节制感</li></ul></li></ul></li></ol><h3 id="6-5-优点"><a href="#6-5-优点" class="headerlink" title="6.5 优点"></a>6.5 优点</h3><ul><li><p>表现层</p><ul><li><p>画面</p><ul><li>  精美，且伴有动效</li></ul></li><li><p>音效</p><ul><li>  与画面和文案相契合，较为贴切</li></ul></li><li><p>文案</p><ul><li>  古风古韵，较为贴切</li></ul></li></ul></li><li><p>操作</p><ul><li><p>竖屏显示</p><ul><li>  降低玩家操作负累感</li></ul></li><li><p>自动战斗</p><ul><li>  可让玩家把精力都放在排兵布阵以及攻城略池的策略安排中</li></ul></li></ul></li><li><p>系统设计</p><ul><li><p>深夜保护机制</p><ul><li>  人性化，防沉迷</li></ul></li><li><p>阵营重置机制</p><ul><li>  人性化</li></ul></li><li><p>离线收益</p><ul><li>  可以让玩家充分利用碎片化时间进行游戏，并且不玩游戏时也有参与感</li></ul></li></ul></li></ul><h3 id="6-6-可迭代点"><a href="#6-6-可迭代点" class="headerlink" title="6.6 可迭代点"></a>6.6 可迭代点</h3><ul><li><p>  游戏评价中所提及的问题</p></li><li><p>当前进度示意</p><ul><li>  主线任务中只有当前所在章节，如果能有总的章节提示，将帮助玩家更好地了解目前游戏进度</li></ul></li><li><p>  注册时的密码输入</p></li></ul><blockquote><p>迭代建议：将此处密码输入时设置为默认不可见模式，以保护用户隐私。</p></blockquote><ul><li>  登录界面信息</li></ul><blockquote><p>迭代建议：建议统一 App Store 中与登录界面中的适龄提示信息</p></blockquote><ul><li>  新手引导中升级内政议政殿的提示</li></ul><blockquote><p>迭代建议：将此处任务部分的提示箭头去除</p></blockquote><h3 id="6-7-结语"><a href="#6-7-结语" class="headerlink" title="6.7 结语"></a>6.7 结语</h3><p>总的而言，游戏上手容易，前期玩法较为直观，引导充足，不会让玩家产生_不知道该干什么_的想法，新手教程过度自然，但是由于缺少当前进度与总体进度的对比示意，会让玩家产生_不知道进行到什么程度_，<em>还有多久才算正式脱离新手教程</em> 的感觉。</p><p>整体画面贴图精度不是非常高，放大后还是会有些许模糊的感觉，但动态特效及自然声效的引入使得玩家未操作时也能有良好的观感。</p><p>除主界面中闪光的_首充_标志外，其余付费元素并没有在游戏中进行特别强调，需要玩家自己进行发掘。</p><p>但游戏中的占领机制、体力机制和离线收益等机制使得玩家能够更好地利用碎片化时间进行游玩。竖屏显示也降低了玩家的操作负累感。同一阵营内只要有玩家达成高等级成就则同阵营玩家皆可获利增强了阵营归属感以及荣辱感，并且无论己方阵营处于三大阵营中任意位置都有相应赛季结局，减轻了玩家的挫败感。游戏定位中的国战、SLG、攻城元素都得到了很好地体现，目标游戏体验的掌控感，策略感和节制感也实现得较好。</p><p>以上便是本体验报告的全部内容。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-ExperienceReport </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神将三国首充策划案</title>
      <link href="2021/07/26/shen-jiang-san-guo-first-recharge-plan/"/>
      <url>2021/07/26/shen-jiang-san-guo-first-recharge-plan/</url>
      
        <content type="html"><![CDATA[<h1 id="神将三国首充策划案"><a href="#神将三国首充策划案" class="headerlink" title="神将三国首充策划案"></a>神将三国首充策划案</h1><h2 id="版本更新记录"><a href="#版本更新记录" class="headerlink" title="版本更新记录"></a>版本更新记录</h2><table><thead><tr><th>日期</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>20210725</td><td>1.0</td><td>初版策划案</td></tr></tbody></table><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过让玩家完成首充，体会到充值带来的能力提升，从而培养玩家付费习惯。</p><h2 id="需求定位"><a href="#需求定位" class="headerlink" title="需求定位"></a>需求定位</h2><ul><li>需要达成的目标<ul><li>  使玩家付费</li><li>  让首充玩家体会到充值带来的提升/拉开与非付费玩家的差距</li><li>  培养玩家付费习惯</li></ul></li><li>需要考虑的因素<ul><li>  如何让玩家发现并愿意花钱</li><li>奖励设定<ul><li>  高性价比</li></ul></li><li>  如何培养玩家付费习惯</li></ul></li></ul><h2 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h2><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ul><li>  玩家需要从未进行过充值。</li><li>  在游戏主界面中显示【首充】按钮，点击后将进入【首充】系统页面，点击【首充】页面中的【前往充值】按钮后进入【充值】系统页面。</li><li>  完成首充后获取相应充值奖励。</li><li>  完成首充后根据条件可获取首充奖励。</li><li>  完成首充后根据限制条件（如只能购买一次）对相应系统状态进行更新。</li></ul><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726123351.png" style="zoom: 67%;" /><h3 id="配置表"><a href="#配置表" class="headerlink" title="配置表"></a>配置表</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-baqh{text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-1wig">元素名称 </th>    <th class="tg-1wig">元素命名 </th>    <th class="tg-1wig">属性名称 </th>    <th class="tg-1wig">属性命名举例 </th>    <th class="tg-1wig">值举例（对应 ICON 的美术字） </th>  </tr></thead><tbody>  <tr>    <td class="tg-0lax" rowspan="2">游戏主界面 </td>    <td class="tg-0lax" rowspan="2">【首充】按钮 </td>    <td class="tg-baqh" rowspan="2">butt_firstRecharge </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_firstRecharge </td>    <td class="tg-0lax">首充 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_firstRecharge </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【前往充值】按钮 </td>    <td class="tg-0lax">butt_ FRrecharge </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_FRrecharge </td>    <td class="tg-0lax">前往充值 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="9">【充值页面-新手特惠】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_rechargeReturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_rechargeReturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">对应奖励 </td>    <td class="tg-0lax" rowspan="3">elem_rechargeRewards </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_rechargeRewards </td>    <td class="tg-0lax">铜币 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_rechargeRewards </td>    <td class="tg-0lax">- </td>  </tr>  <tr>    <td class="tg-0lax">数量 </td>    <td class="tg-0lax">num_rechargeRewards </td>    <td class="tg-0lax">10000 </td>  </tr>  <tr>    <td class="tg-0lax">价格按钮 </td>    <td class="tg-0lax">butt_price </td>    <td class="tg-0lax">价格 <br> </td>    <td class="tg-0lax">text_price </td>    <td class="tg-0lax">免费 <br>￥6 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">限制条件 </td>    <td class="tg-0lax" rowspan="2">elem_restrictions </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_restrictions </td>    <td class="tg-0lax">限购 1 次 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_restrictions </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">已有充值点 </td>    <td class="tg-0lax" rowspan="2">elem_rechargePoints </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_gold </td>    <td class="tg-0lax">- </td>  </tr>  <tr>    <td class="tg-0lax">数额 </td>    <td class="tg-0lax">num_gold </td>    <td class="tg-0lax">200 </td>  </tr>  <tr>    <td class="tg-0lax">【付款失败】页面 </td>    <td class="tg-0lax">充值失败弹窗 </td>    <td class="tg-0lax">notice_chargeFail </td>    <td class="tg-0lax">提示内容 </td>    <td class="tg-0lax">text_chargeFail </td>    <td class="tg-0lax">充值失败 购买失败 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励待领取】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【领取】按钮 </td>    <td class="tg-0lax">butt_FRreceive </td>    <td class="tg-0lax"> 名称 </td>    <td class="tg-0lax">text_FRreceive </td>    <td class="tg-0lax"> 领取 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励已领取】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【明日再来】按钮 </td>    <td class="tg-0lax">butt_FRtomorrow </td>    <td class="tg-0lax"> 名称 </td>    <td class="tg-0lax">text_FRtomorrow </td>    <td class="tg-0lax"> 明日再来 </td>  </tr></tbody></table><h3 id="界面交互功能"><a href="#界面交互功能" class="headerlink" title="界面交互功能"></a>界面交互功能</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-1wig">点击位置 </th>    <th class="tg-1wig">元素名称 </th>    <th class="tg-1wig">点击效果 </th>  </tr></thead><tbody>  <tr>    <td class="tg-0lax">游戏主界面 </td>    <td class="tg-0lax">【首充】按钮 </td>    <td class="tg-0lax">首充 </td>    <td class="tg-0lax">前往【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【首充】页面 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">【前往充值】按钮 </td>    <td class="tg-0lax">前往充值 </td>    <td class="tg-0lax">前往【充值】页面 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">【首充页面-物品信息】 </td>    <td class="tg-0lax">除物品信息栏外的部分或者【→】 </td>    <td class="tg-0lax">- <br> </td>    <td class="tg-0lax">返回【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【充值页面-新手特惠】 </td>    <td class="tg-0lax">【→】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">充值方案对应金额 </td>    <td class="tg-0lax">价格 </td>    <td class="tg-0lax">调用付款系统 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【充值奖励领取】 </td>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">除物品信息栏外的部分 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">返回【充值】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【首充完成 - 第一天奖励待领取】 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">【领取】按钮 </td>    <td class="tg-0lax">领取 </td>    <td class="tg-0lax">显示领取的奖励 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励已领取】 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 <br> </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr></tbody></table><h2 id="数值需求"><a href="#数值需求" class="headerlink" title="数值需求"></a>数值需求</h2><ul><li>整体目标<ul><li>  需要让首充玩家体会到很高的性价比</li><li>  需要让首充玩家感觉与没充值时有了提升</li></ul></li></ul><h2 id="美术需求"><a href="#美术需求" class="headerlink" title="美术需求"></a>美术需求</h2><h3 id="涉及页面原型"><a href="#涉及页面原型" class="headerlink" title="涉及页面原型"></a>涉及页面原型</h3><h4 id="游戏主界面"><a href="#游戏主界面" class="headerlink" title="游戏主界面"></a>游戏主界面</h4><img src="https://4399.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGE1ZjBiZTAwMzhlNDNmZDVlNTQzNTY0MTc0MzcyNzdfcm50S21hR0VEMktkancyckd3bzlRcWY2Y3V3VEF4R2hfVG9rZW46Ym94Y25iUlczaTV6VjRLVmNvb1lzdW9jOVJiXzE2MjcyOTU0MzU6MTYyNzI5OTAzNV9WNA" style="zoom: 33%;" /><h4 id="【首充】页面"><a href="#【首充】页面" class="headerlink" title="【首充】页面"></a>【首充】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10291627172769_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【充值】页面"><a href="#【充值】页面" class="headerlink" title="【充值】页面"></a>【充值】页面</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10301627172771_.pic_hd.jpg" style="zoom:30%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10311627172772_.pic_hd.jpg" style="zoom: 25%;" /></p><h4 id="【付款】页面"><a href="#【付款】页面" class="headerlink" title="【付款】页面"></a>【付款】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726142456.png" style="zoom: 33%;" /><h4 id="【付款失败】页面"><a href="#【付款失败】页面" class="headerlink" title="【付款失败】页面"></a>【付款失败】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【付款成功】页面"><a href="#【付款成功】页面" class="headerlink" title="【付款成功】页面"></a>【付款成功】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【充值奖励获取】页面"><a href="#【充值奖励获取】页面" class="headerlink" title="【充值奖励获取】页面"></a>【充值奖励获取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10361627172781_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【首充完成-第一天奖励待领取】页面"><a href="#【首充完成-第一天奖励待领取】页面" class="headerlink" title="【首充完成 - 第一天奖励待领取】页面"></a>【首充完成 - 第一天奖励待领取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10371627172783_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【首充完成-第一天奖励已领取】页面"><a href="#【首充完成-第一天奖励已领取】页面" class="headerlink" title="【首充完成 - 第一天奖励已领取】页面"></a>【首充完成 - 第一天奖励已领取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10391627173172_.pic_hd.jpg" style="zoom: 33%;" /><h3 id="图标-amp-UI-amp-特效需求-ICON-位置-式样-特效"><a href="#图标-amp-UI-amp-特效需求-ICON-位置-式样-特效" class="headerlink" title="图标 &amp; UI &amp; 特效需求 - ICON/位置/式样/特效"></a>图标 &amp; UI &amp; 特效需求 - ICON/位置/式样/特效</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-fymr">目标元素 </th>    <th class="tg-fymr"> ICON </th>    <th class="tg-fymr">位置 </th>    <th class="tg-fymr">式样 </th>    <th class="tg-fymr">特效 </th>    <th class="tg-fymr">对应原型 </th>  </tr></thead><tbody>  <tr>    <td class="tg-0pky">游戏主界面 </td>    <td class="tg-0pky">【首充】按钮 </td>    <td class="tg-0pky">首充能获得的奖励 </td>    <td class="tg-0pky">需与主界面中其他 ICON 放置在一起 </td>    <td class="tg-0pky">需要突出显示，能与别的图标区分开 </td>    <td class="tg-0pky">按钮边缘高亮，需要能吸引玩家注意力 </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10381627172812_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="4">【首充】页面 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="4"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10291627172769_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【前往充值】按钮 </td>    <td class="tg-0pky">前往充值美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="6">【充值页面-新手特惠】 </td>    <td class="tg-0pky">充值方案的分类 </td>    <td class="tg-0pky">宝箱 </td>    <td class="tg-0pky">每个充值方案的左方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="6"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10311627172772_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">每个充值方案的主体 </td>    <td class="tg-0pky">每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">充值方案的特殊说明 </td>    <td class="tg-0pky">对应说明的美术字 </td>    <td class="tg-0pky">每个充值方案的右方 </td>    <td class="tg-0pky">挂坠 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">充值方案的价格 </td>    <td class="tg-0pky">对应价格的美术字 </td>    <td class="tg-0pky">每个充值方案的下方 </td>    <td class="tg-0pky">用框体框柱 <br>高对比度 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">当前所有玉帛 </td>    <td class="tg-0pky">玉帛.jpg </td>    <td class="tg-0pky">页面左下方 </td>    <td class="tg-0pky">见原型 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">当前所有金币 </td>    <td class="tg-0pky">金币.jpg </td>    <td class="tg-0pky">玉帛右方 </td>    <td class="tg-0pky">见原型 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【付款失败】 </td>    <td class="tg-0pky">付款失败提醒 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky">屏幕中部 </td>    <td class="tg-0pky">弹窗 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">【充值奖励领取】 </td>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10361627172781_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="4">【首充完成 - 第一天奖励待领取】 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="4"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10371627172783_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【领取】按钮 </td>    <td class="tg-0pky">领取美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 <br>高对比度 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="5">【首充完成 - 第一天奖励已领取】 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="5"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10391627173172_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 <br> </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【已领取】提示 </td>    <td class="tg-0pky">已领取.jpg </td>    <td class="tg-0pky">显示在已领取的奖励前面 </td>    <td class="tg-0pky">半透明 <br>将已领取的奖励置为已领取状态 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【明日再来】按钮 </td>    <td class="tg-0pky">明日再来美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 </td>    <td class="tg-0pky">- </td>  </tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Proposal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</title>
      <link href="2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/"/>
      <url>2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/</url>
      
        <content type="html"><![CDATA[<h1 id="8-20200306-20210708-Shading-2-Shading-Pipeline-and-Texture-Mapping"><a href="#8-20200306-20210708-Shading-2-Shading-Pipeline-and-Texture-Mapping" class="headerlink" title="8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)"></a>8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</h1><h2 id="A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model"><a href="#A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model" class="headerlink" title="A Simple Shading Model (Blinn-Phong Reflectance Model)"></a>A Simple Shading Model (Blinn-Phong Reflectance Model)</h2><h3 id="Diffuse-Term-last-time"><a href="#Diffuse-Term-last-time" class="headerlink" title="Diffuse Term (last time)"></a>Diffuse Term (last time)</h3><h3 id="Specular-Term-Blinn-Phong"><a href="#Specular-Term-Blinn-Phong" class="headerlink" title="Specular Term (Blinn-Phong)"></a>Specular Term (Blinn-Phong)</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709111209.png" alt="Specular Term (Blinn-Phong)" style="zoom: 25%;" /><ul><li><p>高光项是因为观察方向和镜面反射方向足够接近（$\bf{v,R}$ 足够接近）</p></li><li><p>相当于法线方向 $\vec n$ 和半程向量 $\vec h$（即 $\bf{I,v}$ 向量加和后归一的方向）很接近</p></li><li><p>diffuse<br>$L_d = k_d (I/r^2)\max(0,\bf{n · l})$</p></li><li><p>specular<br>$L_s = k_s (I/r^2)\max(0,\cos \alpha)^p\<br>= k_s (I/r^2)\max(0,\bf{n · h})^p$</p><ul><li><p>这里按理也要考虑能量吸收 $\max(0,\bf{n · l})$<br>但因为 blinn-phong 是经验模型 所以简化掉了</p></li><li><p>$p$ 指数为高光修正 用于控制高光可见范围  为保证只有小范围能看到高光 可能值为 100-200</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112445.png" alt="Cosine Power Plots" style="zoom:33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112607.png" alt="Specular Term (Blinn-Phong)" style="zoom:33%;" /></li></ul></li></ul><h3 id="Ambient-Term-Blinn-Phong"><a href="#Ambient-Term-Blinn-Phong" class="headerlink" title="Ambient Term (Blinn-Phong)"></a>Ambient Term (Blinn-Phong)</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112712.png" alt="Ambient Term (Blinn-Phong)" style="zoom:33%;" /><ul><li>$L_a = k_a I_a$<ul><li>环境光不管从哪里进来 和 v 无关</li><li>假设在哪里看都一样    和 w 无关</li><li>环境光是常数 作用是保证没有地方是完全黑的</li><li>精确计算需要环境光照</li></ul></li></ul><h3 id="Sum-Blinn-Phong-Reflection-Model"><a href="#Sum-Blinn-Phong-Reflection-Model" class="headerlink" title="Sum: Blinn-Phong Reflection Model"></a>Sum: Blinn-Phong Reflection Model</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112858.png" alt="Sum: Blinn-Phong Reflection Model" style="zoom:33%;" /><ul><li>$L = L_a + L_d + L_s$</li></ul><h1 id="Shading-Frequencies-着色频率"><a href="#Shading-Frequencies-着色频率" class="headerlink" title="Shading Frequencies 着色频率"></a>Shading Frequencies 着色频率</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113253.png" alt="Shading Frequencies" style="zoom:33%;" /><ul><li><p>着色频率：（着色粒度）着色应用在哪些点</p><ul><li>分别表示着色在平面/顶点/像素上</li></ul></li><li><p>每个平面着色 (flat shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113347.png" alt="flat shading" style="zoom:33%;" /></li><li><p>每个顶点着色 (Gouraud shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713181855.png" alt="Gouraud shading" style="zoom:33%;" /><ul><li>内部插值</li></ul></li><li><p>每个像素着色 (Phong shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210716125759.png" alt="Phong shading" style="zoom:33%;" /><ul><li>not the blinn-phong reflectance model (model 是着色模型，phong shading 是着色频率)</li></ul></li><li><p>计算量开销不一定谁大</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113559.png" alt="计算量开销不一定谁大" style="zoom:33%;" /></li></ul><h2 id="Defining-Per-Vertex-Normal-Vectors-算逐顶点法线"><a href="#Defining-Per-Vertex-Normal-Vectors-算逐顶点法线" class="headerlink" title="Defining Per-Vertex Normal Vectors 算逐顶点法线"></a>Defining Per-Vertex Normal Vectors 算逐顶点法线</h2><ul><li><p>做顶点所关联的面的法线做加权平均</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113816.png" alt="Defining Per-Vertex Normal Vectors" style="zoom:33%;" /></li></ul><h2 id="Defining-Per-Pixel-Normal-Vectors-算逐像素法线"><a href="#Defining-Per-Pixel-Normal-Vectors-算逐像素法线" class="headerlink" title="Defining Per-Pixel Normal Vectors 算逐像素法线"></a>Defining Per-Pixel Normal Vectors 算逐像素法线</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113854.png" alt="Defining Per-Pixel Normal Vectors" style="zoom:33%;" /><ul><li>需要用重心坐标</li></ul><hr><blockquote><p>把以上内容合起来</p></blockquote><h1 id="Graphics-Real-time-Rendering-Pipeline"><a href="#Graphics-Real-time-Rendering-Pipeline" class="headerlink" title="Graphics (Real-time Rendering) Pipeline"></a>Graphics (Real-time Rendering) Pipeline</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114026.png" alt="Graphics (Real-time Rendering) Pipeline" style="zoom:33%;" /><ul><li><p>Graphics Pipeline</p><ul><li><p>vertex processing 输入一堆点</p></li><li><p>MVP 投影到屏幕上</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114447.png" alt="Graphics Pipeline - MVP" style="zoom:33%;" /></li><li><p>Triangle Processing 形成三角形</p></li><li><p>Rasterization 光栅化离散成 fragments  （fragment 类比于像素）</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114533.png" alt="Graphics Pipeline - Rasterization" style="zoom:33%;" /></li><li><p>Fragment Processing 着色 shading</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114644.png" alt="Graphics Pipeline - Fragment Processing - Z-Buffer" style="zoom:33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114724.png" alt="Graphics Pipeline - Fragment Processing - Shading" style="zoom:33%;" /><ul><li>需要看到底是顶点着色还是像素着色</li><li>控制顶点/像素着色的着色器：shader</li><li>texture mapping 纹理映射</li></ul></li><li><p>显示 output</p></li></ul></li></ul><h1 id="Shader-Programs"><a href="#Shader-Programs" class="headerlink" title="Shader Programs"></a>Shader Programs</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114910.png" alt="Shader Programs" style="zoom:33%;" /><ul><li><p>每个顶点/fragment会执行一次 所以只考虑一个顶点/像素的操作</p></li><li><p>写的是通用程序</p><ul><li>如果写的是顶点操作 - vertex shader</li><li>如果写的是fragment - fragment shader</li></ul><p>  <a href="http://shadertoy.com/">Shadertoy BETA</a></p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/eDuxj2Rd/Image+2020-03-06+at+10.49.08.png?v=2373a38c9d045c08edbe031686411c97.png" alt="Snail Shader Program" style="zoom: 50%;" /></li><li><p>Inigo Quilez</p><ul><li>Procedurally modeled, 800 line shader.</li><li><a href="http://shadertoy.com/view/ld3Gz2">http://shadertoy.com/view/ld3Gz2</a></li></ul></li></ul><hr><blockquote><p>线代图形学发展</p></blockquote><h1 id="Goal-Highly-Complex-3D-Scenes-in-Realtime"><a href="#Goal-Highly-Complex-3D-Scenes-in-Realtime" class="headerlink" title="Goal: Highly Complex 3D Scenes in Realtime"></a>Goal: Highly Complex 3D Scenes in Realtime</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115545.png" alt="Goal: Highly Complex 3D Scenes in Realtime" style="zoom:33%;" /><h1 id="Graphics-Pipeline-Implementation-GPUs"><a href="#Graphics-Pipeline-Implementation-GPUs" class="headerlink" title="Graphics Pipeline Implementation: GPUs"></a>Graphics Pipeline Implementation: GPUs</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115704.png" alt="Graphics Pipeline Implementation: GPUs" style="zoom:33%;" /><ul><li><p>实现</p></li><li><p>三角形怎么光栅化</p></li><li><p>如何投影</p></li><li><p>…</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115812.png" alt="GPU" style="zoom:33%;" /><ul><li>GPU：可以理解为高度并行化的处理器</li></ul></li></ul><blockquote><p>以上为图形管线</p></blockquote><hr><h1 id="Texture-Mapping-纹理映射"><a href="#Texture-Mapping-纹理映射" class="headerlink" title="Texture Mapping 纹理映射"></a>Texture Mapping 纹理映射</h1><ul><li><p>Different Colors at different places</p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/YEuARGkY/Image+2020-03-06+at+10.55.37.png?v=bcc81dcc9d56d81285227e584eea545d.png" alt="Different Colors at different places" style="zoom: 50%;" /></li><li><p>引入纹理映射的原因：在物体不同位置引入不同属性</p><ul><li>如漫反射属性</li></ul></li><li><p>纹理和着色的区别：</p><ul><li>纹理：定义着色的时候各个不同点的属性 不希望每个点都以相同方式进行着色</li></ul></li><li><p>Surfaces are 2D</p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/Z4u5olD6/Image+2020-03-06+at+10.57.18.png?v=4af3e8b64feaa103359e7f0bbbef350a.png" alt="Surfaces are 2D" style="zoom: 50%;" /><ul><li>每个三维物体的表面都是二维</li><li>纹理：就是一张图 有一一对应关系</li></ul></li><li><p>Texture Applied to Surface</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120336.png" alt="Texture Applied to Surface" style="zoom:33%;" /></li><li><p>如何把空间中的三角形映射到纹理上？</p><ul><li>美工/程序人工映射</li><li>自动映射 parameterazation 参数化 很难</li></ul></li><li><p>Visualization of Texutre Coordinates</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120613.png" alt="Visualization of Texutre Coordinates" style="zoom:33%;" /></li><li><p>uv 纹理坐标系</p><ul><li>范围 0-1</li></ul></li><li><p>可重复使用</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120714.png" alt="Texture Applied to Surface" style="zoom:33%;" /></li><li><p>Textures can be used multiple times</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120757.png" alt="Textures can be used multiple times" style="zoom:33%;" /><ul><li>纹理设计得好就可以无缝衔接</li><li>tileable texture</li><li>Wang tiling</li></ul></li></ul><hr><ul><li>next：知道三角形三个顶点 uv<br>如何知道三角形内部 uv - 插值</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-7 20200303 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</title>
      <link href="2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/"/>
      <url>2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/</url>
      
        <content type="html"><![CDATA[<h1 id="7-20200303-20210708-Shading-1-Illumination-Shading-and-Graphics-Pipeline"><a href="#7-20200303-20210708-Shading-1-Illumination-Shading-and-Graphics-Pipeline" class="headerlink" title="7 20200303 / 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)"></a>7 20200303 / 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</h1><h1 id="深度缓存：解决可见性-遮挡问题"><a href="#深度缓存：解决可见性-遮挡问题" class="headerlink" title="深度缓存：解决可见性/遮挡问题"></a>深度缓存：解决可见性/遮挡问题</h1><h2 id="Painter’s-Algorithm"><a href="#Painter’s-Algorithm" class="headerlink" title="Painter’s Algorithm"></a>Painter’s Algorithm</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708125836.png" alt="Painter's Algorithm" style="zoom: 50%;" /><ul><li>从后向前绘制，<strong>overwrite</strong> in the frame buffer</li><li>需要考虑绘制顺序</li><li>Requires sorting in depth (O(n log n) for n triangles) Can have unresolvable depth order<ul><li>但会出现无法定义深度关系的情况</li></ul></li></ul><h3 id="Z-Buffer-深度缓存"><a href="#Z-Buffer-深度缓存" class="headerlink" title="Z-Buffer 深度缓存"></a>Z-Buffer 深度缓存</h3><ul><li><p>This is the algorithm that eventually won.</p></li><li><p>Idea:</p><ul><li>Store current min. z-value for each sample (pixel) 记录像素最浅深度</li><li>Needs an additional buffer for depth values</li><li>frame buffer stores color values (color buffer)</li><li>depth buffer (z-buffer) stores depth (depth buffer)</li></ul></li><li><p>IMPORTANT: For simplicity we suppose</p><ul><li><p>z is always positive<br>(smaller z -&gt; closer, larger z -&gt; further)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130237.png" alt="Z-Buffer examples" style="zoom: 33%;" /></li></ul></li><li><p>Algorighm</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130440.png" alt="Z-Buffer Algorithm" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130621.png" alt="Z-Buffer Algorithm cont." style="zoom: 33%;" /><ul><li>初始深度无限远</li><li>把三角形做光栅化为像素</li><li>找到像素后找到其深度</li><li>z 值小就更新</li></ul></li><li><p>z-buffer Complexity</p></li><li><p>O(n) for n triangles (assuming constant coverage)</p></li><li><p>How is it possible to sort n triangles in linear time?</p><ul><li>并没有排序 只是进行了比较 找最小值</li></ul></li><li><p>绘制顺序不同不影响结果</p><ul><li>两个浮点数基本不可能完全相等</li></ul></li><li><p>Most important visibility algorithm</p><ul><li>Implemented in hardware for all GPUs</li></ul></li><li><p>z-buffer 处理不了透明物体</p></li></ul><h1 id="What-we’ve-covered-so-far"><a href="#What-we’ve-covered-so-far" class="headerlink" title="What we’ve covered so far"></a>What we’ve covered so far</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708131319.png" alt="What we've covered so far" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708131557.png" alt="Rotating Cubes" style="zoom:33%;" /><h1 id="Shading-着色"><a href="#Shading-着色" class="headerlink" title="Shading 着色"></a>Shading 着色</h1><h2 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h2><ul><li>In Merriam-Webster Dictionary<ul><li>shading,  noun<br>The darkening or coloring of an illustration or diagram with parallel lines or a block of color.</li><li>In this course<ul><li>The process of applying a material to an object.</li></ul></li></ul></li></ul><h2 id="A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model"><a href="#A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model" class="headerlink" title="A Simple Shading Model (Blinn-Phong Reflectance Model)"></a>A Simple Shading Model (Blinn-Phong Reflectance Model)</h2><ul><li><p>Perceptual Observations</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708132803.png" alt="Perceptual Observations" style="zoom:33%;" /><ul><li>高光 specular highlights</li><li>漫反射 diffuse reflection</li><li>环境光 ambient lighting</li></ul></li><li><p>Shading is Local - 着色局部性只看自己 不考虑其他任何物体的存在 所以没有阴影 (shading ≠ shadow)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133217.png" alt="Shading is Local" style="zoom:33%;" /></li></ul><h3 id="Diffuse-Reflection"><a href="#Diffuse-Reflection" class="headerlink" title="Diffuse Reflection"></a>Diffuse Reflection</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133534.png" alt="Diffuse Reflection" style="zoom:33%;" /><ul><li><p>把光看作能量 （Lambert）<br>看着色点周围单位面积能够接收到多少能量<br>直射接收到的能量 &gt; 折射接收到的能量</p></li><li><p>Light Falloff</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133918.png" alt="Light Falloff" style="zoom:33%;" /><ul><li>能量守恒 - 单位点的能量越来越小 （不同球体表面积所含能量相同）</li></ul></li><li><p>Lambertian (Diffuse) Shading</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708134228.png" alt="Lambertian (Diffuse) Shading" style="zoom:33%;" /></li><li><p>$L_d = k_d (I/r^2)\max(0,\bf{n · l})$</p><ul><li>$k_d$: 着色点对于光的吸收率<ul><li>如果 $k_d = 1$<ul><li>表示该点完全不吸收能量 - 最亮</li></ul></li><li>如果 $k_d = 0$<ul><li>表示该点完全吸收能量没有能量反射出去 - 最暗</li></ul></li><li>如果定义为三通道的 rgb 分别有 01<ul><li>那么就可以定义颜色值</li></ul></li></ul></li><li>$I/r^2$：传播到着色点的强度（结合能量球来看 总面积为 $4\pi r^2$ 距离为 r，那么单位强度就是 $\frac{I}{4\pi r^2}$，为平方反比关系）<ul><li>I: 点光源在单位距离上的强度</li><li>r: 点光源和着色点的距离</li></ul></li><li>$max(0, \bf{n · l})$<ul><li>为什么有 0<ul><li>如果是负数代表从反面照射没有意义</li></ul></li><li>$\bf{n · l}$ 为余弦角</li><li>整体表示被着色点能接收到的能量的比例</li></ul></li><li>漫反射与V无关 - 和观测点无关</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-6 20200228 20210708 Rasterization 2 anti - aliasing and Z - buffering</title>
      <link href="2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/"/>
      <url>2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/</url>
      
        <content type="html"><![CDATA[<h1 id="6-20200228-20210708-Rasterization-2-anti-aliasing-and-Z-buffering"><a href="#6-20200228-20210708-Rasterization-2-anti-aliasing-and-Z-buffering" class="headerlink" title="6 20200228/20210708 Rasterization 2 anti-aliasing and Z-buffering"></a>6 20200228/20210708 Rasterization 2 anti-aliasing and Z-buffering</h1><h2 id="Sampling-Artifacts-Errors-Mistakes-Inaccuracies-in-Computer-Graphics"><a href="#Sampling-Artifacts-Errors-Mistakes-Inaccuracies-in-Computer-Graphics" class="headerlink" title="Sampling Artifacts (Errors / Mistakes / Inaccuracies) in Computer Graphics"></a>Sampling Artifacts (Errors / Mistakes / Inaccuracies) in Computer Graphics</h2><ul><li><p>采样的例子</p><ul><li>rasterization = sample 2d positions</li><li>photograph = sample image sensor plane</li></ul></li><li><p>video = sample time</p></li><li><p>采样瑕疵的例子 sampling artifacts</p><ul><li><p>Jaggies (staircase pattern)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105306.png" alt="Jaggies (staircase pattern)" style="zoom: 25%;" /></li><li><p>Moiré Patterns in Imaging</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105327.png" alt="Moiré Patterns in Imaging" style="zoom: 25%;" /></li><li><p>Wagon Wheel Illusion (False Motion)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105353.png" alt="Wagon Wheel Illusion (False Motion)" style="zoom: 25%;" /><ul><li>原因：人眼在时间上的采样跟不上运动速度</li></ul></li></ul></li><li><p>采样瑕疵的本质</p><ul><li>Signals are changing too fast (high frequency), but sampled too slowly</li></ul></li></ul><h1 id="Antialiasing-Idea-Blurring-Pre-Filtering-Before-Sampling"><a href="#Antialiasing-Idea-Blurring-Pre-Filtering-Before-Sampling" class="headerlink" title="Antialiasing Idea: Blurring (Pre-Filtering) Before Sampling"></a>Antialiasing Idea: Blurring (Pre-Filtering) Before Sampling</h1><ul><li><p>先模糊滤波再采样</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105614.png" alt="Rasterization: Point Sampling in Space" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105628.png" alt="Rasterization: Antialiased Sampling" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105754.png" alt="效果对比" style="zoom:25%;" /></li></ul><h1 id="But-why"><a href="#But-why" class="headerlink" title="But why?"></a>But why?</h1><ol><li>Why undersampling introduces aliasing?</li><li>Why pre-filtering then sampling can do antialiasing?</li></ol><ul><li><p>Let’s dig into fundamental reasons</p><p>And look at how to implement antialiased rasterization</p></li><li><p>为什么先采样再模糊不行</p><ul><li>先采样后 频谱已经发生了混叠</li><li>此时再模糊 得到的结果还是混叠的频谱</li></ul></li></ul><h1 id="Frequency-domain-频域"><a href="#Frequency-domain-频域" class="headerlink" title="Frequency domain 频域"></a>Frequency domain 频域</h1><ul><li><p>Frequencies</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105917.png" alt="Frequencies" style="zoom:25%;" /></li></ul><h2 id="Fourier-Transform"><a href="#Fourier-Transform" class="headerlink" title="Fourier Transform"></a>Fourier Transform</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110031.png" alt="Fourier Transform" style="zoom:25%;" /><ul><li><p>傅里叶级数展开：任何一个周期函数都可以写成一系列正弦余弦函数线性组合以及一个常数项</p><ul><li>任何一个函数都可分解为不同频率</li></ul></li><li><p>fourier Transform Decomposes A Signal into Frequencies 傅里叶变换（把一个函数变为另一个，或者反过来）把函数分解为不同频率的段并分别显示出来</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110225.png" alt="fourier Transform Decomposes A Signal into Frequencies" style="zoom:25%;" /></li><li><p>Higher Frequencies Need Faster Sampling</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110352.png" alt="Higher Frequencies Need Faster Sampling" style="zoom:25%;" /></li><li><p>Undersampling Creates Frequency Aliases 欠采样导致了频率瑕疵以频率定义走样：假如蓝色和黑色分别是两个不同的函数 二者采样方法相同 但本身频率不同 导致了采样结果相同</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110544.png" alt="Undersampling Creates Frequency Aliases" style="zoom:25%;" /></li></ul><h2 id="Filtering-Getting-rid-of-certain-frequency-contents"><a href="#Filtering-Getting-rid-of-certain-frequency-contents" class="headerlink" title="Filtering = Getting rid of certain frequency contents"></a>Filtering = Getting rid of certain frequency contents</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110721.png" alt="Viasualizing Image Frequency Content" style="zoom:25%;" /><ul><li><p>傅里叶变换把图像从时域变成了频域</p></li><li><p>中心是最低频 周围是高频</p></li><li><p>多数信息集中在低频（中心）</p></li><li><p>水平和竖直亮线</p><ul><li>分析信号时会假设信号周期性重复（即假设图片水平重叠放置 AAAA）</li><li>但实际上并不重复</li><li>那么在左右边界部分会产生剧烈信号变化 - 产生高频</li><li>则产生白线</li><li>若分析单幅内容 可忽略</li></ul></li><li><p>高通滤波（抹掉低频信号）可得到图像内容轮廓边界 - 和周围内容相差巨大 - 信号变化非常大 - 高频信号</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708111303.png" alt="高通滤波" style="zoom:25%;" /></li><li><p>低通滤波（只有低频信号通过，抹掉高频信息）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112533.png" alt="低通滤波" style="zoom:25%;" /><ul><li>边界被抹去</li><li>水波纹</li></ul></li><li><p>去掉了高和低频率信息</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112640.png" alt="同时过滤高低频信息" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112659.png" alt="同时过滤高低频信息 cont." style="zoom:25%;" /><ul><li>提取到了不太明显的轮廓特征</li><li>数字图像处理</li></ul></li></ul><h1 id="Filtering-Convolution-卷积-Averaging-加权平均"><a href="#Filtering-Convolution-卷积-Averaging-加权平均" class="headerlink" title="Filtering = Convolution 卷积 (= Averaging) 加权平均"></a>Filtering = Convolution 卷积 (= Averaging) 加权平均</h1><ul><li><p>Convolution 卷积</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113238.png" alt="Convolution" style="zoom:25%;" /></li><li><p>图形学中的简化定义</p><ul><li>卷积：通过窗口来进行点乘获取中心值（相当于加权平均）</li></ul></li><li><p>Convolution Theorem（卷积定理）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113517.png" alt="Convolution Theorem" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113559.png" alt="Convolution Theorem cont." style="zoom:25%;" /><ul><li>Convolution in the spatial domain is equal to multiplication in the frequency domain, and vice versa - 在时域上想对信号进行卷积相当于在频域上进行乘积，反之亦然</li><li>Option 1:<ul><li>Filter by convolution in the spatial domain</li></ul></li><li>Option 2:<ul><li>Transform to frequency domain (Fourier transform)</li><li>Multiply by Fourier transform of convolution kernel</li><li>Transform back to spatial domain (inverse Fourier)</li></ul></li></ul></li></ul><h2 id="Box-Filter-低通滤波器"><a href="#Box-Filter-低通滤波器" class="headerlink" title="Box Filter 低通滤波器"></a>Box Filter 低通滤波器</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114556.png" alt="Box Filter" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114539.png" alt="Box Filter - Works as “Low Pass” Filter" style="zoom:25%;" /><ul><li>box 越大结果越模糊（留下的频率越低）<ul><li>相当于画笔变大</li></ul></li><li>考虑极端情况<ul><li>box 超级大 - 只有最中间有采样信息</li><li>box 超级小 - 全部频率都被留下来</li></ul></li></ul><h1 id="Sampling-Repeating-Frequency-Contents"><a href="#Sampling-Repeating-Frequency-Contents" class="headerlink" title="Sampling = Repeating Frequency Contents"></a>Sampling = Repeating Frequency Contents</h1><ul><li><p>冲激函数（某些位置有值有些没有，为0）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114726.png" alt="冲激函数" style="zoom:25%;" /><ul><li>采样：给定函数与冲激函数相乘得到采样结果</li><li>采样（从频域角度理解）：就是在重复原始信号的频谱</li></ul></li></ul><p>$$时域的乘积 = 频域的卷积$$</p><ul><li><p>为什么会走样</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708115306.png" alt="为什么会走样" style="zoom:25%;" /><ul><li>采样率不足（不够快），导致原始信号复制粘贴距离不够大，频率的频谱发生了混叠，即走样</li><li>相当于采样低 = 稀疏采样</li></ul></li></ul><h1 id="Anti-Aliasing"><a href="#Anti-Aliasing" class="headerlink" title="Anti-Aliasing"></a>Anti-Aliasing</h1><ul><li>How Can We Reduce Aliasing Error?</li><li>Option 1: Increase sampling rate<ul><li>Essentially increasing the distance between replicas in the<br>Fourier domain</li><li>Higher resolution displays, sensors, framebuffers…</li><li>But: costly &amp; may need very high resolution</li></ul></li><li>Option 2: Antialiasing<ul><li>Making Fourier contents “narrower” before repeating</li><li>i.e. Filtering out high frequencies before sampling</li></ul></li><li>步骤<ul><li>先卷积</li><li>再采样</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708115851.png" alt="如何反走样" style="zoom:25%;" /><ul><li><p>模糊之后的频谱覆盖范围小</p></li><li><p>所以采样堆叠几率小</p></li><li><p>如何模糊</p><ul><li><p>用一定大小的低通滤波器来处理图像</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120101.png" alt="A Practical Pre-Filter" style="zoom:25%;" /></li></ul></li></ul><h2 id="Antialiasing-by-averaging-values-in-pixel-area"><a href="#Antialiasing-by-averaging-values-in-pixel-area" class="headerlink" title="Antialiasing by averaging values in pixel area"></a>Antialiasing by averaging values in pixel area</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120227.png" alt="Antialiasing by averaging values in pixel area" style="zoom:25%;" /><ul><li><p>Solution:</p><ul><li>Convolve f(x,y) by a 1-pixel box-blur<ul><li>convolving = filtering = averaging</li></ul></li><li>Then sample at every pixel’s center</li></ul></li><li><p>怎么把三角形在像素内覆盖的区域算出来：</p></li></ul><h2 id="Antialiasing-By-Supersampling-MSAA"><a href="#Antialiasing-By-Supersampling-MSAA" class="headerlink" title="Antialiasing By Supersampling (MSAA)"></a>Antialiasing By Supersampling (MSAA)</h2><blockquote><p> 解决的是对信号的模糊操作 不是靠提升分辨率解决问题 只是为了解决三角形覆盖问题</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120523.png" alt="Supersampling" style="zoom:25%;" /><ul><li>给像素内部加采样点 看像素覆盖率</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708122814.png" alt="Supersampling cont." style="zoom:25%;" /><h2 id="Antialiasing-Today"><a href="#Antialiasing-Today" class="headerlink" title="Antialiasing Today"></a>Antialiasing Today</h2><ul><li>No free lunch!What’s the cost of MSAA?<ul><li>增加了计算量</li></ul></li><li>Milestones (personal idea)<ul><li>FXAA (Fast Approximate AA)<ul><li>和采样无关 相当于后期处理</li><li>得到一幅图 有锯齿 找到边界 将有锯齿的边界换成没有锯齿的边界</li></ul></li><li>TAA (Temporal AA)<ul><li>复用上一帧信息 在当前帧不引入新信息</li></ul></li></ul></li><li>Super resolution / super sampling 超分辨率<ul><li>From low resolution to high resolution</li><li>Essentially still “not enough samples“ problem</li><li>DLSS (Deep Learning Super Sampling)<ul><li>一切猜测 深度学习都适合</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-5 20200225 20210706 07 Rasterization 1 (Triangles)</title>
      <link href="2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/"/>
      <url>2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/</url>
      
        <content type="html"><![CDATA[<h1 id="5-20200225-20210706-07-Rasterization-1-Triangles"><a href="#5-20200225-20210706-07-Rasterization-1-Triangles" class="headerlink" title="5 20200225 / 20210706/07 Rasterization 1 (Triangles)"></a>5 20200225 / 20210706/07 Rasterization 1 (Triangles)</h1><h3 id="Perspective-Projection"><a href="#Perspective-Projection" class="headerlink" title="Perspective Projection"></a>Perspective Projection</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210706094119.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li><p>红线夹角（field-of-view, FOY）：垂直可视角度</p></li><li><p>How to convert from fovY and aspect to l,r,b,t?</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210706094725.png" alt="How to convert from fovY and aspect to l,r,b,t?" style="zoom:50%;" /></li></ul><h3 id="What’s-after-MVP"><a href="#What’s-after-MVP" class="headerlink" title="What’s after MVP?"></a>What’s after MVP?</h3><ul><li>Model transformation (placing objects)</li><li>View transformation (placing camera)</li><li>Projection transformation<ul><li>Orthographic projection (cuboid to “canonical” cube $[-1, 1]^3$)</li><li>Perspective projection (frustum to “canonical” cube)</li></ul></li><li>Canonical Cube to Screen （画在屏幕上）</li></ul><h3 id="Canonical-Cube-to-Screen"><a href="#Canonical-Cube-to-Screen" class="headerlink" title="Canonical Cube to Screen"></a>Canonical Cube to Screen</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113705.png" alt="Canonical Cube to Screen" style="zoom:50%;" /><ul><li><p>What is a screen?</p><ul><li>An array of pixels</li><li>Size of the array: resolution</li><li>A typical kind of raster display</li></ul></li><li><p>Raster (光栅) == screen in German</p><ul><li>Rasterize == drawing onto the screen</li></ul></li><li><p>Pixel (FYl short for “picture element”)</p><ul><li>For now: A pixel is a little square with uniform color</li><li>Color is a mixture of (red, green, blue)</li></ul></li><li><p>Defining the screen space</p><ul><li><p>Slightly different from the “tiger book”</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113221.png" alt="Canonical Cube to Screen - Defining the screen space" style="zoom:50%;" /></li><li><p>像素覆盖屏幕空间（宽 * 高）</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113531.png" alt="Canonical Cube to Screen - Transform in xy plane" style="zoom:50%;" /></li></ul></li><li><p>Irrelevant to z</p></li><li><p>Transform in xy plane: $[-1: 1]^2$ to [o, width] x [o, height]</p></li><li><p>Viewport transform matrix: 视口变换</p><ul><li>先把 $[-1, 1]^2$ 映射到 $[0,width] x [0, height]$</li><li>再把屏幕中心左下角定义到原点 所以有平移变换</li><li>忽略 z 轴</li></ul></li></ul><h1 id="Rasterizing-Triangles-into-Pixels-光栅化"><a href="#Rasterizing-Triangles-into-Pixels-光栅化" class="headerlink" title="Rasterizing Triangles into Pixels 光栅化"></a>Rasterizing Triangles into Pixels 光栅化</h1><ul><li><p>Drawing machine</p><ul><li>CNC Sharpie Drawing Machine</li></ul>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713171942.png" alt="CNC Sharpie Drawing Machine" style="zoom: 33%;" /><ul><li>Laser Cutters</li></ul>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170022.png" alt="Laser Cutters" style="zoom: 33%;" /></li></ul><h2 id="Different-Raster-Displays"><a href="#Different-Raster-Displays" class="headerlink" title="Different Raster Displays"></a>Different Raster Displays</h2><ul><li><p>Oscilloscope 示波器</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170200.png" alt="Oscilloscope" style="zoom: 33%;" /></li></ul><h3 id="示波器成像原理-Cathode-Ray-Tube-CRT-阴极射线管"><a href="#示波器成像原理-Cathode-Ray-Tube-CRT-阴极射线管" class="headerlink" title="示波器成像原理 - Cathode Ray Tube (CRT) 阴极射线管"></a>示波器成像原理 - Cathode Ray Tube (CRT) 阴极射线管</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707114713.png" alt="Cathode Ray Tube (CRT) 阴极射线管" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170311.png" alt="Cathode Ray Tube (CRT) - Television" style="zoom: 25%;" /><ul><li>隔行扫描 （利用视觉暂留效应）高速运动画面会造成严重画面撕裂</li></ul><h3 id="Frame-Buffer-Memory-for-a-Raster-Display"><a href="#Frame-Buffer-Memory-for-a-Raster-Display" class="headerlink" title="Frame Buffer: Memory for a Raster Display"></a>Frame Buffer: Memory for a Raster Display</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707120919.png" alt="Frame Buffer: Memory for a Raster Display" style="zoom:50%;" /><h3 id="Flat-Panel-Displays"><a href="#Flat-Panel-Displays" class="headerlink" title="Flat Panel Displays"></a>Flat Panel Displays</h3><ul><li><p>LCD (liquid Crystal Display) Pixel</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121123.png" alt="LCD (liquid Crystal Display) Pixel" style="zoom:50%;" /><ul><li>Principle: block or transmit light by twisting polarization</li><li>Illumination from backlight (e.g. fluorescent or LED)</li><li>Intermediate intensity levels by partial twist</li></ul></li><li><p>OLED</p></li><li><p>LED Array Display 发光二极管</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121229.png" alt="LED Array Display 发光二极管" style="zoom:50%;" /></li><li><p>Electrophoretic (Electronic Ink) Display</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121242.png" alt="Electrophoretic (Electronic Ink) Display" style="zoom:50%;" /><ul><li>问题<ul><li>刷新率比较低（肉眼可见）</li></ul></li></ul></li></ul><h1 id="Rasterization-Drawing-to-Raster-Displays"><a href="#Rasterization-Drawing-to-Raster-Displays" class="headerlink" title="Rasterization: Drawing to Raster Displays"></a>Rasterization: Drawing to Raster Displays</h1><h2 id="Triangles-Fundamental-Shape-Primitives"><a href="#Triangles-Fundamental-Shape-Primitives" class="headerlink" title="Triangles - Fundamental Shape Primitives"></a>Triangles - Fundamental Shape Primitives</h2><ul><li><p>Why triangles?</p><ul><li>Most basic polygon</li><li>Break up other polygons 其他多边形可被拆为三角形</li></ul></li><li><p>Unique properties</p><ul><li>Guaranteed to be planar 三角形内部一定在同一平面</li><li>Well-defined interior 内外定义清晰</li><li>Well-defined method for interpolating values at vertices over triangle (barycentric interpolation) 定义三个顶点属性后 可以根据位置方便地插值</li></ul></li><li><p>What Pixel Values Approximate a Triangle</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121757.png" alt="What Pixel Values Approximate a Triangle" style="zoom:50%;" /></li></ul><h1 id="A-simple-approach-sampling"><a href="#A-simple-approach-sampling" class="headerlink" title="A simple approach - sampling"></a>A simple approach - sampling</h1><h2 id="Sampling-a-Function"><a href="#Sampling-a-Function" class="headerlink" title="Sampling a Function"></a>Sampling a Function</h2><ul><li>definition<ul><li>Evaluating a function at a point is sampling.<br>We can discretize a function by sampling.<br>采样就是把函数离散化的过程</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">for (int x &#x3D; 0; x &lt; xmax; ++x;output [x] &#x3D; f(x);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Sampling is a core idea in graphics.<br>We sample time (1D), area (2D), direction (2D), volume (3D) …</li></ul><h2 id="看给定点像素中心是否在三角形内"><a href="#看给定点像素中心是否在三角形内" class="headerlink" title="看给定点像素中心是否在三角形内"></a>看给定点像素中心是否在三角形内</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122155.png" alt="Rasterization As 2D Sampling" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122204.png" alt="Sample if Each Pixel Center Is Inside Triangle" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122216.png" alt="Sample if Each Pixel Center Is Inside Triangle cont." style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122225.png" alt="Define Binary Function" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122234.png" alt="Rasterization = Sampling A 2D Indicator Function" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122337.png" alt="Recall: Sample Location" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122357.png" alt="Evaluating inside" style="zoom: 33%;" /><ul><li><p>方法：叉乘</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122408.png" alt="方法：叉乘" style="zoom: 33%;" /></li></ul><h2 id="Edge-Cases"><a href="#Edge-Cases" class="headerlink" title="Edge Cases"></a>Edge Cases</h2><ul><li><p>不作处理</p></li><li><p>都做特殊处理</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122603.png" alt="Edge Cases" style="zoom: 33%;" /></li></ul><h2 id="Cheking-all-pixels-on-the-screen"><a href="#Cheking-all-pixels-on-the-screen" class="headerlink" title="Cheking all pixels on the screen"></a>Cheking all pixels on the screen</h2><ul><li><p>包围盒 Axis-aligned bounding box AABB</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122729.png" alt="Cheking all pixels on the screen" style="zoom: 33%;" /></li><li><p>Incremental Triangle Traversal</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122833.png" alt="Incremental Triangle Traversal" style="zoom: 33%;" /><ul><li>适用于细长型三角形（像素少，但 bounding box 大）</li></ul></li></ul><h1 id="实际案例"><a href="#实际案例" class="headerlink" title="实际案例"></a>实际案例</h1><ul><li><p>Real LCD Screen Pixel (Closeup)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122958.png" alt="Real LCD Screen Pixel (Closeup)" style="zoom: 33%;" /></li><li><p>Bayer pattern（右方）</p><ul><li>绿色的点比其他的多（红蓝几乎相等）</li><li>因为人眼对绿色更敏感</li></ul></li><li><p>Aside: What about other display methods</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123414.png" alt="Aside: What about other display methods" style="zoom: 33%;" /></li><li><p>Assume display pixels emit square of light</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123721.png" alt="Assume display pixels emit square of light" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123823.png" alt="The Display Physically Emits This Signal" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123843.png" alt="Compare: The Continous Triangle Function" style="zoom: 33%;" /></li><li><p>question</p><ul><li>锯齿<ul><li>原因：采样率不够高</li><li>解决：next</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-4 20200221 20210705 Transformation Cont</title>
      <link href="2021/07/16/games101-4-20200221-20210705-transformation-cont/"/>
      <url>2021/07/16/games101-4-20200221-20210705-transformation-cont/</url>
      
        <content type="html"><![CDATA[<h1 id="4-20200221-20210705-Transformation-Cont"><a href="#4-20200221-20210705-Transformation-Cont" class="headerlink" title="4 20200221 / 20210705 Transformation Cont."></a>4 20200221 / 20210705 Transformation Cont.</h1><ul><li><p>旋转的逆就是旋转的转置（正交）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215358.png" alt="旋转的逆就是旋转的转置"></p></li><li><p>3D transformations</p></li><li><p>Viewing (观测) transformation</p><ul><li>View (视图) / Camera transformation</li><li>Projection (投影) transformation<ul><li>Orthographic (正交) projection</li><li>Perspectve (透视) projection</li></ul></li></ul></li></ul><h3 id="3D-transformations"><a href="#3D-transformations" class="headerlink" title="3D transformations"></a>3D transformations</h3><ul><li><p>Use homogeneous coordinates again:</p><ul><li>3D point = (x, y, z, 1]</li><li>3D vector = (x, y, z, 0)</li></ul></li><li><p>In general, (x, y, z, w) (w != 0) is the 3D point:<br>(x/w, y/w, z/w)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215936.png" alt="3D transformations" style="zoom:50%;" /></li><li><p>Rotation</p><ul><li>循环对称使得y的矩阵和xz不同，因为是 z 叉乘 x 而不是 x 叉乘 z，所以符号反</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215949.png" alt="3D transformations - Rotation" style="zoom:50%;" /></li><li><p>3D Rotations</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705220226.png" alt="3D transformations - 3D Rotations" style="zoom:50%;" /><ul><li><p>把任意旋转拆解为 x/y/z 旋转</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221000.png" alt="3D transformations - 3D Rotations cont." style="zoom:50%;" /></li></ul></li><li><p>Rodrigues’ Rotation Formula</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221044.png" alt="Rodrigues’ Rotation Formula" style="zoom:50%;" /><ul><li>默认轴过原点，方向为 $n$</li><li>若要沿着任意轴旋转<ul><li>先把旋转的起点平移到原点</li><li>旋转后再平移回来（逆操作）</li></ul></li><li><strong>四元数</strong> （）的引入是为了旋转的差值应用<ul><li>转 10°和转 30°的均值并不是转 20°</li></ul></li></ul></li></ul><h1 id="Viewing-transformation"><a href="#Viewing-transformation" class="headerlink" title="Viewing transformation"></a>Viewing transformation</h1><h2 id="View-Camera-transformation-视图-相机变换"><a href="#View-Camera-transformation-视图-相机变换" class="headerlink" title="View/ Camera transformation (视图/相机变换)"></a>View/ Camera transformation (视图/相机变换)</h2><ul><li><p>what is view transformation （MVP）</p><ul><li>Think about how to take a photo (MVP)<ul><li>Find a good place and arrange people (model transformation) 找物体位置 - 模型变换</li><li>Find a good “angle” to put the camera (view transformation) 找相机位置 - 视图变换</li><li>Cheese! (projection transformation) - 投影变换</li></ul></li></ul></li><li><p>How to perform view transformation</p><ul><li>Define the camera first<ul><li>Position $\vec e$</li><li>Look-at / gaze direction</li><li>Up direction $\hat t$</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221707.png" alt="View/ Camera transformation" style="zoom:50%;" /></li><li><p>Key observation</p><ul><li><p>如果相机和所有物体一起移动，那么成像一致</p></li><li><p>所以把相机位置固定到原点沿着-z方向看（所有物体的位置也做变换）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221756.png" alt="View/ Camera transformation - Key observation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221950.png" alt="View/ Camera transformation - Transform the camera" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705222442.png" alt="View/ Camera transformation - $M_{view}$ in math" style="zoom:50%;" /></li></ul></li><li><p>先平移再旋转</p><ul><li>先把中心移动到原点（平移）</li><li>将所看方向旋转至 -z 方向</li><li>将 up 方向旋转到 y 方向</li><li>$g \times t$ 旋转到 x 方向</li></ul></li><li><p>正着写难写<br>$g \rightarrow -Z, t \rightarrow Y, (g · t \rightarrow X)$<br>反过来写好写<br>$X \rightarrow (g · t), Y \rightarrow t, Z \rightarrow -g$<br>（先求逆矩阵再求原矩阵-对逆矩阵求转置矩阵）</p><ul><li>因为是正交矩阵</li><li>所以对视图矩阵求逆就是求其转置</li></ul></li><li><p>summary</p></li><li><p>Transform objects together with the camera</p></li><li><p>Until camera’s at the origin, up at Y, look at -Z</p></li><li><p>Also known as ModelView Transformation 模型视图变换</p></li></ul><h2 id="Projection-transformation"><a href="#Projection-transformation" class="headerlink" title="Projection transformation"></a>Projection transformation</h2><ul><li>正交投影（平行光 平截头体）<ul><li>平行的线永远平行</li></ul></li><li>透视投影（点光源 锥形体）<ul><li>平行的线会相交</li><li>近大远小</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705223855.png" alt="Projection transformation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705223921.png" alt="Projection transformation - Comparasion" style="zoom:50%;" /><h3 id="Orthographic-projection-正交投影"><a href="#Orthographic-projection-正交投影" class="headerlink" title="Orthographic projection 正交投影"></a>Orthographic projection 正交投影</h3><ul><li><p>A simple way of understanding</p><ul><li>Camera located at origin, looking at -Z, up at Y (looks familiar?)</li><li>Drop Z coordinate</li><li>Translate and scale the resulting rectangle to $[-1, 1]^2$</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224348.png" alt="Orthographic projection - A simple way of understanding" style="zoom:50%;" /></li><li><p>In general</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224415.png" alt="Orthographic projection - In general" style="zoom:50%;" /><ul><li><p>We want to map a cuboid [I, r] x [b, t] x [f, n] to<br>the “canonical ( 正 则 、 规 范 、 标 准 )“ cube $[-1, 1]^3$</p></li><li><p>Slightly different orders (to the “simple way”)</p><ul><li><p>Center cuboid by translating</p></li><li><p>Scale into “canonical” cube</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224642.png" alt="Orthographic projection - Slightly different orders" style="zoom:50%;" /></li><li><p>Transformation matrix<br>先将各方向的中心平移到原点</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224716.png" alt="Orthographic projection - Transformation matrix" style="zoom:50%;" /></li></ul></li></ul></li><li><p>Caveat</p><ul><li>Looking at / along -Z is making near and far not intuitive (n &gt; f)</li><li>FYI: that’s why OpenGL (a Graphics API) uses left hand coords. （观测方向为 z 方向：n 为正的 f 为负的 n &gt; f， -z 方向：n 为负的 far 为正的 n &lt; f）</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224856.png" alt="Orthographic projection - Caveat" style="zoom:50%;" /><h3 id="Perspective-projection-透视投影-近大远小"><a href="#Perspective-projection-透视投影-近大远小" class="headerlink" title="Perspective projection 透视投影 近大远小"></a>Perspective projection 透视投影 近大远小</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705225239.png" alt="Perspective projection" style="zoom:50%;" /><ul><li><p>Most common in Computer Graphics, art, visual system</p></li><li><p>Further objects are smaller 近大远小</p></li><li><p>Parallel lines not parallel; converge to single point</p></li><li><p>Euclid</p><ul><li>平行线永不相交</li><li>但透视投影中会相交</li></ul></li><li><p>Before we move on</p></li><li><p>Recall: property of homogeneous coordinates</p><ul><li>(x,y,z,1), (kx, ky, kz, k != 0), (xz, yz, $z^2$, z != 0) all represent the same point (x, y, z) in 3D<ul><li>e.g. (1, 0, 0, 1) and (2, 0, 0, 2) both represent (1, 0, 0)</li></ul></li></ul></li><li><p>Simple, but useful</p></li><li><p>How to do perspective projection</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705225521.png" alt="How to do perspective projection" style="zoom:50%;" /><ul><li>把透视投影分解为两步骤<ul><li>1.挤压成长方体</li><li>2.进行正交投影</li></ul></li><li>如何挤压<ul><li>原则<ul><li>近平面永远不变</li><li>挤了之后各自平面z不变</li><li>远平面中心点挤后不变</li></ul></li><li>任何一个点变换前后z不变</li><li>中间一个点经过挤压后如何变化</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230045.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li>相似三角形</li><li>y’ 和 y 的关系 $y’ = \frac{n}{z}y$</li><li>x’ 和 x 的关系 $x’ = \frac{n}{z}x$ (与 y 同理)</li></ul></li><li><p>齐次坐标下乘以一个非零数 k 依然为原来那个点（都乘 z）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230359.png" alt="Perspective Projection" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230537.png" alt="Perspective Projection cont." style="zoom:50%;" /></li><li><p>如何求剩余矩阵</p><ul><li><p>两个观察</p><ul><li><p>1.近平面上任意点都不会变</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230936.png" alt="近平面上任意点都不会变" style="zoom:50%;" /><ul><li><p>$n^2$和 x y 无关</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231317.png" alt="$n^2$和 x y 无关" style="zoom:50%;" /></li></ul></li><li><p>2.远平面上任意点的 z 不会变</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231150.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li><p>取远平面中心点</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231329.png" alt="远平面上任意点的 z 不会变" style="zoom:50%;" /></li></ul></li></ul></li><li><p>求解方程之后可知 AB，则 $M_{persp \rightarrow ortho}$ 得解</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231401.png" alt="求解方程" style="zoom: 67%;" /></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-3 20200218 20210704 Transformation</title>
      <link href="2021/07/16/games101-3-20200218-20210704-transformation/"/>
      <url>2021/07/16/games101-3-20200218-20210704-transformation/</url>
      
        <content type="html"><![CDATA[<h1 id="3-20200218-20210704-Transformation"><a href="#3-20200218-20210704-Transformation" class="headerlink" title="3 20200218 / 20210704 Transformation"></a>3 20200218 / 20210704 Transformation</h1><h1 id="Why-study-transformation"><a href="#Why-study-transformation" class="headerlink" title="Why study transformation"></a>Why study transformation</h1><ul><li>type<ul><li>Modeling 模型变换<ul><li>摄像机移动</li><li>rotation</li><li>scaling 皮克斯动画</li></ul></li><li>Viewing 视图变换 （3D to 2D projection）<ul><li>光栅化</li><li>投影</li></ul></li></ul></li><li>2D transformations</li><li>Homogeneous coordinates</li></ul><h1 id="2D-transformations"><a href="#2D-transformations" class="headerlink" title="2D transformations"></a>2D transformations</h1><h2 id="Scale"><a href="#Scale" class="headerlink" title="Scale"></a>Scale</h2><ul><li><p>uniform ($S_{0.5}$)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011357.png" alt="Scale Transform" style="zoom: 67%;" /><ul><li><p>scale matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011424.png" alt="Scale Matrix" style="zoom:67%;" /></li></ul></li><li><p>non-uniform</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011507.png" alt="Scale (Non-Uniform)" style="zoom:67%;" /></li></ul><h2 id="Reflection-Matrix"><a href="#Reflection-Matrix" class="headerlink" title="Reflection Matrix"></a>Reflection Matrix</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011606.png" alt="Reflection Matrix" style="zoom: 50%;" /><h2 id="Shear-Matrix-错切"><a href="#Shear-Matrix-错切" class="headerlink" title="Shear Matrix 错切"></a>Shear Matrix 错切</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011632.png" alt="Shear Matrix" style="zoom: 50%;" /><h2 id="Rotate-围绕-0-0-逆时针"><a href="#Rotate-围绕-0-0-逆时针" class="headerlink" title="Rotate 围绕(0,0)逆时针"></a>Rotate 围绕(0,0)逆时针</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011945.png" alt="Rotate 围绕(0,0)逆时针" style="zoom: 50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012002.png" alt="Rotation Matrix" style="zoom: 50%;" /><h2 id="Linear-Transforms-Matrices"><a href="#Linear-Transforms-Matrices" class="headerlink" title="Linear Transforms = Matrices"></a>Linear Transforms = Matrices</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012456.png" alt="Linear Transforms = Matrices" style="zoom:67%;" /><h1 id="Homogeneous-coordinates"><a href="#Homogeneous-coordinates" class="headerlink" title="Homogeneous coordinates"></a>Homogeneous coordinates</h1><ul><li>why</li></ul><blockquote><p>低一维的加法可以用高一维的乘法替换，所以有了齐次坐标目的：用齐次坐标统一所有变换 trade-off</p></blockquote><h2 id="平移变换"><a href="#平移变换" class="headerlink" title="平移变换"></a>平移变换</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012724.png" alt="Translation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012803.png" alt="Why Homogeneous Coordinates" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013029.png" alt="Solution: Homogenous Coordinates" style="zoom:50%;" /><blockquote><p>向量具有平移不变性</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013352.png" alt="Homogenous Coordinates" style="zoom:50%;" /><blockquote><p>point + point = 两点中点</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013517.png" alt="Affine Transformations" style="zoom:50%;" /><h2 id="Affine-Transformations-仿射变换-（线性变换（左上角矩阵）-平移变换（最后一列））"><a href="#Affine-Transformations-仿射变换-（线性变换（左上角矩阵）-平移变换（最后一列））" class="headerlink" title="Affine Transformations 仿射变换 （线性变换（左上角矩阵）+平移变换（最后一列））"></a>Affine Transformations 仿射变换 （线性变换（左上角矩阵）+平移变换（最后一列））</h2><ul><li><p>先线性变换再平移</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013617.png" alt="Affine Transformations"  /></li></ul><h2 id="2D-Transformations"><a href="#2D-Transformations" class="headerlink" title="2D Transformations"></a>2D Transformations</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213256.png" alt="2D Transformations" style="zoom:67%;" /><blockquote><p>只有二维情况下仿射变换最后一行才是 001</p></blockquote><h2 id="Inverse-Transform-逆变换"><a href="#Inverse-Transform-逆变换" class="headerlink" title="Inverse Transform 逆变换"></a>Inverse Transform 逆变换</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213700.png" alt="Inverse Transform" style="zoom:67%;" /><h2 id="Composing-Transform-组合变换"><a href="#Composing-Transform-组合变换" class="headerlink" title="Composing Transform 组合变换"></a>Composing Transform 组合变换</h2><ul><li><p>复杂变换可通过简单变换得到</p></li><li><p>变换的顺序很重要（矩阵乘法不满足交换律）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213946.png" alt="Transform Odering Matters!" style="zoom:50%;" /></li><li><p>矩阵放左边*向量</p></li><li><p>矩阵变换<strong>从右至左</strong>应用</p></li><li><p>矩阵没交换律但有结合律</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214134.png" alt="Composing Transforms" style="zoom:50%;" /></li><li><p>可用一个矩阵表述非常复杂的变换</p></li></ul><h2 id="Decomposing-Complex-Transfroms-分解复杂矩阵"><a href="#Decomposing-Complex-Transfroms-分解复杂矩阵" class="headerlink" title="Decomposing Complex Transfroms 分解复杂矩阵"></a>Decomposing Complex Transfroms 分解复杂矩阵</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214331.png" alt="Decomposing Complex Transfroms" style="zoom:50%;" /><ul><li>想要以某点为中心进行旋转<ul><li>先将该点移动到原点 - T(-c)</li><li>进行旋转 - R (a)</li><li>然后再逆操作移动到原位置 - T(c)</li><li>$T(c) · R(\alpha) · T(-c)$</li></ul></li></ul><h1 id="3D-Transforms"><a href="#3D-Transforms" class="headerlink" title="3D Transforms"></a>3D Transforms</h1><blockquote><p>和 2D 做类比</p></blockquote><ul><li>用四个数表示<ul><li>点则末尾加 1</li><li>向量则末尾加 0</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214740.png" alt="3D Transformations" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214749.png" alt="3D Transformations 2" style="zoom:50%;" /><blockquote><p>仿射变换 = 线性变换 + 平移变换<br>先线性变换（缩放/旋转） 再平移变换</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-2 20200214 20210704 A Swift and Brutal Introduction to Linear Algebra</title>
      <link href="2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/"/>
      <url>2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/</url>
      
        <content type="html"><![CDATA[<h1 id="2-20200214-20210704-A-Swift-and-Brutal-Introduction-to-Linear-Algebra"><a href="#2-20200214-20210704-A-Swift-and-Brutal-Introduction-to-Linear-Algebra" class="headerlink" title="2 20200214 / 20210704 A Swift and Brutal Introduction to Linear Algebra!"></a>2 20200214 / 20210704 A Swift and Brutal Introduction to Linear Algebra!</h1><p>(in fact it’s relatively easy…)</p><ul><li>Graphics’ Dependencies<ul><li>Basic mathematics<ul><li>Linear algebra, calculus, statistics</li></ul></li><li>Basic physics<ul><li>Optics, Mechanics</li></ul></li><li>Misc<ul><li>Signal processing, Numerical analysis</li></ul></li><li>And a bit of aesthetics</li></ul></li></ul><h2 id="This-Course"><a href="#This-Course" class="headerlink" title="This Course"></a>This Course</h2><ul><li>More dependent on Linear Algebra<ul><li>Vectors (dot products, cross products, …)</li><li>Matrices (matrix-matrix, matrix-vector mult., …)</li></ul></li><li>For example,<ul><li>Apoint is a vector (?)</li><li>An operation like translating or rotating objects<br>can be matrix-vector multiplication</li></ul></li></ul><h2 id="Vectors"><a href="#Vectors" class="headerlink" title="Vectors"></a>Vectors</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003508.png" alt="Vectors" style="zoom:33%;" /><ul><li>Usually written as $\vec a$  or in bold $\bf{a}$</li><li>Or using start and end points $\vec{AB}=B-A$</li><li>Direction and length</li><li>No absolute starting position</li></ul><h3 id="Vector-Normalization"><a href="#Vector-Normalization" class="headerlink" title="Vector Normalization"></a>Vector Normalization</h3><ul><li>Magnitude (length) of a vector written as $||\vec a||$</li><li>Unit vector .<ul><li>Avector with magnitude of 1</li><li>Finding the unit vector of a vector (normalization): $\hat a = \vec a / ||\vec a||$</li><li>Used to represent directions</li></ul></li></ul><h3 id="Vector-Addition"><a href="#Vector-Addition" class="headerlink" title="Vector Addition"></a>Vector Addition</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003523.png" alt="Vector Addition" style="zoom:33%;" /><ul><li>Geometrically: Parallelogram law &amp; Triangle law</li><li>Algebraically: Simply add coordinates</li></ul><h3 id="Cartesian-Coordinates"><a href="#Cartesian-Coordinates" class="headerlink" title="Cartesian Coordinates"></a>Cartesian Coordinates</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003535.png" alt="Cartesian Coordinates" style="zoom:33%;" /><ul><li>X and Y can be any (usually orthogonal unit) vectors<ul><li>$A =<br>\left{<br>\begin{matrix}<br>x\<br>y<br>\end{matrix}<br>\right}$</li><li>$A =  |  A^T = (x,y) |$</li><li>$||A|| = \sqrt{x^2 + y^2}$</li></ul></li></ul><h3 id="Vector-Multiplication"><a href="#Vector-Multiplication" class="headerlink" title="Vector Multiplication"></a>Vector Multiplication</h3><ul><li>Dot product</li><li>Cross product</li><li>Orthonormal bases and coordinate frames</li></ul><h3 id="Dos-scalar-Product-点乘"><a href="#Dos-scalar-Product-点乘" class="headerlink" title="Dos (scalar) Product 点乘"></a>Dos (scalar) Product 点乘</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003555.png" alt="Dos (scalar) Product" style="zoom:33%;" /><ul><li><p>Properties</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003606.png" alt="Properties of Dot (scalar) Product" style="zoom:33%;" /></li><li><p>Dot Product in Cartesian Coordinates</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003623.png" alt="Dot Product in Cartesian Coordinates" style="zoom: 33%;" /></li><li><p>Dot Product in Graphics</p><ul><li>Find angle between two vectors<br>(e.g. cosine of angle between light source and surface) 找夹角</li><li>Finding projection of one vector on another 找投影</li></ul></li><li><p>Dot Product for Projection</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004106.png" alt="Dot Product for Projection" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004125.png" alt="Dot Product for Projection 2" style="zoom: 33%;" /><ul><li><p>Measure how close two directions are （两个向量方向上接近就是1 垂直就0 相反就-1）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003958.png" alt="Dot Product in Graphics" style="zoom:50%;" /></li><li><p>Decompose a vector</p></li><li><p>Determine forward / backward</p><ul><li>应用：镜面反射 入射光 高光</li></ul></li></ul></li></ul><h3 id="Cross-product"><a href="#Cross-product" class="headerlink" title="Cross product"></a>Cross product</h3><ul><li><p>Cross (vector) Product</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004440.png" alt="Cross (vector) Product" style="zoom:50%;" /><ul><li>Cross product is orthogonal to two initial vectors</li><li>Direction determined by right-hand rule 不满足交换律</li><li>Useful in constructing coordinate systems (later)</li></ul></li><li><p>Properties</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004642.png" alt="Properties of Cross Product" style="zoom:50%;" /><ul><li>向量叉乘得到的还是向量</li></ul></li><li><p>Cartesian Formula</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004949.png" alt="Cartesian Formula" style="zoom:50%;" /></li><li><p>Cross Product in Graphics 应用</p><ul><li><p>Determine left / right 左侧-叉乘结果为正</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005045.png" alt="Cross Product in Graphics" style="zoom:50%;" /></li><li><p>Determine inside / outside</p><blockquote><p>ab x ap<br>bc x bp<br>ca x cp<br>如果三个结果符号相同 那么就在内部 若结果为0则为Cornercase 可内可外</p></blockquote></li><li><p>应用 - 光栅化</p></li></ul></li></ul><h3 id="Orthonormal-Bases-Coordinate-Frames"><a href="#Orthonormal-Bases-Coordinate-Frames" class="headerlink" title="Orthonormal Bases / Coordinate Frames"></a>Orthonormal Bases / Coordinate Frames</h3><ul><li><p>Important for representing points, positions, locations</p></li><li><p>Often, many sets of coordinate systems</p></li><li><p>Global, local, world, model, parts of model (head, hands, …)</p></li><li><p>Critical issue is transforming between these systems/ bases</p></li><li><p>A topic for next week</p></li><li><p>Orthonormal Coordinate Frames 坐标系</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005439.png" alt="Orthonormal Coordinate Frames" style="zoom:50%;" /></li></ul><hr><h3 id="Matrices"><a href="#Matrices" class="headerlink" title="Matrices"></a>Matrices</h3><ul><li><p>Magical 2D arrays that haunt in every CS course</p></li><li><p>In Graphics, pervasively used to represent transformations</p><ul><li>Translation, rotation, shear, scale (more details in the next lecture)</li></ul></li><li><p>What is a matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005611.png" alt="What is a matrix" style="zoom:50%;" /></li><li><p>Matrix-Matrix Multiplication</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005701.png" alt="Matrix-Matrix Multiplication" style="zoom: 50%;" /></li><li><p>Properties</p><ul><li><p><strong>Non-commutative</strong><br>(AB and BA are different in general)</p></li><li><p>Associative and distributive</p><ul><li>(AB)C=A(BC)</li><li>A(B+C) = AB+AC</li><li>(A+B)C = AC + BC</li></ul></li><li><p>Matrix-Vector Multiplication</p><ul><li><p>Treat vector as a column matrix (mx1)</p></li><li><p>Key for transforming points (next lecture)</p></li><li><p>Official spoiler: 2D reflection about y-axis</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005923.png" alt="Matrix-Vector Multiplication" style="zoom:50%;" /></li></ul></li><li><p>Transpose of a Matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010001.png" alt="Transpose of a Matrix" style="zoom: 50%;" /></li><li><p>Identity Matrix and Inverses</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010020.png" alt="Identity Matrix and Inverses" style="zoom:33%;" /></li><li><p>Vector multiplication in matrix form</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010030.png" alt="Vector multiplication in matrix form" style="zoom:33%;" /></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-1 20200211 20210703 Overview of CG</title>
      <link href="2021/07/16/games101-1-20200211-20210703-overview-of-cg/"/>
      <url>2021/07/16/games101-1-20200211-20210703-overview-of-cg/</url>
      
        <content type="html"><![CDATA[<h1 id="1-20200211-20210703-Overview-of-CG"><a href="#1-20200211-20210703-Overview-of-CG" class="headerlink" title="1 20200211 / 20210703 Overview of CG"></a>1 20200211 / 20210703 Overview of CG</h1><ul><li>Topics</li></ul><h2 id="What-is-CG"><a href="#What-is-CG" class="headerlink" title="What is CG"></a>What is CG</h2><blockquote><p>The use of computers to <strong>synthesize</strong> and <strong>manipulate</strong> visual information.</p></blockquote><h2 id="Why-study"><a href="#Why-study" class="headerlink" title="Why study"></a>Why study</h2><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><ul><li>Video Games<ul><li>什么是好的画面 - 看画面是否足够亮 - 全局光照做得好不好<ul><li>只狼</li><li>无主之地3</li></ul></li></ul></li><li>Movies<ul><li>The Matrix<ul><li>Special Effects</li><li>特效是图形学中最简单的一类 - 平常见不到 - 做得不对也不会觉得意外</li><li>最困难的是最常见的</li></ul></li></ul></li><li>Avatar<ul><li>引入了面部/动作捕捉</li></ul></li><li>Animations<ul><li>Zootopia - 疯狂动物城</li><li>Frozen 2 - 冰雪奇缘 2</li></ul></li><li>Design<ul><li>Autodesk Gallary</li><li>CAD<ul><li>环境模拟</li><li>碰撞检测</li></ul></li><li>Ikea</li></ul></li><li>Visualization<ul><li>Science</li><li>Engineering</li><li>Medicine</li><li>Journalism</li></ul></li><li>Virtual Reality<ul><li>Augmented Reality</li><li>Digital Illustration<ul><li>PS</li></ul></li></ul></li><li>Simulation<ul><li>The Dust Bowl phenomena</li><li>Black hole from Interstellar</li></ul></li><li>Graphical User Interfaces - GUI</li><li>Typography - 字体<ul><li>The Quick Brown Fox Jumps Over The Lazy Dog - 字体测试中的常见句</li><li>矢量图</li></ul></li></ul><h3 id="Fundamental-Intellectual-Challenges"><a href="#Fundamental-Intellectual-Challenges" class="headerlink" title="Fundamental Intellectual Challenges"></a>Fundamental Intellectual Challenges</h3><ul><li>Creates and interacts with realistic virtual world</li><li>Requires understanding of all aspects of physical world</li><li>New computing methods, displays, technologies</li></ul><h3 id="Technical-Challenges"><a href="#Technical-Challenges" class="headerlink" title="Technical Challenges"></a>Technical Challenges</h3><ul><li>Math of (perspective) projections, curves, surfaces</li><li>Physics of lighting and shading</li><li>Representing / operating shapes in 3D</li><li>Animation / simulation</li><li><del>3D graphics software programming and hardware</del></li></ul><h2 id="WHY-CG-is-AWESOME"><a href="#WHY-CG-is-AWESOME" class="headerlink" title="WHY - CG is AWESOME"></a>WHY - CG is AWESOME</h2><h3 id="Course-Topics-mainly-4-parts"><a href="#Course-Topics-mainly-4-parts" class="headerlink" title="Course Topics (mainly 4 parts)"></a>Course Topics (mainly 4 parts)</h3><ul><li>Rasterization<ul><li>Project geometry primitives (3D triangles / polygons) onto the screen</li><li>Break projected primitives into fragments (pixels)</li><li>Gold standard in Video Games (<strong>Real-time</strong> (30fps) Applications)</li></ul></li><li>Curves and Meshes<ul><li>How to represent geometry in Computer Graphics</li></ul></li><li>Ray Tracing<ul><li>Shoot rays from the camera though each pixel</li><li>Calculate <strong>intersection</strong> and <strong>shading</strong></li><li><strong>Continue to bounce</strong> the rays till they hit light sources</li><li>Gold standard in Animations / Movies (Offline Applications)</li><li>trad off - 慢但效果好</li><li>两个都要 - 实时光线追踪</li></ul></li><li>Animation / Simulation<ul><li>Key frame Animation</li><li>Mass-spring System</li></ul></li></ul><h3 id="GAMES101-is-NOT-about"><a href="#GAMES101-is-NOT-about" class="headerlink" title="GAMES101 is NOT about"></a>GAMES101 is NOT about</h3><ul><li>Using OpenGL / DirectX / Vulcan</li><li>The syntax of Shaders</li><li>3D modeling using Maya / 3DS MAX / Blender, or VR / game development using Unity / Unreal Engine (where can I learn them?)</li><li>Computer Vision / Deep Learning topics, e.g. XYZ-GAN (where can I learn them?)</li><li>CV - 一切需要猜测的内容</li><li>We learn Graphics, not Graphics APIs!</li><li>After this course, you’ll be able to learn these by yourself (I promise)</li></ul><h3 id="CG-V-S-CV"><a href="#CG-V-S-CV" class="headerlink" title="CG V.S. CV"></a>CG V.S. CV</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003415.png" alt="Differences of CG and CV" style="zoom: 33%;" /><h2 id="Course-Logic"><a href="#Course-Logic" class="headerlink" title="Course Logic"></a>Course Logic</h2><h3 id="General-Information"><a href="#General-Information" class="headerlink" title="General Information"></a>General Information</h3><ul><li>Modern Course<ul><li>Comprehensive but<br>without hardware programming!</li><li>Pace/ contents subject to change</li></ul></li><li>Course Website<ul><li><a href="http://www.cs.ucsb.edu/~lingqi/teaching/games101.html">http://www.cs.ucsb.edu/~lingqi/teaching/games101.html</a></li><li>Has all the needed information</li><li>Syllabus, slides, reading materials, etc.</li></ul></li><li>Course slides and (pre)-reading materials</li><li>No Required Textbooks<ul><li>Reading materials (if any) will available online before lectures</li><li>Lecture slides will be available after class</li></ul></li><li>Most recommended reference<ul><li>Steve Marschner and Peter Shirley, “Fundamentals of Computer Graphics”, 3rd or later edition.</li><li>Sign up on our BBS for discussion<br>(<a href="http://games-cn.org/forums/forum/games-online-course-forum/">http://games-cn.org/forums/forum/games-online-course-forum/</a>)</li></ul></li></ul><h3 id="Assignments"><a href="#Assignments" class="headerlink" title="Assignments"></a>Assignments</h3><ul><li>Mostly programming tasks with provided code skeletons and virtual machine image</li><li>Weekly (usually no more than 20 lines of code per week)</li><li>Language: C++</li></ul><h3 id="Submission"><a href="#Submission" class="headerlink" title="Submission"></a>Submission</h3><ul><li>Submit your project by 11:59PM on/before the due dates (strictly enforced)</li><li>Feedback will be provided in a week</li><li>Assignment Submission Website<br>(<a href="http://www.smartchair.org/GAMES2020Course-YLQ/">http://www.smartchair.org/GAMES2020Course-YLQ/</a>)</li><li>No Exams</li><li>Course Project / Final Project<ul><li>Starting midway of this course</li><li>References will be provided, but you decide the topic</li><li>Best work will be posted online for showing off</li></ul></li></ul><h3 id="Use-An-IDE"><a href="#Use-An-IDE" class="headerlink" title="Use An IDE!"></a>Use An IDE!</h3><ul><li>IDE: Integrated Development Environment</li><li>Helps you parse a entire project<ul><li>And gives hints on syntax / usages of member functions, etc.</li></ul></li><li>Recommended IDEs<ul><li>Visual Studio (Windows only) / Visual Studio Code (cross platform)</li><li>Qt Creator (personal)</li></ul></li><li>Not Recommended IDEs (for C++ programming)<ul><li>CLion (慢), Eclipse (代码分析不好)</li><li>Sublime Text, Vi / Vim, Emacs (not even IDEs)</li></ul></li><li>Work alone for regular assignments<ul><li>no copy-pasting from any other sources</li></ul></li><li>Do not publish your code (on Github, etc.) for assignments using our skeleton code</li><li>Do not post your solution online<ul><li>Discussion / explanation is welcomed</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-Introduction To Mordern Computer Graphics</title>
      <link href="2021/07/16/games101-introduction-to-mordern-computer-graphics/"/>
      <url>2021/07/16/games101-introduction-to-mordern-computer-graphics/</url>
      
        <content type="html"><![CDATA[<h1 id="GAMES101——现代计算机图形学入门笔记"><a href="#GAMES101——现代计算机图形学入门笔记" class="headerlink" title="GAMES101——现代计算机图形学入门笔记"></a>GAMES101——现代计算机图形学入门笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>为投递腾讯的技术研究-计算机图形学岗位，其中要求熟练掌握计算机图形学基本理论和算法，遂学习之，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><ul><li>以下基本信息引用自<a href="http://games-cn.org/intro-graphics/">课程官网</a>：<ul><li><strong>课程简介</strong><ul><li>本课程将全面而系统地介绍现代计算机图形学的四大组成部分：（1）光栅化成像，（2）几何表示，（3）光的传播理论，以及（4）动画与模拟。每个方面都会从基础原理出发讲解到实际应用，并介绍前沿的理论研究。通过本课程，你可以学习到计算机图形学背后的数学和物理知识，并锻炼实际的编程能力。</li><li>顾名思义，作为入门，本课程会尽可能的覆盖图形学的方方面面，把每一部分的基本概念都尽可能说清楚，让大家对计算机图形学有一个完整的、自上而下的全局把握。全局的理解很重要，学完本课程后，你会了解到图形学不等于OpenGL，不等于光线追踪，而是一套生成整个虚拟世界的方法。从本课程的标题，大家还可以看到“现代”二字，也就是说，这门课所要给大家介绍的都是现代化的知识，也都是现代图形学工业界需要的图形学基础。</li><li>本课程与其它图形学教程还有一个重要的区别，那就是本课程不会讲授OpenGL，甚至不会提及这个概念。本课程所讲授的内容是图形学背后的原理，而不是如何使用一个特定的图形学API。在学习完这门课的时候，你一定有能力自己使用OpenGL写实时渲染的程序。另外，本课程并不涉及计算机视觉、图像视频处理、深度学习，也不会介绍游戏引擎与三维建模软件的使用。</li><li>具体课程内容请参见课程大纲:<a href="http://games-cn.org/intro-graphics%E3%80%82">http://games-cn.org/intro-graphics。</a></li></ul></li><li><strong>教师简介</strong><ul><li>闫令琪，博士，加州大学圣芭芭拉分校（UCSB）助理教授。闫令琪教授于2013年在清华大学获得学士学位，并于2018年在加州大学伯克利分校（UCB）获得博士学位。他的主要研究方向是真实感图形渲染（旧称绘制），具体请参考学术主页：<a href="https://sites.cs.ucsb.edu/~lingqi/%E3%80%82%E7%AE%80%E8%80%8C%E8%A8%80%E4%B9%8B%EF%BC%8C%E9%97%AB%E4%BB%A4%E7%90%AA%E6%95%99%E6%8E%88%E7%9B%AE%E5%89%8D%E6%9C%89%E4%B8%89%E4%B8%AA%E6%88%90%E5%B0%B1%EF%BC%9A%EF%BC%881%EF%BC%89%E5%9C%A8%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%E9%A2%86%E5%9F%9F%EF%BC%8C%E4%BB%96%E4%BF%9D%E6%8C%81%E7%9D%80%E5%8D%9A%E5%A3%AB%E6%9C%9F%E9%97%B4%EF%BC%885%E5%B9%B4%EF%BC%89%E4%BB%A5%E7%AC%AC%E4%B8%80%E4%BD%9C%E8%80%85%E8%BA%AB%E4%BB%BD%E5%8F%91%E8%A1%A87%E7%AF%87SIGGRAPH%E7%B3%BB%E5%88%97%E8%AE%BA%E6%96%87%E7%9A%84%E6%9C%80%E9%AB%98%E7%BA%AA%E5%BD%95%EF%BC%88SIGGRAPH%EF%BC%8CSIGGRAPH">https://sites.cs.ucsb.edu/~lingqi/。简而言之，闫令琪教授目前有三个成就：（1）在图形渲染领域，他保持着博士期间（5年）以第一作者身份发表7篇SIGGRAPH系列论文的最高纪录（SIGGRAPH，SIGGRAPH</a> Asia，Transaction on Graphics）；（2）他的博士论文于2019年获得SIGGRAPH最佳博士论文奖，并得到官方盛赞“每章都可以作为一篇独立的博士论文”；（3）他的科研成果被直接应用于工业界，如影片《猩球崛起3：终极之战》与《狮子王2019》，以及与 NVIDIA 合作推动了实时光线追踪技术的产生；（4）在本课程的第一节课上，大家会了解到第四点也是最重要的一点：）</li></ul></li><li><strong>直播方式</strong><ul><li><a href="http://games虎牙直播间webinar.games-cn.org/">GAMES虎牙直播间webinar.games-cn.org</a></li></ul></li><li><strong>课程主页：</strong><ul><li><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html</a></li></ul></li><li><strong>课程BBS：</strong><ul><li><a href="http://games-cn.org/forums/forum/graphics-intro/">http://games-cn.org/forums/forum/graphics-intro/</a></li></ul></li><li><strong>课程PPT和视频：</strong><ul><li><a href="http://games-cn.org/graphics-intro-ppt-video/">http://games-cn.org/graphics-intro-ppt-video/</a></li></ul></li><li><strong>课程需求：</strong><ul><li>【必须】：高等数学（微积分、线性代数）、算法、数据结构</li><li>【非必须】：信号处理、数值分析、大学物理（光学）</li></ul></li><li><strong>课程安排：</strong><ul><li>【课时】：共安排20节课，每节一小时，每周两节，安排在北京时间周二和周五上午10:00-11:00，2020年2月11日开始</li><li>【作业（非必须）】：共7次小作业，1次大作业，全部是编程任务，会提供代码框架。作业不作强制要求，自愿完成</li><li>【考试】：无考试安排</li><li>【其它】：中文授课，英文课件，采用直播互动形式，以轻松愉快为主，每课结束当天会放出录像</li></ul></li><li><strong>教材：</strong><ul><li>【非必须】：Steve Marschner and Peter Shirley, “Fundamentals of Computer Graphics”, 第三版或更新版本。很遗憾中文版应该只有第二版，大家也可以对照着看。不过英文版写得非常好，浅显易懂，所以应该并无太大问题</li></ul></li></ul></li></ul><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol><li><p><a href="https://medill-east.github.io/2021/07/16/games101-1-20200211-20210703-overview-of-cg/">GAMES101-1 20200211 20210703 Overview of CG</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/">GAMES101-2 20200214 20210704 A Swift and Brutal Introduction to Linear Algebra</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-3-20200218-20210704-transformation/">GAMES101-3 20200218 20210704 Transformation</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-4-20200221-20210705-transformation-cont/">GAMES101-4 20200221 20210705 Transformation Cont</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/">GAMES101-5 20200225 20210706 07 Rasterization 1 (Triangles)</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/">GAMES101-6 20200228 20210708 Rasterization 2 anti - aliasing and Z - buffering</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/">GAMES101-7 20200303 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/">GAMES101-8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</a></p></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github 搭建 Blog (MacOS)</title>
      <link href="2021/05/24/my-first-post/"/>
      <url>2021/05/24/my-first-post/</url>
      
        <content type="html"><![CDATA[<h2 id="20210524-Start-to-build"><a href="#20210524-Start-to-build" class="headerlink" title="20210524 Start to build"></a>20210524 Start to build</h2><h3 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h3><p>最近在学产品经理的课，有了呈现作品集的需求，遂在网上寻找教程搭建 Blog，最终选定了<a href="https://zhuanlan.zhihu.com/p/35668237">这篇</a>详细的教程，在此记录搭建过程。</p><h3 id="What"><a href="#What" class="headerlink" title="What"></a>What</h3><h4 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h4><p>去到官网下载<a href="https://nodejs.org/zh-cn/download/">Node.js 安装包</a>，按提示安装就好啦。</p><p>之后打开命令行输入以下指令，若出现版本号则证明安装成功：</p><pre class="line-numbers language-none"><code class="language-none">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h4><p><a href="https://git-scm.com/downloads">Git 下载页面</a></p><blockquote><p>因为很久之前已经安装过 Git，所以详细步骤先按下不表</p></blockquote><h4 id="Github-注册及仓库新建"><a href="#Github-注册及仓库新建" class="headerlink" title="Github 注册及仓库新建"></a>Github 注册及仓库新建</h4><h5 id="Github-注册"><a href="#Github-注册" class="headerlink" title="Github 注册"></a>Github 注册</h5><p>移步 <a href="https://github.com/">Github 官网</a> 完成注册。</p><blockquote><p>详细过程这里也按下不表，理由同上</p></blockquote><h5 id="仓库搭建"><a href="#仓库搭建" class="headerlink" title="仓库搭建"></a>仓库搭建</h5><p>注册完账号后回到自己的页面，然后选择新建仓库：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524114739.png"></p><p>这里对项目名字进行更改，其中名字需要有 <code>github.io</code> 后缀，<code>这里的名字一定要和自己的 github name 相同！</code>，然后记得选中 <code>Add a README file</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524114910.png"></p><p>然后找到该 repository 之后，点击 <code>settings</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115240.png"></p><p>直接往下滑之后会看到 <code>Github Pages</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115314.png"></p><p>点进去之后 <code>Choose a theme</code> 可以先随机挑选一个主题，之后回到 <code>GitHub Pages</code>，可以看到下面的界面：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115755.png"></p><p>点进去之后就能看到自己的网页啦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121147.png"></p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p><a href="https://zhuanlan.zhihu.com/p/35668237">教程</a>中这里是在本地找了一个位置新建了一个文件夹来存放博客文件，暂时没搞懂和直接放 <code>github</code> 上的区别… </p><p>这里我先用 <a href="https://desktop.github.com/">Github Desktop</a> 把之前新建的仓库下载到本地：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121018.png"></p><p>所以我就先也在 之前新建的仓库文件夹下创建新的 <code>blog</code> 文件夹。</p><p>用命令行进入到该路径下，输入如下指令安装 Hexo，此处若有报错可无视：</p><pre class="line-numbers language-none"><code class="language-none">sudo npm i hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装后输入如下指令验证安装结果：</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后输入如下指令初始化网站：</p><pre class="line-numbers language-none"><code class="language-none">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入如下指令安装必备组件：</p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上完成了本地的网站配置，然后是如下几个有用的指令：</p><ul><li><p>生成静态网页</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打开本地服务器</p></li></ul><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在浏览器键入<a href="http://localhost:4000/">http://localhost:4000/</a>就可以打开查看啦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121816.png"></p><p>然后按 <code>ctrl + c</code> 关闭本地服务器。</p><h4 id="连接-Github-与本地"><a href="#连接-Github-与本地" class="headerlink" title="连接 Github 与本地"></a>连接 Github 与本地</h4><p>打开命令行后输入如下指令，记得将相应用户名和邮箱改成自己的：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;YourGitName&quot;git config --global user.email &quot;YourEmail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后生成密钥：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;haodong.liao@gmail.com&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里会提示你键入保存密钥的地址，只需要不断回车即可：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122153.png"></p><p>打开自己的 <a href="https://github.com/">github</a>，点击头像之后点击 <code>settings</code>，然后选择 <code>SSH and GPG keys</code>，新建一个 SSH，名字我起名为 <code>blog</code>，然后在命令行中输入以下指令：</p><pre class="line-numbers language-none"><code class="language-none">cat ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将输出的内容保存到密钥的内容框中，点击保存。</p><p>之后在命令行中键入如下内容，若出现用户名则成功：</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122557.png"></p><p>打开博客根目录下的 <code>_config.yml</code> 文件，即博客的配置文件，修改以下配置为你自己的配置：</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repository: git@github.com:Medill-East&#x2F;haodong.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意 <code>repository</code> 的地址可以从仓库的这里获取：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122756.png"></p><h4 id="写文章-发布文章"><a href="#写文章-发布文章" class="headerlink" title="写文章 发布文章"></a>写文章 发布文章</h4><p>在博客根目录下输入以下指令安装扩展：</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入以下指令以新建文章：</p><pre class="line-numbers language-none"><code class="language-none">hexo new post &quot;my first post&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在路径 <code>.\blog\source\_posts</code> 目录下就可以看到多出了 <code>my-first-post.md</code> 文件，这就是文章文件啦。</p><p>对 md 文件进行相应编辑后，在根目录下键入以下指令以生成静态网页和进行本地预览：</p><ul><li><p>生成静态网页</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打开本地服务器</p></li></ul><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>上传到 github</li></ul><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意需要确保 <code>Github Pages</code> <code>settings</code> 下的 <code>Source</code> 下的 <code>Branch</code> 为 <code>master</code></p></blockquote><blockquote><p>然后如果本地做过一些改动的话需要同步到 github 上</p></blockquote><hr><h2 id="20210526-解决-CSS-样式不加载的问题"><a href="#20210526-解决-CSS-样式不加载的问题" class="headerlink" title="20210526 解决 CSS 样式不加载的问题"></a>20210526 解决 CSS 样式不加载的问题</h2><p>按照如上步骤配置之后出现了一个问题：在本地预览能够看到的效果部署到网页之后没了 CSS 的效果，所以这里先对这个问题进行一下解决。</p><p>尝试了多篇帖子的办法，最终以如下途径成功加载上了 CSS：</p><ol><li><p>把仓库名改为了<br><code>your github name.github.io</code><br>比如我的 github name 为 <code>Medill-East</code><br>那么仓库名就需要为 <code>medill-east.github.io</code></p></li><li><p>更改根目录下的 _config.yml 配置文件的开头部分 <code>URL</code> 和 <code>root</code> 配置：</p></li></ol><pre class="line-numbers language-none"><code class="language-none"># URLurl: https:&#x2F;&#x2F;medill-east.github.io&#x2F; # 这里记得改成自己的 url 哦root: &#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>感谢这篇帖子：<a href="https://github.com/hexojs/hexo/issues/1121">生成路径的问题，导致css，js无法加载 #1121</a></p><hr><h2 id="20210527-更换主题"><a href="#20210527-更换主题" class="headerlink" title="20210527 更换主题"></a>20210527 更换主题</h2><p>这里和 <a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a> 中一样，采用的是 <a href="https://blinkfox.github.io/">blinkfox</a> 的 <a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">Hexo博客主题之hexo-theme-matery的介绍</a> 该主题。</p><p>以下为过程记录。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>进入根目录的 <code>themes</code> 文件夹下，用命令行下载：</p><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h4><p>修改根目录下 <code>_config.yml</code> 的 <code>theme</code> 的值：</p><pre class="line-numbers language-none"><code class="language-none">theme: hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>建议修改</li><li> 两个 <code>per_page</code> 的分页条数设为 <code>6</code> 的倍数，以优化显示</li><li> 若是中文用户可以修改 <code>language</code> 的值为 <code>zh-CN</code></li></ul><h4 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h4><p><code>categories</code> 用于展示所有分类， 若是 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;categories&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: categoriesdate: 2021-05-27 11:44:43type: &quot;categories&quot;layout: &quot;categories&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h4><p><code>tags</code>页用于展示所有标签，若是 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;tags&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: tagsdate: 2021-05-27 11:44:43type: &quot;tags&quot;layout: &quot;tags&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h4><p><code>about</code> 页用于展示关于我和我的博客的信息，若是 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;about&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: aboutdate: 2021-05-27 11:49:31type: &quot;about&quot;layout: &quot;about&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建友链-friends-页（可选）"><a href="#新建友链-friends-页（可选）" class="headerlink" title="新建友链 friends 页（可选）"></a>新建友链 friends 页（可选）</h4><p><code>friends</code> 页用于展示友情链接，若是 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;friends&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: friendsdate: 2021-05-27 11:51:08type: &quot;friends&quot;layout: &quot;friends&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时在博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，内容如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">[&#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;luokangyuan.com&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;blinkfox.github.io&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;ttps:&#x2F;&#x2F;me.csdn.net&#x2F;jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>使用了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件做代码高亮。返回根目录 <code>blog</code> 之后运行如下代码：</p><pre class="line-numbers language-none"><code class="language-none">npm i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改根目录下 <code>_config.yml</code> 文件中的 <code>higlight.enable</code> 值为 <code>false</code>，并新增 <code>prism</code> 插件相关配置：</p><pre class="line-numbers language-none"><code class="language-none">highlight:  enable: falseprism_plugin:  mode: &#39;preprocess&#39;    # realtime&#x2F;preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="20210530"><a href="#20210530" class="headerlink" title="20210530"></a>20210530</h2><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>主题中使用了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，先回到根目录后，命令如下：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="中文链接转拼音（可选）"><a href="#中文链接转拼音（可选）" class="headerlink" title="中文链接转拼音（可选）"></a>中文链接转拼音（可选）</h4><p>Hexo 默认会使得名称为中文的文章的永久链接中也有中文，这样会降低兼容性，而且 <code>gitment</code> 评论对中文链接也不支持，这里和教程中一样，使用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin </a> Hexo 插件在生成文章时生成中文拼音的永久链接：</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="文章字数统计（可选）"><a href="#文章字数统计（可选）" class="headerlink" title="文章字数统计（可选）"></a>文章字数统计（可选）</h4><p>这里和教程中一样，使用 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount </a> Hexo 插件统计文章字数、阅读时长信息：</p><pre class="line-numbers language-none"><code class="language-none">npm i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">wordCount:  enable: true  postWordCount: true  min2read: true  totalCount: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="添加-RSS-订阅支持（可选）"><a href="#添加-RSS-订阅支持（可选）" class="headerlink" title="添加 RSS 订阅支持（可选）"></a>添加 RSS 订阅支持（可选）</h4><p>这里和教程中一样，使用 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed </a> Hexo 插件提供 RSS 订阅功能：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行<br><code>hexo clean &amp;&amp; hexo g</code></p><p>重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h4 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h4><p>页脚修改的配置文件在主题文件(即<code>themes/hexo-theme-matery</code>文件夹)的<br><code>/layout/_partial/footer.ejs</code>，包括站点、使用的主题、访问量等。</p><p>这里我对作者信息进行了一下修改，需要到 <code>_config.yml</code> 文件中找到 <code>author:</code> 然后改成自己的信息。之后别忘了</p><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还有同步 <code>github</code> 哦</p><h4 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h4><p>在主题 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>/<code>Github</code>和邮箱的配置，可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;blinkfox&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;访问我的GitHub&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;    &lt;i class&#x3D;&quot;fa fa-github&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：fa-github）你可以在 <a href="https://fontawesome.com/v5.15/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供参考：</p><ul><li>Facebook: fa-facebook</li><li>Twitter: fa-twitter</li><li>Google-plus: fa-google-plus</li><li>Linkedin: fa-linkedin</li><li>Tumblr: fa-tumblr</li><li>Medium: fa-medium</li><li>Slack: fa-slack</li><li>新浪微博: fa-weibo</li><li>微信: fa-wechat</li><li>QQ: fa-qq</li></ul><h4 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h4><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h4 id="配置音乐播放器（可选）"><a href="#配置音乐播放器（可选）" class="headerlink" title="配置音乐播放器（可选）"></a>配置音乐播放器（可选）</h4><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[&#123;    &quot;name&quot;: &quot;五月雨变奏电音&quot;,    &quot;artist&quot;: &quot;AnimeVibe&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music1.mp3&quot;,    &quot;cover&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music-cover1.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Take me hand&quot;,    &quot;artist&quot;: &quot;DAISHI DANCE,Cecile Corbel&quot;,    &quot;url&quot;: &quot;&#x2F;medias&#x2F;music&#x2F;music2.mp3&quot;,    &quot;cover&quot;: &quot;&#x2F;medias&#x2F;music&#x2F;cover2.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Shape of You&quot;,    &quot;artist&quot;: &quot;J.Fla&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music3.mp3&quot;,    &quot;cover&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music-cover3.png&quot;&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：以上 JSON 中的属性：name、artist、url、cover 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class="line-numbers language-none"><code class="language-none"># 是否在首页显示音乐.music:  enable: true  showTitle: false  title: 听听音乐  fixed: false # 是否开启吸底模式  autoplay: false # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39; # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;list&#39; # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39; # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false # 列表默认折叠  listMaxHeight: # 列表最大高度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h3><h4 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h4><p><code>Front-matter</code> 选项中的所有内容均为非必填的。但教程的作者仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th align="right">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td>title</td><td align="right">Markdown 的文件标题</td><td align="center">文章标题，<strong>强烈建议填写此选项</strong></td></tr><tr><td>date</td><td align="right">文件创建时的日期时间</td><td align="center">发布时间，<strong>强烈建议填写此选</strong>项，且最好保证<strong>全局唯一</strong></td></tr><tr><td>author</td><td align="right">根 <code>_config.yml</code> 中的 <code>author</code></td><td align="center">文章作者</td></tr><tr><td>img</td><td align="right">featureImages 中的某个值</td><td align="center">文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等，我自己使用的是 picgo + github )来做图片的路径. 如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td align="right">true</td><td align="center">推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td align="right">false</td><td align="center">v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td align="right">无</td><td align="center">v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td align="right">无</td><td align="center">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td align="right">true</td><td align="center">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td align="right">false</td><td align="center">是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td align="right">无</td><td align="center">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td align="right">无</td><td align="center">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td align="right">无</td><td align="center">文章标签，一篇文章可以多个标签</td></tr></tbody></table><blockquote><p>注意:</p></blockquote><blockquote><p>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。<br><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 id 是通过 date 的值来作为唯一标识的。<br>如果要对文章设置阅读验证密码的功能，不仅要在 <code>Front-matter</code> 中设置采用了 SHA256 加密的 <code>password</code> 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供使用：<a href="https://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</p></blockquote><p>以下为教程作者给出的示例：</p><h4 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h4><pre class="line-numbers language-none"><code class="language-none">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h4><pre class="line-numbers language-none"><code class="language-none">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: &#x2F;source&#x2F;images&#x2F;xxx.jpgtop: truecover: truecoverImg: &#x2F;images&#x2F;1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自动添加文章头"><a href="#自动添加文章头" class="headerlink" title="自动添加文章头"></a>自动添加文章头</h4><p>这里参考 <a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a> 中所写，把 <code>/scaffolds/post.md</code> 修改为如下代码，这样创建新 <code>post</code> 的时候就不用手动填充，只需要修改对应信息了：</p><pre class="line-numbers language-none"><code class="language-none">---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;top: falsecover: falsepassword:toc: truemathjax: truesummary:tags:categories:---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="20210605"><a href="#20210605" class="headerlink" title="20210605"></a>20210605</h2><h3 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h3><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li>favicon 和 Logo</li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li>Gitalk、Gitment、Valine 和 disqus 评论配置</li><li>不蒜子统计和谷歌分析（Google Analytics）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图</li></ul><h3 id="更多修改可能性"><a href="#更多修改可能性" class="headerlink" title="更多修改可能性"></a>更多修改可能性</h3><h4 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h4><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. *&#x2F;.bg-color &#123;    background-image: linear-gradient(to right, #373B44 0%, #4286f4 100%);&#125;@-webkit-keyframes rainbow &#123;   &#x2F;* 动态切换背景颜色. *&#x2F;&#125;@keyframes rainbow &#123;    &#x2F;* 动态切换背景颜色. *&#x2F;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h4><p>可以直接在 <code>/source/medias/banner</code> 文件夹中更换喜欢的 <code>banner</code> 图片，原教程中主题代码中是每天动态切换一张，只需 7 张即可。<br>这里我从自己照的照片找了 26 张出来，所以稍微做了一些更改：<br>找到 <code>banner</code> 切换的  <code>JavaScript</code> 代码位置 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-none"><code class="language-none">var num &#x3D; new Date().getSeconds() % 26;$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&#x2F;medias&#x2F;banner&#x2F;&#39; + num + &#39;.jpg)&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>/source/medias/featureimages</code> 文件夹中默认有 24 张图片，我也将其改为了 26 张图片，并在主题文件夹下的 <code>_config.yml</code> 的 <code>featureImages</code> 部分做同步修改。</p><h4 id="修改了主页的打字效果相关文字"><a href="#修改了主页的打字效果相关文字" class="headerlink" title="修改了主页的打字效果相关文字"></a>修改了主页的打字效果相关文字</h4><p>主题文件夹下的 <code>_config.yml</code> 中找到 <code>sutitle</code> 部分的 <code>sub</code> 部分可以对文字进行相应修改</p><h4 id="更改了-myGallery"><a href="#更改了-myGallery" class="headerlink" title="更改了 myGallery"></a>更改了 myGallery</h4><p><code>关于</code> 页面的 <code>我的相册</code> 部分可以展示图片，这里我也是把所有的图片都摆上来了：</p><pre class="line-numbers language-none"><code class="language-none">myGallery:  enable: true  data:    - &#x2F;medias&#x2F;featureimages&#x2F;0.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;1.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;2.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;3.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;4.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;5.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;6.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;7.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;8.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;9.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;10.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;11.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;12.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;13.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;14.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;15.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;16.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;17.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;18.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;19.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;20.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;21.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;22.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;23.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;24.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;25.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;26.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="其余更改"><a href="#其余更改" class="headerlink" title="其余更改"></a>其余更改</h4><ul><li>更改 favicon</li><li>更改 logo</li><li>更改 githubLink 为 false</li><li>更新 profile</li><li>把 my projects 和 my skills 暂时留空</li><li>更改了 根目录 <code>_config.yml</code> 文件中的 <code>description</code></li><li>因为出现了 <code>can not get /</code> 问题，所以暂时删掉了 contact 页面</li></ul><hr><h2 id="20211116-添加评论功能"><a href="#20211116-添加评论功能" class="headerlink" title="20211116 添加评论功能"></a>20211116 添加评论功能</h2><p>和教程中一样，这里也使用了畅言评论插件。</p><ol><li>首先<a href="http://changyan.kuaizhan.com/">在这里</a>注册一个畅言账号。</li><li>打开<code>进入工作台-安装畅言-通用代码安装</code>页面，复制页面中的代码：</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116142114.png"></p><ol start="3"><li>打开 <code>.../blog/themes/hexo-theme-matery/layout/post.ejs</code></li><li>将上面的代码复制到最底部就可以啦！</li></ol><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116142429.png"></p><h2 id="Todo：域名问题"><a href="#Todo：域名问题" class="headerlink" title="Todo：域名问题"></a>Todo：域名问题</h2><p>暂时先凑合用，后面再琢磨域名问题(￣▽￣)”</p><hr><h2 id="20220516-添加-Google-搜索收录以及-Google-Analytics"><a href="#20220516-添加-Google-搜索收录以及-Google-Analytics" class="headerlink" title="20220516 添加 Google 搜索收录以及 Google Analytics"></a>20220516 添加 Google 搜索收录以及 Google Analytics</h2><h3 id="添加-Google-搜索收录"><a href="#添加-Google-搜索收录" class="headerlink" title="添加 Google 搜索收录"></a>添加 Google 搜索收录</h3><p>参考 <a href="https://blog.csdn.net/qq_36759224/article/details/100899489?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0-100899489-blog-98593529.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=3">Hexo 博客提交百度、谷歌搜索引擎收录</a></p><h4 id="先生成-sitemap"><a href="#先生成-sitemap" class="headerlink" title="先生成 sitemap"></a>先生成 sitemap</h4><p>切换到 blog 根目录，然后安装相应插件</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-sitemap -save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后找到 hexo 主题下的  <code>_config.yml</code> 文件，可以在最后添加以下内容：</p><pre class="line-numbers language-none"><code class="language-none"># extensionsplugins:- hexo-generator-sitemap#sitemapsitemap:path: sitemap.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后部署：</p><pre class="line-numbers language-none"><code class="language-none">hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时访问主页的 sitemap 应该能看到了<br>如：<br><a href="https://medill-east.github.io/sitemap.xml">https://medill-east.github.io/sitemap.xml</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516141909.png"></p><h4 id="设置-Google-Search-Console"><a href="#设置-Google-Search-Console" class="headerlink" title="设置 Google Search Console"></a>设置 Google Search Console</h4><ul><li><p>进入<a href="https://developers.google.com/search">相应网址</a></p></li><li><p>登录</p></li><li><p>然后转到 <a href="https://search.google.com/search-console?resource_id=https://medill-east.github.io/">Google Search Console</a></p></li><li><p>左上方添加资源：<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516141310.png"></p><ul><li>其实使用网域方法是优选，但因为我的网站还没搞，就选择用了网址前缀方法</li></ul></li><li><p>添加站点地图<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516141413.png"><br>  这里输入 <code>sitemap.xml</code> 就可以。要注意的是这里它可能需要一段时间才能成功获取，可以等个一天再来看看。最终会显示为成功。</p></li></ul><h4 id="验证已经加入搜索"><a href="#验证已经加入搜索" class="headerlink" title="验证已经加入搜索"></a>验证已经加入搜索</h4><p>直接在 google 中搜索<code>site:</code>+自己的网址，可以看到是否被抓取</p><p><code>site:https://medill-east.github.io/</code></p><h3 id="添加-Google-Analytics"><a href="#添加-Google-Analytics" class="headerlink" title="添加 Google Analytics"></a>添加 Google Analytics</h3><h4 id="创建账号"><a href="#创建账号" class="headerlink" title="创建账号"></a>创建账号</h4><p>首先我们需要创建账户，访问<a href="https://analytics.google.com/">这里</a>**进行操作。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516144209.png"></p><p>根据需要填写信息。</p><h4 id="获取-id-并添加"><a href="#获取-id-并添加" class="headerlink" title="获取 id 并添加"></a>获取 id 并添加</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516144323.png"></p><p>找到上述位置的 衡量 ID，复制它</p><p>来到 hexo 文件夹下相应 <code>_config.yml</code> 文件，matery 主题已经集成好了相应功能，找到下面的代码，将 enable 改为 <code>true</code> 并填入相应 id （就是刚才复制的衡量 ID）即可</p><pre class="line-numbers language-none"><code class="language-none"># Add google analytics configuration# 添加 Google Analytics 配置googleAnalytics:  enable: true  id: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后记得部署</p><pre class="line-numbers language-none"><code class="language-none">hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h4><p>之后来到 探索页面，就可以看到网站的被访问情况啦！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516144612.png"></p><hr><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a></li><li><a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">Hexo博客主题之hexo-theme-matery的介绍</a></li><li><a href="https://github.com/hexojs/hexo/issues/1121">生成路径的问题，导致css，js无法加载 #1121</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/100899489?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0-100899489-blog-98593529.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=3">Hexo 博客提交百度、谷歌搜索引擎收录</a></li><li><a href="https://www.superweb999.com/article/332856.html">手把手教你用Hexo+Github搭建属于自己的博客(详细图文)</a></li><li><a href="https://qchaha.github.io/2018/09/19/homepageStatistics.html">在github主页中增加访问量统计和google分析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog-building </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
